
drone_main_1.1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000106f8  080001d8  080001d8  000101d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002b8  080108d0  080108d0  000208d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010b88  08010b88  00030198  2**0
                  CONTENTS
  4 .ARM          00000008  08010b88  08010b88  00020b88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010b90  08010b90  00030198  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08010b90  08010b90  00020b90  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010b94  08010b94  00020b94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000198  20000000  08010b98  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000a00  20000198  08010d30  00030198  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000b98  08010d30  00030b98  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030198  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001b154  00000000  00000000  000301c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003e15  00000000  00000000  0004b31c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000015f0  00000000  00000000  0004f138  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001460  00000000  00000000  00050728  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00025145  00000000  00000000  00051b88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001d9e0  00000000  00000000  00076ccd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000de545  00000000  00000000  000946ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00172bf2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006530  00000000  00000000  00172c44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c05      	ldr	r4, [pc, #20]	; (80001f0 <__do_global_dtors_aux+0x18>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b933      	cbnz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e0:	4b04      	ldr	r3, [pc, #16]	; (80001f4 <__do_global_dtors_aux+0x1c>)
 80001e2:	b113      	cbz	r3, 80001ea <__do_global_dtors_aux+0x12>
 80001e4:	4804      	ldr	r0, [pc, #16]	; (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	f3af 8000 	nop.w
 80001ea:	2301      	movs	r3, #1
 80001ec:	7023      	strb	r3, [r4, #0]
 80001ee:	bd10      	pop	{r4, pc}
 80001f0:	20000198 	.word	0x20000198
 80001f4:	00000000 	.word	0x00000000
 80001f8:	080108b8 	.word	0x080108b8

080001fc <frame_dummy>:
 80001fc:	b508      	push	{r3, lr}
 80001fe:	4b03      	ldr	r3, [pc, #12]	; (800020c <frame_dummy+0x10>)
 8000200:	b11b      	cbz	r3, 800020a <frame_dummy+0xe>
 8000202:	4903      	ldr	r1, [pc, #12]	; (8000210 <frame_dummy+0x14>)
 8000204:	4803      	ldr	r0, [pc, #12]	; (8000214 <frame_dummy+0x18>)
 8000206:	f3af 8000 	nop.w
 800020a:	bd08      	pop	{r3, pc}
 800020c:	00000000 	.word	0x00000000
 8000210:	2000019c 	.word	0x2000019c
 8000214:	080108b8 	.word	0x080108b8

08000218 <__aeabi_drsub>:
 8000218:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800021c:	e002      	b.n	8000224 <__adddf3>
 800021e:	bf00      	nop

08000220 <__aeabi_dsub>:
 8000220:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000224 <__adddf3>:
 8000224:	b530      	push	{r4, r5, lr}
 8000226:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800022a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800022e:	ea94 0f05 	teq	r4, r5
 8000232:	bf08      	it	eq
 8000234:	ea90 0f02 	teqeq	r0, r2
 8000238:	bf1f      	itttt	ne
 800023a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800023e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000242:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000246:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800024a:	f000 80e2 	beq.w	8000412 <__adddf3+0x1ee>
 800024e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000252:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000256:	bfb8      	it	lt
 8000258:	426d      	neglt	r5, r5
 800025a:	dd0c      	ble.n	8000276 <__adddf3+0x52>
 800025c:	442c      	add	r4, r5
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	ea82 0000 	eor.w	r0, r2, r0
 800026a:	ea83 0101 	eor.w	r1, r3, r1
 800026e:	ea80 0202 	eor.w	r2, r0, r2
 8000272:	ea81 0303 	eor.w	r3, r1, r3
 8000276:	2d36      	cmp	r5, #54	; 0x36
 8000278:	bf88      	it	hi
 800027a:	bd30      	pophi	{r4, r5, pc}
 800027c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000280:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000284:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000288:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800028c:	d002      	beq.n	8000294 <__adddf3+0x70>
 800028e:	4240      	negs	r0, r0
 8000290:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000294:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000298:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800029c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002a0:	d002      	beq.n	80002a8 <__adddf3+0x84>
 80002a2:	4252      	negs	r2, r2
 80002a4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002a8:	ea94 0f05 	teq	r4, r5
 80002ac:	f000 80a7 	beq.w	80003fe <__adddf3+0x1da>
 80002b0:	f1a4 0401 	sub.w	r4, r4, #1
 80002b4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002b8:	db0d      	blt.n	80002d6 <__adddf3+0xb2>
 80002ba:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002be:	fa22 f205 	lsr.w	r2, r2, r5
 80002c2:	1880      	adds	r0, r0, r2
 80002c4:	f141 0100 	adc.w	r1, r1, #0
 80002c8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002cc:	1880      	adds	r0, r0, r2
 80002ce:	fa43 f305 	asr.w	r3, r3, r5
 80002d2:	4159      	adcs	r1, r3
 80002d4:	e00e      	b.n	80002f4 <__adddf3+0xd0>
 80002d6:	f1a5 0520 	sub.w	r5, r5, #32
 80002da:	f10e 0e20 	add.w	lr, lr, #32
 80002de:	2a01      	cmp	r2, #1
 80002e0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002e4:	bf28      	it	cs
 80002e6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002ea:	fa43 f305 	asr.w	r3, r3, r5
 80002ee:	18c0      	adds	r0, r0, r3
 80002f0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002f8:	d507      	bpl.n	800030a <__adddf3+0xe6>
 80002fa:	f04f 0e00 	mov.w	lr, #0
 80002fe:	f1dc 0c00 	rsbs	ip, ip, #0
 8000302:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000306:	eb6e 0101 	sbc.w	r1, lr, r1
 800030a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800030e:	d31b      	bcc.n	8000348 <__adddf3+0x124>
 8000310:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000314:	d30c      	bcc.n	8000330 <__adddf3+0x10c>
 8000316:	0849      	lsrs	r1, r1, #1
 8000318:	ea5f 0030 	movs.w	r0, r0, rrx
 800031c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000320:	f104 0401 	add.w	r4, r4, #1
 8000324:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000328:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800032c:	f080 809a 	bcs.w	8000464 <__adddf3+0x240>
 8000330:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000334:	bf08      	it	eq
 8000336:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800033a:	f150 0000 	adcs.w	r0, r0, #0
 800033e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000342:	ea41 0105 	orr.w	r1, r1, r5
 8000346:	bd30      	pop	{r4, r5, pc}
 8000348:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800034c:	4140      	adcs	r0, r0
 800034e:	eb41 0101 	adc.w	r1, r1, r1
 8000352:	3c01      	subs	r4, #1
 8000354:	bf28      	it	cs
 8000356:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800035a:	d2e9      	bcs.n	8000330 <__adddf3+0x10c>
 800035c:	f091 0f00 	teq	r1, #0
 8000360:	bf04      	itt	eq
 8000362:	4601      	moveq	r1, r0
 8000364:	2000      	moveq	r0, #0
 8000366:	fab1 f381 	clz	r3, r1
 800036a:	bf08      	it	eq
 800036c:	3320      	addeq	r3, #32
 800036e:	f1a3 030b 	sub.w	r3, r3, #11
 8000372:	f1b3 0220 	subs.w	r2, r3, #32
 8000376:	da0c      	bge.n	8000392 <__adddf3+0x16e>
 8000378:	320c      	adds	r2, #12
 800037a:	dd08      	ble.n	800038e <__adddf3+0x16a>
 800037c:	f102 0c14 	add.w	ip, r2, #20
 8000380:	f1c2 020c 	rsb	r2, r2, #12
 8000384:	fa01 f00c 	lsl.w	r0, r1, ip
 8000388:	fa21 f102 	lsr.w	r1, r1, r2
 800038c:	e00c      	b.n	80003a8 <__adddf3+0x184>
 800038e:	f102 0214 	add.w	r2, r2, #20
 8000392:	bfd8      	it	le
 8000394:	f1c2 0c20 	rsble	ip, r2, #32
 8000398:	fa01 f102 	lsl.w	r1, r1, r2
 800039c:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003a0:	bfdc      	itt	le
 80003a2:	ea41 010c 	orrle.w	r1, r1, ip
 80003a6:	4090      	lslle	r0, r2
 80003a8:	1ae4      	subs	r4, r4, r3
 80003aa:	bfa2      	ittt	ge
 80003ac:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003b0:	4329      	orrge	r1, r5
 80003b2:	bd30      	popge	{r4, r5, pc}
 80003b4:	ea6f 0404 	mvn.w	r4, r4
 80003b8:	3c1f      	subs	r4, #31
 80003ba:	da1c      	bge.n	80003f6 <__adddf3+0x1d2>
 80003bc:	340c      	adds	r4, #12
 80003be:	dc0e      	bgt.n	80003de <__adddf3+0x1ba>
 80003c0:	f104 0414 	add.w	r4, r4, #20
 80003c4:	f1c4 0220 	rsb	r2, r4, #32
 80003c8:	fa20 f004 	lsr.w	r0, r0, r4
 80003cc:	fa01 f302 	lsl.w	r3, r1, r2
 80003d0:	ea40 0003 	orr.w	r0, r0, r3
 80003d4:	fa21 f304 	lsr.w	r3, r1, r4
 80003d8:	ea45 0103 	orr.w	r1, r5, r3
 80003dc:	bd30      	pop	{r4, r5, pc}
 80003de:	f1c4 040c 	rsb	r4, r4, #12
 80003e2:	f1c4 0220 	rsb	r2, r4, #32
 80003e6:	fa20 f002 	lsr.w	r0, r0, r2
 80003ea:	fa01 f304 	lsl.w	r3, r1, r4
 80003ee:	ea40 0003 	orr.w	r0, r0, r3
 80003f2:	4629      	mov	r1, r5
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	fa21 f004 	lsr.w	r0, r1, r4
 80003fa:	4629      	mov	r1, r5
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	f094 0f00 	teq	r4, #0
 8000402:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000406:	bf06      	itte	eq
 8000408:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800040c:	3401      	addeq	r4, #1
 800040e:	3d01      	subne	r5, #1
 8000410:	e74e      	b.n	80002b0 <__adddf3+0x8c>
 8000412:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000416:	bf18      	it	ne
 8000418:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800041c:	d029      	beq.n	8000472 <__adddf3+0x24e>
 800041e:	ea94 0f05 	teq	r4, r5
 8000422:	bf08      	it	eq
 8000424:	ea90 0f02 	teqeq	r0, r2
 8000428:	d005      	beq.n	8000436 <__adddf3+0x212>
 800042a:	ea54 0c00 	orrs.w	ip, r4, r0
 800042e:	bf04      	itt	eq
 8000430:	4619      	moveq	r1, r3
 8000432:	4610      	moveq	r0, r2
 8000434:	bd30      	pop	{r4, r5, pc}
 8000436:	ea91 0f03 	teq	r1, r3
 800043a:	bf1e      	ittt	ne
 800043c:	2100      	movne	r1, #0
 800043e:	2000      	movne	r0, #0
 8000440:	bd30      	popne	{r4, r5, pc}
 8000442:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000446:	d105      	bne.n	8000454 <__adddf3+0x230>
 8000448:	0040      	lsls	r0, r0, #1
 800044a:	4149      	adcs	r1, r1
 800044c:	bf28      	it	cs
 800044e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000452:	bd30      	pop	{r4, r5, pc}
 8000454:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000458:	bf3c      	itt	cc
 800045a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800045e:	bd30      	popcc	{r4, r5, pc}
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000468:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800046c:	f04f 0000 	mov.w	r0, #0
 8000470:	bd30      	pop	{r4, r5, pc}
 8000472:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000476:	bf1a      	itte	ne
 8000478:	4619      	movne	r1, r3
 800047a:	4610      	movne	r0, r2
 800047c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000480:	bf1c      	itt	ne
 8000482:	460b      	movne	r3, r1
 8000484:	4602      	movne	r2, r0
 8000486:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800048a:	bf06      	itte	eq
 800048c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000490:	ea91 0f03 	teqeq	r1, r3
 8000494:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	bf00      	nop

0800049c <__aeabi_ui2d>:
 800049c:	f090 0f00 	teq	r0, #0
 80004a0:	bf04      	itt	eq
 80004a2:	2100      	moveq	r1, #0
 80004a4:	4770      	bxeq	lr
 80004a6:	b530      	push	{r4, r5, lr}
 80004a8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004ac:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004b0:	f04f 0500 	mov.w	r5, #0
 80004b4:	f04f 0100 	mov.w	r1, #0
 80004b8:	e750      	b.n	800035c <__adddf3+0x138>
 80004ba:	bf00      	nop

080004bc <__aeabi_i2d>:
 80004bc:	f090 0f00 	teq	r0, #0
 80004c0:	bf04      	itt	eq
 80004c2:	2100      	moveq	r1, #0
 80004c4:	4770      	bxeq	lr
 80004c6:	b530      	push	{r4, r5, lr}
 80004c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004d4:	bf48      	it	mi
 80004d6:	4240      	negmi	r0, r0
 80004d8:	f04f 0100 	mov.w	r1, #0
 80004dc:	e73e      	b.n	800035c <__adddf3+0x138>
 80004de:	bf00      	nop

080004e0 <__aeabi_f2d>:
 80004e0:	0042      	lsls	r2, r0, #1
 80004e2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004e6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004ea:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ee:	bf1f      	itttt	ne
 80004f0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004f4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004f8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004fc:	4770      	bxne	lr
 80004fe:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000502:	bf08      	it	eq
 8000504:	4770      	bxeq	lr
 8000506:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800050a:	bf04      	itt	eq
 800050c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000510:	4770      	bxeq	lr
 8000512:	b530      	push	{r4, r5, lr}
 8000514:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000518:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800051c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000520:	e71c      	b.n	800035c <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_ul2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f04f 0500 	mov.w	r5, #0
 8000532:	e00a      	b.n	800054a <__aeabi_l2d+0x16>

08000534 <__aeabi_l2d>:
 8000534:	ea50 0201 	orrs.w	r2, r0, r1
 8000538:	bf08      	it	eq
 800053a:	4770      	bxeq	lr
 800053c:	b530      	push	{r4, r5, lr}
 800053e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000542:	d502      	bpl.n	800054a <__aeabi_l2d+0x16>
 8000544:	4240      	negs	r0, r0
 8000546:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800054a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800054e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000552:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000556:	f43f aed8 	beq.w	800030a <__adddf3+0xe6>
 800055a:	f04f 0203 	mov.w	r2, #3
 800055e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000562:	bf18      	it	ne
 8000564:	3203      	addne	r2, #3
 8000566:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800056a:	bf18      	it	ne
 800056c:	3203      	addne	r2, #3
 800056e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000572:	f1c2 0320 	rsb	r3, r2, #32
 8000576:	fa00 fc03 	lsl.w	ip, r0, r3
 800057a:	fa20 f002 	lsr.w	r0, r0, r2
 800057e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000582:	ea40 000e 	orr.w	r0, r0, lr
 8000586:	fa21 f102 	lsr.w	r1, r1, r2
 800058a:	4414      	add	r4, r2
 800058c:	e6bd      	b.n	800030a <__adddf3+0xe6>
 800058e:	bf00      	nop

08000590 <__aeabi_dmul>:
 8000590:	b570      	push	{r4, r5, r6, lr}
 8000592:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000596:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800059a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800059e:	bf1d      	ittte	ne
 80005a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005a4:	ea94 0f0c 	teqne	r4, ip
 80005a8:	ea95 0f0c 	teqne	r5, ip
 80005ac:	f000 f8de 	bleq	800076c <__aeabi_dmul+0x1dc>
 80005b0:	442c      	add	r4, r5
 80005b2:	ea81 0603 	eor.w	r6, r1, r3
 80005b6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005ba:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005be:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005c2:	bf18      	it	ne
 80005c4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005cc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005d0:	d038      	beq.n	8000644 <__aeabi_dmul+0xb4>
 80005d2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005de:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005e2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005e6:	f04f 0600 	mov.w	r6, #0
 80005ea:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ee:	f09c 0f00 	teq	ip, #0
 80005f2:	bf18      	it	ne
 80005f4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005f8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005fc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000600:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000604:	d204      	bcs.n	8000610 <__aeabi_dmul+0x80>
 8000606:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800060a:	416d      	adcs	r5, r5
 800060c:	eb46 0606 	adc.w	r6, r6, r6
 8000610:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000614:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000618:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800061c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000620:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000624:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000628:	bf88      	it	hi
 800062a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800062e:	d81e      	bhi.n	800066e <__aeabi_dmul+0xde>
 8000630:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000634:	bf08      	it	eq
 8000636:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800063a:	f150 0000 	adcs.w	r0, r0, #0
 800063e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000642:	bd70      	pop	{r4, r5, r6, pc}
 8000644:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000648:	ea46 0101 	orr.w	r1, r6, r1
 800064c:	ea40 0002 	orr.w	r0, r0, r2
 8000650:	ea81 0103 	eor.w	r1, r1, r3
 8000654:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000658:	bfc2      	ittt	gt
 800065a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800065e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000662:	bd70      	popgt	{r4, r5, r6, pc}
 8000664:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000668:	f04f 0e00 	mov.w	lr, #0
 800066c:	3c01      	subs	r4, #1
 800066e:	f300 80ab 	bgt.w	80007c8 <__aeabi_dmul+0x238>
 8000672:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000676:	bfde      	ittt	le
 8000678:	2000      	movle	r0, #0
 800067a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800067e:	bd70      	pople	{r4, r5, r6, pc}
 8000680:	f1c4 0400 	rsb	r4, r4, #0
 8000684:	3c20      	subs	r4, #32
 8000686:	da35      	bge.n	80006f4 <__aeabi_dmul+0x164>
 8000688:	340c      	adds	r4, #12
 800068a:	dc1b      	bgt.n	80006c4 <__aeabi_dmul+0x134>
 800068c:	f104 0414 	add.w	r4, r4, #20
 8000690:	f1c4 0520 	rsb	r5, r4, #32
 8000694:	fa00 f305 	lsl.w	r3, r0, r5
 8000698:	fa20 f004 	lsr.w	r0, r0, r4
 800069c:	fa01 f205 	lsl.w	r2, r1, r5
 80006a0:	ea40 0002 	orr.w	r0, r0, r2
 80006a4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006b0:	fa21 f604 	lsr.w	r6, r1, r4
 80006b4:	eb42 0106 	adc.w	r1, r2, r6
 80006b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006bc:	bf08      	it	eq
 80006be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006c2:	bd70      	pop	{r4, r5, r6, pc}
 80006c4:	f1c4 040c 	rsb	r4, r4, #12
 80006c8:	f1c4 0520 	rsb	r5, r4, #32
 80006cc:	fa00 f304 	lsl.w	r3, r0, r4
 80006d0:	fa20 f005 	lsr.w	r0, r0, r5
 80006d4:	fa01 f204 	lsl.w	r2, r1, r4
 80006d8:	ea40 0002 	orr.w	r0, r0, r2
 80006dc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006e0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006e4:	f141 0100 	adc.w	r1, r1, #0
 80006e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ec:	bf08      	it	eq
 80006ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	f1c4 0520 	rsb	r5, r4, #32
 80006f8:	fa00 f205 	lsl.w	r2, r0, r5
 80006fc:	ea4e 0e02 	orr.w	lr, lr, r2
 8000700:	fa20 f304 	lsr.w	r3, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea43 0302 	orr.w	r3, r3, r2
 800070c:	fa21 f004 	lsr.w	r0, r1, r4
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	fa21 f204 	lsr.w	r2, r1, r4
 8000718:	ea20 0002 	bic.w	r0, r0, r2
 800071c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f094 0f00 	teq	r4, #0
 8000730:	d10f      	bne.n	8000752 <__aeabi_dmul+0x1c2>
 8000732:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000736:	0040      	lsls	r0, r0, #1
 8000738:	eb41 0101 	adc.w	r1, r1, r1
 800073c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000740:	bf08      	it	eq
 8000742:	3c01      	subeq	r4, #1
 8000744:	d0f7      	beq.n	8000736 <__aeabi_dmul+0x1a6>
 8000746:	ea41 0106 	orr.w	r1, r1, r6
 800074a:	f095 0f00 	teq	r5, #0
 800074e:	bf18      	it	ne
 8000750:	4770      	bxne	lr
 8000752:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000756:	0052      	lsls	r2, r2, #1
 8000758:	eb43 0303 	adc.w	r3, r3, r3
 800075c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000760:	bf08      	it	eq
 8000762:	3d01      	subeq	r5, #1
 8000764:	d0f7      	beq.n	8000756 <__aeabi_dmul+0x1c6>
 8000766:	ea43 0306 	orr.w	r3, r3, r6
 800076a:	4770      	bx	lr
 800076c:	ea94 0f0c 	teq	r4, ip
 8000770:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000774:	bf18      	it	ne
 8000776:	ea95 0f0c 	teqne	r5, ip
 800077a:	d00c      	beq.n	8000796 <__aeabi_dmul+0x206>
 800077c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000780:	bf18      	it	ne
 8000782:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000786:	d1d1      	bne.n	800072c <__aeabi_dmul+0x19c>
 8000788:	ea81 0103 	eor.w	r1, r1, r3
 800078c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000790:	f04f 0000 	mov.w	r0, #0
 8000794:	bd70      	pop	{r4, r5, r6, pc}
 8000796:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800079a:	bf06      	itte	eq
 800079c:	4610      	moveq	r0, r2
 800079e:	4619      	moveq	r1, r3
 80007a0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007a4:	d019      	beq.n	80007da <__aeabi_dmul+0x24a>
 80007a6:	ea94 0f0c 	teq	r4, ip
 80007aa:	d102      	bne.n	80007b2 <__aeabi_dmul+0x222>
 80007ac:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007b0:	d113      	bne.n	80007da <__aeabi_dmul+0x24a>
 80007b2:	ea95 0f0c 	teq	r5, ip
 80007b6:	d105      	bne.n	80007c4 <__aeabi_dmul+0x234>
 80007b8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007bc:	bf1c      	itt	ne
 80007be:	4610      	movne	r0, r2
 80007c0:	4619      	movne	r1, r3
 80007c2:	d10a      	bne.n	80007da <__aeabi_dmul+0x24a>
 80007c4:	ea81 0103 	eor.w	r1, r1, r3
 80007c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007cc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007d4:	f04f 0000 	mov.w	r0, #0
 80007d8:	bd70      	pop	{r4, r5, r6, pc}
 80007da:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007de:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007e2:	bd70      	pop	{r4, r5, r6, pc}

080007e4 <__aeabi_ddiv>:
 80007e4:	b570      	push	{r4, r5, r6, lr}
 80007e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007f2:	bf1d      	ittte	ne
 80007f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007f8:	ea94 0f0c 	teqne	r4, ip
 80007fc:	ea95 0f0c 	teqne	r5, ip
 8000800:	f000 f8a7 	bleq	8000952 <__aeabi_ddiv+0x16e>
 8000804:	eba4 0405 	sub.w	r4, r4, r5
 8000808:	ea81 0e03 	eor.w	lr, r1, r3
 800080c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000810:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000814:	f000 8088 	beq.w	8000928 <__aeabi_ddiv+0x144>
 8000818:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800081c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000820:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000824:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000828:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800082c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000830:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000834:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000838:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800083c:	429d      	cmp	r5, r3
 800083e:	bf08      	it	eq
 8000840:	4296      	cmpeq	r6, r2
 8000842:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000846:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800084a:	d202      	bcs.n	8000852 <__aeabi_ddiv+0x6e>
 800084c:	085b      	lsrs	r3, r3, #1
 800084e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000852:	1ab6      	subs	r6, r6, r2
 8000854:	eb65 0503 	sbc.w	r5, r5, r3
 8000858:	085b      	lsrs	r3, r3, #1
 800085a:	ea4f 0232 	mov.w	r2, r2, rrx
 800085e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000862:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000866:	ebb6 0e02 	subs.w	lr, r6, r2
 800086a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800086e:	bf22      	ittt	cs
 8000870:	1ab6      	subcs	r6, r6, r2
 8000872:	4675      	movcs	r5, lr
 8000874:	ea40 000c 	orrcs.w	r0, r0, ip
 8000878:	085b      	lsrs	r3, r3, #1
 800087a:	ea4f 0232 	mov.w	r2, r2, rrx
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008c0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008c4:	d018      	beq.n	80008f8 <__aeabi_ddiv+0x114>
 80008c6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ca:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008ce:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008d2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008d6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008da:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008de:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008e2:	d1c0      	bne.n	8000866 <__aeabi_ddiv+0x82>
 80008e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008e8:	d10b      	bne.n	8000902 <__aeabi_ddiv+0x11e>
 80008ea:	ea41 0100 	orr.w	r1, r1, r0
 80008ee:	f04f 0000 	mov.w	r0, #0
 80008f2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008f6:	e7b6      	b.n	8000866 <__aeabi_ddiv+0x82>
 80008f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008fc:	bf04      	itt	eq
 80008fe:	4301      	orreq	r1, r0
 8000900:	2000      	moveq	r0, #0
 8000902:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000906:	bf88      	it	hi
 8000908:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800090c:	f63f aeaf 	bhi.w	800066e <__aeabi_dmul+0xde>
 8000910:	ebb5 0c03 	subs.w	ip, r5, r3
 8000914:	bf04      	itt	eq
 8000916:	ebb6 0c02 	subseq.w	ip, r6, r2
 800091a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800091e:	f150 0000 	adcs.w	r0, r0, #0
 8000922:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000926:	bd70      	pop	{r4, r5, r6, pc}
 8000928:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800092c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000930:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000934:	bfc2      	ittt	gt
 8000936:	ebd4 050c 	rsbsgt	r5, r4, ip
 800093a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800093e:	bd70      	popgt	{r4, r5, r6, pc}
 8000940:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000944:	f04f 0e00 	mov.w	lr, #0
 8000948:	3c01      	subs	r4, #1
 800094a:	e690      	b.n	800066e <__aeabi_dmul+0xde>
 800094c:	ea45 0e06 	orr.w	lr, r5, r6
 8000950:	e68d      	b.n	800066e <__aeabi_dmul+0xde>
 8000952:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000956:	ea94 0f0c 	teq	r4, ip
 800095a:	bf08      	it	eq
 800095c:	ea95 0f0c 	teqeq	r5, ip
 8000960:	f43f af3b 	beq.w	80007da <__aeabi_dmul+0x24a>
 8000964:	ea94 0f0c 	teq	r4, ip
 8000968:	d10a      	bne.n	8000980 <__aeabi_ddiv+0x19c>
 800096a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800096e:	f47f af34 	bne.w	80007da <__aeabi_dmul+0x24a>
 8000972:	ea95 0f0c 	teq	r5, ip
 8000976:	f47f af25 	bne.w	80007c4 <__aeabi_dmul+0x234>
 800097a:	4610      	mov	r0, r2
 800097c:	4619      	mov	r1, r3
 800097e:	e72c      	b.n	80007da <__aeabi_dmul+0x24a>
 8000980:	ea95 0f0c 	teq	r5, ip
 8000984:	d106      	bne.n	8000994 <__aeabi_ddiv+0x1b0>
 8000986:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800098a:	f43f aefd 	beq.w	8000788 <__aeabi_dmul+0x1f8>
 800098e:	4610      	mov	r0, r2
 8000990:	4619      	mov	r1, r3
 8000992:	e722      	b.n	80007da <__aeabi_dmul+0x24a>
 8000994:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800099e:	f47f aec5 	bne.w	800072c <__aeabi_dmul+0x19c>
 80009a2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009a6:	f47f af0d 	bne.w	80007c4 <__aeabi_dmul+0x234>
 80009aa:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ae:	f47f aeeb 	bne.w	8000788 <__aeabi_dmul+0x1f8>
 80009b2:	e712      	b.n	80007da <__aeabi_dmul+0x24a>

080009b4 <__gedf2>:
 80009b4:	f04f 3cff 	mov.w	ip, #4294967295
 80009b8:	e006      	b.n	80009c8 <__cmpdf2+0x4>
 80009ba:	bf00      	nop

080009bc <__ledf2>:
 80009bc:	f04f 0c01 	mov.w	ip, #1
 80009c0:	e002      	b.n	80009c8 <__cmpdf2+0x4>
 80009c2:	bf00      	nop

080009c4 <__cmpdf2>:
 80009c4:	f04f 0c01 	mov.w	ip, #1
 80009c8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009cc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009d4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009d8:	bf18      	it	ne
 80009da:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009de:	d01b      	beq.n	8000a18 <__cmpdf2+0x54>
 80009e0:	b001      	add	sp, #4
 80009e2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009e6:	bf0c      	ite	eq
 80009e8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ec:	ea91 0f03 	teqne	r1, r3
 80009f0:	bf02      	ittt	eq
 80009f2:	ea90 0f02 	teqeq	r0, r2
 80009f6:	2000      	moveq	r0, #0
 80009f8:	4770      	bxeq	lr
 80009fa:	f110 0f00 	cmn.w	r0, #0
 80009fe:	ea91 0f03 	teq	r1, r3
 8000a02:	bf58      	it	pl
 8000a04:	4299      	cmppl	r1, r3
 8000a06:	bf08      	it	eq
 8000a08:	4290      	cmpeq	r0, r2
 8000a0a:	bf2c      	ite	cs
 8000a0c:	17d8      	asrcs	r0, r3, #31
 8000a0e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a12:	f040 0001 	orr.w	r0, r0, #1
 8000a16:	4770      	bx	lr
 8000a18:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a20:	d102      	bne.n	8000a28 <__cmpdf2+0x64>
 8000a22:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a26:	d107      	bne.n	8000a38 <__cmpdf2+0x74>
 8000a28:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a2c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a30:	d1d6      	bne.n	80009e0 <__cmpdf2+0x1c>
 8000a32:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a36:	d0d3      	beq.n	80009e0 <__cmpdf2+0x1c>
 8000a38:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a3c:	4770      	bx	lr
 8000a3e:	bf00      	nop

08000a40 <__aeabi_cdrcmple>:
 8000a40:	4684      	mov	ip, r0
 8000a42:	4610      	mov	r0, r2
 8000a44:	4662      	mov	r2, ip
 8000a46:	468c      	mov	ip, r1
 8000a48:	4619      	mov	r1, r3
 8000a4a:	4663      	mov	r3, ip
 8000a4c:	e000      	b.n	8000a50 <__aeabi_cdcmpeq>
 8000a4e:	bf00      	nop

08000a50 <__aeabi_cdcmpeq>:
 8000a50:	b501      	push	{r0, lr}
 8000a52:	f7ff ffb7 	bl	80009c4 <__cmpdf2>
 8000a56:	2800      	cmp	r0, #0
 8000a58:	bf48      	it	mi
 8000a5a:	f110 0f00 	cmnmi.w	r0, #0
 8000a5e:	bd01      	pop	{r0, pc}

08000a60 <__aeabi_dcmpeq>:
 8000a60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a64:	f7ff fff4 	bl	8000a50 <__aeabi_cdcmpeq>
 8000a68:	bf0c      	ite	eq
 8000a6a:	2001      	moveq	r0, #1
 8000a6c:	2000      	movne	r0, #0
 8000a6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a72:	bf00      	nop

08000a74 <__aeabi_dcmplt>:
 8000a74:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a78:	f7ff ffea 	bl	8000a50 <__aeabi_cdcmpeq>
 8000a7c:	bf34      	ite	cc
 8000a7e:	2001      	movcc	r0, #1
 8000a80:	2000      	movcs	r0, #0
 8000a82:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a86:	bf00      	nop

08000a88 <__aeabi_dcmple>:
 8000a88:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a8c:	f7ff ffe0 	bl	8000a50 <__aeabi_cdcmpeq>
 8000a90:	bf94      	ite	ls
 8000a92:	2001      	movls	r0, #1
 8000a94:	2000      	movhi	r0, #0
 8000a96:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9a:	bf00      	nop

08000a9c <__aeabi_dcmpge>:
 8000a9c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa0:	f7ff ffce 	bl	8000a40 <__aeabi_cdrcmple>
 8000aa4:	bf94      	ite	ls
 8000aa6:	2001      	movls	r0, #1
 8000aa8:	2000      	movhi	r0, #0
 8000aaa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aae:	bf00      	nop

08000ab0 <__aeabi_dcmpgt>:
 8000ab0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab4:	f7ff ffc4 	bl	8000a40 <__aeabi_cdrcmple>
 8000ab8:	bf34      	ite	cc
 8000aba:	2001      	movcc	r0, #1
 8000abc:	2000      	movcs	r0, #0
 8000abe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ac2:	bf00      	nop

08000ac4 <__aeabi_dcmpun>:
 8000ac4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000acc:	d102      	bne.n	8000ad4 <__aeabi_dcmpun+0x10>
 8000ace:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ad2:	d10a      	bne.n	8000aea <__aeabi_dcmpun+0x26>
 8000ad4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000adc:	d102      	bne.n	8000ae4 <__aeabi_dcmpun+0x20>
 8000ade:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ae2:	d102      	bne.n	8000aea <__aeabi_dcmpun+0x26>
 8000ae4:	f04f 0000 	mov.w	r0, #0
 8000ae8:	4770      	bx	lr
 8000aea:	f04f 0001 	mov.w	r0, #1
 8000aee:	4770      	bx	lr

08000af0 <__aeabi_d2iz>:
 8000af0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000af8:	d215      	bcs.n	8000b26 <__aeabi_d2iz+0x36>
 8000afa:	d511      	bpl.n	8000b20 <__aeabi_d2iz+0x30>
 8000afc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b00:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b04:	d912      	bls.n	8000b2c <__aeabi_d2iz+0x3c>
 8000b06:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b0a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b0e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b12:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b16:	fa23 f002 	lsr.w	r0, r3, r2
 8000b1a:	bf18      	it	ne
 8000b1c:	4240      	negne	r0, r0
 8000b1e:	4770      	bx	lr
 8000b20:	f04f 0000 	mov.w	r0, #0
 8000b24:	4770      	bx	lr
 8000b26:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b2a:	d105      	bne.n	8000b38 <__aeabi_d2iz+0x48>
 8000b2c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b30:	bf08      	it	eq
 8000b32:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b36:	4770      	bx	lr
 8000b38:	f04f 0000 	mov.w	r0, #0
 8000b3c:	4770      	bx	lr
 8000b3e:	bf00      	nop

08000b40 <__aeabi_d2f>:
 8000b40:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b44:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b48:	bf24      	itt	cs
 8000b4a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b4e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b52:	d90d      	bls.n	8000b70 <__aeabi_d2f+0x30>
 8000b54:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b58:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b5c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b60:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b64:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b68:	bf08      	it	eq
 8000b6a:	f020 0001 	biceq.w	r0, r0, #1
 8000b6e:	4770      	bx	lr
 8000b70:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b74:	d121      	bne.n	8000bba <__aeabi_d2f+0x7a>
 8000b76:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b7a:	bfbc      	itt	lt
 8000b7c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b80:	4770      	bxlt	lr
 8000b82:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b86:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b8a:	f1c2 0218 	rsb	r2, r2, #24
 8000b8e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b92:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b96:	fa20 f002 	lsr.w	r0, r0, r2
 8000b9a:	bf18      	it	ne
 8000b9c:	f040 0001 	orrne.w	r0, r0, #1
 8000ba0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ba4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ba8:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bac:	ea40 000c 	orr.w	r0, r0, ip
 8000bb0:	fa23 f302 	lsr.w	r3, r3, r2
 8000bb4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bb8:	e7cc      	b.n	8000b54 <__aeabi_d2f+0x14>
 8000bba:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bbe:	d107      	bne.n	8000bd0 <__aeabi_d2f+0x90>
 8000bc0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bc4:	bf1e      	ittt	ne
 8000bc6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000bca:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000bce:	4770      	bxne	lr
 8000bd0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000bd4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000bd8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bdc:	4770      	bx	lr
 8000bde:	bf00      	nop

08000be0 <__aeabi_uldivmod>:
 8000be0:	b953      	cbnz	r3, 8000bf8 <__aeabi_uldivmod+0x18>
 8000be2:	b94a      	cbnz	r2, 8000bf8 <__aeabi_uldivmod+0x18>
 8000be4:	2900      	cmp	r1, #0
 8000be6:	bf08      	it	eq
 8000be8:	2800      	cmpeq	r0, #0
 8000bea:	bf1c      	itt	ne
 8000bec:	f04f 31ff 	movne.w	r1, #4294967295
 8000bf0:	f04f 30ff 	movne.w	r0, #4294967295
 8000bf4:	f000 b9aa 	b.w	8000f4c <__aeabi_idiv0>
 8000bf8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bfc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c00:	f000 f83c 	bl	8000c7c <__udivmoddi4>
 8000c04:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c08:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c0c:	b004      	add	sp, #16
 8000c0e:	4770      	bx	lr

08000c10 <__aeabi_d2lz>:
 8000c10:	b538      	push	{r3, r4, r5, lr}
 8000c12:	2200      	movs	r2, #0
 8000c14:	2300      	movs	r3, #0
 8000c16:	4604      	mov	r4, r0
 8000c18:	460d      	mov	r5, r1
 8000c1a:	f7ff ff2b 	bl	8000a74 <__aeabi_dcmplt>
 8000c1e:	b928      	cbnz	r0, 8000c2c <__aeabi_d2lz+0x1c>
 8000c20:	4620      	mov	r0, r4
 8000c22:	4629      	mov	r1, r5
 8000c24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c28:	f000 b80a 	b.w	8000c40 <__aeabi_d2ulz>
 8000c2c:	4620      	mov	r0, r4
 8000c2e:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000c32:	f000 f805 	bl	8000c40 <__aeabi_d2ulz>
 8000c36:	4240      	negs	r0, r0
 8000c38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c3c:	bd38      	pop	{r3, r4, r5, pc}
 8000c3e:	bf00      	nop

08000c40 <__aeabi_d2ulz>:
 8000c40:	b5d0      	push	{r4, r6, r7, lr}
 8000c42:	4b0c      	ldr	r3, [pc, #48]	; (8000c74 <__aeabi_d2ulz+0x34>)
 8000c44:	2200      	movs	r2, #0
 8000c46:	4606      	mov	r6, r0
 8000c48:	460f      	mov	r7, r1
 8000c4a:	f7ff fca1 	bl	8000590 <__aeabi_dmul>
 8000c4e:	f000 f97f 	bl	8000f50 <__aeabi_d2uiz>
 8000c52:	4604      	mov	r4, r0
 8000c54:	f7ff fc22 	bl	800049c <__aeabi_ui2d>
 8000c58:	4b07      	ldr	r3, [pc, #28]	; (8000c78 <__aeabi_d2ulz+0x38>)
 8000c5a:	2200      	movs	r2, #0
 8000c5c:	f7ff fc98 	bl	8000590 <__aeabi_dmul>
 8000c60:	4602      	mov	r2, r0
 8000c62:	460b      	mov	r3, r1
 8000c64:	4630      	mov	r0, r6
 8000c66:	4639      	mov	r1, r7
 8000c68:	f7ff fada 	bl	8000220 <__aeabi_dsub>
 8000c6c:	f000 f970 	bl	8000f50 <__aeabi_d2uiz>
 8000c70:	4621      	mov	r1, r4
 8000c72:	bdd0      	pop	{r4, r6, r7, pc}
 8000c74:	3df00000 	.word	0x3df00000
 8000c78:	41f00000 	.word	0x41f00000

08000c7c <__udivmoddi4>:
 8000c7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c80:	9d08      	ldr	r5, [sp, #32]
 8000c82:	4604      	mov	r4, r0
 8000c84:	468e      	mov	lr, r1
 8000c86:	2b00      	cmp	r3, #0
 8000c88:	d14d      	bne.n	8000d26 <__udivmoddi4+0xaa>
 8000c8a:	428a      	cmp	r2, r1
 8000c8c:	4694      	mov	ip, r2
 8000c8e:	d969      	bls.n	8000d64 <__udivmoddi4+0xe8>
 8000c90:	fab2 f282 	clz	r2, r2
 8000c94:	b152      	cbz	r2, 8000cac <__udivmoddi4+0x30>
 8000c96:	fa01 f302 	lsl.w	r3, r1, r2
 8000c9a:	f1c2 0120 	rsb	r1, r2, #32
 8000c9e:	fa20 f101 	lsr.w	r1, r0, r1
 8000ca2:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ca6:	ea41 0e03 	orr.w	lr, r1, r3
 8000caa:	4094      	lsls	r4, r2
 8000cac:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cb0:	0c21      	lsrs	r1, r4, #16
 8000cb2:	fbbe f6f8 	udiv	r6, lr, r8
 8000cb6:	fa1f f78c 	uxth.w	r7, ip
 8000cba:	fb08 e316 	mls	r3, r8, r6, lr
 8000cbe:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cc2:	fb06 f107 	mul.w	r1, r6, r7
 8000cc6:	4299      	cmp	r1, r3
 8000cc8:	d90a      	bls.n	8000ce0 <__udivmoddi4+0x64>
 8000cca:	eb1c 0303 	adds.w	r3, ip, r3
 8000cce:	f106 30ff 	add.w	r0, r6, #4294967295
 8000cd2:	f080 811f 	bcs.w	8000f14 <__udivmoddi4+0x298>
 8000cd6:	4299      	cmp	r1, r3
 8000cd8:	f240 811c 	bls.w	8000f14 <__udivmoddi4+0x298>
 8000cdc:	3e02      	subs	r6, #2
 8000cde:	4463      	add	r3, ip
 8000ce0:	1a5b      	subs	r3, r3, r1
 8000ce2:	b2a4      	uxth	r4, r4
 8000ce4:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ce8:	fb08 3310 	mls	r3, r8, r0, r3
 8000cec:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000cf0:	fb00 f707 	mul.w	r7, r0, r7
 8000cf4:	42a7      	cmp	r7, r4
 8000cf6:	d90a      	bls.n	8000d0e <__udivmoddi4+0x92>
 8000cf8:	eb1c 0404 	adds.w	r4, ip, r4
 8000cfc:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d00:	f080 810a 	bcs.w	8000f18 <__udivmoddi4+0x29c>
 8000d04:	42a7      	cmp	r7, r4
 8000d06:	f240 8107 	bls.w	8000f18 <__udivmoddi4+0x29c>
 8000d0a:	4464      	add	r4, ip
 8000d0c:	3802      	subs	r0, #2
 8000d0e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d12:	1be4      	subs	r4, r4, r7
 8000d14:	2600      	movs	r6, #0
 8000d16:	b11d      	cbz	r5, 8000d20 <__udivmoddi4+0xa4>
 8000d18:	40d4      	lsrs	r4, r2
 8000d1a:	2300      	movs	r3, #0
 8000d1c:	e9c5 4300 	strd	r4, r3, [r5]
 8000d20:	4631      	mov	r1, r6
 8000d22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d26:	428b      	cmp	r3, r1
 8000d28:	d909      	bls.n	8000d3e <__udivmoddi4+0xc2>
 8000d2a:	2d00      	cmp	r5, #0
 8000d2c:	f000 80ef 	beq.w	8000f0e <__udivmoddi4+0x292>
 8000d30:	2600      	movs	r6, #0
 8000d32:	e9c5 0100 	strd	r0, r1, [r5]
 8000d36:	4630      	mov	r0, r6
 8000d38:	4631      	mov	r1, r6
 8000d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d3e:	fab3 f683 	clz	r6, r3
 8000d42:	2e00      	cmp	r6, #0
 8000d44:	d14a      	bne.n	8000ddc <__udivmoddi4+0x160>
 8000d46:	428b      	cmp	r3, r1
 8000d48:	d302      	bcc.n	8000d50 <__udivmoddi4+0xd4>
 8000d4a:	4282      	cmp	r2, r0
 8000d4c:	f200 80f9 	bhi.w	8000f42 <__udivmoddi4+0x2c6>
 8000d50:	1a84      	subs	r4, r0, r2
 8000d52:	eb61 0303 	sbc.w	r3, r1, r3
 8000d56:	2001      	movs	r0, #1
 8000d58:	469e      	mov	lr, r3
 8000d5a:	2d00      	cmp	r5, #0
 8000d5c:	d0e0      	beq.n	8000d20 <__udivmoddi4+0xa4>
 8000d5e:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d62:	e7dd      	b.n	8000d20 <__udivmoddi4+0xa4>
 8000d64:	b902      	cbnz	r2, 8000d68 <__udivmoddi4+0xec>
 8000d66:	deff      	udf	#255	; 0xff
 8000d68:	fab2 f282 	clz	r2, r2
 8000d6c:	2a00      	cmp	r2, #0
 8000d6e:	f040 8092 	bne.w	8000e96 <__udivmoddi4+0x21a>
 8000d72:	eba1 010c 	sub.w	r1, r1, ip
 8000d76:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d7a:	fa1f fe8c 	uxth.w	lr, ip
 8000d7e:	2601      	movs	r6, #1
 8000d80:	0c20      	lsrs	r0, r4, #16
 8000d82:	fbb1 f3f7 	udiv	r3, r1, r7
 8000d86:	fb07 1113 	mls	r1, r7, r3, r1
 8000d8a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d8e:	fb0e f003 	mul.w	r0, lr, r3
 8000d92:	4288      	cmp	r0, r1
 8000d94:	d908      	bls.n	8000da8 <__udivmoddi4+0x12c>
 8000d96:	eb1c 0101 	adds.w	r1, ip, r1
 8000d9a:	f103 38ff 	add.w	r8, r3, #4294967295
 8000d9e:	d202      	bcs.n	8000da6 <__udivmoddi4+0x12a>
 8000da0:	4288      	cmp	r0, r1
 8000da2:	f200 80cb 	bhi.w	8000f3c <__udivmoddi4+0x2c0>
 8000da6:	4643      	mov	r3, r8
 8000da8:	1a09      	subs	r1, r1, r0
 8000daa:	b2a4      	uxth	r4, r4
 8000dac:	fbb1 f0f7 	udiv	r0, r1, r7
 8000db0:	fb07 1110 	mls	r1, r7, r0, r1
 8000db4:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000db8:	fb0e fe00 	mul.w	lr, lr, r0
 8000dbc:	45a6      	cmp	lr, r4
 8000dbe:	d908      	bls.n	8000dd2 <__udivmoddi4+0x156>
 8000dc0:	eb1c 0404 	adds.w	r4, ip, r4
 8000dc4:	f100 31ff 	add.w	r1, r0, #4294967295
 8000dc8:	d202      	bcs.n	8000dd0 <__udivmoddi4+0x154>
 8000dca:	45a6      	cmp	lr, r4
 8000dcc:	f200 80bb 	bhi.w	8000f46 <__udivmoddi4+0x2ca>
 8000dd0:	4608      	mov	r0, r1
 8000dd2:	eba4 040e 	sub.w	r4, r4, lr
 8000dd6:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000dda:	e79c      	b.n	8000d16 <__udivmoddi4+0x9a>
 8000ddc:	f1c6 0720 	rsb	r7, r6, #32
 8000de0:	40b3      	lsls	r3, r6
 8000de2:	fa22 fc07 	lsr.w	ip, r2, r7
 8000de6:	ea4c 0c03 	orr.w	ip, ip, r3
 8000dea:	fa20 f407 	lsr.w	r4, r0, r7
 8000dee:	fa01 f306 	lsl.w	r3, r1, r6
 8000df2:	431c      	orrs	r4, r3
 8000df4:	40f9      	lsrs	r1, r7
 8000df6:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000dfa:	fa00 f306 	lsl.w	r3, r0, r6
 8000dfe:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e02:	0c20      	lsrs	r0, r4, #16
 8000e04:	fa1f fe8c 	uxth.w	lr, ip
 8000e08:	fb09 1118 	mls	r1, r9, r8, r1
 8000e0c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e10:	fb08 f00e 	mul.w	r0, r8, lr
 8000e14:	4288      	cmp	r0, r1
 8000e16:	fa02 f206 	lsl.w	r2, r2, r6
 8000e1a:	d90b      	bls.n	8000e34 <__udivmoddi4+0x1b8>
 8000e1c:	eb1c 0101 	adds.w	r1, ip, r1
 8000e20:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e24:	f080 8088 	bcs.w	8000f38 <__udivmoddi4+0x2bc>
 8000e28:	4288      	cmp	r0, r1
 8000e2a:	f240 8085 	bls.w	8000f38 <__udivmoddi4+0x2bc>
 8000e2e:	f1a8 0802 	sub.w	r8, r8, #2
 8000e32:	4461      	add	r1, ip
 8000e34:	1a09      	subs	r1, r1, r0
 8000e36:	b2a4      	uxth	r4, r4
 8000e38:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e3c:	fb09 1110 	mls	r1, r9, r0, r1
 8000e40:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e44:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e48:	458e      	cmp	lr, r1
 8000e4a:	d908      	bls.n	8000e5e <__udivmoddi4+0x1e2>
 8000e4c:	eb1c 0101 	adds.w	r1, ip, r1
 8000e50:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e54:	d26c      	bcs.n	8000f30 <__udivmoddi4+0x2b4>
 8000e56:	458e      	cmp	lr, r1
 8000e58:	d96a      	bls.n	8000f30 <__udivmoddi4+0x2b4>
 8000e5a:	3802      	subs	r0, #2
 8000e5c:	4461      	add	r1, ip
 8000e5e:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e62:	fba0 9402 	umull	r9, r4, r0, r2
 8000e66:	eba1 010e 	sub.w	r1, r1, lr
 8000e6a:	42a1      	cmp	r1, r4
 8000e6c:	46c8      	mov	r8, r9
 8000e6e:	46a6      	mov	lr, r4
 8000e70:	d356      	bcc.n	8000f20 <__udivmoddi4+0x2a4>
 8000e72:	d053      	beq.n	8000f1c <__udivmoddi4+0x2a0>
 8000e74:	b15d      	cbz	r5, 8000e8e <__udivmoddi4+0x212>
 8000e76:	ebb3 0208 	subs.w	r2, r3, r8
 8000e7a:	eb61 010e 	sbc.w	r1, r1, lr
 8000e7e:	fa01 f707 	lsl.w	r7, r1, r7
 8000e82:	fa22 f306 	lsr.w	r3, r2, r6
 8000e86:	40f1      	lsrs	r1, r6
 8000e88:	431f      	orrs	r7, r3
 8000e8a:	e9c5 7100 	strd	r7, r1, [r5]
 8000e8e:	2600      	movs	r6, #0
 8000e90:	4631      	mov	r1, r6
 8000e92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e96:	f1c2 0320 	rsb	r3, r2, #32
 8000e9a:	40d8      	lsrs	r0, r3
 8000e9c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ea0:	fa21 f303 	lsr.w	r3, r1, r3
 8000ea4:	4091      	lsls	r1, r2
 8000ea6:	4301      	orrs	r1, r0
 8000ea8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000eac:	fa1f fe8c 	uxth.w	lr, ip
 8000eb0:	fbb3 f0f7 	udiv	r0, r3, r7
 8000eb4:	fb07 3610 	mls	r6, r7, r0, r3
 8000eb8:	0c0b      	lsrs	r3, r1, #16
 8000eba:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000ebe:	fb00 f60e 	mul.w	r6, r0, lr
 8000ec2:	429e      	cmp	r6, r3
 8000ec4:	fa04 f402 	lsl.w	r4, r4, r2
 8000ec8:	d908      	bls.n	8000edc <__udivmoddi4+0x260>
 8000eca:	eb1c 0303 	adds.w	r3, ip, r3
 8000ece:	f100 38ff 	add.w	r8, r0, #4294967295
 8000ed2:	d22f      	bcs.n	8000f34 <__udivmoddi4+0x2b8>
 8000ed4:	429e      	cmp	r6, r3
 8000ed6:	d92d      	bls.n	8000f34 <__udivmoddi4+0x2b8>
 8000ed8:	3802      	subs	r0, #2
 8000eda:	4463      	add	r3, ip
 8000edc:	1b9b      	subs	r3, r3, r6
 8000ede:	b289      	uxth	r1, r1
 8000ee0:	fbb3 f6f7 	udiv	r6, r3, r7
 8000ee4:	fb07 3316 	mls	r3, r7, r6, r3
 8000ee8:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000eec:	fb06 f30e 	mul.w	r3, r6, lr
 8000ef0:	428b      	cmp	r3, r1
 8000ef2:	d908      	bls.n	8000f06 <__udivmoddi4+0x28a>
 8000ef4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ef8:	f106 38ff 	add.w	r8, r6, #4294967295
 8000efc:	d216      	bcs.n	8000f2c <__udivmoddi4+0x2b0>
 8000efe:	428b      	cmp	r3, r1
 8000f00:	d914      	bls.n	8000f2c <__udivmoddi4+0x2b0>
 8000f02:	3e02      	subs	r6, #2
 8000f04:	4461      	add	r1, ip
 8000f06:	1ac9      	subs	r1, r1, r3
 8000f08:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f0c:	e738      	b.n	8000d80 <__udivmoddi4+0x104>
 8000f0e:	462e      	mov	r6, r5
 8000f10:	4628      	mov	r0, r5
 8000f12:	e705      	b.n	8000d20 <__udivmoddi4+0xa4>
 8000f14:	4606      	mov	r6, r0
 8000f16:	e6e3      	b.n	8000ce0 <__udivmoddi4+0x64>
 8000f18:	4618      	mov	r0, r3
 8000f1a:	e6f8      	b.n	8000d0e <__udivmoddi4+0x92>
 8000f1c:	454b      	cmp	r3, r9
 8000f1e:	d2a9      	bcs.n	8000e74 <__udivmoddi4+0x1f8>
 8000f20:	ebb9 0802 	subs.w	r8, r9, r2
 8000f24:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f28:	3801      	subs	r0, #1
 8000f2a:	e7a3      	b.n	8000e74 <__udivmoddi4+0x1f8>
 8000f2c:	4646      	mov	r6, r8
 8000f2e:	e7ea      	b.n	8000f06 <__udivmoddi4+0x28a>
 8000f30:	4620      	mov	r0, r4
 8000f32:	e794      	b.n	8000e5e <__udivmoddi4+0x1e2>
 8000f34:	4640      	mov	r0, r8
 8000f36:	e7d1      	b.n	8000edc <__udivmoddi4+0x260>
 8000f38:	46d0      	mov	r8, sl
 8000f3a:	e77b      	b.n	8000e34 <__udivmoddi4+0x1b8>
 8000f3c:	3b02      	subs	r3, #2
 8000f3e:	4461      	add	r1, ip
 8000f40:	e732      	b.n	8000da8 <__udivmoddi4+0x12c>
 8000f42:	4630      	mov	r0, r6
 8000f44:	e709      	b.n	8000d5a <__udivmoddi4+0xde>
 8000f46:	4464      	add	r4, ip
 8000f48:	3802      	subs	r0, #2
 8000f4a:	e742      	b.n	8000dd2 <__udivmoddi4+0x156>

08000f4c <__aeabi_idiv0>:
 8000f4c:	4770      	bx	lr
 8000f4e:	bf00      	nop

08000f50 <__aeabi_d2uiz>:
 8000f50:	004a      	lsls	r2, r1, #1
 8000f52:	d211      	bcs.n	8000f78 <__aeabi_d2uiz+0x28>
 8000f54:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000f58:	d211      	bcs.n	8000f7e <__aeabi_d2uiz+0x2e>
 8000f5a:	d50d      	bpl.n	8000f78 <__aeabi_d2uiz+0x28>
 8000f5c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000f60:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000f64:	d40e      	bmi.n	8000f84 <__aeabi_d2uiz+0x34>
 8000f66:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000f6a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000f6e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000f72:	fa23 f002 	lsr.w	r0, r3, r2
 8000f76:	4770      	bx	lr
 8000f78:	f04f 0000 	mov.w	r0, #0
 8000f7c:	4770      	bx	lr
 8000f7e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000f82:	d102      	bne.n	8000f8a <__aeabi_d2uiz+0x3a>
 8000f84:	f04f 30ff 	mov.w	r0, #4294967295
 8000f88:	4770      	bx	lr
 8000f8a:	f04f 0000 	mov.w	r0, #0
 8000f8e:	4770      	bx	lr

08000f90 <start_reading_battery>:
 *      Author: sahin
 */

#include "adc_Battery.h"
//Starts the ADC reading with DMA
void start_reading_battery(){
 8000f90:	b580      	push	{r7, lr}
 8000f92:	af00      	add	r7, sp, #0
	HAL_ADC_Start_DMA(&hadc1,&battery_raw_data,1);
 8000f94:	2201      	movs	r2, #1
 8000f96:	4903      	ldr	r1, [pc, #12]	; (8000fa4 <start_reading_battery+0x14>)
 8000f98:	4803      	ldr	r0, [pc, #12]	; (8000fa8 <start_reading_battery+0x18>)
 8000f9a:	f006 fa35 	bl	8007408 <HAL_ADC_Start_DMA>
}
 8000f9e:	bf00      	nop
 8000fa0:	bd80      	pop	{r7, pc}
 8000fa2:	bf00      	nop
 8000fa4:	20000940 	.word	0x20000940
 8000fa8:	20000248 	.word	0x20000248

08000fac <i2c_disconnected_compass>:
extern float Zsf,Zoff;
float Sf_Toplam=0;


/// this function rescues the hang i2c bus that is connected to compass
void i2c_disconnected_compass(){
 8000fac:	b580      	push	{r7, lr}
 8000fae:	b082      	sub	sp, #8
 8000fb0:	af00      	add	r7, sp, #0

	uint32_t data;
	HAL_I2C_DeInit(&hi2c3);
 8000fb2:	481e      	ldr	r0, [pc, #120]	; (800102c <i2c_disconnected_compass+0x80>)
 8000fb4:	f008 f9b0 	bl	8009318 <HAL_I2C_DeInit>
	data=GPIOA->MODER;
 8000fb8:	4b1d      	ldr	r3, [pc, #116]	; (8001030 <i2c_disconnected_compass+0x84>)
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	603b      	str	r3, [r7, #0]
	data= data & ~0b11<<16;
 8000fbe:	683b      	ldr	r3, [r7, #0]
 8000fc0:	0c9b      	lsrs	r3, r3, #18
 8000fc2:	049b      	lsls	r3, r3, #18
 8000fc4:	603b      	str	r3, [r7, #0]
	data= data | 0b01<<16;
 8000fc6:	683b      	ldr	r3, [r7, #0]
 8000fc8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000fcc:	603b      	str	r3, [r7, #0]
	GPIOA->MODER=data;
 8000fce:	4a18      	ldr	r2, [pc, #96]	; (8001030 <i2c_disconnected_compass+0x84>)
 8000fd0:	683b      	ldr	r3, [r7, #0]
 8000fd2:	6013      	str	r3, [r2, #0]


	data=GPIOA->OTYPER;
 8000fd4:	4b16      	ldr	r3, [pc, #88]	; (8001030 <i2c_disconnected_compass+0x84>)
 8000fd6:	685b      	ldr	r3, [r3, #4]
 8000fd8:	603b      	str	r3, [r7, #0]

	data = data & ~0b1<<8;
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8000fe0:	f023 0301 	bic.w	r3, r3, #1
 8000fe4:	603b      	str	r3, [r7, #0]
	GPIOA->OTYPER=data;
 8000fe6:	4a12      	ldr	r2, [pc, #72]	; (8001030 <i2c_disconnected_compass+0x84>)
 8000fe8:	683b      	ldr	r3, [r7, #0]
 8000fea:	6053      	str	r3, [r2, #4]

	data=GPIOA->AFR[1];
 8000fec:	4b10      	ldr	r3, [pc, #64]	; (8001030 <i2c_disconnected_compass+0x84>)
 8000fee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ff0:	603b      	str	r3, [r7, #0]
	data=  data & ~0b1111;
 8000ff2:	683b      	ldr	r3, [r7, #0]
 8000ff4:	f023 030f 	bic.w	r3, r3, #15
 8000ff8:	603b      	str	r3, [r7, #0]
	GPIOA->AFR[1]=data;
 8000ffa:	4a0d      	ldr	r2, [pc, #52]	; (8001030 <i2c_disconnected_compass+0x84>)
 8000ffc:	683b      	ldr	r3, [r7, #0]
 8000ffe:	6253      	str	r3, [r2, #36]	; 0x24

	for(int i=0;i<14;i++) // either 9 or 14
 8001000:	2300      	movs	r3, #0
 8001002:	607b      	str	r3, [r7, #4]
 8001004:	e007      	b.n	8001016 <i2c_disconnected_compass+0x6a>
	{
		HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
 8001006:	f44f 7180 	mov.w	r1, #256	; 0x100
 800100a:	4809      	ldr	r0, [pc, #36]	; (8001030 <i2c_disconnected_compass+0x84>)
 800100c:	f008 f825 	bl	800905a <HAL_GPIO_TogglePin>
	for(int i=0;i<14;i++) // either 9 or 14
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	3301      	adds	r3, #1
 8001014:	607b      	str	r3, [r7, #4]
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	2b0d      	cmp	r3, #13
 800101a:	ddf4      	ble.n	8001006 <i2c_disconnected_compass+0x5a>
	}

	  HAL_I2C_Init(&hi2c3);
 800101c:	4803      	ldr	r0, [pc, #12]	; (800102c <i2c_disconnected_compass+0x80>)
 800101e:	f008 f837 	bl	8009090 <HAL_I2C_Init>
}
 8001022:	bf00      	nop
 8001024:	3708      	adds	r7, #8
 8001026:	46bd      	mov	sp, r7
 8001028:	bd80      	pop	{r7, pc}
 800102a:	bf00      	nop
 800102c:	20000398 	.word	0x20000398
 8001030:	40020000 	.word	0x40020000
 8001034:	00000000 	.word	0x00000000

08001038 <compass_read_corrected>:
extern I2C_HandleTypeDef hi2c2;
void compass_read_corrected(){
 8001038:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800103c:	b084      	sub	sp, #16
 800103e:	af04      	add	r7, sp, #16
	HAL_I2C_Mem_Read(&hi2c3, 0x3D,0x03,1,MAGZ, 6, COMPASS_TIMEOUT);
 8001040:	2301      	movs	r3, #1
 8001042:	9302      	str	r3, [sp, #8]
 8001044:	2306      	movs	r3, #6
 8001046:	9301      	str	r3, [sp, #4]
 8001048:	4bc9      	ldr	r3, [pc, #804]	; (8001370 <compass_read_corrected+0x338>)
 800104a:	9300      	str	r3, [sp, #0]
 800104c:	2301      	movs	r3, #1
 800104e:	2203      	movs	r2, #3
 8001050:	213d      	movs	r1, #61	; 0x3d
 8001052:	48c8      	ldr	r0, [pc, #800]	; (8001374 <compass_read_corrected+0x33c>)
 8001054:	f008 fdae 	bl	8009bb4 <HAL_I2C_Mem_Read>
	MagX=MAGZ[0]<<8|MAGZ[1];
 8001058:	4bc5      	ldr	r3, [pc, #788]	; (8001370 <compass_read_corrected+0x338>)
 800105a:	781b      	ldrb	r3, [r3, #0]
 800105c:	021b      	lsls	r3, r3, #8
 800105e:	b21a      	sxth	r2, r3
 8001060:	4bc3      	ldr	r3, [pc, #780]	; (8001370 <compass_read_corrected+0x338>)
 8001062:	785b      	ldrb	r3, [r3, #1]
 8001064:	b21b      	sxth	r3, r3
 8001066:	4313      	orrs	r3, r2
 8001068:	b21a      	sxth	r2, r3
 800106a:	4bc3      	ldr	r3, [pc, #780]	; (8001378 <compass_read_corrected+0x340>)
 800106c:	801a      	strh	r2, [r3, #0]
	MagZ=MAGZ[2]<<8|MAGZ[3];
 800106e:	4bc0      	ldr	r3, [pc, #768]	; (8001370 <compass_read_corrected+0x338>)
 8001070:	789b      	ldrb	r3, [r3, #2]
 8001072:	021b      	lsls	r3, r3, #8
 8001074:	b21a      	sxth	r2, r3
 8001076:	4bbe      	ldr	r3, [pc, #760]	; (8001370 <compass_read_corrected+0x338>)
 8001078:	78db      	ldrb	r3, [r3, #3]
 800107a:	b21b      	sxth	r3, r3
 800107c:	4313      	orrs	r3, r2
 800107e:	b21a      	sxth	r2, r3
 8001080:	4bbe      	ldr	r3, [pc, #760]	; (800137c <compass_read_corrected+0x344>)
 8001082:	801a      	strh	r2, [r3, #0]
	MagY=MAGZ[4]<<8|MAGZ[5];
 8001084:	4bba      	ldr	r3, [pc, #744]	; (8001370 <compass_read_corrected+0x338>)
 8001086:	791b      	ldrb	r3, [r3, #4]
 8001088:	021b      	lsls	r3, r3, #8
 800108a:	b21a      	sxth	r2, r3
 800108c:	4bb8      	ldr	r3, [pc, #736]	; (8001370 <compass_read_corrected+0x338>)
 800108e:	795b      	ldrb	r3, [r3, #5]
 8001090:	b21b      	sxth	r3, r3
 8001092:	4313      	orrs	r3, r2
 8001094:	b21a      	sxth	r2, r3
 8001096:	4bba      	ldr	r3, [pc, #744]	; (8001380 <compass_read_corrected+0x348>)
 8001098:	801a      	strh	r2, [r3, #0]
	MagY=-1*MagY;
 800109a:	4bb9      	ldr	r3, [pc, #740]	; (8001380 <compass_read_corrected+0x348>)
 800109c:	f9b3 3000 	ldrsh.w	r3, [r3]
 80010a0:	b29b      	uxth	r3, r3
 80010a2:	425b      	negs	r3, r3
 80010a4:	b29b      	uxth	r3, r3
 80010a6:	b21a      	sxth	r2, r3
 80010a8:	4bb5      	ldr	r3, [pc, #724]	; (8001380 <compass_read_corrected+0x348>)
 80010aa:	801a      	strh	r2, [r3, #0]
	MagX=-1*MagX;
 80010ac:	4bb2      	ldr	r3, [pc, #712]	; (8001378 <compass_read_corrected+0x340>)
 80010ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80010b2:	b29b      	uxth	r3, r3
 80010b4:	425b      	negs	r3, r3
 80010b6:	b29b      	uxth	r3, r3
 80010b8:	b21a      	sxth	r2, r3
 80010ba:	4baf      	ldr	r3, [pc, #700]	; (8001378 <compass_read_corrected+0x340>)
 80010bc:	801a      	strh	r2, [r3, #0]
	MagZ=-1*MagZ;
 80010be:	4baf      	ldr	r3, [pc, #700]	; (800137c <compass_read_corrected+0x344>)
 80010c0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80010c4:	b29b      	uxth	r3, r3
 80010c6:	425b      	negs	r3, r3
 80010c8:	b29b      	uxth	r3, r3
 80010ca:	b21a      	sxth	r2, r3
 80010cc:	4bab      	ldr	r3, [pc, #684]	; (800137c <compass_read_corrected+0x344>)
 80010ce:	801a      	strh	r2, [r3, #0]

	MagX = Xsf* (MagX - Xoff);
 80010d0:	4ba9      	ldr	r3, [pc, #676]	; (8001378 <compass_read_corrected+0x340>)
 80010d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80010d6:	ee07 3a90 	vmov	s15, r3
 80010da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80010de:	4ba9      	ldr	r3, [pc, #676]	; (8001384 <compass_read_corrected+0x34c>)
 80010e0:	edd3 7a00 	vldr	s15, [r3]
 80010e4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80010e8:	4ba7      	ldr	r3, [pc, #668]	; (8001388 <compass_read_corrected+0x350>)
 80010ea:	edd3 7a00 	vldr	s15, [r3]
 80010ee:	ee67 7a27 	vmul.f32	s15, s14, s15
 80010f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80010f6:	ee17 3a90 	vmov	r3, s15
 80010fa:	b21a      	sxth	r2, r3
 80010fc:	4b9e      	ldr	r3, [pc, #632]	; (8001378 <compass_read_corrected+0x340>)
 80010fe:	801a      	strh	r2, [r3, #0]

	MagY = Ysf * (MagY - Yoff);
 8001100:	4b9f      	ldr	r3, [pc, #636]	; (8001380 <compass_read_corrected+0x348>)
 8001102:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001106:	ee07 3a90 	vmov	s15, r3
 800110a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800110e:	4b9f      	ldr	r3, [pc, #636]	; (800138c <compass_read_corrected+0x354>)
 8001110:	edd3 7a00 	vldr	s15, [r3]
 8001114:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001118:	4b9d      	ldr	r3, [pc, #628]	; (8001390 <compass_read_corrected+0x358>)
 800111a:	edd3 7a00 	vldr	s15, [r3]
 800111e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001122:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001126:	ee17 3a90 	vmov	r3, s15
 800112a:	b21a      	sxth	r2, r3
 800112c:	4b94      	ldr	r3, [pc, #592]	; (8001380 <compass_read_corrected+0x348>)
 800112e:	801a      	strh	r2, [r3, #0]

	MagZ = Zsf* (MagZ - Zoff);
 8001130:	4b92      	ldr	r3, [pc, #584]	; (800137c <compass_read_corrected+0x344>)
 8001132:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001136:	ee07 3a90 	vmov	s15, r3
 800113a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800113e:	4b95      	ldr	r3, [pc, #596]	; (8001394 <compass_read_corrected+0x35c>)
 8001140:	edd3 7a00 	vldr	s15, [r3]
 8001144:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001148:	4b93      	ldr	r3, [pc, #588]	; (8001398 <compass_read_corrected+0x360>)
 800114a:	edd3 7a00 	vldr	s15, [r3]
 800114e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001152:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001156:	ee17 3a90 	vmov	r3, s15
 800115a:	b21a      	sxth	r2, r3
 800115c:	4b87      	ldr	r3, [pc, #540]	; (800137c <compass_read_corrected+0x344>)
 800115e:	801a      	strh	r2, [r3, #0]

	MagX_float = +(double)MagX*cos(angle_roll_output*M_PI/180)
 8001160:	4b85      	ldr	r3, [pc, #532]	; (8001378 <compass_read_corrected+0x340>)
 8001162:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001166:	4618      	mov	r0, r3
 8001168:	f7ff f9a8 	bl	80004bc <__aeabi_i2d>
 800116c:	4604      	mov	r4, r0
 800116e:	460d      	mov	r5, r1
 8001170:	4b8a      	ldr	r3, [pc, #552]	; (800139c <compass_read_corrected+0x364>)
 8001172:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001176:	a37c      	add	r3, pc, #496	; (adr r3, 8001368 <compass_read_corrected+0x330>)
 8001178:	e9d3 2300 	ldrd	r2, r3, [r3]
 800117c:	f7ff fa08 	bl	8000590 <__aeabi_dmul>
 8001180:	4602      	mov	r2, r0
 8001182:	460b      	mov	r3, r1
 8001184:	4610      	mov	r0, r2
 8001186:	4619      	mov	r1, r3
 8001188:	f04f 0200 	mov.w	r2, #0
 800118c:	4b84      	ldr	r3, [pc, #528]	; (80013a0 <compass_read_corrected+0x368>)
 800118e:	f7ff fb29 	bl	80007e4 <__aeabi_ddiv>
 8001192:	4602      	mov	r2, r0
 8001194:	460b      	mov	r3, r1
 8001196:	ec43 2b17 	vmov	d7, r2, r3
 800119a:	eeb0 0a47 	vmov.f32	s0, s14
 800119e:	eef0 0a67 	vmov.f32	s1, s15
 80011a2:	f00c fba1 	bl	800d8e8 <cos>
 80011a6:	ec53 2b10 	vmov	r2, r3, d0
 80011aa:	4620      	mov	r0, r4
 80011ac:	4629      	mov	r1, r5
 80011ae:	f7ff f9ef 	bl	8000590 <__aeabi_dmul>
 80011b2:	4602      	mov	r2, r0
 80011b4:	460b      	mov	r3, r1
 80011b6:	4690      	mov	r8, r2
 80011b8:	4699      	mov	r9, r3
	+(double)MagY*sin(angle_pitch_output*M_PI/180)*sin(angle_roll_output*M_PI/180)
 80011ba:	4b71      	ldr	r3, [pc, #452]	; (8001380 <compass_read_corrected+0x348>)
 80011bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80011c0:	4618      	mov	r0, r3
 80011c2:	f7ff f97b 	bl	80004bc <__aeabi_i2d>
 80011c6:	4604      	mov	r4, r0
 80011c8:	460d      	mov	r5, r1
 80011ca:	4b76      	ldr	r3, [pc, #472]	; (80013a4 <compass_read_corrected+0x36c>)
 80011cc:	e9d3 0100 	ldrd	r0, r1, [r3]
 80011d0:	a365      	add	r3, pc, #404	; (adr r3, 8001368 <compass_read_corrected+0x330>)
 80011d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011d6:	f7ff f9db 	bl	8000590 <__aeabi_dmul>
 80011da:	4602      	mov	r2, r0
 80011dc:	460b      	mov	r3, r1
 80011de:	4610      	mov	r0, r2
 80011e0:	4619      	mov	r1, r3
 80011e2:	f04f 0200 	mov.w	r2, #0
 80011e6:	4b6e      	ldr	r3, [pc, #440]	; (80013a0 <compass_read_corrected+0x368>)
 80011e8:	f7ff fafc 	bl	80007e4 <__aeabi_ddiv>
 80011ec:	4602      	mov	r2, r0
 80011ee:	460b      	mov	r3, r1
 80011f0:	ec43 2b17 	vmov	d7, r2, r3
 80011f4:	eeb0 0a47 	vmov.f32	s0, s14
 80011f8:	eef0 0a67 	vmov.f32	s1, s15
 80011fc:	f00c fbc8 	bl	800d990 <sin>
 8001200:	ec53 2b10 	vmov	r2, r3, d0
 8001204:	4620      	mov	r0, r4
 8001206:	4629      	mov	r1, r5
 8001208:	f7ff f9c2 	bl	8000590 <__aeabi_dmul>
 800120c:	4602      	mov	r2, r0
 800120e:	460b      	mov	r3, r1
 8001210:	4614      	mov	r4, r2
 8001212:	461d      	mov	r5, r3
 8001214:	4b61      	ldr	r3, [pc, #388]	; (800139c <compass_read_corrected+0x364>)
 8001216:	e9d3 0100 	ldrd	r0, r1, [r3]
 800121a:	a353      	add	r3, pc, #332	; (adr r3, 8001368 <compass_read_corrected+0x330>)
 800121c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001220:	f7ff f9b6 	bl	8000590 <__aeabi_dmul>
 8001224:	4602      	mov	r2, r0
 8001226:	460b      	mov	r3, r1
 8001228:	4610      	mov	r0, r2
 800122a:	4619      	mov	r1, r3
 800122c:	f04f 0200 	mov.w	r2, #0
 8001230:	4b5b      	ldr	r3, [pc, #364]	; (80013a0 <compass_read_corrected+0x368>)
 8001232:	f7ff fad7 	bl	80007e4 <__aeabi_ddiv>
 8001236:	4602      	mov	r2, r0
 8001238:	460b      	mov	r3, r1
 800123a:	ec43 2b17 	vmov	d7, r2, r3
 800123e:	eeb0 0a47 	vmov.f32	s0, s14
 8001242:	eef0 0a67 	vmov.f32	s1, s15
 8001246:	f00c fba3 	bl	800d990 <sin>
 800124a:	ec53 2b10 	vmov	r2, r3, d0
 800124e:	4620      	mov	r0, r4
 8001250:	4629      	mov	r1, r5
 8001252:	f7ff f99d 	bl	8000590 <__aeabi_dmul>
 8001256:	4602      	mov	r2, r0
 8001258:	460b      	mov	r3, r1
 800125a:	4640      	mov	r0, r8
 800125c:	4649      	mov	r1, r9
 800125e:	f7fe ffe1 	bl	8000224 <__adddf3>
 8001262:	4602      	mov	r2, r0
 8001264:	460b      	mov	r3, r1
 8001266:	4690      	mov	r8, r2
 8001268:	4699      	mov	r9, r3
	-(double)MagZ*cos(angle_pitch_output*M_PI/180)*sin(angle_roll_output*M_PI/180);
 800126a:	4b44      	ldr	r3, [pc, #272]	; (800137c <compass_read_corrected+0x344>)
 800126c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001270:	4618      	mov	r0, r3
 8001272:	f7ff f923 	bl	80004bc <__aeabi_i2d>
 8001276:	4604      	mov	r4, r0
 8001278:	460d      	mov	r5, r1
 800127a:	4b4a      	ldr	r3, [pc, #296]	; (80013a4 <compass_read_corrected+0x36c>)
 800127c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001280:	a339      	add	r3, pc, #228	; (adr r3, 8001368 <compass_read_corrected+0x330>)
 8001282:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001286:	f7ff f983 	bl	8000590 <__aeabi_dmul>
 800128a:	4602      	mov	r2, r0
 800128c:	460b      	mov	r3, r1
 800128e:	4610      	mov	r0, r2
 8001290:	4619      	mov	r1, r3
 8001292:	f04f 0200 	mov.w	r2, #0
 8001296:	4b42      	ldr	r3, [pc, #264]	; (80013a0 <compass_read_corrected+0x368>)
 8001298:	f7ff faa4 	bl	80007e4 <__aeabi_ddiv>
 800129c:	4602      	mov	r2, r0
 800129e:	460b      	mov	r3, r1
 80012a0:	ec43 2b17 	vmov	d7, r2, r3
 80012a4:	eeb0 0a47 	vmov.f32	s0, s14
 80012a8:	eef0 0a67 	vmov.f32	s1, s15
 80012ac:	f00c fb1c 	bl	800d8e8 <cos>
 80012b0:	ec53 2b10 	vmov	r2, r3, d0
 80012b4:	4620      	mov	r0, r4
 80012b6:	4629      	mov	r1, r5
 80012b8:	f7ff f96a 	bl	8000590 <__aeabi_dmul>
 80012bc:	4602      	mov	r2, r0
 80012be:	460b      	mov	r3, r1
 80012c0:	4614      	mov	r4, r2
 80012c2:	461d      	mov	r5, r3
 80012c4:	4b35      	ldr	r3, [pc, #212]	; (800139c <compass_read_corrected+0x364>)
 80012c6:	e9d3 0100 	ldrd	r0, r1, [r3]
 80012ca:	a327      	add	r3, pc, #156	; (adr r3, 8001368 <compass_read_corrected+0x330>)
 80012cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012d0:	f7ff f95e 	bl	8000590 <__aeabi_dmul>
 80012d4:	4602      	mov	r2, r0
 80012d6:	460b      	mov	r3, r1
 80012d8:	4610      	mov	r0, r2
 80012da:	4619      	mov	r1, r3
 80012dc:	f04f 0200 	mov.w	r2, #0
 80012e0:	4b2f      	ldr	r3, [pc, #188]	; (80013a0 <compass_read_corrected+0x368>)
 80012e2:	f7ff fa7f 	bl	80007e4 <__aeabi_ddiv>
 80012e6:	4602      	mov	r2, r0
 80012e8:	460b      	mov	r3, r1
 80012ea:	ec43 2b17 	vmov	d7, r2, r3
 80012ee:	eeb0 0a47 	vmov.f32	s0, s14
 80012f2:	eef0 0a67 	vmov.f32	s1, s15
 80012f6:	f00c fb4b 	bl	800d990 <sin>
 80012fa:	ec53 2b10 	vmov	r2, r3, d0
 80012fe:	4620      	mov	r0, r4
 8001300:	4629      	mov	r1, r5
 8001302:	f7ff f945 	bl	8000590 <__aeabi_dmul>
 8001306:	4602      	mov	r2, r0
 8001308:	460b      	mov	r3, r1
 800130a:	4640      	mov	r0, r8
 800130c:	4649      	mov	r1, r9
 800130e:	f7fe ff87 	bl	8000220 <__aeabi_dsub>
 8001312:	4602      	mov	r2, r0
 8001314:	460b      	mov	r3, r1
	MagX_float = +(double)MagX*cos(angle_roll_output*M_PI/180)
 8001316:	4924      	ldr	r1, [pc, #144]	; (80013a8 <compass_read_corrected+0x370>)
 8001318:	e9c1 2300 	strd	r2, r3, [r1]

	MagY_float = (double)MagY*cos(angle_pitch_output*M_PI/180)
 800131c:	4b18      	ldr	r3, [pc, #96]	; (8001380 <compass_read_corrected+0x348>)
 800131e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001322:	4618      	mov	r0, r3
 8001324:	f7ff f8ca 	bl	80004bc <__aeabi_i2d>
 8001328:	4604      	mov	r4, r0
 800132a:	460d      	mov	r5, r1
 800132c:	4b1d      	ldr	r3, [pc, #116]	; (80013a4 <compass_read_corrected+0x36c>)
 800132e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001332:	a30d      	add	r3, pc, #52	; (adr r3, 8001368 <compass_read_corrected+0x330>)
 8001334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001338:	f7ff f92a 	bl	8000590 <__aeabi_dmul>
 800133c:	4602      	mov	r2, r0
 800133e:	460b      	mov	r3, r1
 8001340:	4610      	mov	r0, r2
 8001342:	4619      	mov	r1, r3
 8001344:	f04f 0200 	mov.w	r2, #0
 8001348:	4b15      	ldr	r3, [pc, #84]	; (80013a0 <compass_read_corrected+0x368>)
 800134a:	f7ff fa4b 	bl	80007e4 <__aeabi_ddiv>
 800134e:	4602      	mov	r2, r0
 8001350:	460b      	mov	r3, r1
 8001352:	ec43 2b17 	vmov	d7, r2, r3
 8001356:	eeb0 0a47 	vmov.f32	s0, s14
 800135a:	eef0 0a67 	vmov.f32	s1, s15
 800135e:	f00c fac3 	bl	800d8e8 <cos>
 8001362:	ec53 2b10 	vmov	r2, r3, d0
 8001366:	e021      	b.n	80013ac <compass_read_corrected+0x374>
 8001368:	54442d18 	.word	0x54442d18
 800136c:	400921fb 	.word	0x400921fb
 8001370:	20000a38 	.word	0x20000a38
 8001374:	20000398 	.word	0x20000398
 8001378:	20000a20 	.word	0x20000a20
 800137c:	20000a24 	.word	0x20000a24
 8001380:	20000a22 	.word	0x20000a22
 8001384:	20000a54 	.word	0x20000a54
 8001388:	20000a4c 	.word	0x20000a4c
 800138c:	20000a58 	.word	0x20000a58
 8001390:	20000a50 	.word	0x20000a50
 8001394:	20000a60 	.word	0x20000a60
 8001398:	20000a5c 	.word	0x20000a5c
 800139c:	200008a8 	.word	0x200008a8
 80013a0:	40668000 	.word	0x40668000
 80013a4:	200008a0 	.word	0x200008a0
 80013a8:	200001b8 	.word	0x200001b8
 80013ac:	4620      	mov	r0, r4
 80013ae:	4629      	mov	r1, r5
 80013b0:	f7ff f8ee 	bl	8000590 <__aeabi_dmul>
 80013b4:	4602      	mov	r2, r0
 80013b6:	460b      	mov	r3, r1
 80013b8:	4690      	mov	r8, r2
 80013ba:	4699      	mov	r9, r3
	-(double)MagZ*sin(angle_pitch_output*M_PI/180);
 80013bc:	4b40      	ldr	r3, [pc, #256]	; (80014c0 <compass_read_corrected+0x488>)
 80013be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80013c2:	4618      	mov	r0, r3
 80013c4:	f7ff f87a 	bl	80004bc <__aeabi_i2d>
 80013c8:	4604      	mov	r4, r0
 80013ca:	460d      	mov	r5, r1
 80013cc:	4b3d      	ldr	r3, [pc, #244]	; (80014c4 <compass_read_corrected+0x48c>)
 80013ce:	e9d3 0100 	ldrd	r0, r1, [r3]
 80013d2:	a339      	add	r3, pc, #228	; (adr r3, 80014b8 <compass_read_corrected+0x480>)
 80013d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013d8:	f7ff f8da 	bl	8000590 <__aeabi_dmul>
 80013dc:	4602      	mov	r2, r0
 80013de:	460b      	mov	r3, r1
 80013e0:	4610      	mov	r0, r2
 80013e2:	4619      	mov	r1, r3
 80013e4:	f04f 0200 	mov.w	r2, #0
 80013e8:	4b37      	ldr	r3, [pc, #220]	; (80014c8 <compass_read_corrected+0x490>)
 80013ea:	f7ff f9fb 	bl	80007e4 <__aeabi_ddiv>
 80013ee:	4602      	mov	r2, r0
 80013f0:	460b      	mov	r3, r1
 80013f2:	ec43 2b17 	vmov	d7, r2, r3
 80013f6:	eeb0 0a47 	vmov.f32	s0, s14
 80013fa:	eef0 0a67 	vmov.f32	s1, s15
 80013fe:	f00c fac7 	bl	800d990 <sin>
 8001402:	ec53 2b10 	vmov	r2, r3, d0
 8001406:	4620      	mov	r0, r4
 8001408:	4629      	mov	r1, r5
 800140a:	f7ff f8c1 	bl	8000590 <__aeabi_dmul>
 800140e:	4602      	mov	r2, r0
 8001410:	460b      	mov	r3, r1
 8001412:	4640      	mov	r0, r8
 8001414:	4649      	mov	r1, r9
 8001416:	f7fe ff03 	bl	8000220 <__aeabi_dsub>
 800141a:	4602      	mov	r2, r0
 800141c:	460b      	mov	r3, r1
	MagY_float = (double)MagY*cos(angle_pitch_output*M_PI/180)
 800141e:	492b      	ldr	r1, [pc, #172]	; (80014cc <compass_read_corrected+0x494>)
 8001420:	e9c1 2300 	strd	r2, r3, [r1]

	 heading_corrected = atan2(MagX_float,MagY_float ) * 180 / M_PI + MAG_DEC;
 8001424:	4b2a      	ldr	r3, [pc, #168]	; (80014d0 <compass_read_corrected+0x498>)
 8001426:	ed93 7b00 	vldr	d7, [r3]
 800142a:	4b28      	ldr	r3, [pc, #160]	; (80014cc <compass_read_corrected+0x494>)
 800142c:	ed93 6b00 	vldr	d6, [r3]
 8001430:	eeb0 1a46 	vmov.f32	s2, s12
 8001434:	eef0 1a66 	vmov.f32	s3, s13
 8001438:	eeb0 0a47 	vmov.f32	s0, s14
 800143c:	eef0 0a67 	vmov.f32	s1, s15
 8001440:	f00c fb32 	bl	800daa8 <atan2>
 8001444:	ec51 0b10 	vmov	r0, r1, d0
 8001448:	f04f 0200 	mov.w	r2, #0
 800144c:	4b1e      	ldr	r3, [pc, #120]	; (80014c8 <compass_read_corrected+0x490>)
 800144e:	f7ff f89f 	bl	8000590 <__aeabi_dmul>
 8001452:	4602      	mov	r2, r0
 8001454:	460b      	mov	r3, r1
 8001456:	4610      	mov	r0, r2
 8001458:	4619      	mov	r1, r3
 800145a:	a317      	add	r3, pc, #92	; (adr r3, 80014b8 <compass_read_corrected+0x480>)
 800145c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001460:	f7ff f9c0 	bl	80007e4 <__aeabi_ddiv>
 8001464:	4602      	mov	r2, r0
 8001466:	460b      	mov	r3, r1
 8001468:	4610      	mov	r0, r2
 800146a:	4619      	mov	r1, r3
 800146c:	f04f 0200 	mov.w	r2, #0
 8001470:	4b18      	ldr	r3, [pc, #96]	; (80014d4 <compass_read_corrected+0x49c>)
 8001472:	f7fe fed7 	bl	8000224 <__adddf3>
 8001476:	4602      	mov	r2, r0
 8001478:	460b      	mov	r3, r1
 800147a:	4610      	mov	r0, r2
 800147c:	4619      	mov	r1, r3
 800147e:	f7ff fb5f 	bl	8000b40 <__aeabi_d2f>
 8001482:	4603      	mov	r3, r0
 8001484:	4a14      	ldr	r2, [pc, #80]	; (80014d8 <compass_read_corrected+0x4a0>)
 8001486:	6013      	str	r3, [r2, #0]
	 if(heading_corrected<0) heading_corrected+=360;
 8001488:	4b13      	ldr	r3, [pc, #76]	; (80014d8 <compass_read_corrected+0x4a0>)
 800148a:	edd3 7a00 	vldr	s15, [r3]
 800148e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001496:	d400      	bmi.n	800149a <compass_read_corrected+0x462>

}
 8001498:	e009      	b.n	80014ae <compass_read_corrected+0x476>
	 if(heading_corrected<0) heading_corrected+=360;
 800149a:	4b0f      	ldr	r3, [pc, #60]	; (80014d8 <compass_read_corrected+0x4a0>)
 800149c:	edd3 7a00 	vldr	s15, [r3]
 80014a0:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 80014dc <compass_read_corrected+0x4a4>
 80014a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80014a8:	4b0b      	ldr	r3, [pc, #44]	; (80014d8 <compass_read_corrected+0x4a0>)
 80014aa:	edc3 7a00 	vstr	s15, [r3]
}
 80014ae:	bf00      	nop
 80014b0:	46bd      	mov	sp, r7
 80014b2:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80014b6:	bf00      	nop
 80014b8:	54442d18 	.word	0x54442d18
 80014bc:	400921fb 	.word	0x400921fb
 80014c0:	20000a24 	.word	0x20000a24
 80014c4:	200008a0 	.word	0x200008a0
 80014c8:	40668000 	.word	0x40668000
 80014cc:	200001c0 	.word	0x200001c0
 80014d0:	200001b8 	.word	0x200001b8
 80014d4:	40180000 	.word	0x40180000
 80014d8:	200001c8 	.word	0x200001c8
 80014dc:	43b40000 	.word	0x43b40000

080014e0 <compass_read>:
void compass_read(){
 80014e0:	b580      	push	{r7, lr}
 80014e2:	b084      	sub	sp, #16
 80014e4:	af04      	add	r7, sp, #16

	HAL_I2C_Mem_Read(&hi2c3, 0x3D,0x03,1,MAGZ, 6, COMPASS_TIMEOUT);
 80014e6:	2301      	movs	r3, #1
 80014e8:	9302      	str	r3, [sp, #8]
 80014ea:	2306      	movs	r3, #6
 80014ec:	9301      	str	r3, [sp, #4]
 80014ee:	4b25      	ldr	r3, [pc, #148]	; (8001584 <compass_read+0xa4>)
 80014f0:	9300      	str	r3, [sp, #0]
 80014f2:	2301      	movs	r3, #1
 80014f4:	2203      	movs	r2, #3
 80014f6:	213d      	movs	r1, #61	; 0x3d
 80014f8:	4823      	ldr	r0, [pc, #140]	; (8001588 <compass_read+0xa8>)
 80014fa:	f008 fb5b 	bl	8009bb4 <HAL_I2C_Mem_Read>
	MPU6050_Read_All_Benim(&hi2c2, &MPU6050_1);
 80014fe:	4923      	ldr	r1, [pc, #140]	; (800158c <compass_read+0xac>)
 8001500:	4823      	ldr	r0, [pc, #140]	; (8001590 <compass_read+0xb0>)
 8001502:	f002 ff75 	bl	80043f0 <MPU6050_Read_All_Benim>
	MagX=MAGZ[0]<<8|MAGZ[1];
 8001506:	4b1f      	ldr	r3, [pc, #124]	; (8001584 <compass_read+0xa4>)
 8001508:	781b      	ldrb	r3, [r3, #0]
 800150a:	021b      	lsls	r3, r3, #8
 800150c:	b21a      	sxth	r2, r3
 800150e:	4b1d      	ldr	r3, [pc, #116]	; (8001584 <compass_read+0xa4>)
 8001510:	785b      	ldrb	r3, [r3, #1]
 8001512:	b21b      	sxth	r3, r3
 8001514:	4313      	orrs	r3, r2
 8001516:	b21a      	sxth	r2, r3
 8001518:	4b1e      	ldr	r3, [pc, #120]	; (8001594 <compass_read+0xb4>)
 800151a:	801a      	strh	r2, [r3, #0]
	MagZ=MAGZ[2]<<8|MAGZ[3];
 800151c:	4b19      	ldr	r3, [pc, #100]	; (8001584 <compass_read+0xa4>)
 800151e:	789b      	ldrb	r3, [r3, #2]
 8001520:	021b      	lsls	r3, r3, #8
 8001522:	b21a      	sxth	r2, r3
 8001524:	4b17      	ldr	r3, [pc, #92]	; (8001584 <compass_read+0xa4>)
 8001526:	78db      	ldrb	r3, [r3, #3]
 8001528:	b21b      	sxth	r3, r3
 800152a:	4313      	orrs	r3, r2
 800152c:	b21a      	sxth	r2, r3
 800152e:	4b1a      	ldr	r3, [pc, #104]	; (8001598 <compass_read+0xb8>)
 8001530:	801a      	strh	r2, [r3, #0]
	MagY=MAGZ[4]<<8|MAGZ[5];
 8001532:	4b14      	ldr	r3, [pc, #80]	; (8001584 <compass_read+0xa4>)
 8001534:	791b      	ldrb	r3, [r3, #4]
 8001536:	021b      	lsls	r3, r3, #8
 8001538:	b21a      	sxth	r2, r3
 800153a:	4b12      	ldr	r3, [pc, #72]	; (8001584 <compass_read+0xa4>)
 800153c:	795b      	ldrb	r3, [r3, #5]
 800153e:	b21b      	sxth	r3, r3
 8001540:	4313      	orrs	r3, r2
 8001542:	b21a      	sxth	r2, r3
 8001544:	4b15      	ldr	r3, [pc, #84]	; (800159c <compass_read+0xbc>)
 8001546:	801a      	strh	r2, [r3, #0]
	MagY=-1*MagY;
 8001548:	4b14      	ldr	r3, [pc, #80]	; (800159c <compass_read+0xbc>)
 800154a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800154e:	b29b      	uxth	r3, r3
 8001550:	425b      	negs	r3, r3
 8001552:	b29b      	uxth	r3, r3
 8001554:	b21a      	sxth	r2, r3
 8001556:	4b11      	ldr	r3, [pc, #68]	; (800159c <compass_read+0xbc>)
 8001558:	801a      	strh	r2, [r3, #0]
	MagX=-1*MagX;
 800155a:	4b0e      	ldr	r3, [pc, #56]	; (8001594 <compass_read+0xb4>)
 800155c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001560:	b29b      	uxth	r3, r3
 8001562:	425b      	negs	r3, r3
 8001564:	b29b      	uxth	r3, r3
 8001566:	b21a      	sxth	r2, r3
 8001568:	4b0a      	ldr	r3, [pc, #40]	; (8001594 <compass_read+0xb4>)
 800156a:	801a      	strh	r2, [r3, #0]
	MagZ=-1*MagZ;
 800156c:	4b0a      	ldr	r3, [pc, #40]	; (8001598 <compass_read+0xb8>)
 800156e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001572:	b29b      	uxth	r3, r3
 8001574:	425b      	negs	r3, r3
 8001576:	b29b      	uxth	r3, r3
 8001578:	b21a      	sxth	r2, r3
 800157a:	4b07      	ldr	r3, [pc, #28]	; (8001598 <compass_read+0xb8>)
 800157c:	801a      	strh	r2, [r3, #0]

}
 800157e:	bf00      	nop
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}
 8001584:	20000a38 	.word	0x20000a38
 8001588:	20000398 	.word	0x20000398
 800158c:	200007e8 	.word	0x200007e8
 8001590:	20000344 	.word	0x20000344
 8001594:	20000a20 	.word	0x20000a20
 8001598:	20000a24 	.word	0x20000a24
 800159c:	20000a22 	.word	0x20000a22

080015a0 <compas_calibrate>:
void compas_calibrate()
{
 80015a0:	b580      	push	{r7, lr}
 80015a2:	b082      	sub	sp, #8
 80015a4:	af00      	add	r7, sp, #0
	int compass_calibrated=0;
 80015a6:	2300      	movs	r3, #0
 80015a8:	607b      	str	r3, [r7, #4]
	compass_read();
 80015aa:	f7ff ff99 	bl	80014e0 <compass_read>
	compass_cal_values[0] = MagX;
 80015ae:	4b99      	ldr	r3, [pc, #612]	; (8001814 <compas_calibrate+0x274>)
 80015b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80015b4:	4b98      	ldr	r3, [pc, #608]	; (8001818 <compas_calibrate+0x278>)
 80015b6:	801a      	strh	r2, [r3, #0]
	compass_cal_values[1] = MagX;
 80015b8:	4b96      	ldr	r3, [pc, #600]	; (8001814 <compas_calibrate+0x274>)
 80015ba:	f9b3 2000 	ldrsh.w	r2, [r3]
 80015be:	4b96      	ldr	r3, [pc, #600]	; (8001818 <compas_calibrate+0x278>)
 80015c0:	805a      	strh	r2, [r3, #2]
	compass_cal_values[2] = MagY;
 80015c2:	4b96      	ldr	r3, [pc, #600]	; (800181c <compas_calibrate+0x27c>)
 80015c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80015c8:	4b93      	ldr	r3, [pc, #588]	; (8001818 <compas_calibrate+0x278>)
 80015ca:	809a      	strh	r2, [r3, #4]
	compass_cal_values[3] = MagY;
 80015cc:	4b93      	ldr	r3, [pc, #588]	; (800181c <compas_calibrate+0x27c>)
 80015ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 80015d2:	4b91      	ldr	r3, [pc, #580]	; (8001818 <compas_calibrate+0x278>)
 80015d4:	80da      	strh	r2, [r3, #6]
	compass_cal_values[4] = MagZ;
 80015d6:	4b92      	ldr	r3, [pc, #584]	; (8001820 <compas_calibrate+0x280>)
 80015d8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80015dc:	4b8e      	ldr	r3, [pc, #568]	; (8001818 <compas_calibrate+0x278>)
 80015de:	811a      	strh	r2, [r3, #8]
	compass_cal_values[5] = MagZ;
 80015e0:	4b8f      	ldr	r3, [pc, #572]	; (8001820 <compas_calibrate+0x280>)
 80015e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80015e6:	4b8c      	ldr	r3, [pc, #560]	; (8001818 <compas_calibrate+0x278>)
 80015e8:	815a      	strh	r2, [r3, #10]

	while(compass_calibrated==0){
 80015ea:	e105      	b.n	80017f8 <compas_calibrate+0x258>
		compass_read();
 80015ec:	f7ff ff78 	bl	80014e0 <compass_read>

		if (MagX < compass_cal_values[0])compass_cal_values[0] = MagX;
 80015f0:	4b89      	ldr	r3, [pc, #548]	; (8001818 <compas_calibrate+0x278>)
 80015f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80015f6:	4b87      	ldr	r3, [pc, #540]	; (8001814 <compas_calibrate+0x274>)
 80015f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80015fc:	429a      	cmp	r2, r3
 80015fe:	dd04      	ble.n	800160a <compas_calibrate+0x6a>
 8001600:	4b84      	ldr	r3, [pc, #528]	; (8001814 <compas_calibrate+0x274>)
 8001602:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001606:	4b84      	ldr	r3, [pc, #528]	; (8001818 <compas_calibrate+0x278>)
 8001608:	801a      	strh	r2, [r3, #0]
		if (MagX > compass_cal_values[1])compass_cal_values[1] = MagX;
 800160a:	4b83      	ldr	r3, [pc, #524]	; (8001818 <compas_calibrate+0x278>)
 800160c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8001610:	4b80      	ldr	r3, [pc, #512]	; (8001814 <compas_calibrate+0x274>)
 8001612:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001616:	429a      	cmp	r2, r3
 8001618:	da04      	bge.n	8001624 <compas_calibrate+0x84>
 800161a:	4b7e      	ldr	r3, [pc, #504]	; (8001814 <compas_calibrate+0x274>)
 800161c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001620:	4b7d      	ldr	r3, [pc, #500]	; (8001818 <compas_calibrate+0x278>)
 8001622:	805a      	strh	r2, [r3, #2]
		if (MagY < compass_cal_values[2])compass_cal_values[2] = MagY;
 8001624:	4b7c      	ldr	r3, [pc, #496]	; (8001818 <compas_calibrate+0x278>)
 8001626:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800162a:	4b7c      	ldr	r3, [pc, #496]	; (800181c <compas_calibrate+0x27c>)
 800162c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001630:	429a      	cmp	r2, r3
 8001632:	dd04      	ble.n	800163e <compas_calibrate+0x9e>
 8001634:	4b79      	ldr	r3, [pc, #484]	; (800181c <compas_calibrate+0x27c>)
 8001636:	f9b3 2000 	ldrsh.w	r2, [r3]
 800163a:	4b77      	ldr	r3, [pc, #476]	; (8001818 <compas_calibrate+0x278>)
 800163c:	809a      	strh	r2, [r3, #4]
		if (MagY > compass_cal_values[3])compass_cal_values[3] = MagY;
 800163e:	4b76      	ldr	r3, [pc, #472]	; (8001818 <compas_calibrate+0x278>)
 8001640:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8001644:	4b75      	ldr	r3, [pc, #468]	; (800181c <compas_calibrate+0x27c>)
 8001646:	f9b3 3000 	ldrsh.w	r3, [r3]
 800164a:	429a      	cmp	r2, r3
 800164c:	da04      	bge.n	8001658 <compas_calibrate+0xb8>
 800164e:	4b73      	ldr	r3, [pc, #460]	; (800181c <compas_calibrate+0x27c>)
 8001650:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001654:	4b70      	ldr	r3, [pc, #448]	; (8001818 <compas_calibrate+0x278>)
 8001656:	80da      	strh	r2, [r3, #6]
		if (MagZ < compass_cal_values[4])compass_cal_values[4] = MagZ;
 8001658:	4b6f      	ldr	r3, [pc, #444]	; (8001818 <compas_calibrate+0x278>)
 800165a:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 800165e:	4b70      	ldr	r3, [pc, #448]	; (8001820 <compas_calibrate+0x280>)
 8001660:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001664:	429a      	cmp	r2, r3
 8001666:	dd04      	ble.n	8001672 <compas_calibrate+0xd2>
 8001668:	4b6d      	ldr	r3, [pc, #436]	; (8001820 <compas_calibrate+0x280>)
 800166a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800166e:	4b6a      	ldr	r3, [pc, #424]	; (8001818 <compas_calibrate+0x278>)
 8001670:	811a      	strh	r2, [r3, #8]
		if (MagZ > compass_cal_values[5])compass_cal_values[5] = MagZ;
 8001672:	4b69      	ldr	r3, [pc, #420]	; (8001818 <compas_calibrate+0x278>)
 8001674:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8001678:	4b69      	ldr	r3, [pc, #420]	; (8001820 <compas_calibrate+0x280>)
 800167a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800167e:	429a      	cmp	r2, r3
 8001680:	da04      	bge.n	800168c <compas_calibrate+0xec>
 8001682:	4b67      	ldr	r3, [pc, #412]	; (8001820 <compas_calibrate+0x280>)
 8001684:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001688:	4b63      	ldr	r3, [pc, #396]	; (8001818 <compas_calibrate+0x278>)
 800168a:	815a      	strh	r2, [r3, #10]

		Xsf =(float)(compass_cal_values[1]-compass_cal_values[0])/2.0;
 800168c:	4b62      	ldr	r3, [pc, #392]	; (8001818 <compas_calibrate+0x278>)
 800168e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001692:	461a      	mov	r2, r3
 8001694:	4b60      	ldr	r3, [pc, #384]	; (8001818 <compas_calibrate+0x278>)
 8001696:	f9b3 3000 	ldrsh.w	r3, [r3]
 800169a:	1ad3      	subs	r3, r2, r3
 800169c:	ee07 3a90 	vmov	s15, r3
 80016a0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016a4:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 80016a8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80016ac:	4b5d      	ldr	r3, [pc, #372]	; (8001824 <compas_calibrate+0x284>)
 80016ae:	edc3 7a00 	vstr	s15, [r3]
		Ysf =(float)(compass_cal_values[3]-compass_cal_values[2])/2.0;
 80016b2:	4b59      	ldr	r3, [pc, #356]	; (8001818 <compas_calibrate+0x278>)
 80016b4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80016b8:	461a      	mov	r2, r3
 80016ba:	4b57      	ldr	r3, [pc, #348]	; (8001818 <compas_calibrate+0x278>)
 80016bc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80016c0:	1ad3      	subs	r3, r2, r3
 80016c2:	ee07 3a90 	vmov	s15, r3
 80016c6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016ca:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 80016ce:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80016d2:	4b55      	ldr	r3, [pc, #340]	; (8001828 <compas_calibrate+0x288>)
 80016d4:	edc3 7a00 	vstr	s15, [r3]
		Zsf =(float)(compass_cal_values[5]-compass_cal_values[4])/2.0;
 80016d8:	4b4f      	ldr	r3, [pc, #316]	; (8001818 <compas_calibrate+0x278>)
 80016da:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80016de:	461a      	mov	r2, r3
 80016e0:	4b4d      	ldr	r3, [pc, #308]	; (8001818 <compas_calibrate+0x278>)
 80016e2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80016e6:	1ad3      	subs	r3, r2, r3
 80016e8:	ee07 3a90 	vmov	s15, r3
 80016ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016f0:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 80016f4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80016f8:	4b4c      	ldr	r3, [pc, #304]	; (800182c <compas_calibrate+0x28c>)
 80016fa:	edc3 7a00 	vstr	s15, [r3]
		Xoff =(float)(compass_cal_values[1]+compass_cal_values[0])/2.0;
 80016fe:	4b46      	ldr	r3, [pc, #280]	; (8001818 <compas_calibrate+0x278>)
 8001700:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001704:	461a      	mov	r2, r3
 8001706:	4b44      	ldr	r3, [pc, #272]	; (8001818 <compas_calibrate+0x278>)
 8001708:	f9b3 3000 	ldrsh.w	r3, [r3]
 800170c:	4413      	add	r3, r2
 800170e:	ee07 3a90 	vmov	s15, r3
 8001712:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001716:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 800171a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800171e:	4b44      	ldr	r3, [pc, #272]	; (8001830 <compas_calibrate+0x290>)
 8001720:	edc3 7a00 	vstr	s15, [r3]
		Yoff =(float)(compass_cal_values[3]+compass_cal_values[2])/2.0;
 8001724:	4b3c      	ldr	r3, [pc, #240]	; (8001818 <compas_calibrate+0x278>)
 8001726:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800172a:	461a      	mov	r2, r3
 800172c:	4b3a      	ldr	r3, [pc, #232]	; (8001818 <compas_calibrate+0x278>)
 800172e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001732:	4413      	add	r3, r2
 8001734:	ee07 3a90 	vmov	s15, r3
 8001738:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800173c:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8001740:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001744:	4b3b      	ldr	r3, [pc, #236]	; (8001834 <compas_calibrate+0x294>)
 8001746:	edc3 7a00 	vstr	s15, [r3]
		Zoff =(float)(compass_cal_values[4]+compass_cal_values[5])/2.0;
 800174a:	4b33      	ldr	r3, [pc, #204]	; (8001818 <compas_calibrate+0x278>)
 800174c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001750:	461a      	mov	r2, r3
 8001752:	4b31      	ldr	r3, [pc, #196]	; (8001818 <compas_calibrate+0x278>)
 8001754:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8001758:	4413      	add	r3, r2
 800175a:	ee07 3a90 	vmov	s15, r3
 800175e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001762:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8001766:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800176a:	4b33      	ldr	r3, [pc, #204]	; (8001838 <compas_calibrate+0x298>)
 800176c:	edc3 7a00 	vstr	s15, [r3]
		Sf_Toplam=(float)(Xsf+Ysf+Zsf)/3.0;
 8001770:	4b2c      	ldr	r3, [pc, #176]	; (8001824 <compas_calibrate+0x284>)
 8001772:	ed93 7a00 	vldr	s14, [r3]
 8001776:	4b2c      	ldr	r3, [pc, #176]	; (8001828 <compas_calibrate+0x288>)
 8001778:	edd3 7a00 	vldr	s15, [r3]
 800177c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001780:	4b2a      	ldr	r3, [pc, #168]	; (800182c <compas_calibrate+0x28c>)
 8001782:	edd3 7a00 	vldr	s15, [r3]
 8001786:	ee37 7a27 	vadd.f32	s14, s14, s15
 800178a:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 800178e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001792:	4b2a      	ldr	r3, [pc, #168]	; (800183c <compas_calibrate+0x29c>)
 8001794:	edc3 7a00 	vstr	s15, [r3]
		Xsf=Sf_Toplam/Xsf;
 8001798:	4b28      	ldr	r3, [pc, #160]	; (800183c <compas_calibrate+0x29c>)
 800179a:	edd3 6a00 	vldr	s13, [r3]
 800179e:	4b21      	ldr	r3, [pc, #132]	; (8001824 <compas_calibrate+0x284>)
 80017a0:	ed93 7a00 	vldr	s14, [r3]
 80017a4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80017a8:	4b1e      	ldr	r3, [pc, #120]	; (8001824 <compas_calibrate+0x284>)
 80017aa:	edc3 7a00 	vstr	s15, [r3]
		Ysf=Sf_Toplam/Ysf;
 80017ae:	4b23      	ldr	r3, [pc, #140]	; (800183c <compas_calibrate+0x29c>)
 80017b0:	edd3 6a00 	vldr	s13, [r3]
 80017b4:	4b1c      	ldr	r3, [pc, #112]	; (8001828 <compas_calibrate+0x288>)
 80017b6:	ed93 7a00 	vldr	s14, [r3]
 80017ba:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80017be:	4b1a      	ldr	r3, [pc, #104]	; (8001828 <compas_calibrate+0x288>)
 80017c0:	edc3 7a00 	vstr	s15, [r3]
		Zsf=Sf_Toplam/Zsf;
 80017c4:	4b1d      	ldr	r3, [pc, #116]	; (800183c <compas_calibrate+0x29c>)
 80017c6:	edd3 6a00 	vldr	s13, [r3]
 80017ca:	4b18      	ldr	r3, [pc, #96]	; (800182c <compas_calibrate+0x28c>)
 80017cc:	ed93 7a00 	vldr	s14, [r3]
 80017d0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80017d4:	4b15      	ldr	r3, [pc, #84]	; (800182c <compas_calibrate+0x28c>)
 80017d6:	edc3 7a00 	vstr	s15, [r3]

		if(!decode_receiver()){
 80017da:	f004 fbb1 	bl	8005f40 <decode_receiver>
 80017de:	4603      	mov	r3, r0
 80017e0:	2b00      	cmp	r3, #0
 80017e2:	d109      	bne.n	80017f8 <compas_calibrate+0x258>
			if(_channels[1]<200 && _channels[0]<200) compass_calibrated=1;
 80017e4:	4b16      	ldr	r3, [pc, #88]	; (8001840 <compas_calibrate+0x2a0>)
 80017e6:	685b      	ldr	r3, [r3, #4]
 80017e8:	2bc7      	cmp	r3, #199	; 0xc7
 80017ea:	dc05      	bgt.n	80017f8 <compas_calibrate+0x258>
 80017ec:	4b14      	ldr	r3, [pc, #80]	; (8001840 <compas_calibrate+0x2a0>)
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	2bc7      	cmp	r3, #199	; 0xc7
 80017f2:	dc01      	bgt.n	80017f8 <compas_calibrate+0x258>
 80017f4:	2301      	movs	r3, #1
 80017f6:	607b      	str	r3, [r7, #4]
	while(compass_calibrated==0){
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	2b00      	cmp	r3, #0
 80017fc:	f43f aef6 	beq.w	80015ec <compas_calibrate+0x4c>
		}
	}

	fill_calibration_buffer_compass();
 8001800:	f001 f868 	bl	80028d4 <fill_calibration_buffer_compass>
	flash_write_calib_data_compass(calibration_buffer_float,6);
 8001804:	2106      	movs	r1, #6
 8001806:	480f      	ldr	r0, [pc, #60]	; (8001844 <compas_calibrate+0x2a4>)
 8001808:	f000 ffd2 	bl	80027b0 <flash_write_calib_data_compass>
}
 800180c:	bf00      	nop
 800180e:	3708      	adds	r7, #8
 8001810:	46bd      	mov	sp, r7
 8001812:	bd80      	pop	{r7, pc}
 8001814:	20000a20 	.word	0x20000a20
 8001818:	20000a40 	.word	0x20000a40
 800181c:	20000a22 	.word	0x20000a22
 8001820:	20000a24 	.word	0x20000a24
 8001824:	20000a4c 	.word	0x20000a4c
 8001828:	20000a50 	.word	0x20000a50
 800182c:	20000a5c 	.word	0x20000a5c
 8001830:	20000a54 	.word	0x20000a54
 8001834:	20000a58 	.word	0x20000a58
 8001838:	20000a60 	.word	0x20000a60
 800183c:	200001cc 	.word	0x200001cc
 8001840:	20000910 	.word	0x20000910
 8001844:	20000944 	.word	0x20000944

08001848 <compass_connect>:
int compass_connect(){
 8001848:	b580      	push	{r7, lr}
 800184a:	b086      	sub	sp, #24
 800184c:	af04      	add	r7, sp, #16
	while(HAL_I2C_Mem_Read(&hi2c3, 0x3D,0x00,1,data_compass, 13, 100)!=HAL_OK){
 800184e:	e001      	b.n	8001854 <compass_connect+0xc>
		i2c_disconnected_compass();
 8001850:	f7ff fbac 	bl	8000fac <i2c_disconnected_compass>
	while(HAL_I2C_Mem_Read(&hi2c3, 0x3D,0x00,1,data_compass, 13, 100)!=HAL_OK){
 8001854:	2364      	movs	r3, #100	; 0x64
 8001856:	9302      	str	r3, [sp, #8]
 8001858:	230d      	movs	r3, #13
 800185a:	9301      	str	r3, [sp, #4]
 800185c:	4b17      	ldr	r3, [pc, #92]	; (80018bc <compass_connect+0x74>)
 800185e:	9300      	str	r3, [sp, #0]
 8001860:	2301      	movs	r3, #1
 8001862:	2200      	movs	r2, #0
 8001864:	213d      	movs	r1, #61	; 0x3d
 8001866:	4816      	ldr	r0, [pc, #88]	; (80018c0 <compass_connect+0x78>)
 8001868:	f008 f9a4 	bl	8009bb4 <HAL_I2C_Mem_Read>
 800186c:	4603      	mov	r3, r0
 800186e:	2b00      	cmp	r3, #0
 8001870:	d1ee      	bne.n	8001850 <compass_connect+0x8>
	}
	uint8_t data=0;
 8001872:	2300      	movs	r3, #0
 8001874:	71fb      	strb	r3, [r7, #7]

	data|=0b110<<3;
 8001876:	79fb      	ldrb	r3, [r7, #7]
 8001878:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 800187c:	b2db      	uxtb	r3, r3
 800187e:	71fb      	strb	r3, [r7, #7]
	HAL_I2C_Mem_Write(&hi2c3, 0x3C,0x00,1,&data, 1, COMPASS_TIMEOUT);
 8001880:	2301      	movs	r3, #1
 8001882:	9302      	str	r3, [sp, #8]
 8001884:	2301      	movs	r3, #1
 8001886:	9301      	str	r3, [sp, #4]
 8001888:	1dfb      	adds	r3, r7, #7
 800188a:	9300      	str	r3, [sp, #0]
 800188c:	2301      	movs	r3, #1
 800188e:	2200      	movs	r2, #0
 8001890:	213c      	movs	r1, #60	; 0x3c
 8001892:	480b      	ldr	r0, [pc, #44]	; (80018c0 <compass_connect+0x78>)
 8001894:	f008 f894 	bl	80099c0 <HAL_I2C_Mem_Write>
	HAL_I2C_Mem_Read(&hi2c3, 0x3D,0x00,1,data_compass, 13, COMPASS_TIMEOUT);
 8001898:	2301      	movs	r3, #1
 800189a:	9302      	str	r3, [sp, #8]
 800189c:	230d      	movs	r3, #13
 800189e:	9301      	str	r3, [sp, #4]
 80018a0:	4b06      	ldr	r3, [pc, #24]	; (80018bc <compass_connect+0x74>)
 80018a2:	9300      	str	r3, [sp, #0]
 80018a4:	2301      	movs	r3, #1
 80018a6:	2200      	movs	r2, #0
 80018a8:	213d      	movs	r1, #61	; 0x3d
 80018aa:	4805      	ldr	r0, [pc, #20]	; (80018c0 <compass_connect+0x78>)
 80018ac:	f008 f982 	bl	8009bb4 <HAL_I2C_Mem_Read>
	return 0;
 80018b0:	2300      	movs	r3, #0

}
 80018b2:	4618      	mov	r0, r3
 80018b4:	3708      	adds	r7, #8
 80018b6:	46bd      	mov	sp, r7
 80018b8:	bd80      	pop	{r7, pc}
 80018ba:	bf00      	nop
 80018bc:	20000a28 	.word	0x20000a28
 80018c0:	20000398 	.word	0x20000398

080018c4 <E220_init_declare_pins>:
extern UART_HandleTypeDef huart7;

void E220_init_declare_pins(struct LoRa_Handler *LoRa, GPIO_TypeDef *M_GPIO_PORT,
GPIO_TypeDef *AUX_GPIO_PORT, uint16_t M0_PIN,uint16_t M1_PIN,uint16_t MAUX_PIN,
UART_HandleTypeDef *uart_handler)
{
 80018c4:	b480      	push	{r7}
 80018c6:	b085      	sub	sp, #20
 80018c8:	af00      	add	r7, sp, #0
 80018ca:	60f8      	str	r0, [r7, #12]
 80018cc:	60b9      	str	r1, [r7, #8]
 80018ce:	607a      	str	r2, [r7, #4]
 80018d0:	807b      	strh	r3, [r7, #2]
	LoRa->uart_handler=uart_handler;
 80018d2:	68fb      	ldr	r3, [r7, #12]
 80018d4:	6a3a      	ldr	r2, [r7, #32]
 80018d6:	601a      	str	r2, [r3, #0]
	LoRa->AUX_GPIO_PORT=AUX_GPIO_PORT;
 80018d8:	68fb      	ldr	r3, [r7, #12]
 80018da:	687a      	ldr	r2, [r7, #4]
 80018dc:	609a      	str	r2, [r3, #8]
	LoRa->M_GPIO_PORT=M_GPIO_PORT;
 80018de:	68fb      	ldr	r3, [r7, #12]
 80018e0:	68ba      	ldr	r2, [r7, #8]
 80018e2:	605a      	str	r2, [r3, #4]
	LoRa->M0_PIN=M0_PIN;
 80018e4:	68fb      	ldr	r3, [r7, #12]
 80018e6:	887a      	ldrh	r2, [r7, #2]
 80018e8:	819a      	strh	r2, [r3, #12]
	LoRa->M1_PIN=M1_PIN;
 80018ea:	68fb      	ldr	r3, [r7, #12]
 80018ec:	8b3a      	ldrh	r2, [r7, #24]
 80018ee:	81da      	strh	r2, [r3, #14]
	LoRa->MAUX_PIN=MAUX_PIN;
 80018f0:	68fb      	ldr	r3, [r7, #12]
 80018f2:	8bba      	ldrh	r2, [r7, #28]
 80018f4:	821a      	strh	r2, [r3, #16]
}
 80018f6:	bf00      	nop
 80018f8:	3714      	adds	r7, #20
 80018fa:	46bd      	mov	sp, r7
 80018fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001900:	4770      	bx	lr

08001902 <E220_enter_normal_mode>:


}

int8_t E220_enter_normal_mode(struct LoRa_Handler *LoRa)
{
 8001902:	b580      	push	{r7, lr}
 8001904:	b082      	sub	sp, #8
 8001906:	af00      	add	r7, sp, #0
 8001908:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(LoRa->M_GPIO_PORT, LoRa->M0_PIN, RESET);
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	6858      	ldr	r0, [r3, #4]
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	899b      	ldrh	r3, [r3, #12]
 8001912:	2200      	movs	r2, #0
 8001914:	4619      	mov	r1, r3
 8001916:	f007 fb87 	bl	8009028 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LoRa->M_GPIO_PORT, LoRa->M1_PIN, RESET);
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	6858      	ldr	r0, [r3, #4]
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	89db      	ldrh	r3, [r3, #14]
 8001922:	2200      	movs	r2, #0
 8001924:	4619      	mov	r1, r3
 8001926:	f007 fb7f 	bl	8009028 <HAL_GPIO_WritePin>
	while(HAL_GPIO_ReadPin(LoRa->AUX_GPIO_PORT, LoRa->MAUX_PIN)==0);
 800192a:	bf00      	nop
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	689a      	ldr	r2, [r3, #8]
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	8a1b      	ldrh	r3, [r3, #16]
 8001934:	4619      	mov	r1, r3
 8001936:	4610      	mov	r0, r2
 8001938:	f007 fb5e 	bl	8008ff8 <HAL_GPIO_ReadPin>
 800193c:	4603      	mov	r3, r0
 800193e:	2b00      	cmp	r3, #0
 8001940:	d0f4      	beq.n	800192c <E220_enter_normal_mode+0x2a>
	return 1;
 8001942:	2301      	movs	r3, #1


}
 8001944:	4618      	mov	r0, r3
 8001946:	3708      	adds	r7, #8
 8001948:	46bd      	mov	sp, r7
 800194a:	bd80      	pop	{r7, pc}

0800194c <E220_transmit_payload_DMA>:
	HAL_UART_Transmit(LoRa->uart_handler,data ,datasize, 100);
	return 1;
}

int8_t E220_transmit_payload_DMA(struct LoRa_Handler *LoRa,uint8_t *data,uint8_t datasize)
{
 800194c:	b580      	push	{r7, lr}
 800194e:	b084      	sub	sp, #16
 8001950:	af00      	add	r7, sp, #0
 8001952:	60f8      	str	r0, [r7, #12]
 8001954:	60b9      	str	r1, [r7, #8]
 8001956:	4613      	mov	r3, r2
 8001958:	71fb      	strb	r3, [r7, #7]
	HAL_UART_Transmit_DMA(LoRa->uart_handler, data, datasize);
 800195a:	68fb      	ldr	r3, [r7, #12]
 800195c:	681b      	ldr	r3, [r3, #0]
 800195e:	79fa      	ldrb	r2, [r7, #7]
 8001960:	b292      	uxth	r2, r2
 8001962:	68b9      	ldr	r1, [r7, #8]
 8001964:	4618      	mov	r0, r3
 8001966:	f00a fcf3 	bl	800c350 <HAL_UART_Transmit_DMA>
	return 1;
 800196a:	2301      	movs	r3, #1
}
 800196c:	4618      	mov	r0, r3
 800196e:	3710      	adds	r7, #16
 8001970:	46bd      	mov	sp, r7
 8001972:	bd80      	pop	{r7, pc}

08001974 <E220_receive_payload_DMA>:
	return 1;

}

int8_t E220_receive_payload_DMA(struct LoRa_Handler *LoRa,uint8_t *data,uint8_t datasize)
{
 8001974:	b580      	push	{r7, lr}
 8001976:	b084      	sub	sp, #16
 8001978:	af00      	add	r7, sp, #0
 800197a:	60f8      	str	r0, [r7, #12]
 800197c:	60b9      	str	r1, [r7, #8]
 800197e:	4613      	mov	r3, r2
 8001980:	71fb      	strb	r3, [r7, #7]
	//while(HAL_GPIO_ReadPin(LoRa->AUX_GPIO_PORT, LoRa->MAUX_PIN)==0);
	HAL_UART_Receive_DMA(LoRa->uart_handler, data, datasize);
 8001982:	68fb      	ldr	r3, [r7, #12]
 8001984:	681b      	ldr	r3, [r3, #0]
 8001986:	79fa      	ldrb	r2, [r7, #7]
 8001988:	b292      	uxth	r2, r2
 800198a:	68b9      	ldr	r1, [r7, #8]
 800198c:	4618      	mov	r0, r3
 800198e:	f00a fd5d 	bl	800c44c <HAL_UART_Receive_DMA>
	return 1;
 8001992:	2301      	movs	r3, #1

}
 8001994:	4618      	mov	r0, r3
 8001996:	3710      	adds	r7, #16
 8001998:	46bd      	mov	sp, r7
 800199a:	bd80      	pop	{r7, pc}

0800199c <i2c_disconnected>:
#include "pwm_esc.h"
#include "receiver.h"

extern I2C_HandleTypeDef hi2c2;
/// this function rescues the hang i2c bus that is connected to imu
void i2c_disconnected(){
 800199c:	b580      	push	{r7, lr}
 800199e:	b082      	sub	sp, #8
 80019a0:	af00      	add	r7, sp, #0
//PF0 and PF1 are corresponding I2C pins (SCL and SDA)
	uint16_t data;
	HAL_I2C_DeInit(&hi2c2);
 80019a2:	481c      	ldr	r0, [pc, #112]	; (8001a14 <i2c_disconnected+0x78>)
 80019a4:	f007 fcb8 	bl	8009318 <HAL_I2C_DeInit>
	data=GPIOF->MODER;
 80019a8:	4b1b      	ldr	r3, [pc, #108]	; (8001a18 <i2c_disconnected+0x7c>)
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	807b      	strh	r3, [r7, #2]
	data= data & ~0b1111;
 80019ae:	887b      	ldrh	r3, [r7, #2]
 80019b0:	f023 030f 	bic.w	r3, r3, #15
 80019b4:	807b      	strh	r3, [r7, #2]
	data= data | 0b0101;
 80019b6:	887b      	ldrh	r3, [r7, #2]
 80019b8:	f043 0305 	orr.w	r3, r3, #5
 80019bc:	807b      	strh	r3, [r7, #2]
	GPIOF->MODER=data;
 80019be:	4a16      	ldr	r2, [pc, #88]	; (8001a18 <i2c_disconnected+0x7c>)
 80019c0:	887b      	ldrh	r3, [r7, #2]
 80019c2:	6013      	str	r3, [r2, #0]


	data=GPIOF->OTYPER;
 80019c4:	4b14      	ldr	r3, [pc, #80]	; (8001a18 <i2c_disconnected+0x7c>)
 80019c6:	685b      	ldr	r3, [r3, #4]
 80019c8:	807b      	strh	r3, [r7, #2]

	data = data & ~0b11;
 80019ca:	887b      	ldrh	r3, [r7, #2]
 80019cc:	f023 0303 	bic.w	r3, r3, #3
 80019d0:	807b      	strh	r3, [r7, #2]
	GPIOF->OTYPER=data;
 80019d2:	4a11      	ldr	r2, [pc, #68]	; (8001a18 <i2c_disconnected+0x7c>)
 80019d4:	887b      	ldrh	r3, [r7, #2]
 80019d6:	6053      	str	r3, [r2, #4]

	data=GPIOF->AFR[0];
 80019d8:	4b0f      	ldr	r3, [pc, #60]	; (8001a18 <i2c_disconnected+0x7c>)
 80019da:	6a1b      	ldr	r3, [r3, #32]
 80019dc:	807b      	strh	r3, [r7, #2]
	data=  data & ~0b11111111;
 80019de:	887b      	ldrh	r3, [r7, #2]
 80019e0:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80019e4:	807b      	strh	r3, [r7, #2]
	GPIOF->AFR[0]=data;
 80019e6:	4a0c      	ldr	r2, [pc, #48]	; (8001a18 <i2c_disconnected+0x7c>)
 80019e8:	887b      	ldrh	r3, [r7, #2]
 80019ea:	6213      	str	r3, [r2, #32]

	for(int i=0;i<14;i++) // either 9 or 14
 80019ec:	2300      	movs	r3, #0
 80019ee:	607b      	str	r3, [r7, #4]
 80019f0:	e006      	b.n	8001a00 <i2c_disconnected+0x64>
	{
		HAL_GPIO_TogglePin(GPIOF, GPIO_PIN_1);
 80019f2:	2102      	movs	r1, #2
 80019f4:	4808      	ldr	r0, [pc, #32]	; (8001a18 <i2c_disconnected+0x7c>)
 80019f6:	f007 fb30 	bl	800905a <HAL_GPIO_TogglePin>
	for(int i=0;i<14;i++) // either 9 or 14
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	3301      	adds	r3, #1
 80019fe:	607b      	str	r3, [r7, #4]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	2b0d      	cmp	r3, #13
 8001a04:	ddf5      	ble.n	80019f2 <i2c_disconnected+0x56>
	}

	  HAL_I2C_Init(&hi2c2);
 8001a06:	4803      	ldr	r0, [pc, #12]	; (8001a14 <i2c_disconnected+0x78>)
 8001a08:	f007 fb42 	bl	8009090 <HAL_I2C_Init>
}
 8001a0c:	bf00      	nop
 8001a0e:	3708      	adds	r7, #8
 8001a10:	46bd      	mov	sp, r7
 8001a12:	bd80      	pop	{r7, pc}
 8001a14:	20000344 	.word	0x20000344
 8001a18:	40021400 	.word	0x40021400

08001a1c <failsafe_handler>:
// worst scenerio, shut the motors and wait for watchdog to reset the mcu
void failsafe_handler()
{
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	af00      	add	r7, sp, #0
	stop_motors();
 8001a20:	f004 fa32 	bl	8005e88 <stop_motors>
	while(1);
 8001a24:	e7fe      	b.n	8001a24 <failsafe_handler+0x8>
	...

08001a28 <red_led_on>:

}
void red_led_on(){
 8001a28:	b580      	push	{r7, lr}
 8001a2a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, LED3_Pin, SET);
 8001a2c:	2201      	movs	r2, #1
 8001a2e:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001a32:	4802      	ldr	r0, [pc, #8]	; (8001a3c <red_led_on+0x14>)
 8001a34:	f007 faf8 	bl	8009028 <HAL_GPIO_WritePin>
}
 8001a38:	bf00      	nop
 8001a3a:	bd80      	pop	{r7, pc}
 8001a3c:	40020400 	.word	0x40020400

08001a40 <red_led_off>:
void red_led_off(){
 8001a40:	b580      	push	{r7, lr}
 8001a42:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, LED3_Pin, RESET);
 8001a44:	2200      	movs	r2, #0
 8001a46:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001a4a:	4802      	ldr	r0, [pc, #8]	; (8001a54 <red_led_off+0x14>)
 8001a4c:	f007 faec 	bl	8009028 <HAL_GPIO_WritePin>
}
 8001a50:	bf00      	nop
 8001a52:	bd80      	pop	{r7, pc}
 8001a54:	40020400 	.word	0x40020400

08001a58 <green_led_on>:
void green_led_on(){
 8001a58:	b580      	push	{r7, lr}
 8001a5a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, LED1_Pin, SET);
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	2101      	movs	r1, #1
 8001a60:	4802      	ldr	r0, [pc, #8]	; (8001a6c <green_led_on+0x14>)
 8001a62:	f007 fae1 	bl	8009028 <HAL_GPIO_WritePin>
}
 8001a66:	bf00      	nop
 8001a68:	bd80      	pop	{r7, pc}
 8001a6a:	bf00      	nop
 8001a6c:	40020400 	.word	0x40020400

08001a70 <gps_decode>:


}
*/

int gps_decode(uint8_t *message,uint32_t*latitude,uint32_t *longitude){
 8001a70:	b480      	push	{r7}
 8001a72:	b085      	sub	sp, #20
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	60f8      	str	r0, [r7, #12]
 8001a78:	60b9      	str	r1, [r7, #8]
 8001a7a:	607a      	str	r2, [r7, #4]

	*latitude=(message[30])+(message[31]<<8)+(message[32]<<16)+(message[33]<<24);
 8001a7c:	68fb      	ldr	r3, [r7, #12]
 8001a7e:	331e      	adds	r3, #30
 8001a80:	781b      	ldrb	r3, [r3, #0]
 8001a82:	461a      	mov	r2, r3
 8001a84:	68fb      	ldr	r3, [r7, #12]
 8001a86:	331f      	adds	r3, #31
 8001a88:	781b      	ldrb	r3, [r3, #0]
 8001a8a:	021b      	lsls	r3, r3, #8
 8001a8c:	441a      	add	r2, r3
 8001a8e:	68fb      	ldr	r3, [r7, #12]
 8001a90:	3320      	adds	r3, #32
 8001a92:	781b      	ldrb	r3, [r3, #0]
 8001a94:	041b      	lsls	r3, r3, #16
 8001a96:	441a      	add	r2, r3
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	3321      	adds	r3, #33	; 0x21
 8001a9c:	781b      	ldrb	r3, [r3, #0]
 8001a9e:	061b      	lsls	r3, r3, #24
 8001aa0:	4413      	add	r3, r2
 8001aa2:	461a      	mov	r2, r3
 8001aa4:	68bb      	ldr	r3, [r7, #8]
 8001aa6:	601a      	str	r2, [r3, #0]
	*longitude=(message[34])+(message[35]<<8)+(message[36]<<16)+(message[37]<<24);
 8001aa8:	68fb      	ldr	r3, [r7, #12]
 8001aaa:	3322      	adds	r3, #34	; 0x22
 8001aac:	781b      	ldrb	r3, [r3, #0]
 8001aae:	461a      	mov	r2, r3
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	3323      	adds	r3, #35	; 0x23
 8001ab4:	781b      	ldrb	r3, [r3, #0]
 8001ab6:	021b      	lsls	r3, r3, #8
 8001ab8:	441a      	add	r2, r3
 8001aba:	68fb      	ldr	r3, [r7, #12]
 8001abc:	3324      	adds	r3, #36	; 0x24
 8001abe:	781b      	ldrb	r3, [r3, #0]
 8001ac0:	041b      	lsls	r3, r3, #16
 8001ac2:	441a      	add	r2, r3
 8001ac4:	68fb      	ldr	r3, [r7, #12]
 8001ac6:	3325      	adds	r3, #37	; 0x25
 8001ac8:	781b      	ldrb	r3, [r3, #0]
 8001aca:	061b      	lsls	r3, r3, #24
 8001acc:	4413      	add	r3, r2
 8001ace:	461a      	mov	r2, r3
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	601a      	str	r2, [r3, #0]

	if(message[0]==181 && message[1]==98){  // ARE THE FIRST TWO BYTES CORRECT ?
 8001ad4:	68fb      	ldr	r3, [r7, #12]
 8001ad6:	781b      	ldrb	r3, [r3, #0]
 8001ad8:	2bb5      	cmp	r3, #181	; 0xb5
 8001ada:	d10d      	bne.n	8001af8 <gps_decode+0x88>
 8001adc:	68fb      	ldr	r3, [r7, #12]
 8001ade:	3301      	adds	r3, #1
 8001ae0:	781b      	ldrb	r3, [r3, #0]
 8001ae2:	2b62      	cmp	r3, #98	; 0x62
 8001ae4:	d108      	bne.n	8001af8 <gps_decode+0x88>
		if(message[26]==3){  // IF SO, IS GPS FIXED ?
 8001ae6:	68fb      	ldr	r3, [r7, #12]
 8001ae8:	331a      	adds	r3, #26
 8001aea:	781b      	ldrb	r3, [r3, #0]
 8001aec:	2b03      	cmp	r3, #3
 8001aee:	d101      	bne.n	8001af4 <gps_decode+0x84>
			return 0;
 8001af0:	2300      	movs	r3, #0
 8001af2:	e001      	b.n	8001af8 <gps_decode+0x88>
		}
		else
			return 1;
 8001af4:	2301      	movs	r3, #1
 8001af6:	e7ff      	b.n	8001af8 <gps_decode+0x88>
	}

}
 8001af8:	4618      	mov	r0, r3
 8001afa:	3714      	adds	r7, #20
 8001afc:	46bd      	mov	sp, r7
 8001afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b02:	4770      	bx	lr

08001b04 <gps_init>:


int gps_init(){  // connect to gps and set parameters accordingly
 8001b04:	b580      	push	{r7, lr}
 8001b06:	af00      	add	r7, sp, #0
	HAL_UART_Receive_DMA(&huart6, (uint8_t *)gps_buffer,100);
 8001b08:	2264      	movs	r2, #100	; 0x64
 8001b0a:	494c      	ldr	r1, [pc, #304]	; (8001c3c <gps_init+0x138>)
 8001b0c:	484c      	ldr	r0, [pc, #304]	; (8001c40 <gps_init+0x13c>)
 8001b0e:	f00a fc9d 	bl	800c44c <HAL_UART_Receive_DMA>
	HAL_Delay(100);
 8001b12:	2064      	movs	r0, #100	; 0x64
 8001b14:	f005 fc10 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, disable_GLL, sizeof(disable_GLL), 100);
 8001b18:	2364      	movs	r3, #100	; 0x64
 8001b1a:	220b      	movs	r2, #11
 8001b1c:	4949      	ldr	r1, [pc, #292]	; (8001c44 <gps_init+0x140>)
 8001b1e:	4848      	ldr	r0, [pc, #288]	; (8001c40 <gps_init+0x13c>)
 8001b20:	f00a fb84 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001b24:	2005      	movs	r0, #5
 8001b26:	f005 fc07 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, disable_RMC, sizeof(disable_RMC), 100);
 8001b2a:	2364      	movs	r3, #100	; 0x64
 8001b2c:	220b      	movs	r2, #11
 8001b2e:	4946      	ldr	r1, [pc, #280]	; (8001c48 <gps_init+0x144>)
 8001b30:	4843      	ldr	r0, [pc, #268]	; (8001c40 <gps_init+0x13c>)
 8001b32:	f00a fb7b 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001b36:	2005      	movs	r0, #5
 8001b38:	f005 fbfe 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, disable_GSV, sizeof(disable_GSV), 100);
 8001b3c:	2364      	movs	r3, #100	; 0x64
 8001b3e:	220b      	movs	r2, #11
 8001b40:	4942      	ldr	r1, [pc, #264]	; (8001c4c <gps_init+0x148>)
 8001b42:	483f      	ldr	r0, [pc, #252]	; (8001c40 <gps_init+0x13c>)
 8001b44:	f00a fb72 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001b48:	2005      	movs	r0, #5
 8001b4a:	f005 fbf5 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, disable_GSA, sizeof(disable_GSA), 100);
 8001b4e:	2364      	movs	r3, #100	; 0x64
 8001b50:	220b      	movs	r2, #11
 8001b52:	493f      	ldr	r1, [pc, #252]	; (8001c50 <gps_init+0x14c>)
 8001b54:	483a      	ldr	r0, [pc, #232]	; (8001c40 <gps_init+0x13c>)
 8001b56:	f00a fb69 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001b5a:	2005      	movs	r0, #5
 8001b5c:	f005 fbec 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, disable_VTG, sizeof(disable_VTG), 100);
 8001b60:	2364      	movs	r3, #100	; 0x64
 8001b62:	220b      	movs	r2, #11
 8001b64:	493b      	ldr	r1, [pc, #236]	; (8001c54 <gps_init+0x150>)
 8001b66:	4836      	ldr	r0, [pc, #216]	; (8001c40 <gps_init+0x13c>)
 8001b68:	f00a fb60 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001b6c:	2005      	movs	r0, #5
 8001b6e:	f005 fbe3 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, disable_GGA, sizeof(disable_GGA), 100);
 8001b72:	2364      	movs	r3, #100	; 0x64
 8001b74:	220b      	movs	r2, #11
 8001b76:	4938      	ldr	r1, [pc, #224]	; (8001c58 <gps_init+0x154>)
 8001b78:	4831      	ldr	r0, [pc, #196]	; (8001c40 <gps_init+0x13c>)
 8001b7a:	f00a fb57 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001b7e:	2005      	movs	r0, #5
 8001b80:	f005 fbda 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, HZ_10, sizeof(HZ_10), 100);
 8001b84:	2364      	movs	r3, #100	; 0x64
 8001b86:	220e      	movs	r2, #14
 8001b88:	4934      	ldr	r1, [pc, #208]	; (8001c5c <gps_init+0x158>)
 8001b8a:	482d      	ldr	r0, [pc, #180]	; (8001c40 <gps_init+0x13c>)
 8001b8c:	f00a fb4e 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001b90:	2005      	movs	r0, #5
 8001b92:	f005 fbd1 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, enable_UBX, sizeof(enable_UBX), 100);
 8001b96:	2364      	movs	r3, #100	; 0x64
 8001b98:	220b      	movs	r2, #11
 8001b9a:	4931      	ldr	r1, [pc, #196]	; (8001c60 <gps_init+0x15c>)
 8001b9c:	4828      	ldr	r0, [pc, #160]	; (8001c40 <gps_init+0x13c>)
 8001b9e:	f00a fb45 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(5);
 8001ba2:	2005      	movs	r0, #5
 8001ba4:	f005 fbc8 	bl	8007338 <HAL_Delay>
	HAL_UART_Transmit(&huart6, uart_115200, sizeof(uart_115200), 100);
 8001ba8:	2364      	movs	r3, #100	; 0x64
 8001baa:	221c      	movs	r2, #28
 8001bac:	492d      	ldr	r1, [pc, #180]	; (8001c64 <gps_init+0x160>)
 8001bae:	4824      	ldr	r0, [pc, #144]	; (8001c40 <gps_init+0x13c>)
 8001bb0:	f00a fb3c 	bl	800c22c <HAL_UART_Transmit>
	HAL_Delay(300);
 8001bb4:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001bb8:	f005 fbbe 	bl	8007338 <HAL_Delay>
	huart6.Init.BaudRate=115200;
 8001bbc:	4b20      	ldr	r3, [pc, #128]	; (8001c40 <gps_init+0x13c>)
 8001bbe:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001bc2:	605a      	str	r2, [r3, #4]
	HAL_UART_Init(&huart6);
 8001bc4:	481e      	ldr	r0, [pc, #120]	; (8001c40 <gps_init+0x13c>)
 8001bc6:	f00a fab5 	bl	800c134 <HAL_UART_Init>
	HAL_UART_Receive_DMA(&huart6, (uint8_t *)gps_buffer,100);
 8001bca:	2264      	movs	r2, #100	; 0x64
 8001bcc:	491b      	ldr	r1, [pc, #108]	; (8001c3c <gps_init+0x138>)
 8001bce:	481c      	ldr	r0, [pc, #112]	; (8001c40 <gps_init+0x13c>)
 8001bd0:	f00a fc3c 	bl	800c44c <HAL_UART_Receive_DMA>
	HAL_Delay(5);
 8001bd4:	2005      	movs	r0, #5
 8001bd6:	f005 fbaf 	bl	8007338 <HAL_Delay>
	while(gps_connected<999999){  // wait until frame fits into 100 bytes buffer
 8001bda:	e027      	b.n	8001c2c <gps_init+0x128>
		if(gps_buffer[0]!=181){
 8001bdc:	4b17      	ldr	r3, [pc, #92]	; (8001c3c <gps_init+0x138>)
 8001bde:	781b      	ldrb	r3, [r3, #0]
 8001be0:	2bb5      	cmp	r3, #181	; 0xb5
 8001be2:	d01a      	beq.n	8001c1a <gps_init+0x116>
			HAL_UART_DMAStop(&huart6);
 8001be4:	4816      	ldr	r0, [pc, #88]	; (8001c40 <gps_init+0x13c>)
 8001be6:	f00a fc61 	bl	800c4ac <HAL_UART_DMAStop>
			HAL_Delay(10);
 8001bea:	200a      	movs	r0, #10
 8001bec:	f005 fba4 	bl	8007338 <HAL_Delay>
			HAL_UART_DeInit(&huart6);
 8001bf0:	4813      	ldr	r0, [pc, #76]	; (8001c40 <gps_init+0x13c>)
 8001bf2:	f00a faec 	bl	800c1ce <HAL_UART_DeInit>
			HAL_Delay(10);
 8001bf6:	200a      	movs	r0, #10
 8001bf8:	f005 fb9e 	bl	8007338 <HAL_Delay>
			HAL_UART_Init(&huart6);
 8001bfc:	4810      	ldr	r0, [pc, #64]	; (8001c40 <gps_init+0x13c>)
 8001bfe:	f00a fa99 	bl	800c134 <HAL_UART_Init>
			HAL_Delay(10);
 8001c02:	200a      	movs	r0, #10
 8001c04:	f005 fb98 	bl	8007338 <HAL_Delay>
			HAL_UART_Receive_DMA(&huart6, (uint8_t *)gps_buffer,100);
 8001c08:	2264      	movs	r2, #100	; 0x64
 8001c0a:	490c      	ldr	r1, [pc, #48]	; (8001c3c <gps_init+0x138>)
 8001c0c:	480c      	ldr	r0, [pc, #48]	; (8001c40 <gps_init+0x13c>)
 8001c0e:	f00a fc1d 	bl	800c44c <HAL_UART_Receive_DMA>
			HAL_Delay(5);
 8001c12:	2005      	movs	r0, #5
 8001c14:	f005 fb90 	bl	8007338 <HAL_Delay>
 8001c18:	e008      	b.n	8001c2c <gps_init+0x128>
			//gps_connected=0;
		}
		else if (gps_buffer[0]==181){
 8001c1a:	4b08      	ldr	r3, [pc, #32]	; (8001c3c <gps_init+0x138>)
 8001c1c:	781b      	ldrb	r3, [r3, #0]
 8001c1e:	2bb5      	cmp	r3, #181	; 0xb5
 8001c20:	d104      	bne.n	8001c2c <gps_init+0x128>
			gps_connected+=1;
 8001c22:	4b11      	ldr	r3, [pc, #68]	; (8001c68 <gps_init+0x164>)
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	3301      	adds	r3, #1
 8001c28:	4a0f      	ldr	r2, [pc, #60]	; (8001c68 <gps_init+0x164>)
 8001c2a:	6013      	str	r3, [r2, #0]
	while(gps_connected<999999){  // wait until frame fits into 100 bytes buffer
 8001c2c:	4b0e      	ldr	r3, [pc, #56]	; (8001c68 <gps_init+0x164>)
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	4a0e      	ldr	r2, [pc, #56]	; (8001c6c <gps_init+0x168>)
 8001c32:	4293      	cmp	r3, r2
 8001c34:	ddd2      	ble.n	8001bdc <gps_init+0xd8>
		}
	}
	return 0;
 8001c36:	2300      	movs	r3, #0
}
 8001c38:	4618      	mov	r0, r3
 8001c3a:	bd80      	pop	{r7, pc}
 8001c3c:	200009bc 	.word	0x200009bc
 8001c40:	2000059c 	.word	0x2000059c
 8001c44:	20000000 	.word	0x20000000
 8001c48:	20000024 	.word	0x20000024
 8001c4c:	20000018 	.word	0x20000018
 8001c50:	2000000c 	.word	0x2000000c
 8001c54:	20000030 	.word	0x20000030
 8001c58:	2000003c 	.word	0x2000003c
 8001c5c:	20000070 	.word	0x20000070
 8001c60:	20000048 	.word	0x20000048
 8001c64:	20000054 	.word	0x20000054
 8001c68:	20000a64 	.word	0x20000a64
 8001c6c:	000f423e 	.word	0x000f423e

08001c70 <is_gps_connected>:

int is_gps_connected(){ // additional frame check function
 8001c70:	b580      	push	{r7, lr}
 8001c72:	af00      	add	r7, sp, #0
						// this function is needed because after init process of gps
						// it sends acknowledge of init process functions that will cause frame sync error
	gps_connected=0;
 8001c74:	4b19      	ldr	r3, [pc, #100]	; (8001cdc <is_gps_connected+0x6c>)
 8001c76:	2200      	movs	r2, #0
 8001c78:	601a      	str	r2, [r3, #0]
	while(gps_connected<99999){
 8001c7a:	e027      	b.n	8001ccc <is_gps_connected+0x5c>
			if(gps_buffer[0]!=181){
 8001c7c:	4b18      	ldr	r3, [pc, #96]	; (8001ce0 <is_gps_connected+0x70>)
 8001c7e:	781b      	ldrb	r3, [r3, #0]
 8001c80:	2bb5      	cmp	r3, #181	; 0xb5
 8001c82:	d01a      	beq.n	8001cba <is_gps_connected+0x4a>
				HAL_UART_DMAStop(&huart6);
 8001c84:	4817      	ldr	r0, [pc, #92]	; (8001ce4 <is_gps_connected+0x74>)
 8001c86:	f00a fc11 	bl	800c4ac <HAL_UART_DMAStop>
				HAL_Delay(10);
 8001c8a:	200a      	movs	r0, #10
 8001c8c:	f005 fb54 	bl	8007338 <HAL_Delay>
				HAL_UART_DeInit(&huart6);
 8001c90:	4814      	ldr	r0, [pc, #80]	; (8001ce4 <is_gps_connected+0x74>)
 8001c92:	f00a fa9c 	bl	800c1ce <HAL_UART_DeInit>
				HAL_Delay(10);
 8001c96:	200a      	movs	r0, #10
 8001c98:	f005 fb4e 	bl	8007338 <HAL_Delay>
				HAL_UART_Init(&huart6);
 8001c9c:	4811      	ldr	r0, [pc, #68]	; (8001ce4 <is_gps_connected+0x74>)
 8001c9e:	f00a fa49 	bl	800c134 <HAL_UART_Init>
				HAL_Delay(10);
 8001ca2:	200a      	movs	r0, #10
 8001ca4:	f005 fb48 	bl	8007338 <HAL_Delay>
				HAL_UART_Receive_DMA(&huart6, (uint8_t *)gps_buffer,100);
 8001ca8:	2264      	movs	r2, #100	; 0x64
 8001caa:	490d      	ldr	r1, [pc, #52]	; (8001ce0 <is_gps_connected+0x70>)
 8001cac:	480d      	ldr	r0, [pc, #52]	; (8001ce4 <is_gps_connected+0x74>)
 8001cae:	f00a fbcd 	bl	800c44c <HAL_UART_Receive_DMA>
				HAL_Delay(5);
 8001cb2:	2005      	movs	r0, #5
 8001cb4:	f005 fb40 	bl	8007338 <HAL_Delay>
 8001cb8:	e008      	b.n	8001ccc <is_gps_connected+0x5c>
				//gps_connected=0;
			}
			else if (gps_buffer[0]==181){
 8001cba:	4b09      	ldr	r3, [pc, #36]	; (8001ce0 <is_gps_connected+0x70>)
 8001cbc:	781b      	ldrb	r3, [r3, #0]
 8001cbe:	2bb5      	cmp	r3, #181	; 0xb5
 8001cc0:	d104      	bne.n	8001ccc <is_gps_connected+0x5c>
				gps_connected+=1;
 8001cc2:	4b06      	ldr	r3, [pc, #24]	; (8001cdc <is_gps_connected+0x6c>)
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	3301      	adds	r3, #1
 8001cc8:	4a04      	ldr	r2, [pc, #16]	; (8001cdc <is_gps_connected+0x6c>)
 8001cca:	6013      	str	r3, [r2, #0]
	while(gps_connected<99999){
 8001ccc:	4b03      	ldr	r3, [pc, #12]	; (8001cdc <is_gps_connected+0x6c>)
 8001cce:	681b      	ldr	r3, [r3, #0]
 8001cd0:	4a05      	ldr	r2, [pc, #20]	; (8001ce8 <is_gps_connected+0x78>)
 8001cd2:	4293      	cmp	r3, r2
 8001cd4:	ddd2      	ble.n	8001c7c <is_gps_connected+0xc>
			}
		}
		return 0;
 8001cd6:	2300      	movs	r3, #0

}
 8001cd8:	4618      	mov	r0, r3
 8001cda:	bd80      	pop	{r7, pc}
 8001cdc:	20000a64 	.word	0x20000a64
 8001ce0:	200009bc 	.word	0x200009bc
 8001ce4:	2000059c 	.word	0x2000059c
 8001ce8:	0001869e 	.word	0x0001869e

08001cec <MS5611_Initilize>:
extern float baro_filter_input_coeff[4];
uint8_t pressure_ready,temp_ready;
uint8_t temp_requested,pressure_requested;
#define BARO_TIMEOUT 1

void MS5611_Initilize(){
 8001cec:	b580      	push	{r7, lr}
 8001cee:	af00      	add	r7, sp, #0
	  MS5611_Reset();
 8001cf0:	f000 f806 	bl	8001d00 <MS5611_Reset>
	  MS5611_ReadPROM();
 8001cf4:	f000 f81c 	bl	8001d30 <MS5611_ReadPROM>
	  //HAL_Delay(10);
	  //MS5611_ReadTemperature();
	  //MS5611_Request_Pressure();
	  //HAL_Delay(10);
	  //MS5611_ReadAltitude2();
	  MS5611_setMyGround();
 8001cf8:	f000 f938 	bl	8001f6c <MS5611_setMyGround>
}
 8001cfc:	bf00      	nop
 8001cfe:	bd80      	pop	{r7, pc}

08001d00 <MS5611_Reset>:

void MS5611_Reset(){
 8001d00:	b580      	push	{r7, lr}
 8001d02:	b082      	sub	sp, #8
 8001d04:	af02      	add	r7, sp, #8

	// Send the command to reset the sensor
	tx_buf[0] = 0x1E;
 8001d06:	4b08      	ldr	r3, [pc, #32]	; (8001d28 <MS5611_Reset+0x28>)
 8001d08:	221e      	movs	r2, #30
 8001d0a:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001d0c:	2301      	movs	r3, #1
 8001d0e:	9300      	str	r3, [sp, #0]
 8001d10:	2301      	movs	r3, #1
 8001d12:	4a05      	ldr	r2, [pc, #20]	; (8001d28 <MS5611_Reset+0x28>)
 8001d14:	21ee      	movs	r1, #238	; 0xee
 8001d16:	4805      	ldr	r0, [pc, #20]	; (8001d2c <MS5611_Reset+0x2c>)
 8001d18:	f007 fb2e 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_Delay(3); // min 2.8ms beklemek zorunda reset atarsan
 8001d1c:	2003      	movs	r0, #3
 8001d1e:	f005 fb0b 	bl	8007338 <HAL_Delay>

}
 8001d22:	bf00      	nop
 8001d24:	46bd      	mov	sp, r7
 8001d26:	bd80      	pop	{r7, pc}
 8001d28:	200001d0 	.word	0x200001d0
 8001d2c:	200002f0 	.word	0x200002f0

08001d30 <MS5611_ReadPROM>:

void MS5611_StopCommunication(){
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
}

void MS5611_ReadPROM(){
 8001d30:	b580      	push	{r7, lr}
 8001d32:	b082      	sub	sp, #8
 8001d34:	af02      	add	r7, sp, #8
    // Send the command to read the PROM coefficients

	// ne oldugunu bilmediğim
	tx_buf[0] = 0xA0;
 8001d36:	4b89      	ldr	r3, [pc, #548]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001d38:	22a0      	movs	r2, #160	; 0xa0
 8001d3a:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001d3c:	2301      	movs	r3, #1
 8001d3e:	9300      	str	r3, [sp, #0]
 8001d40:	2301      	movs	r3, #1
 8001d42:	4a86      	ldr	r2, [pc, #536]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001d44:	21ee      	movs	r1, #238	; 0xee
 8001d46:	4886      	ldr	r0, [pc, #536]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001d48:	f007 fb16 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001d4c:	2301      	movs	r3, #1
 8001d4e:	9300      	str	r3, [sp, #0]
 8001d50:	2302      	movs	r3, #2
 8001d52:	4a84      	ldr	r2, [pc, #528]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001d54:	21ee      	movs	r1, #238	; 0xee
 8001d56:	4882      	ldr	r0, [pc, #520]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001d58:	f007 fc0c 	bl	8009574 <HAL_I2C_Master_Receive>
	GY63.C[0]=(rx_buf[0] << 8) | rx_buf[1];
 8001d5c:	4b81      	ldr	r3, [pc, #516]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001d5e:	781b      	ldrb	r3, [r3, #0]
 8001d60:	021b      	lsls	r3, r3, #8
 8001d62:	b21a      	sxth	r2, r3
 8001d64:	4b7f      	ldr	r3, [pc, #508]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001d66:	785b      	ldrb	r3, [r3, #1]
 8001d68:	b21b      	sxth	r3, r3
 8001d6a:	4313      	orrs	r3, r2
 8001d6c:	b21b      	sxth	r3, r3
 8001d6e:	b29a      	uxth	r2, r3
 8001d70:	4b7d      	ldr	r3, [pc, #500]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001d72:	801a      	strh	r2, [r3, #0]
	HAL_Delay(10);
 8001d74:	200a      	movs	r0, #10
 8001d76:	f005 fadf 	bl	8007338 <HAL_Delay>

	// PRESSURE SENSİTİVİTY (SENST1)
    tx_buf[0] = 0xA2;
 8001d7a:	4b78      	ldr	r3, [pc, #480]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001d7c:	22a2      	movs	r2, #162	; 0xa2
 8001d7e:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001d80:	2301      	movs	r3, #1
 8001d82:	9300      	str	r3, [sp, #0]
 8001d84:	2301      	movs	r3, #1
 8001d86:	4a75      	ldr	r2, [pc, #468]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001d88:	21ee      	movs	r1, #238	; 0xee
 8001d8a:	4875      	ldr	r0, [pc, #468]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001d8c:	f007 faf4 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001d90:	2301      	movs	r3, #1
 8001d92:	9300      	str	r3, [sp, #0]
 8001d94:	2302      	movs	r3, #2
 8001d96:	4a73      	ldr	r2, [pc, #460]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001d98:	21ee      	movs	r1, #238	; 0xee
 8001d9a:	4871      	ldr	r0, [pc, #452]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001d9c:	f007 fbea 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.C[1]=(rx_buf[0] << 8) | rx_buf[1];
 8001da0:	4b70      	ldr	r3, [pc, #448]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001da2:	781b      	ldrb	r3, [r3, #0]
 8001da4:	021b      	lsls	r3, r3, #8
 8001da6:	b21a      	sxth	r2, r3
 8001da8:	4b6e      	ldr	r3, [pc, #440]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001daa:	785b      	ldrb	r3, [r3, #1]
 8001dac:	b21b      	sxth	r3, r3
 8001dae:	4313      	orrs	r3, r2
 8001db0:	b21b      	sxth	r3, r3
 8001db2:	b29a      	uxth	r2, r3
 8001db4:	4b6c      	ldr	r3, [pc, #432]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001db6:	805a      	strh	r2, [r3, #2]
	HAL_Delay(10);
 8001db8:	200a      	movs	r0, #10
 8001dba:	f005 fabd 	bl	8007338 <HAL_Delay>

    // PRESSURE OFFSET (OFFT1)
    tx_buf[0] = 0xA4;
 8001dbe:	4b67      	ldr	r3, [pc, #412]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001dc0:	22a4      	movs	r2, #164	; 0xa4
 8001dc2:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001dc4:	2301      	movs	r3, #1
 8001dc6:	9300      	str	r3, [sp, #0]
 8001dc8:	2301      	movs	r3, #1
 8001dca:	4a64      	ldr	r2, [pc, #400]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001dcc:	21ee      	movs	r1, #238	; 0xee
 8001dce:	4864      	ldr	r0, [pc, #400]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001dd0:	f007 fad2 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001dd4:	2301      	movs	r3, #1
 8001dd6:	9300      	str	r3, [sp, #0]
 8001dd8:	2302      	movs	r3, #2
 8001dda:	4a62      	ldr	r2, [pc, #392]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001ddc:	21ee      	movs	r1, #238	; 0xee
 8001dde:	4860      	ldr	r0, [pc, #384]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001de0:	f007 fbc8 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.C[2]=(rx_buf[0] << 8) | rx_buf[1];
 8001de4:	4b5f      	ldr	r3, [pc, #380]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001de6:	781b      	ldrb	r3, [r3, #0]
 8001de8:	021b      	lsls	r3, r3, #8
 8001dea:	b21a      	sxth	r2, r3
 8001dec:	4b5d      	ldr	r3, [pc, #372]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001dee:	785b      	ldrb	r3, [r3, #1]
 8001df0:	b21b      	sxth	r3, r3
 8001df2:	4313      	orrs	r3, r2
 8001df4:	b21b      	sxth	r3, r3
 8001df6:	b29a      	uxth	r2, r3
 8001df8:	4b5b      	ldr	r3, [pc, #364]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001dfa:	809a      	strh	r2, [r3, #4]
	HAL_Delay(10);
 8001dfc:	200a      	movs	r0, #10
 8001dfe:	f005 fa9b 	bl	8007338 <HAL_Delay>

    // TCS
    tx_buf[0] = 0xA6;
 8001e02:	4b56      	ldr	r3, [pc, #344]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001e04:	22a6      	movs	r2, #166	; 0xa6
 8001e06:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001e08:	2301      	movs	r3, #1
 8001e0a:	9300      	str	r3, [sp, #0]
 8001e0c:	2301      	movs	r3, #1
 8001e0e:	4a53      	ldr	r2, [pc, #332]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001e10:	21ee      	movs	r1, #238	; 0xee
 8001e12:	4853      	ldr	r0, [pc, #332]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001e14:	f007 fab0 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001e18:	2301      	movs	r3, #1
 8001e1a:	9300      	str	r3, [sp, #0]
 8001e1c:	2302      	movs	r3, #2
 8001e1e:	4a51      	ldr	r2, [pc, #324]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001e20:	21ee      	movs	r1, #238	; 0xee
 8001e22:	484f      	ldr	r0, [pc, #316]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001e24:	f007 fba6 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.C[3]=(rx_buf[0] << 8) | rx_buf[1];
 8001e28:	4b4e      	ldr	r3, [pc, #312]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001e2a:	781b      	ldrb	r3, [r3, #0]
 8001e2c:	021b      	lsls	r3, r3, #8
 8001e2e:	b21a      	sxth	r2, r3
 8001e30:	4b4c      	ldr	r3, [pc, #304]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001e32:	785b      	ldrb	r3, [r3, #1]
 8001e34:	b21b      	sxth	r3, r3
 8001e36:	4313      	orrs	r3, r2
 8001e38:	b21b      	sxth	r3, r3
 8001e3a:	b29a      	uxth	r2, r3
 8001e3c:	4b4a      	ldr	r3, [pc, #296]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001e3e:	80da      	strh	r2, [r3, #6]
	HAL_Delay(10);
 8001e40:	200a      	movs	r0, #10
 8001e42:	f005 fa79 	bl	8007338 <HAL_Delay>

    // TCO
    tx_buf[0] = 0xA8;
 8001e46:	4b45      	ldr	r3, [pc, #276]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001e48:	22a8      	movs	r2, #168	; 0xa8
 8001e4a:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001e4c:	2301      	movs	r3, #1
 8001e4e:	9300      	str	r3, [sp, #0]
 8001e50:	2301      	movs	r3, #1
 8001e52:	4a42      	ldr	r2, [pc, #264]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001e54:	21ee      	movs	r1, #238	; 0xee
 8001e56:	4842      	ldr	r0, [pc, #264]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001e58:	f007 fa8e 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001e5c:	2301      	movs	r3, #1
 8001e5e:	9300      	str	r3, [sp, #0]
 8001e60:	2302      	movs	r3, #2
 8001e62:	4a40      	ldr	r2, [pc, #256]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001e64:	21ee      	movs	r1, #238	; 0xee
 8001e66:	483e      	ldr	r0, [pc, #248]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001e68:	f007 fb84 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.C[4]=(rx_buf[0] << 8) | rx_buf[1];
 8001e6c:	4b3d      	ldr	r3, [pc, #244]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001e6e:	781b      	ldrb	r3, [r3, #0]
 8001e70:	021b      	lsls	r3, r3, #8
 8001e72:	b21a      	sxth	r2, r3
 8001e74:	4b3b      	ldr	r3, [pc, #236]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001e76:	785b      	ldrb	r3, [r3, #1]
 8001e78:	b21b      	sxth	r3, r3
 8001e7a:	4313      	orrs	r3, r2
 8001e7c:	b21b      	sxth	r3, r3
 8001e7e:	b29a      	uxth	r2, r3
 8001e80:	4b39      	ldr	r3, [pc, #228]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001e82:	811a      	strh	r2, [r3, #8]
	HAL_Delay(10);
 8001e84:	200a      	movs	r0, #10
 8001e86:	f005 fa57 	bl	8007338 <HAL_Delay>

    // TREF
    tx_buf[0] = 0xAA;
 8001e8a:	4b34      	ldr	r3, [pc, #208]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001e8c:	22aa      	movs	r2, #170	; 0xaa
 8001e8e:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001e90:	2301      	movs	r3, #1
 8001e92:	9300      	str	r3, [sp, #0]
 8001e94:	2301      	movs	r3, #1
 8001e96:	4a31      	ldr	r2, [pc, #196]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001e98:	21ee      	movs	r1, #238	; 0xee
 8001e9a:	4831      	ldr	r0, [pc, #196]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001e9c:	f007 fa6c 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001ea0:	2301      	movs	r3, #1
 8001ea2:	9300      	str	r3, [sp, #0]
 8001ea4:	2302      	movs	r3, #2
 8001ea6:	4a2f      	ldr	r2, [pc, #188]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001ea8:	21ee      	movs	r1, #238	; 0xee
 8001eaa:	482d      	ldr	r0, [pc, #180]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001eac:	f007 fb62 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.C[5]=(rx_buf[0] << 8) | rx_buf[1];
 8001eb0:	4b2c      	ldr	r3, [pc, #176]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001eb2:	781b      	ldrb	r3, [r3, #0]
 8001eb4:	021b      	lsls	r3, r3, #8
 8001eb6:	b21a      	sxth	r2, r3
 8001eb8:	4b2a      	ldr	r3, [pc, #168]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001eba:	785b      	ldrb	r3, [r3, #1]
 8001ebc:	b21b      	sxth	r3, r3
 8001ebe:	4313      	orrs	r3, r2
 8001ec0:	b21b      	sxth	r3, r3
 8001ec2:	b29a      	uxth	r2, r3
 8001ec4:	4b28      	ldr	r3, [pc, #160]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001ec6:	815a      	strh	r2, [r3, #10]
	HAL_Delay(10);
 8001ec8:	200a      	movs	r0, #10
 8001eca:	f005 fa35 	bl	8007338 <HAL_Delay>

    // TEMPSENS
    tx_buf[0] = 0xAC;
 8001ece:	4b23      	ldr	r3, [pc, #140]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001ed0:	22ac      	movs	r2, #172	; 0xac
 8001ed2:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001ed4:	2301      	movs	r3, #1
 8001ed6:	9300      	str	r3, [sp, #0]
 8001ed8:	2301      	movs	r3, #1
 8001eda:	4a20      	ldr	r2, [pc, #128]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001edc:	21ee      	movs	r1, #238	; 0xee
 8001ede:	4820      	ldr	r0, [pc, #128]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001ee0:	f007 fa4a 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001ee4:	2301      	movs	r3, #1
 8001ee6:	9300      	str	r3, [sp, #0]
 8001ee8:	2302      	movs	r3, #2
 8001eea:	4a1e      	ldr	r2, [pc, #120]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001eec:	21ee      	movs	r1, #238	; 0xee
 8001eee:	481c      	ldr	r0, [pc, #112]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001ef0:	f007 fb40 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.C[6]=(rx_buf[0] << 8) | rx_buf[1];
 8001ef4:	4b1b      	ldr	r3, [pc, #108]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001ef6:	781b      	ldrb	r3, [r3, #0]
 8001ef8:	021b      	lsls	r3, r3, #8
 8001efa:	b21a      	sxth	r2, r3
 8001efc:	4b19      	ldr	r3, [pc, #100]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001efe:	785b      	ldrb	r3, [r3, #1]
 8001f00:	b21b      	sxth	r3, r3
 8001f02:	4313      	orrs	r3, r2
 8001f04:	b21b      	sxth	r3, r3
 8001f06:	b29a      	uxth	r2, r3
 8001f08:	4b17      	ldr	r3, [pc, #92]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001f0a:	819a      	strh	r2, [r3, #12]
	HAL_Delay(10);
 8001f0c:	200a      	movs	r0, #10
 8001f0e:	f005 fa13 	bl	8007338 <HAL_Delay>

    // crc
    tx_buf[0] = 0xAE;
 8001f12:	4b12      	ldr	r3, [pc, #72]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001f14:	22ae      	movs	r2, #174	; 0xae
 8001f16:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001f18:	2301      	movs	r3, #1
 8001f1a:	9300      	str	r3, [sp, #0]
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	4a0f      	ldr	r2, [pc, #60]	; (8001f5c <MS5611_ReadPROM+0x22c>)
 8001f20:	21ee      	movs	r1, #238	; 0xee
 8001f22:	480f      	ldr	r0, [pc, #60]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001f24:	f007 fa28 	bl	8009378 <HAL_I2C_Master_Transmit>
	HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 2, BARO_TIMEOUT);
 8001f28:	2301      	movs	r3, #1
 8001f2a:	9300      	str	r3, [sp, #0]
 8001f2c:	2302      	movs	r3, #2
 8001f2e:	4a0d      	ldr	r2, [pc, #52]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001f30:	21ee      	movs	r1, #238	; 0xee
 8001f32:	480b      	ldr	r0, [pc, #44]	; (8001f60 <MS5611_ReadPROM+0x230>)
 8001f34:	f007 fb1e 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.C[7]=(rx_buf[0] << 8) | rx_buf[1];
 8001f38:	4b0a      	ldr	r3, [pc, #40]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001f3a:	781b      	ldrb	r3, [r3, #0]
 8001f3c:	021b      	lsls	r3, r3, #8
 8001f3e:	b21a      	sxth	r2, r3
 8001f40:	4b08      	ldr	r3, [pc, #32]	; (8001f64 <MS5611_ReadPROM+0x234>)
 8001f42:	785b      	ldrb	r3, [r3, #1]
 8001f44:	b21b      	sxth	r3, r3
 8001f46:	4313      	orrs	r3, r2
 8001f48:	b21b      	sxth	r3, r3
 8001f4a:	b29a      	uxth	r2, r3
 8001f4c:	4b06      	ldr	r3, [pc, #24]	; (8001f68 <MS5611_ReadPROM+0x238>)
 8001f4e:	81da      	strh	r2, [r3, #14]
	HAL_Delay(10);
 8001f50:	200a      	movs	r0, #10
 8001f52:	f005 f9f1 	bl	8007338 <HAL_Delay>

}
 8001f56:	bf00      	nop
 8001f58:	46bd      	mov	sp, r7
 8001f5a:	bd80      	pop	{r7, pc}
 8001f5c:	200001d0 	.word	0x200001d0
 8001f60:	200002f0 	.word	0x200002f0
 8001f64:	200001d4 	.word	0x200001d4
 8001f68:	200001d8 	.word	0x200001d8

08001f6c <MS5611_setMyGround>:
// this function is aimed to be used during the startup in order to get altitude at
// takeoff heigh. However, due to IIR filter phase delay and initial temperature (very low) of the sensor it measures the height wrong...
void MS5611_setMyGround(){
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	b082      	sub	sp, #8
 8001f70:	af00      	add	r7, sp, #0
	int i=0;
 8001f72:	2300      	movs	r3, #0
 8001f74:	607b      	str	r3, [r7, #4]
	float total;
	for(i=0;i<5;i++){
 8001f76:	2300      	movs	r3, #0
 8001f78:	607b      	str	r3, [r7, #4]
 8001f7a:	e019      	b.n	8001fb0 <MS5611_setMyGround+0x44>
		MS5611_Request_Temp();
 8001f7c:	f000 fb2e 	bl	80025dc <MS5611_Request_Temp>
		HAL_Delay(10);
 8001f80:	200a      	movs	r0, #10
 8001f82:	f005 f9d9 	bl	8007338 <HAL_Delay>
		MS5611_ReadTemperature();
 8001f86:	f000 f827 	bl	8001fd8 <MS5611_ReadTemperature>
		MS5611_Request_Pressure();
 8001f8a:	f000 fb11 	bl	80025b0 <MS5611_Request_Pressure>
		HAL_Delay(10);
 8001f8e:	200a      	movs	r0, #10
 8001f90:	f005 f9d2 	bl	8007338 <HAL_Delay>
		MS5611_ReadAltitude2();
 8001f94:	f000 faa8 	bl	80024e8 <MS5611_ReadAltitude2>
		total+=GY63.ALT;
 8001f98:	4b0d      	ldr	r3, [pc, #52]	; (8001fd0 <MS5611_setMyGround+0x64>)
 8001f9a:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8001f9e:	ed97 7a00 	vldr	s14, [r7]
 8001fa2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fa6:	edc7 7a00 	vstr	s15, [r7]
	for(i=0;i<5;i++){
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	3301      	adds	r3, #1
 8001fae:	607b      	str	r3, [r7, #4]
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	2b04      	cmp	r3, #4
 8001fb4:	dde2      	ble.n	8001f7c <MS5611_setMyGround+0x10>
	}
	GY63.GROUND=total/5.0;
 8001fb6:	ed97 7a00 	vldr	s14, [r7]
 8001fba:	eef1 6a04 	vmov.f32	s13, #20	; 0x40a00000  5.0
 8001fbe:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001fc2:	4b03      	ldr	r3, [pc, #12]	; (8001fd0 <MS5611_setMyGround+0x64>)
 8001fc4:	edc3 7a13 	vstr	s15, [r3, #76]	; 0x4c
}
 8001fc8:	bf00      	nop
 8001fca:	3708      	adds	r7, #8
 8001fcc:	46bd      	mov	sp, r7
 8001fce:	bd80      	pop	{r7, pc}
 8001fd0:	200001d8 	.word	0x200001d8
 8001fd4:	00000000 	.word	0x00000000

08001fd8 <MS5611_ReadTemperature>:
void MS5611_ReadTemperature(){
 8001fd8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001fdc:	b082      	sub	sp, #8
 8001fde:	af02      	add	r7, sp, #8
	//HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress, tx_buf, 1, 100);
    //wait 10ms to make data ready	---> BURASI ALGORİTMA HALİNE GELCEK VE SİLİNECEK YMFC32 ALGORİTMASI KULLANILABİLİR
    //HAL_Delay(10);

    // Send the command to read the temperature
    tx_buf[0] = 0x00;
 8001fe0:	4b47      	ldr	r3, [pc, #284]	; (8002100 <MS5611_ReadTemperature+0x128>)
 8001fe2:	2200      	movs	r2, #0
 8001fe4:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 8001fe6:	2301      	movs	r3, #1
 8001fe8:	9300      	str	r3, [sp, #0]
 8001fea:	2301      	movs	r3, #1
 8001fec:	4a44      	ldr	r2, [pc, #272]	; (8002100 <MS5611_ReadTemperature+0x128>)
 8001fee:	21ee      	movs	r1, #238	; 0xee
 8001ff0:	4844      	ldr	r0, [pc, #272]	; (8002104 <MS5611_ReadTemperature+0x12c>)
 8001ff2:	f007 f9c1 	bl	8009378 <HAL_I2C_Master_Transmit>
    HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 3, BARO_TIMEOUT);
 8001ff6:	2301      	movs	r3, #1
 8001ff8:	9300      	str	r3, [sp, #0]
 8001ffa:	2303      	movs	r3, #3
 8001ffc:	4a42      	ldr	r2, [pc, #264]	; (8002108 <MS5611_ReadTemperature+0x130>)
 8001ffe:	21ee      	movs	r1, #238	; 0xee
 8002000:	4840      	ldr	r0, [pc, #256]	; (8002104 <MS5611_ReadTemperature+0x12c>)
 8002002:	f007 fab7 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.D2 = (rx_buf[0] << 16) | (rx_buf[1] << 8) | rx_buf[2];
 8002006:	4b40      	ldr	r3, [pc, #256]	; (8002108 <MS5611_ReadTemperature+0x130>)
 8002008:	781b      	ldrb	r3, [r3, #0]
 800200a:	041a      	lsls	r2, r3, #16
 800200c:	4b3e      	ldr	r3, [pc, #248]	; (8002108 <MS5611_ReadTemperature+0x130>)
 800200e:	785b      	ldrb	r3, [r3, #1]
 8002010:	021b      	lsls	r3, r3, #8
 8002012:	4313      	orrs	r3, r2
 8002014:	4a3c      	ldr	r2, [pc, #240]	; (8002108 <MS5611_ReadTemperature+0x130>)
 8002016:	7892      	ldrb	r2, [r2, #2]
 8002018:	4313      	orrs	r3, r2
 800201a:	461a      	mov	r2, r3
 800201c:	4b3b      	ldr	r3, [pc, #236]	; (800210c <MS5611_ReadTemperature+0x134>)
 800201e:	615a      	str	r2, [r3, #20]

    // Calculate the temperature
    GY63.dT = (GY63.D2 - (GY63.C[5] * 256 ));
 8002020:	4b3a      	ldr	r3, [pc, #232]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002022:	695b      	ldr	r3, [r3, #20]
 8002024:	4a39      	ldr	r2, [pc, #228]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002026:	8952      	ldrh	r2, [r2, #10]
 8002028:	0212      	lsls	r2, r2, #8
 800202a:	1a9b      	subs	r3, r3, r2
 800202c:	461a      	mov	r2, r3
 800202e:	4b37      	ldr	r3, [pc, #220]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002030:	619a      	str	r2, [r3, #24]
    GY63.TEMP = (2000 + (GY63.dT * GY63.C[6]) / 8388608);
 8002032:	4b36      	ldr	r3, [pc, #216]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002034:	699b      	ldr	r3, [r3, #24]
 8002036:	4a35      	ldr	r2, [pc, #212]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002038:	8992      	ldrh	r2, [r2, #12]
 800203a:	fb02 f303 	mul.w	r3, r2, r3
 800203e:	2b00      	cmp	r3, #0
 8002040:	da02      	bge.n	8002048 <MS5611_ReadTemperature+0x70>
 8002042:	4a33      	ldr	r2, [pc, #204]	; (8002110 <MS5611_ReadTemperature+0x138>)
 8002044:	441a      	add	r2, r3
 8002046:	4613      	mov	r3, r2
 8002048:	15db      	asrs	r3, r3, #23
 800204a:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
 800204e:	17da      	asrs	r2, r3, #31
 8002050:	4698      	mov	r8, r3
 8002052:	4691      	mov	r9, r2
 8002054:	4b2d      	ldr	r3, [pc, #180]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002056:	e9c3 8908 	strd	r8, r9, [r3, #32]
    GY63.float_TEMP = GY63.TEMP/100.0;
 800205a:	4b2c      	ldr	r3, [pc, #176]	; (800210c <MS5611_ReadTemperature+0x134>)
 800205c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002060:	4610      	mov	r0, r2
 8002062:	4619      	mov	r1, r3
 8002064:	f7fe fa66 	bl	8000534 <__aeabi_l2d>
 8002068:	f04f 0200 	mov.w	r2, #0
 800206c:	4b29      	ldr	r3, [pc, #164]	; (8002114 <MS5611_ReadTemperature+0x13c>)
 800206e:	f7fe fbb9 	bl	80007e4 <__aeabi_ddiv>
 8002072:	4602      	mov	r2, r0
 8002074:	460b      	mov	r3, r1
 8002076:	4610      	mov	r0, r2
 8002078:	4619      	mov	r1, r3
 800207a:	f7fe fd61 	bl	8000b40 <__aeabi_d2f>
 800207e:	4603      	mov	r3, r0
 8002080:	4a22      	ldr	r2, [pc, #136]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002082:	6293      	str	r3, [r2, #40]	; 0x28
    if(GY63.float_TEMP<20){
 8002084:	4b21      	ldr	r3, [pc, #132]	; (800210c <MS5611_ReadTemperature+0x134>)
 8002086:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 800208a:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 800208e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002096:	d400      	bmi.n	800209a <MS5611_ReadTemperature+0xc2>
    	GY63.T2=pow(GY63.dT,2) /pow(2,31);

    	GY63.TEMP = GY63.TEMP -GY63.T2;

    }
}
 8002098:	e02a      	b.n	80020f0 <MS5611_ReadTemperature+0x118>
    	GY63.T2=pow(GY63.dT,2) /pow(2,31);
 800209a:	4b1c      	ldr	r3, [pc, #112]	; (800210c <MS5611_ReadTemperature+0x134>)
 800209c:	699b      	ldr	r3, [r3, #24]
 800209e:	4618      	mov	r0, r3
 80020a0:	f7fe fa0c 	bl	80004bc <__aeabi_i2d>
 80020a4:	4602      	mov	r2, r0
 80020a6:	460b      	mov	r3, r1
 80020a8:	ed9f 1b13 	vldr	d1, [pc, #76]	; 80020f8 <MS5611_ReadTemperature+0x120>
 80020ac:	ec43 2b10 	vmov	d0, r2, r3
 80020b0:	f00b fcfc 	bl	800daac <pow>
 80020b4:	ec51 0b10 	vmov	r0, r1, d0
 80020b8:	f04f 0200 	mov.w	r2, #0
 80020bc:	4b16      	ldr	r3, [pc, #88]	; (8002118 <MS5611_ReadTemperature+0x140>)
 80020be:	f7fe fb91 	bl	80007e4 <__aeabi_ddiv>
 80020c2:	4602      	mov	r2, r0
 80020c4:	460b      	mov	r3, r1
 80020c6:	4610      	mov	r0, r2
 80020c8:	4619      	mov	r1, r3
 80020ca:	f7fe fda1 	bl	8000c10 <__aeabi_d2lz>
 80020ce:	4602      	mov	r2, r0
 80020d0:	460b      	mov	r3, r1
 80020d2:	490e      	ldr	r1, [pc, #56]	; (800210c <MS5611_ReadTemperature+0x134>)
 80020d4:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
    	GY63.TEMP = GY63.TEMP -GY63.T2;
 80020d8:	4b0c      	ldr	r3, [pc, #48]	; (800210c <MS5611_ReadTemperature+0x134>)
 80020da:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 80020de:	4b0b      	ldr	r3, [pc, #44]	; (800210c <MS5611_ReadTemperature+0x134>)
 80020e0:	e9d3 2314 	ldrd	r2, r3, [r3, #80]	; 0x50
 80020e4:	1a84      	subs	r4, r0, r2
 80020e6:	eb61 0503 	sbc.w	r5, r1, r3
 80020ea:	4b08      	ldr	r3, [pc, #32]	; (800210c <MS5611_ReadTemperature+0x134>)
 80020ec:	e9c3 4508 	strd	r4, r5, [r3, #32]
}
 80020f0:	bf00      	nop
 80020f2:	46bd      	mov	sp, r7
 80020f4:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80020f8:	00000000 	.word	0x00000000
 80020fc:	40000000 	.word	0x40000000
 8002100:	200001d0 	.word	0x200001d0
 8002104:	200002f0 	.word	0x200002f0
 8002108:	200001d4 	.word	0x200001d4
 800210c:	200001d8 	.word	0x200001d8
 8002110:	007fffff 	.word	0x007fffff
 8002114:	40590000 	.word	0x40590000
 8002118:	41e00000 	.word	0x41e00000
 800211c:	00000000 	.word	0x00000000

08002120 <MS5611_ReadPressure>:

void MS5611_ReadPressure(){
 8002120:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002124:	b0a8      	sub	sp, #160	; 0xa0
 8002126:	af02      	add	r7, sp, #8
    //tx_buf[0] = 0x48 ;
	//HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress, tx_buf, 1, 100);
    //HAL_Delay(10);

    // Send the command to read the pressure
    tx_buf[0] = 0x00;
 8002128:	4acd      	ldr	r2, [pc, #820]	; (8002460 <MS5611_ReadPressure+0x340>)
 800212a:	2300      	movs	r3, #0
 800212c:	7013      	strb	r3, [r2, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 800212e:	2301      	movs	r3, #1
 8002130:	9300      	str	r3, [sp, #0]
 8002132:	2301      	movs	r3, #1
 8002134:	4aca      	ldr	r2, [pc, #808]	; (8002460 <MS5611_ReadPressure+0x340>)
 8002136:	21ee      	movs	r1, #238	; 0xee
 8002138:	48ca      	ldr	r0, [pc, #808]	; (8002464 <MS5611_ReadPressure+0x344>)
 800213a:	f007 f91d 	bl	8009378 <HAL_I2C_Master_Transmit>
    HAL_I2C_Master_Receive(&hi2c1, MS5611_SlaveAddress<<1, rx_buf, 3, BARO_TIMEOUT);
 800213e:	2301      	movs	r3, #1
 8002140:	9300      	str	r3, [sp, #0]
 8002142:	2303      	movs	r3, #3
 8002144:	4ac8      	ldr	r2, [pc, #800]	; (8002468 <MS5611_ReadPressure+0x348>)
 8002146:	21ee      	movs	r1, #238	; 0xee
 8002148:	48c6      	ldr	r0, [pc, #792]	; (8002464 <MS5611_ReadPressure+0x344>)
 800214a:	f007 fa13 	bl	8009574 <HAL_I2C_Master_Receive>
    GY63.D1 = (rx_buf[0] << 16) | (rx_buf[1] << 8) | rx_buf[2];
 800214e:	4bc6      	ldr	r3, [pc, #792]	; (8002468 <MS5611_ReadPressure+0x348>)
 8002150:	781b      	ldrb	r3, [r3, #0]
 8002152:	041a      	lsls	r2, r3, #16
 8002154:	4bc4      	ldr	r3, [pc, #784]	; (8002468 <MS5611_ReadPressure+0x348>)
 8002156:	785b      	ldrb	r3, [r3, #1]
 8002158:	021b      	lsls	r3, r3, #8
 800215a:	431a      	orrs	r2, r3
 800215c:	4bc2      	ldr	r3, [pc, #776]	; (8002468 <MS5611_ReadPressure+0x348>)
 800215e:	789b      	ldrb	r3, [r3, #2]
 8002160:	4313      	orrs	r3, r2
 8002162:	461a      	mov	r2, r3
 8002164:	4bc1      	ldr	r3, [pc, #772]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002166:	611a      	str	r2, [r3, #16]

    // Calculate the pressure
    //MS5611_ReadTemperature();

    GY63.OFF = ((int64_t)GY63.C[2] * 65536) + (  ((int64_t)GY63.C[4] * GY63.dT) / 128);				// OFF
 8002168:	4bc0      	ldr	r3, [pc, #768]	; (800246c <MS5611_ReadPressure+0x34c>)
 800216a:	889b      	ldrh	r3, [r3, #4]
 800216c:	b29b      	uxth	r3, r3
 800216e:	2200      	movs	r2, #0
 8002170:	4698      	mov	r8, r3
 8002172:	4691      	mov	r9, r2
 8002174:	f04f 0400 	mov.w	r4, #0
 8002178:	f04f 0500 	mov.w	r5, #0
 800217c:	ea4f 4509 	mov.w	r5, r9, lsl #16
 8002180:	ea45 4518 	orr.w	r5, r5, r8, lsr #16
 8002184:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8002188:	4bb8      	ldr	r3, [pc, #736]	; (800246c <MS5611_ReadPressure+0x34c>)
 800218a:	891b      	ldrh	r3, [r3, #8]
 800218c:	b29b      	uxth	r3, r3
 800218e:	2200      	movs	r2, #0
 8002190:	67bb      	str	r3, [r7, #120]	; 0x78
 8002192:	67fa      	str	r2, [r7, #124]	; 0x7c
 8002194:	4bb5      	ldr	r3, [pc, #724]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002196:	699b      	ldr	r3, [r3, #24]
 8002198:	17da      	asrs	r2, r3, #31
 800219a:	469a      	mov	sl, r3
 800219c:	4693      	mov	fp, r2
 800219e:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	; 0x78
 80021a2:	460b      	mov	r3, r1
 80021a4:	fb0a f203 	mul.w	r2, sl, r3
 80021a8:	4603      	mov	r3, r0
 80021aa:	fb03 f30b 	mul.w	r3, r3, fp
 80021ae:	4413      	add	r3, r2
 80021b0:	4602      	mov	r2, r0
 80021b2:	fba2 120a 	umull	r1, r2, r2, sl
 80021b6:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80021ba:	460a      	mov	r2, r1
 80021bc:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 80021c0:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80021c4:	4413      	add	r3, r2
 80021c6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80021ca:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 80021ce:	2b00      	cmp	r3, #0
 80021d0:	da07      	bge.n	80021e2 <MS5611_ReadPressure+0xc2>
 80021d2:	f112 017f 	adds.w	r1, r2, #127	; 0x7f
 80021d6:	61b9      	str	r1, [r7, #24]
 80021d8:	f143 0300 	adc.w	r3, r3, #0
 80021dc:	61fb      	str	r3, [r7, #28]
 80021de:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80021e2:	f04f 0000 	mov.w	r0, #0
 80021e6:	f04f 0100 	mov.w	r1, #0
 80021ea:	09d0      	lsrs	r0, r2, #7
 80021ec:	ea40 6043 	orr.w	r0, r0, r3, lsl #25
 80021f0:	11d9      	asrs	r1, r3, #7
 80021f2:	4602      	mov	r2, r0
 80021f4:	460b      	mov	r3, r1
 80021f6:	18a1      	adds	r1, r4, r2
 80021f8:	6739      	str	r1, [r7, #112]	; 0x70
 80021fa:	eb45 0303 	adc.w	r3, r5, r3
 80021fe:	677b      	str	r3, [r7, #116]	; 0x74
 8002200:	4b9a      	ldr	r3, [pc, #616]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002202:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 8002206:	e9c3 120e 	strd	r1, r2, [r3, #56]	; 0x38
    GY63.SENS = ((int64_t)GY63.C[1] * 32768) + (((int64_t)GY63.C[3] * GY63.dT) / 256);
 800220a:	4b98      	ldr	r3, [pc, #608]	; (800246c <MS5611_ReadPressure+0x34c>)
 800220c:	885b      	ldrh	r3, [r3, #2]
 800220e:	b29b      	uxth	r3, r3
 8002210:	2200      	movs	r2, #0
 8002212:	66bb      	str	r3, [r7, #104]	; 0x68
 8002214:	66fa      	str	r2, [r7, #108]	; 0x6c
 8002216:	f04f 0400 	mov.w	r4, #0
 800221a:	f04f 0500 	mov.w	r5, #0
 800221e:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 8002222:	4613      	mov	r3, r2
 8002224:	03dd      	lsls	r5, r3, #15
 8002226:	460b      	mov	r3, r1
 8002228:	ea45 4553 	orr.w	r5, r5, r3, lsr #17
 800222c:	460b      	mov	r3, r1
 800222e:	03dc      	lsls	r4, r3, #15
 8002230:	4b8e      	ldr	r3, [pc, #568]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002232:	88db      	ldrh	r3, [r3, #6]
 8002234:	b29b      	uxth	r3, r3
 8002236:	2200      	movs	r2, #0
 8002238:	663b      	str	r3, [r7, #96]	; 0x60
 800223a:	667a      	str	r2, [r7, #100]	; 0x64
 800223c:	4b8b      	ldr	r3, [pc, #556]	; (800246c <MS5611_ReadPressure+0x34c>)
 800223e:	699b      	ldr	r3, [r3, #24]
 8002240:	17da      	asrs	r2, r3, #31
 8002242:	65bb      	str	r3, [r7, #88]	; 0x58
 8002244:	65fa      	str	r2, [r7, #92]	; 0x5c
 8002246:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800224a:	464b      	mov	r3, r9
 800224c:	e9d7 ab16 	ldrd	sl, fp, [r7, #88]	; 0x58
 8002250:	4652      	mov	r2, sl
 8002252:	fb02 f203 	mul.w	r2, r2, r3
 8002256:	465b      	mov	r3, fp
 8002258:	4641      	mov	r1, r8
 800225a:	fb01 f303 	mul.w	r3, r1, r3
 800225e:	4413      	add	r3, r2
 8002260:	4642      	mov	r2, r8
 8002262:	4651      	mov	r1, sl
 8002264:	fba2 1201 	umull	r1, r2, r2, r1
 8002268:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800226c:	460a      	mov	r2, r1
 800226e:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8002272:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8002276:	4413      	add	r3, r2
 8002278:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800227c:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8002280:	2b00      	cmp	r3, #0
 8002282:	da07      	bge.n	8002294 <MS5611_ReadPressure+0x174>
 8002284:	f112 01ff 	adds.w	r1, r2, #255	; 0xff
 8002288:	6139      	str	r1, [r7, #16]
 800228a:	f143 0300 	adc.w	r3, r3, #0
 800228e:	617b      	str	r3, [r7, #20]
 8002290:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8002294:	f04f 0000 	mov.w	r0, #0
 8002298:	f04f 0100 	mov.w	r1, #0
 800229c:	0a10      	lsrs	r0, r2, #8
 800229e:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 80022a2:	1219      	asrs	r1, r3, #8
 80022a4:	4602      	mov	r2, r0
 80022a6:	460b      	mov	r3, r1
 80022a8:	18a1      	adds	r1, r4, r2
 80022aa:	6539      	str	r1, [r7, #80]	; 0x50
 80022ac:	eb45 0303 	adc.w	r3, r5, r3
 80022b0:	657b      	str	r3, [r7, #84]	; 0x54
 80022b2:	4b6e      	ldr	r3, [pc, #440]	; (800246c <MS5611_ReadPressure+0x34c>)
 80022b4:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 80022b8:	e9c3 1210 	strd	r1, r2, [r3, #64]	; 0x40

    if(GY63.float_TEMP<20){
 80022bc:	4b6b      	ldr	r3, [pc, #428]	; (800246c <MS5611_ReadPressure+0x34c>)
 80022be:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80022c2:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 80022c6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80022ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80022ce:	f140 8082 	bpl.w	80023d6 <MS5611_ReadPressure+0x2b6>
    	GY63.OFF2=5* pow((GY63.TEMP - 2000),2)/2;
 80022d2:	4b66      	ldr	r3, [pc, #408]	; (800246c <MS5611_ReadPressure+0x34c>)
 80022d4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80022d8:	f5b2 61fa 	subs.w	r1, r2, #2000	; 0x7d0
 80022dc:	64b9      	str	r1, [r7, #72]	; 0x48
 80022de:	f143 33ff 	adc.w	r3, r3, #4294967295
 80022e2:	64fb      	str	r3, [r7, #76]	; 0x4c
 80022e4:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80022e8:	f7fe f924 	bl	8000534 <__aeabi_l2d>
 80022ec:	4602      	mov	r2, r0
 80022ee:	460b      	mov	r3, r1
 80022f0:	ed9f 1b59 	vldr	d1, [pc, #356]	; 8002458 <MS5611_ReadPressure+0x338>
 80022f4:	ec43 2b10 	vmov	d0, r2, r3
 80022f8:	f00b fbd8 	bl	800daac <pow>
 80022fc:	ec51 0b10 	vmov	r0, r1, d0
 8002300:	f04f 0200 	mov.w	r2, #0
 8002304:	4b5a      	ldr	r3, [pc, #360]	; (8002470 <MS5611_ReadPressure+0x350>)
 8002306:	f7fe f943 	bl	8000590 <__aeabi_dmul>
 800230a:	4602      	mov	r2, r0
 800230c:	460b      	mov	r3, r1
 800230e:	4610      	mov	r0, r2
 8002310:	4619      	mov	r1, r3
 8002312:	f04f 0200 	mov.w	r2, #0
 8002316:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800231a:	f7fe fa63 	bl	80007e4 <__aeabi_ddiv>
 800231e:	4602      	mov	r2, r0
 8002320:	460b      	mov	r3, r1
 8002322:	4610      	mov	r0, r2
 8002324:	4619      	mov	r1, r3
 8002326:	f7fe fc73 	bl	8000c10 <__aeabi_d2lz>
 800232a:	4602      	mov	r2, r0
 800232c:	460b      	mov	r3, r1
 800232e:	494f      	ldr	r1, [pc, #316]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002330:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
    	GY63.SENS2=5 * pow((GY63.TEMP -2000),2)/ 2;
 8002334:	4b4d      	ldr	r3, [pc, #308]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002336:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800233a:	f5b2 61fa 	subs.w	r1, r2, #2000	; 0x7d0
 800233e:	6439      	str	r1, [r7, #64]	; 0x40
 8002340:	f143 33ff 	adc.w	r3, r3, #4294967295
 8002344:	647b      	str	r3, [r7, #68]	; 0x44
 8002346:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800234a:	f7fe f8f3 	bl	8000534 <__aeabi_l2d>
 800234e:	4602      	mov	r2, r0
 8002350:	460b      	mov	r3, r1
 8002352:	ed9f 1b41 	vldr	d1, [pc, #260]	; 8002458 <MS5611_ReadPressure+0x338>
 8002356:	ec43 2b10 	vmov	d0, r2, r3
 800235a:	f00b fba7 	bl	800daac <pow>
 800235e:	ec51 0b10 	vmov	r0, r1, d0
 8002362:	f04f 0200 	mov.w	r2, #0
 8002366:	4b42      	ldr	r3, [pc, #264]	; (8002470 <MS5611_ReadPressure+0x350>)
 8002368:	f7fe f912 	bl	8000590 <__aeabi_dmul>
 800236c:	4602      	mov	r2, r0
 800236e:	460b      	mov	r3, r1
 8002370:	4610      	mov	r0, r2
 8002372:	4619      	mov	r1, r3
 8002374:	f04f 0200 	mov.w	r2, #0
 8002378:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800237c:	f7fe fa32 	bl	80007e4 <__aeabi_ddiv>
 8002380:	4602      	mov	r2, r0
 8002382:	460b      	mov	r3, r1
 8002384:	4610      	mov	r0, r2
 8002386:	4619      	mov	r1, r3
 8002388:	f7fe fc42 	bl	8000c10 <__aeabi_d2lz>
 800238c:	4602      	mov	r2, r0
 800238e:	460b      	mov	r3, r1
 8002390:	4936      	ldr	r1, [pc, #216]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002392:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
    	GY63.OFF= GY63.OFF -GY63.OFF2;
 8002396:	4b35      	ldr	r3, [pc, #212]	; (800246c <MS5611_ReadPressure+0x34c>)
 8002398:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 800239c:	4b33      	ldr	r3, [pc, #204]	; (800246c <MS5611_ReadPressure+0x34c>)
 800239e:	e9d3 2316 	ldrd	r2, r3, [r3, #88]	; 0x58
 80023a2:	1a84      	subs	r4, r0, r2
 80023a4:	63bc      	str	r4, [r7, #56]	; 0x38
 80023a6:	eb61 0303 	sbc.w	r3, r1, r3
 80023aa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80023ac:	4b2f      	ldr	r3, [pc, #188]	; (800246c <MS5611_ReadPressure+0x34c>)
 80023ae:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 80023b2:	e9c3 120e 	strd	r1, r2, [r3, #56]	; 0x38
    	GY63.SENS = GY63.SENS -GY63.SENS2;
 80023b6:	4b2d      	ldr	r3, [pc, #180]	; (800246c <MS5611_ReadPressure+0x34c>)
 80023b8:	e9d3 0110 	ldrd	r0, r1, [r3, #64]	; 0x40
 80023bc:	4b2b      	ldr	r3, [pc, #172]	; (800246c <MS5611_ReadPressure+0x34c>)
 80023be:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 80023c2:	1a84      	subs	r4, r0, r2
 80023c4:	633c      	str	r4, [r7, #48]	; 0x30
 80023c6:	eb61 0303 	sbc.w	r3, r1, r3
 80023ca:	637b      	str	r3, [r7, #52]	; 0x34
 80023cc:	4b27      	ldr	r3, [pc, #156]	; (800246c <MS5611_ReadPressure+0x34c>)
 80023ce:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 80023d2:	e9c3 1210 	strd	r1, r2, [r3, #64]	; 0x40

        }

    GY63.P = ((GY63.D1 * GY63.SENS / 2097152) - GY63.OFF) / 32768;									// P
 80023d6:	4b25      	ldr	r3, [pc, #148]	; (800246c <MS5611_ReadPressure+0x34c>)
 80023d8:	691b      	ldr	r3, [r3, #16]
 80023da:	2200      	movs	r2, #0
 80023dc:	62bb      	str	r3, [r7, #40]	; 0x28
 80023de:	62fa      	str	r2, [r7, #44]	; 0x2c
 80023e0:	4b22      	ldr	r3, [pc, #136]	; (800246c <MS5611_ReadPressure+0x34c>)
 80023e2:	e9d3 2310 	ldrd	r2, r3, [r3, #64]	; 0x40
 80023e6:	e9d7 450a 	ldrd	r4, r5, [r7, #40]	; 0x28
 80023ea:	4629      	mov	r1, r5
 80023ec:	fb02 f001 	mul.w	r0, r2, r1
 80023f0:	4621      	mov	r1, r4
 80023f2:	fb01 f103 	mul.w	r1, r1, r3
 80023f6:	4401      	add	r1, r0
 80023f8:	4620      	mov	r0, r4
 80023fa:	fba0 2302 	umull	r2, r3, r0, r2
 80023fe:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8002402:	4613      	mov	r3, r2
 8002404:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8002408:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800240c:	18cb      	adds	r3, r1, r3
 800240e:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8002412:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8002416:	2b00      	cmp	r3, #0
 8002418:	da07      	bge.n	800242a <MS5611_ReadPressure+0x30a>
 800241a:	4916      	ldr	r1, [pc, #88]	; (8002474 <MS5611_ReadPressure+0x354>)
 800241c:	1851      	adds	r1, r2, r1
 800241e:	60b9      	str	r1, [r7, #8]
 8002420:	f143 0300 	adc.w	r3, r3, #0
 8002424:	60fb      	str	r3, [r7, #12]
 8002426:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800242a:	f04f 0000 	mov.w	r0, #0
 800242e:	f04f 0100 	mov.w	r1, #0
 8002432:	0d50      	lsrs	r0, r2, #21
 8002434:	ea40 20c3 	orr.w	r0, r0, r3, lsl #11
 8002438:	1559      	asrs	r1, r3, #21
 800243a:	4b0c      	ldr	r3, [pc, #48]	; (800246c <MS5611_ReadPressure+0x34c>)
 800243c:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 8002440:	1a84      	subs	r4, r0, r2
 8002442:	623c      	str	r4, [r7, #32]
 8002444:	eb61 0303 	sbc.w	r3, r1, r3
 8002448:	627b      	str	r3, [r7, #36]	; 0x24
 800244a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800244e:	2b00      	cmp	r3, #0
 8002450:	da1b      	bge.n	800248a <MS5611_ReadPressure+0x36a>
 8002452:	e011      	b.n	8002478 <MS5611_ReadPressure+0x358>
 8002454:	f3af 8000 	nop.w
 8002458:	00000000 	.word	0x00000000
 800245c:	40000000 	.word	0x40000000
 8002460:	200001d0 	.word	0x200001d0
 8002464:	200002f0 	.word	0x200002f0
 8002468:	200001d4 	.word	0x200001d4
 800246c:	200001d8 	.word	0x200001d8
 8002470:	40140000 	.word	0x40140000
 8002474:	001fffff 	.word	0x001fffff
 8002478:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800247c:	1851      	adds	r1, r2, r1
 800247e:	6039      	str	r1, [r7, #0]
 8002480:	f143 0300 	adc.w	r3, r3, #0
 8002484:	607b      	str	r3, [r7, #4]
 8002486:	e9d7 2300 	ldrd	r2, r3, [r7]
 800248a:	f04f 0000 	mov.w	r0, #0
 800248e:	f04f 0100 	mov.w	r1, #0
 8002492:	0bd0      	lsrs	r0, r2, #15
 8002494:	ea40 4043 	orr.w	r0, r0, r3, lsl #17
 8002498:	13d9      	asrs	r1, r3, #15
 800249a:	4602      	mov	r2, r0
 800249c:	460b      	mov	r3, r1
 800249e:	4b0f      	ldr	r3, [pc, #60]	; (80024dc <MS5611_ReadPressure+0x3bc>)
 80024a0:	62da      	str	r2, [r3, #44]	; 0x2c
    GY63.P= (int32_t)GY63.P;
 80024a2:	4b0e      	ldr	r3, [pc, #56]	; (80024dc <MS5611_ReadPressure+0x3bc>)
 80024a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024a6:	4a0d      	ldr	r2, [pc, #52]	; (80024dc <MS5611_ReadPressure+0x3bc>)
 80024a8:	62d3      	str	r3, [r2, #44]	; 0x2c
    GY63.float_P=GY63.P/100.0;
 80024aa:	4b0c      	ldr	r3, [pc, #48]	; (80024dc <MS5611_ReadPressure+0x3bc>)
 80024ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024ae:	4618      	mov	r0, r3
 80024b0:	f7fe f804 	bl	80004bc <__aeabi_i2d>
 80024b4:	f04f 0200 	mov.w	r2, #0
 80024b8:	4b09      	ldr	r3, [pc, #36]	; (80024e0 <MS5611_ReadPressure+0x3c0>)
 80024ba:	f7fe f993 	bl	80007e4 <__aeabi_ddiv>
 80024be:	4602      	mov	r2, r0
 80024c0:	460b      	mov	r3, r1
 80024c2:	4610      	mov	r0, r2
 80024c4:	4619      	mov	r1, r3
 80024c6:	f7fe fb3b 	bl	8000b40 <__aeabi_d2f>
 80024ca:	4603      	mov	r3, r0
 80024cc:	4a03      	ldr	r2, [pc, #12]	; (80024dc <MS5611_ReadPressure+0x3bc>)
 80024ce:	6313      	str	r3, [r2, #48]	; 0x30

}
 80024d0:	bf00      	nop
 80024d2:	3798      	adds	r7, #152	; 0x98
 80024d4:	46bd      	mov	sp, r7
 80024d6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80024da:	bf00      	nop
 80024dc:	200001d8 	.word	0x200001d8
 80024e0:	40590000 	.word	0x40590000
 80024e4:	00000000 	.word	0x00000000

080024e8 <MS5611_ReadAltitude2>:
	GY63.ALT = ((1.0 - powf((GY63.float_P / SEA_PRESSURE), 0.1902226)) * 44307.69396);
}


// altitude calculation
void MS5611_ReadAltitude2(){
 80024e8:	b5b0      	push	{r4, r5, r7, lr}
 80024ea:	af00      	add	r7, sp, #0
	MS5611_ReadPressure();
 80024ec:	f7ff fe18 	bl	8002120 <MS5611_ReadPressure>
	//GY63.ALT = (uint32_t)((288.15 / 0.0065) * (powf((GY63.P / 1013.25), (1 / 5.255)) - 1));
	//GY63.ALT = (1.0f - powf((GY63.float_P / SEA_PRESSURE), 0.1902226f)) * ((GY63.float_TEMP + 273.15f) / 0.0065f);
	//GY63.ALT = ((1.0 - powf((GY63.float_P / SEA_PRESSURE), 0.1902226)) * 44307.69396);
	GY63.ALT =  GY63.ALT*0.6 + 0.4* ((1.0 - powf((GY63.float_P / SEA_PRESSURE), 0.1902226)) * 44307.69396);
 80024f0:	4b2b      	ldr	r3, [pc, #172]	; (80025a0 <MS5611_ReadAltitude2+0xb8>)
 80024f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80024f4:	4618      	mov	r0, r3
 80024f6:	f7fd fff3 	bl	80004e0 <__aeabi_f2d>
 80024fa:	a323      	add	r3, pc, #140	; (adr r3, 8002588 <MS5611_ReadAltitude2+0xa0>)
 80024fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002500:	f7fe f846 	bl	8000590 <__aeabi_dmul>
 8002504:	4602      	mov	r2, r0
 8002506:	460b      	mov	r3, r1
 8002508:	4614      	mov	r4, r2
 800250a:	461d      	mov	r5, r3
 800250c:	4b24      	ldr	r3, [pc, #144]	; (80025a0 <MS5611_ReadAltitude2+0xb8>)
 800250e:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8002512:	eddf 6a24 	vldr	s13, [pc, #144]	; 80025a4 <MS5611_ReadAltitude2+0xbc>
 8002516:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800251a:	eddf 0a23 	vldr	s1, [pc, #140]	; 80025a8 <MS5611_ReadAltitude2+0xc0>
 800251e:	eeb0 0a47 	vmov.f32	s0, s14
 8002522:	f00b fb5f 	bl	800dbe4 <powf>
 8002526:	ee10 3a10 	vmov	r3, s0
 800252a:	4618      	mov	r0, r3
 800252c:	f7fd ffd8 	bl	80004e0 <__aeabi_f2d>
 8002530:	4602      	mov	r2, r0
 8002532:	460b      	mov	r3, r1
 8002534:	f04f 0000 	mov.w	r0, #0
 8002538:	491c      	ldr	r1, [pc, #112]	; (80025ac <MS5611_ReadAltitude2+0xc4>)
 800253a:	f7fd fe71 	bl	8000220 <__aeabi_dsub>
 800253e:	4602      	mov	r2, r0
 8002540:	460b      	mov	r3, r1
 8002542:	4610      	mov	r0, r2
 8002544:	4619      	mov	r1, r3
 8002546:	a312      	add	r3, pc, #72	; (adr r3, 8002590 <MS5611_ReadAltitude2+0xa8>)
 8002548:	e9d3 2300 	ldrd	r2, r3, [r3]
 800254c:	f7fe f820 	bl	8000590 <__aeabi_dmul>
 8002550:	4602      	mov	r2, r0
 8002552:	460b      	mov	r3, r1
 8002554:	4610      	mov	r0, r2
 8002556:	4619      	mov	r1, r3
 8002558:	a30f      	add	r3, pc, #60	; (adr r3, 8002598 <MS5611_ReadAltitude2+0xb0>)
 800255a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800255e:	f7fe f817 	bl	8000590 <__aeabi_dmul>
 8002562:	4602      	mov	r2, r0
 8002564:	460b      	mov	r3, r1
 8002566:	4620      	mov	r0, r4
 8002568:	4629      	mov	r1, r5
 800256a:	f7fd fe5b 	bl	8000224 <__adddf3>
 800256e:	4602      	mov	r2, r0
 8002570:	460b      	mov	r3, r1
 8002572:	4610      	mov	r0, r2
 8002574:	4619      	mov	r1, r3
 8002576:	f7fe fae3 	bl	8000b40 <__aeabi_d2f>
 800257a:	4603      	mov	r3, r0
 800257c:	4a08      	ldr	r2, [pc, #32]	; (80025a0 <MS5611_ReadAltitude2+0xb8>)
 800257e:	6493      	str	r3, [r2, #72]	; 0x48
}
 8002580:	bf00      	nop
 8002582:	bdb0      	pop	{r4, r5, r7, pc}
 8002584:	f3af 8000 	nop.w
 8002588:	33333333 	.word	0x33333333
 800258c:	3fe33333 	.word	0x3fe33333
 8002590:	34eb9a17 	.word	0x34eb9a17
 8002594:	40e5a276 	.word	0x40e5a276
 8002598:	9999999a 	.word	0x9999999a
 800259c:	3fd99999 	.word	0x3fd99999
 80025a0:	200001d8 	.word	0x200001d8
 80025a4:	447d5000 	.word	0x447d5000
 80025a8:	3e42c9b7 	.word	0x3e42c9b7
 80025ac:	3ff00000 	.word	0x3ff00000

080025b0 <MS5611_Request_Pressure>:

void MS5611_Request_Pressure(){
 80025b0:	b580      	push	{r7, lr}
 80025b2:	b082      	sub	sp, #8
 80025b4:	af02      	add	r7, sp, #8
	// Send the command to start pressure conversion
	tx_buf[0] = 0x48 ;
 80025b6:	4b07      	ldr	r3, [pc, #28]	; (80025d4 <MS5611_Request_Pressure+0x24>)
 80025b8:	2248      	movs	r2, #72	; 0x48
 80025ba:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 80025bc:	2301      	movs	r3, #1
 80025be:	9300      	str	r3, [sp, #0]
 80025c0:	2301      	movs	r3, #1
 80025c2:	4a04      	ldr	r2, [pc, #16]	; (80025d4 <MS5611_Request_Pressure+0x24>)
 80025c4:	21ee      	movs	r1, #238	; 0xee
 80025c6:	4804      	ldr	r0, [pc, #16]	; (80025d8 <MS5611_Request_Pressure+0x28>)
 80025c8:	f006 fed6 	bl	8009378 <HAL_I2C_Master_Transmit>
}
 80025cc:	bf00      	nop
 80025ce:	46bd      	mov	sp, r7
 80025d0:	bd80      	pop	{r7, pc}
 80025d2:	bf00      	nop
 80025d4:	200001d0 	.word	0x200001d0
 80025d8:	200002f0 	.word	0x200002f0

080025dc <MS5611_Request_Temp>:
void MS5611_Request_Temp(){
 80025dc:	b580      	push	{r7, lr}
 80025de:	b082      	sub	sp, #8
 80025e0:	af02      	add	r7, sp, #8
    // Send the command to start temperature conversion
    tx_buf[0] = 0x58;
 80025e2:	4b07      	ldr	r3, [pc, #28]	; (8002600 <MS5611_Request_Temp+0x24>)
 80025e4:	2258      	movs	r2, #88	; 0x58
 80025e6:	701a      	strb	r2, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1, MS5611_SlaveAddress<<1, tx_buf, 1, BARO_TIMEOUT);
 80025e8:	2301      	movs	r3, #1
 80025ea:	9300      	str	r3, [sp, #0]
 80025ec:	2301      	movs	r3, #1
 80025ee:	4a04      	ldr	r2, [pc, #16]	; (8002600 <MS5611_Request_Temp+0x24>)
 80025f0:	21ee      	movs	r1, #238	; 0xee
 80025f2:	4804      	ldr	r0, [pc, #16]	; (8002604 <MS5611_Request_Temp+0x28>)
 80025f4:	f006 fec0 	bl	8009378 <HAL_I2C_Master_Transmit>
}
 80025f8:	bf00      	nop
 80025fa:	46bd      	mov	sp, r7
 80025fc:	bd80      	pop	{r7, pc}
 80025fe:	bf00      	nop
 8002600:	200001d0 	.word	0x200001d0
 8002604:	200002f0 	.word	0x200002f0

08002608 <baro_read>:

void baro_read(){
 8002608:	b580      	push	{r7, lr}
 800260a:	b082      	sub	sp, #8
 800260c:	af00      	add	r7, sp, #0
	if(loop_counter%6==0){
 800260e:	4b4a      	ldr	r3, [pc, #296]	; (8002738 <baro_read+0x130>)
 8002610:	6819      	ldr	r1, [r3, #0]
 8002612:	4b4a      	ldr	r3, [pc, #296]	; (800273c <baro_read+0x134>)
 8002614:	fba3 2301 	umull	r2, r3, r3, r1
 8002618:	089a      	lsrs	r2, r3, #2
 800261a:	4613      	mov	r3, r2
 800261c:	005b      	lsls	r3, r3, #1
 800261e:	4413      	add	r3, r2
 8002620:	005b      	lsls	r3, r3, #1
 8002622:	1aca      	subs	r2, r1, r3
 8002624:	2a00      	cmp	r2, #0
 8002626:	d103      	bne.n	8002630 <baro_read+0x28>
		MS5611_ReadTemperature();
 8002628:	f7ff fcd6 	bl	8001fd8 <MS5611_ReadTemperature>
		MS5611_Request_Pressure();
 800262c:	f7ff ffc0 	bl	80025b0 <MS5611_Request_Pressure>
	}
	if (loop_counter%6==4){    //total loop (baro read & temp read) takes 24ms
 8002630:	4b41      	ldr	r3, [pc, #260]	; (8002738 <baro_read+0x130>)
 8002632:	6819      	ldr	r1, [r3, #0]
 8002634:	4b41      	ldr	r3, [pc, #260]	; (800273c <baro_read+0x134>)
 8002636:	fba3 2301 	umull	r2, r3, r3, r1
 800263a:	089a      	lsrs	r2, r3, #2
 800263c:	4613      	mov	r3, r2
 800263e:	005b      	lsls	r3, r3, #1
 8002640:	4413      	add	r3, r2
 8002642:	005b      	lsls	r3, r3, #1
 8002644:	1aca      	subs	r2, r1, r3
 8002646:	2a04      	cmp	r2, #4
 8002648:	d172      	bne.n	8002730 <baro_read+0x128>
								// 12ms -> read baro, 12ms -> read temp this cycle goes on and on...
		MS5611_ReadAltitude2();
 800264a:	f7ff ff4d 	bl	80024e8 <MS5611_ReadAltitude2>
		baro_filter_input[0]=GY63.P;
 800264e:	4b3c      	ldr	r3, [pc, #240]	; (8002740 <baro_read+0x138>)
 8002650:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002652:	ee07 3a90 	vmov	s15, r3
 8002656:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800265a:	4b3a      	ldr	r3, [pc, #232]	; (8002744 <baro_read+0x13c>)
 800265c:	edc3 7a00 	vstr	s15, [r3]
		baro_filter_output[0] = baro_filter_output_coeff[0]*baro_filter_output[1] + baro_filter_output_coeff[1]*baro_filter_output[2] + baro_filter_output_coeff[2]*baro_filter_output[3] +baro_filter_input_coeff[0]*baro_filter_input[0] + baro_filter_input_coeff[1]*baro_filter_input[1] + baro_filter_input_coeff[2]*baro_filter_input[2]+ baro_filter_input_coeff[3]*baro_filter_input[3];
 8002660:	4b39      	ldr	r3, [pc, #228]	; (8002748 <baro_read+0x140>)
 8002662:	ed93 7a00 	vldr	s14, [r3]
 8002666:	4b39      	ldr	r3, [pc, #228]	; (800274c <baro_read+0x144>)
 8002668:	edd3 7a01 	vldr	s15, [r3, #4]
 800266c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8002670:	4b35      	ldr	r3, [pc, #212]	; (8002748 <baro_read+0x140>)
 8002672:	edd3 6a01 	vldr	s13, [r3, #4]
 8002676:	4b35      	ldr	r3, [pc, #212]	; (800274c <baro_read+0x144>)
 8002678:	edd3 7a02 	vldr	s15, [r3, #8]
 800267c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002680:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002684:	4b30      	ldr	r3, [pc, #192]	; (8002748 <baro_read+0x140>)
 8002686:	edd3 6a02 	vldr	s13, [r3, #8]
 800268a:	4b30      	ldr	r3, [pc, #192]	; (800274c <baro_read+0x144>)
 800268c:	edd3 7a03 	vldr	s15, [r3, #12]
 8002690:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002694:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002698:	4b2d      	ldr	r3, [pc, #180]	; (8002750 <baro_read+0x148>)
 800269a:	edd3 6a00 	vldr	s13, [r3]
 800269e:	4b29      	ldr	r3, [pc, #164]	; (8002744 <baro_read+0x13c>)
 80026a0:	edd3 7a00 	vldr	s15, [r3]
 80026a4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80026a8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80026ac:	4b28      	ldr	r3, [pc, #160]	; (8002750 <baro_read+0x148>)
 80026ae:	edd3 6a01 	vldr	s13, [r3, #4]
 80026b2:	4b24      	ldr	r3, [pc, #144]	; (8002744 <baro_read+0x13c>)
 80026b4:	edd3 7a01 	vldr	s15, [r3, #4]
 80026b8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80026bc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80026c0:	4b23      	ldr	r3, [pc, #140]	; (8002750 <baro_read+0x148>)
 80026c2:	edd3 6a02 	vldr	s13, [r3, #8]
 80026c6:	4b1f      	ldr	r3, [pc, #124]	; (8002744 <baro_read+0x13c>)
 80026c8:	edd3 7a02 	vldr	s15, [r3, #8]
 80026cc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80026d0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80026d4:	4b1e      	ldr	r3, [pc, #120]	; (8002750 <baro_read+0x148>)
 80026d6:	edd3 6a03 	vldr	s13, [r3, #12]
 80026da:	4b1a      	ldr	r3, [pc, #104]	; (8002744 <baro_read+0x13c>)
 80026dc:	edd3 7a03 	vldr	s15, [r3, #12]
 80026e0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80026e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80026e8:	4b18      	ldr	r3, [pc, #96]	; (800274c <baro_read+0x144>)
 80026ea:	edc3 7a00 	vstr	s15, [r3]
		for(int i = 2; i >= 0; i--){
 80026ee:	2302      	movs	r3, #2
 80026f0:	607b      	str	r3, [r7, #4]
 80026f2:	e018      	b.n	8002726 <baro_read+0x11e>
			baro_filter_input[i+1] = baro_filter_input[i]; // store xi
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	3301      	adds	r3, #1
 80026f8:	4912      	ldr	r1, [pc, #72]	; (8002744 <baro_read+0x13c>)
 80026fa:	687a      	ldr	r2, [r7, #4]
 80026fc:	0092      	lsls	r2, r2, #2
 80026fe:	440a      	add	r2, r1
 8002700:	6812      	ldr	r2, [r2, #0]
 8002702:	4910      	ldr	r1, [pc, #64]	; (8002744 <baro_read+0x13c>)
 8002704:	009b      	lsls	r3, r3, #2
 8002706:	440b      	add	r3, r1
 8002708:	601a      	str	r2, [r3, #0]
			baro_filter_output[i+1] = baro_filter_output[i]; // store yi
 800270a:	687b      	ldr	r3, [r7, #4]
 800270c:	3301      	adds	r3, #1
 800270e:	490f      	ldr	r1, [pc, #60]	; (800274c <baro_read+0x144>)
 8002710:	687a      	ldr	r2, [r7, #4]
 8002712:	0092      	lsls	r2, r2, #2
 8002714:	440a      	add	r2, r1
 8002716:	6812      	ldr	r2, [r2, #0]
 8002718:	490c      	ldr	r1, [pc, #48]	; (800274c <baro_read+0x144>)
 800271a:	009b      	lsls	r3, r3, #2
 800271c:	440b      	add	r3, r1
 800271e:	601a      	str	r2, [r3, #0]
		for(int i = 2; i >= 0; i--){
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	3b01      	subs	r3, #1
 8002724:	607b      	str	r3, [r7, #4]
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	2b00      	cmp	r3, #0
 800272a:	dae3      	bge.n	80026f4 <baro_read+0xec>
		}
		MS5611_Request_Temp();
 800272c:	f7ff ff56 	bl	80025dc <MS5611_Request_Temp>
	}


}
 8002730:	bf00      	nop
 8002732:	3708      	adds	r7, #8
 8002734:	46bd      	mov	sp, r7
 8002736:	bd80      	pop	{r7, pc}
 8002738:	200007e4 	.word	0x200007e4
 800273c:	aaaaaaab 	.word	0xaaaaaaab
 8002740:	200001d8 	.word	0x200001d8
 8002744:	2000099c 	.word	0x2000099c
 8002748:	20000088 	.word	0x20000088
 800274c:	200009ac 	.word	0x200009ac
 8002750:	20000094 	.word	0x20000094

08002754 <flash_write_calib_data_four_byte>:
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, (Sector15_Address+i), data_ptr[i]);
	}
	HAL_FLASH_Lock();
}

void flash_write_calib_data_four_byte(uint32_t* data_ptr,uint16_t data_amount){
 8002754:	b5b0      	push	{r4, r5, r7, lr}
 8002756:	b084      	sub	sp, #16
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
 800275c:	460b      	mov	r3, r1
 800275e:	807b      	strh	r3, [r7, #2]

	flash_init_for_calibration();
 8002760:	f000 f87c 	bl	800285c <flash_init_for_calibration>
	int i=0;
 8002764:	2300      	movs	r3, #0
 8002766:	60fb      	str	r3, [r7, #12]
	for(i=0;i<data_amount;i++){
 8002768:	2300      	movs	r3, #0
 800276a:	60fb      	str	r3, [r7, #12]
 800276c:	e016      	b.n	800279c <flash_write_calib_data_four_byte+0x48>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, (Sector15_Address+i*4), data_ptr[i]);
 800276e:	68fb      	ldr	r3, [r7, #12]
 8002770:	f103 7301 	add.w	r3, r3, #33816576	; 0x2040000
 8002774:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 8002778:	009b      	lsls	r3, r3, #2
 800277a:	4619      	mov	r1, r3
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	009b      	lsls	r3, r3, #2
 8002780:	687a      	ldr	r2, [r7, #4]
 8002782:	4413      	add	r3, r2
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	2200      	movs	r2, #0
 8002788:	461c      	mov	r4, r3
 800278a:	4615      	mov	r5, r2
 800278c:	4622      	mov	r2, r4
 800278e:	462b      	mov	r3, r5
 8002790:	2002      	movs	r0, #2
 8002792:	f005 ff9b 	bl	80086cc <HAL_FLASH_Program>
	for(i=0;i<data_amount;i++){
 8002796:	68fb      	ldr	r3, [r7, #12]
 8002798:	3301      	adds	r3, #1
 800279a:	60fb      	str	r3, [r7, #12]
 800279c:	887b      	ldrh	r3, [r7, #2]
 800279e:	68fa      	ldr	r2, [r7, #12]
 80027a0:	429a      	cmp	r2, r3
 80027a2:	dbe4      	blt.n	800276e <flash_write_calib_data_four_byte+0x1a>
	}
	HAL_FLASH_Lock();
 80027a4:	f006 f808 	bl	80087b8 <HAL_FLASH_Lock>
}
 80027a8:	bf00      	nop
 80027aa:	3710      	adds	r7, #16
 80027ac:	46bd      	mov	sp, r7
 80027ae:	bdb0      	pop	{r4, r5, r7, pc}

080027b0 <flash_write_calib_data_compass>:
void flash_write_calib_data_compass(uint32_t* data_ptr,uint16_t data_amount){
 80027b0:	b5b0      	push	{r4, r5, r7, lr}
 80027b2:	b084      	sub	sp, #16
 80027b4:	af00      	add	r7, sp, #0
 80027b6:	6078      	str	r0, [r7, #4]
 80027b8:	460b      	mov	r3, r1
 80027ba:	807b      	strh	r3, [r7, #2]

	HAL_FLASH_Unlock();
 80027bc:	f005 ffda 	bl	8008774 <HAL_FLASH_Unlock>
	FLASH_Erase_Sector(FLASH_SECTOR_14, FLASH_VOLTAGE_RANGE_3);
 80027c0:	2102      	movs	r1, #2
 80027c2:	200e      	movs	r0, #14
 80027c4:	f006 f948 	bl	8008a58 <FLASH_Erase_Sector>
	int i=0;
 80027c8:	2300      	movs	r3, #0
 80027ca:	60fb      	str	r3, [r7, #12]
	for(i=0;i<data_amount;i++){
 80027cc:	2300      	movs	r3, #0
 80027ce:	60fb      	str	r3, [r7, #12]
 80027d0:	e016      	b.n	8002800 <flash_write_calib_data_compass+0x50>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, (Sector14_Address+i*4), data_ptr[i]);
 80027d2:	68fb      	ldr	r3, [r7, #12]
 80027d4:	f103 7301 	add.w	r3, r3, #33816576	; 0x2040000
 80027d8:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 80027dc:	009b      	lsls	r3, r3, #2
 80027de:	4619      	mov	r1, r3
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	009b      	lsls	r3, r3, #2
 80027e4:	687a      	ldr	r2, [r7, #4]
 80027e6:	4413      	add	r3, r2
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	2200      	movs	r2, #0
 80027ec:	461c      	mov	r4, r3
 80027ee:	4615      	mov	r5, r2
 80027f0:	4622      	mov	r2, r4
 80027f2:	462b      	mov	r3, r5
 80027f4:	2002      	movs	r0, #2
 80027f6:	f005 ff69 	bl	80086cc <HAL_FLASH_Program>
	for(i=0;i<data_amount;i++){
 80027fa:	68fb      	ldr	r3, [r7, #12]
 80027fc:	3301      	adds	r3, #1
 80027fe:	60fb      	str	r3, [r7, #12]
 8002800:	887b      	ldrh	r3, [r7, #2]
 8002802:	68fa      	ldr	r2, [r7, #12]
 8002804:	429a      	cmp	r2, r3
 8002806:	dbe4      	blt.n	80027d2 <flash_write_calib_data_compass+0x22>
	}
	HAL_FLASH_Lock();
 8002808:	f005 ffd6 	bl	80087b8 <HAL_FLASH_Lock>
}
 800280c:	bf00      	nop
 800280e:	3710      	adds	r7, #16
 8002810:	46bd      	mov	sp, r7
 8002812:	bdb0      	pop	{r4, r5, r7, pc}

08002814 <read_calib_value>:



void read_calib_value(uint32_t Flash_address,uint8_t data_amount,float* calib_buffer){
 8002814:	b480      	push	{r7}
 8002816:	b087      	sub	sp, #28
 8002818:	af00      	add	r7, sp, #0
 800281a:	60f8      	str	r0, [r7, #12]
 800281c:	460b      	mov	r3, r1
 800281e:	607a      	str	r2, [r7, #4]
 8002820:	72fb      	strb	r3, [r7, #11]
	int i;
	for(i=0;i<data_amount;i++){
 8002822:	2300      	movs	r3, #0
 8002824:	617b      	str	r3, [r7, #20]
 8002826:	e00e      	b.n	8002846 <read_calib_value+0x32>
		calib_buffer[i]=*(float*)(Flash_address+i*4);
 8002828:	697b      	ldr	r3, [r7, #20]
 800282a:	009b      	lsls	r3, r3, #2
 800282c:	461a      	mov	r2, r3
 800282e:	68fb      	ldr	r3, [r7, #12]
 8002830:	4413      	add	r3, r2
 8002832:	4619      	mov	r1, r3
 8002834:	697b      	ldr	r3, [r7, #20]
 8002836:	009b      	lsls	r3, r3, #2
 8002838:	687a      	ldr	r2, [r7, #4]
 800283a:	4413      	add	r3, r2
 800283c:	680a      	ldr	r2, [r1, #0]
 800283e:	601a      	str	r2, [r3, #0]
	for(i=0;i<data_amount;i++){
 8002840:	697b      	ldr	r3, [r7, #20]
 8002842:	3301      	adds	r3, #1
 8002844:	617b      	str	r3, [r7, #20]
 8002846:	7afb      	ldrb	r3, [r7, #11]
 8002848:	697a      	ldr	r2, [r7, #20]
 800284a:	429a      	cmp	r2, r3
 800284c:	dbec      	blt.n	8002828 <read_calib_value+0x14>
	}
}
 800284e:	bf00      	nop
 8002850:	bf00      	nop
 8002852:	371c      	adds	r7, #28
 8002854:	46bd      	mov	sp, r7
 8002856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285a:	4770      	bx	lr

0800285c <flash_init_for_calibration>:
	FLASH_Erase_Sector(FLASH_SECTOR_11, FLASH_VOLTAGE_RANGE_3);
	FLASH_Erase_Sector(FLASH_SECTOR_12, FLASH_VOLTAGE_RANGE_3);
	FLASH_Erase_Sector(FLASH_SECTOR_13, FLASH_VOLTAGE_RANGE_3);

}
void flash_init_for_calibration(void){
 800285c:	b580      	push	{r7, lr}
 800285e:	af00      	add	r7, sp, #0

	HAL_FLASH_Unlock();
 8002860:	f005 ff88 	bl	8008774 <HAL_FLASH_Unlock>
	FLASH_Erase_Sector(FLASH_SECTOR_15, FLASH_VOLTAGE_RANGE_3);
 8002864:	2102      	movs	r1, #2
 8002866:	200f      	movs	r0, #15
 8002868:	f006 f8f6 	bl	8008a58 <FLASH_Erase_Sector>

}
 800286c:	bf00      	nop
 800286e:	bd80      	pop	{r7, pc}

08002870 <fill_calibration_buffer>:
	}
	return 0;
}

void fill_calibration_buffer()
{
 8002870:	b580      	push	{r7, lr}
 8002872:	af00      	add	r7, sp, #0
	//Accel_X_Raw_Offset,Accel_Y_Raw_Offset,Accel_Z_Raw_Rate;

	calibration_buffer_float[0]=(float)MPU6050_1.pitch_calibration_value;
 8002874:	4b15      	ldr	r3, [pc, #84]	; (80028cc <fill_calibration_buffer+0x5c>)
 8002876:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 800287a:	4610      	mov	r0, r2
 800287c:	4619      	mov	r1, r3
 800287e:	f7fe f95f 	bl	8000b40 <__aeabi_d2f>
 8002882:	4603      	mov	r3, r0
 8002884:	4a12      	ldr	r2, [pc, #72]	; (80028d0 <fill_calibration_buffer+0x60>)
 8002886:	6013      	str	r3, [r2, #0]
	calibration_buffer_float[1]=(float)MPU6050_1.roll_calibration_value;
 8002888:	4b10      	ldr	r3, [pc, #64]	; (80028cc <fill_calibration_buffer+0x5c>)
 800288a:	e9d3 2316 	ldrd	r2, r3, [r3, #88]	; 0x58
 800288e:	4610      	mov	r0, r2
 8002890:	4619      	mov	r1, r3
 8002892:	f7fe f955 	bl	8000b40 <__aeabi_d2f>
 8002896:	4603      	mov	r3, r0
 8002898:	4a0d      	ldr	r2, [pc, #52]	; (80028d0 <fill_calibration_buffer+0x60>)
 800289a:	6053      	str	r3, [r2, #4]
	calibration_buffer_float[2]=(float)MPU6050_1.yaw_calibration_value;
 800289c:	4b0b      	ldr	r3, [pc, #44]	; (80028cc <fill_calibration_buffer+0x5c>)
 800289e:	e9d3 2314 	ldrd	r2, r3, [r3, #80]	; 0x50
 80028a2:	4610      	mov	r0, r2
 80028a4:	4619      	mov	r1, r3
 80028a6:	f7fe f94b 	bl	8000b40 <__aeabi_d2f>
 80028aa:	4603      	mov	r3, r0
 80028ac:	4a08      	ldr	r2, [pc, #32]	; (80028d0 <fill_calibration_buffer+0x60>)
 80028ae:	6093      	str	r3, [r2, #8]
	calibration_buffer_float[3]=(float)MPU6050_1.Accel_X_Raw_Offset;
 80028b0:	4b06      	ldr	r3, [pc, #24]	; (80028cc <fill_calibration_buffer+0x5c>)
 80028b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028b4:	4a06      	ldr	r2, [pc, #24]	; (80028d0 <fill_calibration_buffer+0x60>)
 80028b6:	60d3      	str	r3, [r2, #12]
	calibration_buffer_float[4]=(float)MPU6050_1.Accel_Y_Raw_Offset;
 80028b8:	4b04      	ldr	r3, [pc, #16]	; (80028cc <fill_calibration_buffer+0x5c>)
 80028ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80028bc:	4a04      	ldr	r2, [pc, #16]	; (80028d0 <fill_calibration_buffer+0x60>)
 80028be:	6113      	str	r3, [r2, #16]
	calibration_buffer_float[5]=(float)MPU6050_1.Accel_Z_Raw_Rate;
 80028c0:	4b02      	ldr	r3, [pc, #8]	; (80028cc <fill_calibration_buffer+0x5c>)
 80028c2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80028c4:	4a02      	ldr	r2, [pc, #8]	; (80028d0 <fill_calibration_buffer+0x60>)
 80028c6:	6153      	str	r3, [r2, #20]
}
 80028c8:	bf00      	nop
 80028ca:	bd80      	pop	{r7, pc}
 80028cc:	200007e8 	.word	0x200007e8
 80028d0:	20000944 	.word	0x20000944

080028d4 <fill_calibration_buffer_compass>:

void fill_calibration_buffer_compass()
{
 80028d4:	b480      	push	{r7}
 80028d6:	af00      	add	r7, sp, #0
	//Accel_X_Raw_Offset,Accel_Y_Raw_Offset,Accel_Z_Raw_Rate;
	calibration_buffer_float[0]=(float)Xsf;
 80028d8:	4b0e      	ldr	r3, [pc, #56]	; (8002914 <fill_calibration_buffer_compass+0x40>)
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	4a0e      	ldr	r2, [pc, #56]	; (8002918 <fill_calibration_buffer_compass+0x44>)
 80028de:	6013      	str	r3, [r2, #0]
	calibration_buffer_float[1]=(float)Ysf;
 80028e0:	4b0e      	ldr	r3, [pc, #56]	; (800291c <fill_calibration_buffer_compass+0x48>)
 80028e2:	681b      	ldr	r3, [r3, #0]
 80028e4:	4a0c      	ldr	r2, [pc, #48]	; (8002918 <fill_calibration_buffer_compass+0x44>)
 80028e6:	6053      	str	r3, [r2, #4]
	calibration_buffer_float[2]=(float)Xoff;
 80028e8:	4b0d      	ldr	r3, [pc, #52]	; (8002920 <fill_calibration_buffer_compass+0x4c>)
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	4a0a      	ldr	r2, [pc, #40]	; (8002918 <fill_calibration_buffer_compass+0x44>)
 80028ee:	6093      	str	r3, [r2, #8]
	calibration_buffer_float[3]=(float)Yoff;
 80028f0:	4b0c      	ldr	r3, [pc, #48]	; (8002924 <fill_calibration_buffer_compass+0x50>)
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	4a08      	ldr	r2, [pc, #32]	; (8002918 <fill_calibration_buffer_compass+0x44>)
 80028f6:	60d3      	str	r3, [r2, #12]
	calibration_buffer_float[4]=(float)Zsf;
 80028f8:	4b0b      	ldr	r3, [pc, #44]	; (8002928 <fill_calibration_buffer_compass+0x54>)
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	4a06      	ldr	r2, [pc, #24]	; (8002918 <fill_calibration_buffer_compass+0x44>)
 80028fe:	6113      	str	r3, [r2, #16]
	calibration_buffer_float[5]=(float)Zoff;
 8002900:	4b0a      	ldr	r3, [pc, #40]	; (800292c <fill_calibration_buffer_compass+0x58>)
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	4a04      	ldr	r2, [pc, #16]	; (8002918 <fill_calibration_buffer_compass+0x44>)
 8002906:	6153      	str	r3, [r2, #20]
}
 8002908:	bf00      	nop
 800290a:	46bd      	mov	sp, r7
 800290c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002910:	4770      	bx	lr
 8002912:	bf00      	nop
 8002914:	20000a4c 	.word	0x20000a4c
 8002918:	20000944 	.word	0x20000944
 800291c:	20000a50 	.word	0x20000a50
 8002920:	20000a54 	.word	0x20000a54
 8002924:	20000a58 	.word	0x20000a58
 8002928:	20000a5c 	.word	0x20000a5c
 800292c:	20000a60 	.word	0x20000a60

08002930 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002930:	b590      	push	{r4, r7, lr}
 8002932:	b085      	sub	sp, #20
 8002934:	af04      	add	r7, sp, #16
  /* USER CODE BEGIN 1 */
   __HAL_DBGMCU_FREEZE_IWDG(); ///TURN THE WATCHDOG TIMER OFF IN DEBUG MODE, OTHERWISE MCU WILL KEEP RESETTING ITSELF
 8002936:	4b47      	ldr	r3, [pc, #284]	; (8002a54 <main+0x124>)
 8002938:	689b      	ldr	r3, [r3, #8]
 800293a:	4a46      	ldr	r2, [pc, #280]	; (8002a54 <main+0x124>)
 800293c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002940:	6093      	str	r3, [r2, #8]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002942:	f004 fc87 	bl	8007254 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002946:	f000 fc05 	bl	8003154 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800294a:	f000 ffa7 	bl	800389c <MX_GPIO_Init>
  MX_DMA_Init();
 800294e:	f000 ff4f 	bl	80037f0 <MX_DMA_Init>
  //MX_IWDG_Init();  // CALL THIS FUNCTION BEFORE MAIN LOOP BEGINS
  MX_I2C2_Init();
 8002952:	f000 fceb 	bl	800332c <MX_I2C2_Init>
  MX_USART2_UART_Init();
 8002956:	f000 fef5 	bl	8003744 <MX_USART2_UART_Init>
  MX_TIM1_Init();
 800295a:	f000 fd5d 	bl	8003418 <MX_TIM1_Init>
  MX_TIM2_Init();
 800295e:	f000 fe03 	bl	8003568 <MX_TIM2_Init>
  MX_TIM3_Init();
 8002962:	f000 fe4d 	bl	8003600 <MX_TIM3_Init>
  MX_ADC1_Init();
 8002966:	f000 fc61 	bl	800322c <MX_ADC1_Init>
  MX_I2C1_Init();
 800296a:	f000 fcb1 	bl	80032d0 <MX_I2C1_Init>
  MX_UART5_Init();
 800296e:	f000 fe95 	bl	800369c <MX_UART5_Init>
  MX_USART6_UART_Init();
 8002972:	f000 ff13 	bl	800379c <MX_USART6_UART_Init>
  MX_I2C3_Init();
 8002976:	f000 fd07 	bl	8003388 <MX_I2C3_Init>
  MX_UART7_Init();
 800297a:	f000 feb9 	bl	80036f0 <MX_UART7_Init>
  /* USER CODE BEGIN 2 */

  //////TRANSMITTER AND IMU INIT/////
  red_led_on();    // assume no transmitter is connected initially
 800297e:	f7ff f853 	bl	8001a28 <red_led_on>
  while(MPU6050_Init_Benim(&hi2c2)==1);       // connect to imu
 8002982:	bf00      	nop
 8002984:	4834      	ldr	r0, [pc, #208]	; (8002a58 <main+0x128>)
 8002986:	f001 fca7 	bl	80042d8 <MPU6050_Init_Benim>
 800298a:	4603      	mov	r3, r0
 800298c:	2b01      	cmp	r3, #1
 800298e:	d0f9      	beq.n	8002984 <main+0x54>
  start_reading_battery();                    // start the adc for battery voltage
 8002990:	f7fe fafe 	bl	8000f90 <start_reading_battery>

  while(connect_receiver());                  // connect to transmitter
 8002994:	bf00      	nop
 8002996:	f003 fa91 	bl	8005ebc <connect_receiver>
 800299a:	4603      	mov	r3, r0
 800299c:	2b00      	cmp	r3, #0
 800299e:	d1fa      	bne.n	8002996 <main+0x66>
  red_led_off();  // turn the red led off after connection to transsmitter
 80029a0:	f7ff f84e 	bl	8001a40 <red_led_off>
  while(startup_handler());   //choose a startup mode: imu calibration ,compass calibration, flight;
 80029a4:	bf00      	nop
 80029a6:	f003 fbc7 	bl	8006138 <startup_handler>
 80029aa:	4603      	mov	r3, r0
 80029ac:	2b00      	cmp	r3, #0
 80029ae:	d1fa      	bne.n	80029a6 <main+0x76>

 //////RF MODUL INITIALIZATION/////
 E220_init_declare_pins(&LoraTX, GPIOB, GPIOE, GPIO_PIN_10, GPIO_PIN_11, GPIO_PIN_15,&huart5); //declare E220 pins.
 80029b0:	4b2a      	ldr	r3, [pc, #168]	; (8002a5c <main+0x12c>)
 80029b2:	9302      	str	r3, [sp, #8]
 80029b4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80029b8:	9301      	str	r3, [sp, #4]
 80029ba:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80029be:	9300      	str	r3, [sp, #0]
 80029c0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80029c4:	4a26      	ldr	r2, [pc, #152]	; (8002a60 <main+0x130>)
 80029c6:	4927      	ldr	r1, [pc, #156]	; (8002a64 <main+0x134>)
 80029c8:	4827      	ldr	r0, [pc, #156]	; (8002a68 <main+0x138>)
 80029ca:	f7fe ff7b 	bl	80018c4 <E220_init_declare_pins>
 E220_enter_normal_mode(&LoraTX); //switch the E220 to transceiver
 80029ce:	4826      	ldr	r0, [pc, #152]	; (8002a68 <main+0x138>)
 80029d0:	f7fe ff97 	bl	8001902 <E220_enter_normal_mode>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  /////INIT MOTORS/////
  while(arm_handler());           //motors will be activated after this function,
 80029d4:	bf00      	nop
 80029d6:	f003 fcab 	bl	8006330 <arm_handler>
 80029da:	4603      	mov	r3, r0
 80029dc:	2b00      	cmp	r3, #0
 80029de:	d1fa      	bne.n	80029d6 <main+0xa6>
  stop_motors();                    //this function shuts the motors ,
 80029e0:	f003 fa52 	bl	8005e88 <stop_motors>

  /////INIT BAROMETER/////
  MS5611_Initilize(); // Never start without this function call
 80029e4:	f7ff f982 	bl	8001cec <MS5611_Initilize>
  MS5611_Request_Temp();  //for the timing algorithm to work properly
 80029e8:	f7ff fdf8 	bl	80025dc <MS5611_Request_Temp>

  /////INIT LOG RECORD/////
  //flash_init_for_log();    //this function erases the sectors from 5 to 13 to flight data logging, warning: This function takes around 4-5 seconds to execute.


  while(gps_init());   //gps initialization
 80029ec:	bf00      	nop
 80029ee:	f7ff f889 	bl	8001b04 <gps_init>
 80029f2:	4603      	mov	r3, r0
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d1fa      	bne.n	80029ee <main+0xbe>
  HAL_TIM_Base_Start(&htim3);              //initiate the loop timer counter
 80029f8:	481c      	ldr	r0, [pc, #112]	; (8002a6c <main+0x13c>)
 80029fa:	f008 fcb3 	bl	800b364 <HAL_TIM_Base_Start>
  HAL_Delay(1000);                       // wait 1s to see if the data from gps will corrupt
 80029fe:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8002a02:	f004 fc99 	bl	8007338 <HAL_Delay>
  while(is_gps_connected()); //wait until gps data frame fits into 100 byte buffer
 8002a06:	bf00      	nop
 8002a08:	f7ff f932 	bl	8001c70 <is_gps_connected>
 8002a0c:	4603      	mov	r3, r0
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d1fa      	bne.n	8002a08 <main+0xd8>
  green_led_on(); /// turn the green led on, ready for flight
 8002a12:	f7ff f821 	bl	8001a58 <green_led_on>
  E220_receive_payload_DMA(&LoraTX,receive_buffer,32);  // start DMA for RF module receive
 8002a16:	2220      	movs	r2, #32
 8002a18:	4915      	ldr	r1, [pc, #84]	; (8002a70 <main+0x140>)
 8002a1a:	4813      	ldr	r0, [pc, #76]	; (8002a68 <main+0x138>)
 8002a1c:	f7fe ffaa 	bl	8001974 <E220_receive_payload_DMA>

  MX_IWDG_Init();                            //start the watchdog timer
 8002a20:	f000 fce0 	bl	80033e4 <MX_IWDG_Init>
  {

    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  htim3.Instance->CNT=0;         // reset timer
 8002a24:	4b11      	ldr	r3, [pc, #68]	; (8002a6c <main+0x13c>)
 8002a26:	681b      	ldr	r3, [r3, #0]
 8002a28:	2200      	movs	r2, #0
 8002a2a:	625a      	str	r2, [r3, #36]	; 0x24
	  time1=htim3.Instance->CNT;     // keep the initial value
 8002a2c:	4b0f      	ldr	r3, [pc, #60]	; (8002a6c <main+0x13c>)
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a32:	4a10      	ldr	r2, [pc, #64]	; (8002a74 <main+0x144>)
 8002a34:	6013      	str	r3, [r2, #0]

	  MPU6050_Read_All_Benim(&hi2c2, &MPU6050_1);    //read the imu data
 8002a36:	4910      	ldr	r1, [pc, #64]	; (8002a78 <main+0x148>)
 8002a38:	4807      	ldr	r0, [pc, #28]	; (8002a58 <main+0x128>)
 8002a3a:	f001 fcd9 	bl	80043f0 <MPU6050_Read_All_Benim>

	  if(decode_receiver()==1) // if the connection with transmitter this function will return 1
 8002a3e:	f003 fa7f 	bl	8005f40 <decode_receiver>
 8002a42:	4603      	mov	r3, r0
 8002a44:	2b01      	cmp	r3, #1
 8002a46:	d119      	bne.n	8002a7c <main+0x14c>
	  {
		  red_led_on();  //turn the red led on
 8002a48:	f7fe ffee 	bl	8001a28 <red_led_on>
		  failsafe_handler();                       //shut motors and wait (mcu will reset itself)
 8002a4c:	f7fe ffe6 	bl	8001a1c <failsafe_handler>
 8002a50:	e016      	b.n	8002a80 <main+0x150>
 8002a52:	bf00      	nop
 8002a54:	e0042000 	.word	0xe0042000
 8002a58:	20000344 	.word	0x20000344
 8002a5c:	200004d0 	.word	0x200004d0
 8002a60:	40021000 	.word	0x40021000
 8002a64:	40020400 	.word	0x40020400
 8002a68:	200008dc 	.word	0x200008dc
 8002a6c:	20000488 	.word	0x20000488
 8002a70:	200008bc 	.word	0x200008bc
 8002a74:	200007d8 	.word	0x200007d8
 8002a78:	200007e8 	.word	0x200007e8
		  //_channels[3]=1000;  //trivial
		  //if(rf_listen) decode_rf(); //trivial
	  }
	  else {
		  //rf_listen=0;  //trivial
		  red_led_off();
 8002a7c:	f7fe ffe0 	bl	8001a40 <red_led_off>



	  //CALCULATE THE PID CONTROL SIGNALS
	  //adjust parameters are the feedback control signals of the cascaded pid loop
	  pitch_level_adjust = angle_pitch_output * 31;
 8002a80:	4b84      	ldr	r3, [pc, #528]	; (8002c94 <main+0x364>)
 8002a82:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002a86:	f04f 0200 	mov.w	r2, #0
 8002a8a:	4b83      	ldr	r3, [pc, #524]	; (8002c98 <main+0x368>)
 8002a8c:	f7fd fd80 	bl	8000590 <__aeabi_dmul>
 8002a90:	4602      	mov	r2, r0
 8002a92:	460b      	mov	r3, r1
 8002a94:	4610      	mov	r0, r2
 8002a96:	4619      	mov	r1, r3
 8002a98:	f7fe f852 	bl	8000b40 <__aeabi_d2f>
 8002a9c:	4603      	mov	r3, r0
 8002a9e:	4a7f      	ldr	r2, [pc, #508]	; (8002c9c <main+0x36c>)
 8002aa0:	6013      	str	r3, [r2, #0]
	  roll_level_adjust = angle_roll_output * 31;
 8002aa2:	4b7f      	ldr	r3, [pc, #508]	; (8002ca0 <main+0x370>)
 8002aa4:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002aa8:	f04f 0200 	mov.w	r2, #0
 8002aac:	4b7a      	ldr	r3, [pc, #488]	; (8002c98 <main+0x368>)
 8002aae:	f7fd fd6f 	bl	8000590 <__aeabi_dmul>
 8002ab2:	4602      	mov	r2, r0
 8002ab4:	460b      	mov	r3, r1
 8002ab6:	4610      	mov	r0, r2
 8002ab8:	4619      	mov	r1, r3
 8002aba:	f7fe f841 	bl	8000b40 <__aeabi_d2f>
 8002abe:	4603      	mov	r3, r0
 8002ac0:	4a78      	ldr	r2, [pc, #480]	; (8002ca4 <main+0x374>)
 8002ac2:	6013      	str	r3, [r2, #0]
	  calculate_motor_powers();
 8002ac4:	f002 fd04 	bl	80054d0 <calculate_motor_powers>


	  //CALCULATE THE SIGNALS FOR THE MOTORS (PITCH ,ROLL AND YAW)
	  Calculated_Throttle1=(_channels[2] + (int)Roll_Control + (int)Pitch_Control  + (int)Yaw_Control);
 8002ac8:	4b77      	ldr	r3, [pc, #476]	; (8002ca8 <main+0x378>)
 8002aca:	689c      	ldr	r4, [r3, #8]
 8002acc:	4b77      	ldr	r3, [pc, #476]	; (8002cac <main+0x37c>)
 8002ace:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ad2:	4610      	mov	r0, r2
 8002ad4:	4619      	mov	r1, r3
 8002ad6:	f7fe f80b 	bl	8000af0 <__aeabi_d2iz>
 8002ada:	4603      	mov	r3, r0
 8002adc:	441c      	add	r4, r3
 8002ade:	4b74      	ldr	r3, [pc, #464]	; (8002cb0 <main+0x380>)
 8002ae0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ae4:	4610      	mov	r0, r2
 8002ae6:	4619      	mov	r1, r3
 8002ae8:	f7fe f802 	bl	8000af0 <__aeabi_d2iz>
 8002aec:	4603      	mov	r3, r0
 8002aee:	441c      	add	r4, r3
 8002af0:	4b70      	ldr	r3, [pc, #448]	; (8002cb4 <main+0x384>)
 8002af2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002af6:	4610      	mov	r0, r2
 8002af8:	4619      	mov	r1, r3
 8002afa:	f7fd fff9 	bl	8000af0 <__aeabi_d2iz>
 8002afe:	4603      	mov	r3, r0
 8002b00:	4423      	add	r3, r4
 8002b02:	4a6d      	ldr	r2, [pc, #436]	; (8002cb8 <main+0x388>)
 8002b04:	6013      	str	r3, [r2, #0]
	  if(Calculated_Throttle1<1100) Calculated_Throttle1=1100;
 8002b06:	4b6c      	ldr	r3, [pc, #432]	; (8002cb8 <main+0x388>)
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	f240 424b 	movw	r2, #1099	; 0x44b
 8002b0e:	4293      	cmp	r3, r2
 8002b10:	dc03      	bgt.n	8002b1a <main+0x1ea>
 8002b12:	4b69      	ldr	r3, [pc, #420]	; (8002cb8 <main+0x388>)
 8002b14:	f240 424c 	movw	r2, #1100	; 0x44c
 8002b18:	601a      	str	r2, [r3, #0]
	  if(Calculated_Throttle1>1800) Calculated_Throttle1=1800;
 8002b1a:	4b67      	ldr	r3, [pc, #412]	; (8002cb8 <main+0x388>)
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002b22:	dd03      	ble.n	8002b2c <main+0x1fc>
 8002b24:	4b64      	ldr	r3, [pc, #400]	; (8002cb8 <main+0x388>)
 8002b26:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002b2a:	601a      	str	r2, [r3, #0]

	  Calculated_Throttle2=(_channels[2] - (int)Roll_Control + (int)Pitch_Control - (int)Yaw_Control);
 8002b2c:	4b5e      	ldr	r3, [pc, #376]	; (8002ca8 <main+0x378>)
 8002b2e:	689c      	ldr	r4, [r3, #8]
 8002b30:	4b5e      	ldr	r3, [pc, #376]	; (8002cac <main+0x37c>)
 8002b32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b36:	4610      	mov	r0, r2
 8002b38:	4619      	mov	r1, r3
 8002b3a:	f7fd ffd9 	bl	8000af0 <__aeabi_d2iz>
 8002b3e:	4603      	mov	r3, r0
 8002b40:	1ae4      	subs	r4, r4, r3
 8002b42:	4b5b      	ldr	r3, [pc, #364]	; (8002cb0 <main+0x380>)
 8002b44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b48:	4610      	mov	r0, r2
 8002b4a:	4619      	mov	r1, r3
 8002b4c:	f7fd ffd0 	bl	8000af0 <__aeabi_d2iz>
 8002b50:	4603      	mov	r3, r0
 8002b52:	441c      	add	r4, r3
 8002b54:	4b57      	ldr	r3, [pc, #348]	; (8002cb4 <main+0x384>)
 8002b56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b5a:	4610      	mov	r0, r2
 8002b5c:	4619      	mov	r1, r3
 8002b5e:	f7fd ffc7 	bl	8000af0 <__aeabi_d2iz>
 8002b62:	4603      	mov	r3, r0
 8002b64:	1ae3      	subs	r3, r4, r3
 8002b66:	4a55      	ldr	r2, [pc, #340]	; (8002cbc <main+0x38c>)
 8002b68:	6013      	str	r3, [r2, #0]
	  if(Calculated_Throttle2<1100) Calculated_Throttle2=1100;
 8002b6a:	4b54      	ldr	r3, [pc, #336]	; (8002cbc <main+0x38c>)
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	f240 424b 	movw	r2, #1099	; 0x44b
 8002b72:	4293      	cmp	r3, r2
 8002b74:	dc03      	bgt.n	8002b7e <main+0x24e>
 8002b76:	4b51      	ldr	r3, [pc, #324]	; (8002cbc <main+0x38c>)
 8002b78:	f240 424c 	movw	r2, #1100	; 0x44c
 8002b7c:	601a      	str	r2, [r3, #0]
	  if(Calculated_Throttle2>1800) Calculated_Throttle2=1800;
 8002b7e:	4b4f      	ldr	r3, [pc, #316]	; (8002cbc <main+0x38c>)
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002b86:	dd03      	ble.n	8002b90 <main+0x260>
 8002b88:	4b4c      	ldr	r3, [pc, #304]	; (8002cbc <main+0x38c>)
 8002b8a:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002b8e:	601a      	str	r2, [r3, #0]

	  Calculated_Throttle3=(_channels[2] + (int)Roll_Control - (int)Pitch_Control - (int)Yaw_Control);
 8002b90:	4b45      	ldr	r3, [pc, #276]	; (8002ca8 <main+0x378>)
 8002b92:	689c      	ldr	r4, [r3, #8]
 8002b94:	4b45      	ldr	r3, [pc, #276]	; (8002cac <main+0x37c>)
 8002b96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b9a:	4610      	mov	r0, r2
 8002b9c:	4619      	mov	r1, r3
 8002b9e:	f7fd ffa7 	bl	8000af0 <__aeabi_d2iz>
 8002ba2:	4603      	mov	r3, r0
 8002ba4:	441c      	add	r4, r3
 8002ba6:	4b42      	ldr	r3, [pc, #264]	; (8002cb0 <main+0x380>)
 8002ba8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bac:	4610      	mov	r0, r2
 8002bae:	4619      	mov	r1, r3
 8002bb0:	f7fd ff9e 	bl	8000af0 <__aeabi_d2iz>
 8002bb4:	4603      	mov	r3, r0
 8002bb6:	1ae4      	subs	r4, r4, r3
 8002bb8:	4b3e      	ldr	r3, [pc, #248]	; (8002cb4 <main+0x384>)
 8002bba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bbe:	4610      	mov	r0, r2
 8002bc0:	4619      	mov	r1, r3
 8002bc2:	f7fd ff95 	bl	8000af0 <__aeabi_d2iz>
 8002bc6:	4603      	mov	r3, r0
 8002bc8:	1ae3      	subs	r3, r4, r3
 8002bca:	4a3d      	ldr	r2, [pc, #244]	; (8002cc0 <main+0x390>)
 8002bcc:	6013      	str	r3, [r2, #0]
	  if(Calculated_Throttle3<1100) Calculated_Throttle3=1100;
 8002bce:	4b3c      	ldr	r3, [pc, #240]	; (8002cc0 <main+0x390>)
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	f240 424b 	movw	r2, #1099	; 0x44b
 8002bd6:	4293      	cmp	r3, r2
 8002bd8:	dc03      	bgt.n	8002be2 <main+0x2b2>
 8002bda:	4b39      	ldr	r3, [pc, #228]	; (8002cc0 <main+0x390>)
 8002bdc:	f240 424c 	movw	r2, #1100	; 0x44c
 8002be0:	601a      	str	r2, [r3, #0]
	  if(Calculated_Throttle3>1800) Calculated_Throttle3=1800;
 8002be2:	4b37      	ldr	r3, [pc, #220]	; (8002cc0 <main+0x390>)
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002bea:	dd03      	ble.n	8002bf4 <main+0x2c4>
 8002bec:	4b34      	ldr	r3, [pc, #208]	; (8002cc0 <main+0x390>)
 8002bee:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002bf2:	601a      	str	r2, [r3, #0]

	  Calculated_Throttle4=(_channels[2] - (int)Roll_Control - (int)Pitch_Control + (int)Yaw_Control);
 8002bf4:	4b2c      	ldr	r3, [pc, #176]	; (8002ca8 <main+0x378>)
 8002bf6:	689c      	ldr	r4, [r3, #8]
 8002bf8:	4b2c      	ldr	r3, [pc, #176]	; (8002cac <main+0x37c>)
 8002bfa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bfe:	4610      	mov	r0, r2
 8002c00:	4619      	mov	r1, r3
 8002c02:	f7fd ff75 	bl	8000af0 <__aeabi_d2iz>
 8002c06:	4603      	mov	r3, r0
 8002c08:	1ae4      	subs	r4, r4, r3
 8002c0a:	4b29      	ldr	r3, [pc, #164]	; (8002cb0 <main+0x380>)
 8002c0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c10:	4610      	mov	r0, r2
 8002c12:	4619      	mov	r1, r3
 8002c14:	f7fd ff6c 	bl	8000af0 <__aeabi_d2iz>
 8002c18:	4603      	mov	r3, r0
 8002c1a:	1ae4      	subs	r4, r4, r3
 8002c1c:	4b25      	ldr	r3, [pc, #148]	; (8002cb4 <main+0x384>)
 8002c1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c22:	4610      	mov	r0, r2
 8002c24:	4619      	mov	r1, r3
 8002c26:	f7fd ff63 	bl	8000af0 <__aeabi_d2iz>
 8002c2a:	4603      	mov	r3, r0
 8002c2c:	4423      	add	r3, r4
 8002c2e:	4a25      	ldr	r2, [pc, #148]	; (8002cc4 <main+0x394>)
 8002c30:	6013      	str	r3, [r2, #0]
	  if(Calculated_Throttle4<1100) Calculated_Throttle4=1100;
 8002c32:	4b24      	ldr	r3, [pc, #144]	; (8002cc4 <main+0x394>)
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	f240 424b 	movw	r2, #1099	; 0x44b
 8002c3a:	4293      	cmp	r3, r2
 8002c3c:	dc03      	bgt.n	8002c46 <main+0x316>
 8002c3e:	4b21      	ldr	r3, [pc, #132]	; (8002cc4 <main+0x394>)
 8002c40:	f240 424c 	movw	r2, #1100	; 0x44c
 8002c44:	601a      	str	r2, [r3, #0]
	  if(Calculated_Throttle4>1800) Calculated_Throttle4=1800;
 8002c46:	4b1f      	ldr	r3, [pc, #124]	; (8002cc4 <main+0x394>)
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002c4e:	dd03      	ble.n	8002c58 <main+0x328>
 8002c50:	4b1c      	ldr	r3, [pc, #112]	; (8002cc4 <main+0x394>)
 8002c52:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002c56:	601a      	str	r2, [r3, #0]

	  if(_channels[4]==1000){   //ALT HOLD ENABLED
 8002c58:	4b13      	ldr	r3, [pc, #76]	; (8002ca8 <main+0x378>)
 8002c5a:	691b      	ldr	r3, [r3, #16]
 8002c5c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002c60:	d105      	bne.n	8002c6e <main+0x33e>
		  //if(loop_counter%3==0)
		  altitude_hold();
 8002c62:	f003 fbbb 	bl	80063dc <altitude_hold>
		  status=2;
 8002c66:	4b18      	ldr	r3, [pc, #96]	; (8002cc8 <main+0x398>)
 8002c68:	2202      	movs	r2, #2
 8002c6a:	801a      	strh	r2, [r3, #0]
 8002c6c:	e05e      	b.n	8002d2c <main+0x3fc>
			  gps_hold();
			  gps_go_flag=0;
		  }
		  */
	  }
	  else if(_channels[4]==0 && gps_fix==1){ //GPS HOLD ENABLED
 8002c6e:	4b0e      	ldr	r3, [pc, #56]	; (8002ca8 <main+0x378>)
 8002c70:	691b      	ldr	r3, [r3, #16]
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	d12e      	bne.n	8002cd4 <main+0x3a4>
 8002c76:	4b15      	ldr	r3, [pc, #84]	; (8002ccc <main+0x39c>)
 8002c78:	781b      	ldrb	r3, [r3, #0]
 8002c7a:	2b01      	cmp	r3, #1
 8002c7c:	d12a      	bne.n	8002cd4 <main+0x3a4>
		  gps_go_flag=0;
 8002c7e:	4b14      	ldr	r3, [pc, #80]	; (8002cd0 <main+0x3a0>)
 8002c80:	2200      	movs	r2, #0
 8002c82:	701a      	strb	r2, [r3, #0]
		  gps_hold();
 8002c84:	f003 fc72 	bl	800656c <gps_hold>
		  altitude_hold();
 8002c88:	f003 fba8 	bl	80063dc <altitude_hold>
		  status=3;
 8002c8c:	4b0e      	ldr	r3, [pc, #56]	; (8002cc8 <main+0x398>)
 8002c8e:	2203      	movs	r2, #3
 8002c90:	801a      	strh	r2, [r3, #0]
 8002c92:	e04b      	b.n	8002d2c <main+0x3fc>
 8002c94:	200008a0 	.word	0x200008a0
 8002c98:	403f0000 	.word	0x403f0000
 8002c9c:	200007c4 	.word	0x200007c4
 8002ca0:	200008a8 	.word	0x200008a8
 8002ca4:	200007c0 	.word	0x200007c0
 8002ca8:	20000910 	.word	0x20000910
 8002cac:	20000ae0 	.word	0x20000ae0
 8002cb0:	20000af0 	.word	0x20000af0
 8002cb4:	20000ae8 	.word	0x20000ae8
 8002cb8:	200007c8 	.word	0x200007c8
 8002cbc:	200007cc 	.word	0x200007cc
 8002cc0:	200007d0 	.word	0x200007d0
 8002cc4:	200007d4 	.word	0x200007d4
 8002cc8:	20000992 	.word	0x20000992
 8002ccc:	20000a8c 	.word	0x20000a8c
 8002cd0:	20000a84 	.word	0x20000a84
	  }

	  else if(_channels[4]==2000 || (_channels[4]==0 && gps_fix==0 && _channels[4]!=1000) ){ //ATTIDE MODE  ENABLED
 8002cd4:	4b92      	ldr	r3, [pc, #584]	; (8002f20 <main+0x5f0>)
 8002cd6:	691b      	ldr	r3, [r3, #16]
 8002cd8:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8002cdc:	d00c      	beq.n	8002cf8 <main+0x3c8>
 8002cde:	4b90      	ldr	r3, [pc, #576]	; (8002f20 <main+0x5f0>)
 8002ce0:	691b      	ldr	r3, [r3, #16]
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	d122      	bne.n	8002d2c <main+0x3fc>
 8002ce6:	4b8f      	ldr	r3, [pc, #572]	; (8002f24 <main+0x5f4>)
 8002ce8:	781b      	ldrb	r3, [r3, #0]
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d11e      	bne.n	8002d2c <main+0x3fc>
 8002cee:	4b8c      	ldr	r3, [pc, #560]	; (8002f20 <main+0x5f0>)
 8002cf0:	691b      	ldr	r3, [r3, #16]
 8002cf2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002cf6:	d019      	beq.n	8002d2c <main+0x3fc>
		  gps_go_flag=0;
 8002cf8:	4b8b      	ldr	r3, [pc, #556]	; (8002f28 <main+0x5f8>)
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	701a      	strb	r2, [r3, #0]
		  reset_alt_pid();
 8002cfe:	f003 f831 	bl	8005d64 <reset_alt_pid>
		  alt_hold_flag=0;
 8002d02:	4b8a      	ldr	r3, [pc, #552]	; (8002f2c <main+0x5fc>)
 8002d04:	2200      	movs	r2, #0
 8002d06:	701a      	strb	r2, [r3, #0]
		  alt_setpoint=0;
 8002d08:	4b89      	ldr	r3, [pc, #548]	; (8002f30 <main+0x600>)
 8002d0a:	f04f 0200 	mov.w	r2, #0
 8002d0e:	601a      	str	r2, [r3, #0]
		  reset_gps_pid();
 8002d10:	f003 f848 	bl	8005da4 <reset_gps_pid>
		  gps_hold_flag=0;
 8002d14:	4b87      	ldr	r3, [pc, #540]	; (8002f34 <main+0x604>)
 8002d16:	2200      	movs	r2, #0
 8002d18:	601a      	str	r2, [r3, #0]
		  gps_setpoint_lat=0;
 8002d1a:	4b87      	ldr	r3, [pc, #540]	; (8002f38 <main+0x608>)
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	601a      	str	r2, [r3, #0]
		  gps_setpoint_lon=0;
 8002d20:	4b86      	ldr	r3, [pc, #536]	; (8002f3c <main+0x60c>)
 8002d22:	2200      	movs	r2, #0
 8002d24:	601a      	str	r2, [r3, #0]
		  status=1;
 8002d26:	4b86      	ldr	r3, [pc, #536]	; (8002f40 <main+0x610>)
 8002d28:	2201      	movs	r2, #1
 8002d2a:	801a      	strh	r2, [r3, #0]
	  }


	  //APPLY THE PID CONTROL SIGNALS TO THE MOTORS
	  if(_channels[9]==2000){  // if reset pid & shut motors switch is enabled
 8002d2c:	4b7c      	ldr	r3, [pc, #496]	; (8002f20 <main+0x5f0>)
 8002d2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d30:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8002d34:	d115      	bne.n	8002d62 <main+0x432>
		  reset_pid();
 8002d36:	f003 fca1 	bl	800667c <reset_pid>
		  changespeedM1(&motorStop,MIN_Duty_cycle);
 8002d3a:	2100      	movs	r1, #0
 8002d3c:	4881      	ldr	r0, [pc, #516]	; (8002f44 <main+0x614>)
 8002d3e:	f002 fb5d 	bl	80053fc <changespeedM1>
		  changespeedM2(&motorStop,MIN_Duty_cycle);
 8002d42:	2100      	movs	r1, #0
 8002d44:	487f      	ldr	r0, [pc, #508]	; (8002f44 <main+0x614>)
 8002d46:	f002 fb73 	bl	8005430 <changespeedM2>
		  changespeedM3(&motorStop,MIN_Duty_cycle);
 8002d4a:	2100      	movs	r1, #0
 8002d4c:	487d      	ldr	r0, [pc, #500]	; (8002f44 <main+0x614>)
 8002d4e:	f002 fb89 	bl	8005464 <changespeedM3>
		  changespeedM4(&motorStop,MIN_Duty_cycle);
 8002d52:	2100      	movs	r1, #0
 8002d54:	487b      	ldr	r0, [pc, #492]	; (8002f44 <main+0x614>)
 8002d56:	f002 fb9f 	bl	8005498 <changespeedM4>
		  HAL_IWDG_Refresh(&hiwdg);
 8002d5a:	487b      	ldr	r0, [pc, #492]	; (8002f48 <main+0x618>)
 8002d5c:	f007 fe3d 	bl	800a9da <HAL_IWDG_Refresh>
 8002d60:	e113      	b.n	8002f8a <main+0x65a>
	  }
	  else{
		  if(battery_voltage_float>10 && battery_voltage_float<12.70){ // battery voltage compensation
 8002d62:	4b7a      	ldr	r3, [pc, #488]	; (8002f4c <main+0x61c>)
 8002d64:	edd3 7a00 	vldr	s15, [r3]
 8002d68:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002d6c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002d70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002d74:	f340 80f6 	ble.w	8002f64 <main+0x634>
 8002d78:	4b74      	ldr	r3, [pc, #464]	; (8002f4c <main+0x61c>)
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	4618      	mov	r0, r3
 8002d7e:	f7fd fbaf 	bl	80004e0 <__aeabi_f2d>
 8002d82:	a365      	add	r3, pc, #404	; (adr r3, 8002f18 <main+0x5e8>)
 8002d84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d88:	f7fd fe74 	bl	8000a74 <__aeabi_dcmplt>
 8002d8c:	4603      	mov	r3, r0
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	f000 80e8 	beq.w	8002f64 <main+0x634>
			  Calculated_Throttle1+=(12-battery_voltage_float)*40;
 8002d94:	4b6e      	ldr	r3, [pc, #440]	; (8002f50 <main+0x620>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	ee07 3a90 	vmov	s15, r3
 8002d9c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002da0:	4b6a      	ldr	r3, [pc, #424]	; (8002f4c <main+0x61c>)
 8002da2:	edd3 7a00 	vldr	s15, [r3]
 8002da6:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 8002daa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002dae:	eddf 6a69 	vldr	s13, [pc, #420]	; 8002f54 <main+0x624>
 8002db2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8002db6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002dba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002dbe:	ee17 2a90 	vmov	r2, s15
 8002dc2:	4b63      	ldr	r3, [pc, #396]	; (8002f50 <main+0x620>)
 8002dc4:	601a      	str	r2, [r3, #0]
			  Calculated_Throttle2+=(12-battery_voltage_float)*40;
 8002dc6:	4b64      	ldr	r3, [pc, #400]	; (8002f58 <main+0x628>)
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	ee07 3a90 	vmov	s15, r3
 8002dce:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002dd2:	4b5e      	ldr	r3, [pc, #376]	; (8002f4c <main+0x61c>)
 8002dd4:	edd3 7a00 	vldr	s15, [r3]
 8002dd8:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 8002ddc:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002de0:	eddf 6a5c 	vldr	s13, [pc, #368]	; 8002f54 <main+0x624>
 8002de4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8002de8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002dec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002df0:	ee17 2a90 	vmov	r2, s15
 8002df4:	4b58      	ldr	r3, [pc, #352]	; (8002f58 <main+0x628>)
 8002df6:	601a      	str	r2, [r3, #0]
			  Calculated_Throttle3+=(12-battery_voltage_float)*40;
 8002df8:	4b58      	ldr	r3, [pc, #352]	; (8002f5c <main+0x62c>)
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	ee07 3a90 	vmov	s15, r3
 8002e00:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002e04:	4b51      	ldr	r3, [pc, #324]	; (8002f4c <main+0x61c>)
 8002e06:	edd3 7a00 	vldr	s15, [r3]
 8002e0a:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 8002e0e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002e12:	eddf 6a50 	vldr	s13, [pc, #320]	; 8002f54 <main+0x624>
 8002e16:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8002e1a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002e1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002e22:	ee17 2a90 	vmov	r2, s15
 8002e26:	4b4d      	ldr	r3, [pc, #308]	; (8002f5c <main+0x62c>)
 8002e28:	601a      	str	r2, [r3, #0]
			  Calculated_Throttle4+=(12-battery_voltage_float)*40;
 8002e2a:	4b4d      	ldr	r3, [pc, #308]	; (8002f60 <main+0x630>)
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	ee07 3a90 	vmov	s15, r3
 8002e32:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002e36:	4b45      	ldr	r3, [pc, #276]	; (8002f4c <main+0x61c>)
 8002e38:	edd3 7a00 	vldr	s15, [r3]
 8002e3c:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 8002e40:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002e44:	eddf 6a43 	vldr	s13, [pc, #268]	; 8002f54 <main+0x624>
 8002e48:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8002e4c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002e50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002e54:	ee17 2a90 	vmov	r2, s15
 8002e58:	4b41      	ldr	r3, [pc, #260]	; (8002f60 <main+0x630>)
 8002e5a:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle1<1100) Calculated_Throttle1=1100;
 8002e5c:	4b3c      	ldr	r3, [pc, #240]	; (8002f50 <main+0x620>)
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	f240 424b 	movw	r2, #1099	; 0x44b
 8002e64:	4293      	cmp	r3, r2
 8002e66:	dc03      	bgt.n	8002e70 <main+0x540>
 8002e68:	4b39      	ldr	r3, [pc, #228]	; (8002f50 <main+0x620>)
 8002e6a:	f240 424c 	movw	r2, #1100	; 0x44c
 8002e6e:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle1>1800) Calculated_Throttle1=1800;
 8002e70:	4b37      	ldr	r3, [pc, #220]	; (8002f50 <main+0x620>)
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002e78:	dd03      	ble.n	8002e82 <main+0x552>
 8002e7a:	4b35      	ldr	r3, [pc, #212]	; (8002f50 <main+0x620>)
 8002e7c:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002e80:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle2<1100) Calculated_Throttle2=1100;
 8002e82:	4b35      	ldr	r3, [pc, #212]	; (8002f58 <main+0x628>)
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	f240 424b 	movw	r2, #1099	; 0x44b
 8002e8a:	4293      	cmp	r3, r2
 8002e8c:	dc03      	bgt.n	8002e96 <main+0x566>
 8002e8e:	4b32      	ldr	r3, [pc, #200]	; (8002f58 <main+0x628>)
 8002e90:	f240 424c 	movw	r2, #1100	; 0x44c
 8002e94:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle2>1800) Calculated_Throttle2=1800;
 8002e96:	4b30      	ldr	r3, [pc, #192]	; (8002f58 <main+0x628>)
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002e9e:	dd03      	ble.n	8002ea8 <main+0x578>
 8002ea0:	4b2d      	ldr	r3, [pc, #180]	; (8002f58 <main+0x628>)
 8002ea2:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002ea6:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle3<1100) Calculated_Throttle3=1100;
 8002ea8:	4b2c      	ldr	r3, [pc, #176]	; (8002f5c <main+0x62c>)
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	f240 424b 	movw	r2, #1099	; 0x44b
 8002eb0:	4293      	cmp	r3, r2
 8002eb2:	dc03      	bgt.n	8002ebc <main+0x58c>
 8002eb4:	4b29      	ldr	r3, [pc, #164]	; (8002f5c <main+0x62c>)
 8002eb6:	f240 424c 	movw	r2, #1100	; 0x44c
 8002eba:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle3>1800) Calculated_Throttle3=1800;
 8002ebc:	4b27      	ldr	r3, [pc, #156]	; (8002f5c <main+0x62c>)
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002ec4:	dd03      	ble.n	8002ece <main+0x59e>
 8002ec6:	4b25      	ldr	r3, [pc, #148]	; (8002f5c <main+0x62c>)
 8002ec8:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002ecc:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle4<1100) Calculated_Throttle4=1100;
 8002ece:	4b24      	ldr	r3, [pc, #144]	; (8002f60 <main+0x630>)
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	f240 424b 	movw	r2, #1099	; 0x44b
 8002ed6:	4293      	cmp	r3, r2
 8002ed8:	dc03      	bgt.n	8002ee2 <main+0x5b2>
 8002eda:	4b21      	ldr	r3, [pc, #132]	; (8002f60 <main+0x630>)
 8002edc:	f240 424c 	movw	r2, #1100	; 0x44c
 8002ee0:	601a      	str	r2, [r3, #0]
			  if(Calculated_Throttle4>1800) Calculated_Throttle4=1800;
 8002ee2:	4b1f      	ldr	r3, [pc, #124]	; (8002f60 <main+0x630>)
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8002eea:	dd03      	ble.n	8002ef4 <main+0x5c4>
 8002eec:	4b1c      	ldr	r3, [pc, #112]	; (8002f60 <main+0x630>)
 8002eee:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8002ef2:	601a      	str	r2, [r3, #0]
			  changespeedM1(&Calculated_Throttle1,MIN_Duty_cycle);
 8002ef4:	2100      	movs	r1, #0
 8002ef6:	4816      	ldr	r0, [pc, #88]	; (8002f50 <main+0x620>)
 8002ef8:	f002 fa80 	bl	80053fc <changespeedM1>
			  changespeedM2(&Calculated_Throttle2,MIN_Duty_cycle);
 8002efc:	2100      	movs	r1, #0
 8002efe:	4816      	ldr	r0, [pc, #88]	; (8002f58 <main+0x628>)
 8002f00:	f002 fa96 	bl	8005430 <changespeedM2>
			  changespeedM3(&Calculated_Throttle3,MIN_Duty_cycle);
 8002f04:	2100      	movs	r1, #0
 8002f06:	4815      	ldr	r0, [pc, #84]	; (8002f5c <main+0x62c>)
 8002f08:	f002 faac 	bl	8005464 <changespeedM3>
			  changespeedM4(&Calculated_Throttle4,MIN_Duty_cycle);
 8002f0c:	2100      	movs	r1, #0
 8002f0e:	4814      	ldr	r0, [pc, #80]	; (8002f60 <main+0x630>)
 8002f10:	f002 fac2 	bl	8005498 <changespeedM4>
 8002f14:	e039      	b.n	8002f8a <main+0x65a>
 8002f16:	bf00      	nop
 8002f18:	66666666 	.word	0x66666666
 8002f1c:	40296666 	.word	0x40296666
 8002f20:	20000910 	.word	0x20000910
 8002f24:	20000a8c 	.word	0x20000a8c
 8002f28:	20000a84 	.word	0x20000a84
 8002f2c:	20000994 	.word	0x20000994
 8002f30:	20000998 	.word	0x20000998
 8002f34:	20000a68 	.word	0x20000a68
 8002f38:	20000a6c 	.word	0x20000a6c
 8002f3c:	20000a70 	.word	0x20000a70
 8002f40:	20000992 	.word	0x20000992
 8002f44:	20000080 	.word	0x20000080
 8002f48:	200003ec 	.word	0x200003ec
 8002f4c:	20000084 	.word	0x20000084
 8002f50:	200007c8 	.word	0x200007c8
 8002f54:	42200000 	.word	0x42200000
 8002f58:	200007cc 	.word	0x200007cc
 8002f5c:	200007d0 	.word	0x200007d0
 8002f60:	200007d4 	.word	0x200007d4
		  }
		  else{ // if the battery is belov 10 volts, shut the motors for the sake of li-po battery
			  changespeedM1(&Calculated_Throttle1,MIN_Duty_cycle);
 8002f64:	2100      	movs	r1, #0
 8002f66:	4864      	ldr	r0, [pc, #400]	; (80030f8 <main+0x7c8>)
 8002f68:	f002 fa48 	bl	80053fc <changespeedM1>
			  changespeedM2(&Calculated_Throttle2,MIN_Duty_cycle);
 8002f6c:	2100      	movs	r1, #0
 8002f6e:	4863      	ldr	r0, [pc, #396]	; (80030fc <main+0x7cc>)
 8002f70:	f002 fa5e 	bl	8005430 <changespeedM2>
			  changespeedM3(&Calculated_Throttle3,MIN_Duty_cycle);
 8002f74:	2100      	movs	r1, #0
 8002f76:	4862      	ldr	r0, [pc, #392]	; (8003100 <main+0x7d0>)
 8002f78:	f002 fa74 	bl	8005464 <changespeedM3>
			  changespeedM4(&Calculated_Throttle4,MIN_Duty_cycle);
 8002f7c:	2100      	movs	r1, #0
 8002f7e:	4861      	ldr	r0, [pc, #388]	; (8003104 <main+0x7d4>)
 8002f80:	f002 fa8a 	bl	8005498 <changespeedM4>
			  status=99;
 8002f84:	4b60      	ldr	r3, [pc, #384]	; (8003108 <main+0x7d8>)
 8002f86:	2263      	movs	r2, #99	; 0x63
 8002f88:	801a      	strh	r2, [r3, #0]
		  }

	  }
	  //CONVERT THE ADC READING INTO VOLTAGE  1.012145748987854 is calibration value
	  battery_voltage_float=(float)battery_raw_data /4095*5.7*3.3*(double)1.012145748987854;
 8002f8a:	4b60      	ldr	r3, [pc, #384]	; (800310c <main+0x7dc>)
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	ee07 3a90 	vmov	s15, r3
 8002f92:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002f96:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8003110 <main+0x7e0>
 8002f9a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8002f9e:	ee16 0a90 	vmov	r0, s13
 8002fa2:	f7fd fa9d 	bl	80004e0 <__aeabi_f2d>
 8002fa6:	a34e      	add	r3, pc, #312	; (adr r3, 80030e0 <main+0x7b0>)
 8002fa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002fac:	f7fd faf0 	bl	8000590 <__aeabi_dmul>
 8002fb0:	4602      	mov	r2, r0
 8002fb2:	460b      	mov	r3, r1
 8002fb4:	4610      	mov	r0, r2
 8002fb6:	4619      	mov	r1, r3
 8002fb8:	a34b      	add	r3, pc, #300	; (adr r3, 80030e8 <main+0x7b8>)
 8002fba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002fbe:	f7fd fae7 	bl	8000590 <__aeabi_dmul>
 8002fc2:	4602      	mov	r2, r0
 8002fc4:	460b      	mov	r3, r1
 8002fc6:	4610      	mov	r0, r2
 8002fc8:	4619      	mov	r1, r3
 8002fca:	a349      	add	r3, pc, #292	; (adr r3, 80030f0 <main+0x7c0>)
 8002fcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002fd0:	f7fd fade 	bl	8000590 <__aeabi_dmul>
 8002fd4:	4602      	mov	r2, r0
 8002fd6:	460b      	mov	r3, r1
 8002fd8:	4610      	mov	r0, r2
 8002fda:	4619      	mov	r1, r3
 8002fdc:	f7fd fdb0 	bl	8000b40 <__aeabi_d2f>
 8002fe0:	4603      	mov	r3, r0
 8002fe2:	4a4c      	ldr	r2, [pc, #304]	; (8003114 <main+0x7e4>)
 8002fe4:	6013      	str	r3, [r2, #0]

	  //if 100 ms passed, send information to the ground station, rf_listen is trivial
	  if(!rf_listen && loop_counter%25==0)
 8002fe6:	4b4c      	ldr	r3, [pc, #304]	; (8003118 <main+0x7e8>)
 8002fe8:	781b      	ldrb	r3, [r3, #0]
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d112      	bne.n	8003014 <main+0x6e4>
 8002fee:	4b4b      	ldr	r3, [pc, #300]	; (800311c <main+0x7ec>)
 8002ff0:	6819      	ldr	r1, [r3, #0]
 8002ff2:	4b4b      	ldr	r3, [pc, #300]	; (8003120 <main+0x7f0>)
 8002ff4:	fba3 2301 	umull	r2, r3, r3, r1
 8002ff8:	08da      	lsrs	r2, r3, #3
 8002ffa:	4613      	mov	r3, r2
 8002ffc:	009b      	lsls	r3, r3, #2
 8002ffe:	4413      	add	r3, r2
 8003000:	009a      	lsls	r2, r3, #2
 8003002:	4413      	add	r3, r2
 8003004:	1aca      	subs	r2, r1, r3
 8003006:	2a00      	cmp	r2, #0
 8003008:	d104      	bne.n	8003014 <main+0x6e4>
	  {
		  E220_transmit_payload_DMA(&LoraTX,log_buffer,32);
 800300a:	2220      	movs	r2, #32
 800300c:	4945      	ldr	r1, [pc, #276]	; (8003124 <main+0x7f4>)
 800300e:	4846      	ldr	r0, [pc, #280]	; (8003128 <main+0x7f8>)
 8003010:	f7fe fc9c 	bl	800194c <E220_transmit_payload_DMA>
	  }
	  // fit the information into 32 byte buffer
	  fill_buffer();
 8003014:	f000 fcca 	bl	80039ac <fill_buffer>
	  if(loop_counter%25==0){  /// log the flight data into flash
		  log_write(log_buffer, &address_counter);
	  }
*/

	  baro_read();  //read the barometer (timing will be handled inside this function)
 8003018:	f7ff faf6 	bl	8002608 <baro_read>
	  if(loop_counter%50==5 && loop_counter!=0){
 800301c:	4b3f      	ldr	r3, [pc, #252]	; (800311c <main+0x7ec>)
 800301e:	681a      	ldr	r2, [r3, #0]
 8003020:	4b3f      	ldr	r3, [pc, #252]	; (8003120 <main+0x7f0>)
 8003022:	fba3 1302 	umull	r1, r3, r3, r2
 8003026:	091b      	lsrs	r3, r3, #4
 8003028:	2132      	movs	r1, #50	; 0x32
 800302a:	fb01 f303 	mul.w	r3, r1, r3
 800302e:	1ad3      	subs	r3, r2, r3
 8003030:	2b05      	cmp	r3, #5
 8003032:	d112      	bne.n	800305a <main+0x72a>
 8003034:	4b39      	ldr	r3, [pc, #228]	; (800311c <main+0x7ec>)
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	2b00      	cmp	r3, #0
 800303a:	d00e      	beq.n	800305a <main+0x72a>
		  if(gps_decode(gps_buffer,&latitude,&longitude)==0){ // extract the latitude and longitude information from ubx message
 800303c:	4a3b      	ldr	r2, [pc, #236]	; (800312c <main+0x7fc>)
 800303e:	493c      	ldr	r1, [pc, #240]	; (8003130 <main+0x800>)
 8003040:	483c      	ldr	r0, [pc, #240]	; (8003134 <main+0x804>)
 8003042:	f7fe fd15 	bl	8001a70 <gps_decode>
 8003046:	4603      	mov	r3, r0
 8003048:	2b00      	cmp	r3, #0
 800304a:	d103      	bne.n	8003054 <main+0x724>
			  gps_fix=1;
 800304c:	4b3a      	ldr	r3, [pc, #232]	; (8003138 <main+0x808>)
 800304e:	2201      	movs	r2, #1
 8003050:	701a      	strb	r2, [r3, #0]
 8003052:	e002      	b.n	800305a <main+0x72a>
		  }
		  else gps_fix=0;
 8003054:	4b38      	ldr	r3, [pc, #224]	; (8003138 <main+0x808>)
 8003056:	2200      	movs	r2, #0
 8003058:	701a      	strb	r2, [r3, #0]
	  }


	  compass_read_corrected(); //Read compass data
 800305a:	f7fd ffed 	bl	8001038 <compass_read_corrected>

	  if(_channels[3]<100 && _channels[2]<1100 && _channels[0]>1800 && _channels[1]>1800){
 800305e:	4b37      	ldr	r3, [pc, #220]	; (800313c <main+0x80c>)
 8003060:	68db      	ldr	r3, [r3, #12]
 8003062:	2b63      	cmp	r3, #99	; 0x63
 8003064:	dc10      	bgt.n	8003088 <main+0x758>
 8003066:	4b35      	ldr	r3, [pc, #212]	; (800313c <main+0x80c>)
 8003068:	689b      	ldr	r3, [r3, #8]
 800306a:	f240 424b 	movw	r2, #1099	; 0x44b
 800306e:	4293      	cmp	r3, r2
 8003070:	dc0a      	bgt.n	8003088 <main+0x758>
 8003072:	4b32      	ldr	r3, [pc, #200]	; (800313c <main+0x80c>)
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 800307a:	dd05      	ble.n	8003088 <main+0x758>
 800307c:	4b2f      	ldr	r3, [pc, #188]	; (800313c <main+0x80c>)
 800307e:	685b      	ldr	r3, [r3, #4]
 8003080:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8003084:	dd00      	ble.n	8003088 <main+0x758>
		  while(1); // left joystick (throttle and yaw) down-right and right joystick (pitch and roll) down-right
 8003086:	e7fe      	b.n	8003086 <main+0x756>
		 //this causes mcu to reset
	  }

	  loop_counter++;
 8003088:	4b24      	ldr	r3, [pc, #144]	; (800311c <main+0x7ec>)
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	3301      	adds	r3, #1
 800308e:	4a23      	ldr	r2, [pc, #140]	; (800311c <main+0x7ec>)
 8003090:	6013      	str	r3, [r2, #0]
	  if(loop_counter==1200){
 8003092:	4b22      	ldr	r3, [pc, #136]	; (800311c <main+0x7ec>)
 8003094:	681b      	ldr	r3, [r3, #0]
 8003096:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 800309a:	d102      	bne.n	80030a2 <main+0x772>
		  loop_counter=0;
 800309c:	4b1f      	ldr	r3, [pc, #124]	; (800311c <main+0x7ec>)
 800309e:	2200      	movs	r2, #0
 80030a0:	601a      	str	r2, [r3, #0]
	  }
	  timex=htim3.Instance->CNT-time1;       //how much time did it take the code to come here
 80030a2:	4b27      	ldr	r3, [pc, #156]	; (8003140 <main+0x810>)
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80030a8:	4b26      	ldr	r3, [pc, #152]	; (8003144 <main+0x814>)
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	1ad3      	subs	r3, r2, r3
 80030ae:	4a26      	ldr	r2, [pc, #152]	; (8003148 <main+0x818>)
 80030b0:	6013      	str	r3, [r2, #0]
	  while((htim3.Instance->CNT-time1)<=4000){  //wait until 4ms passes
 80030b2:	bf00      	nop
 80030b4:	4b22      	ldr	r3, [pc, #136]	; (8003140 <main+0x810>)
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80030ba:	4b22      	ldr	r3, [pc, #136]	; (8003144 <main+0x814>)
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	1ad3      	subs	r3, r2, r3
 80030c0:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 80030c4:	d9f6      	bls.n	80030b4 <main+0x784>
	  }
	  time2=(htim3.Instance->CNT-time1);   //how much time did the main loop take
 80030c6:	4b1e      	ldr	r3, [pc, #120]	; (8003140 <main+0x810>)
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80030cc:	4b1d      	ldr	r3, [pc, #116]	; (8003144 <main+0x814>)
 80030ce:	681b      	ldr	r3, [r3, #0]
 80030d0:	1ad3      	subs	r3, r2, r3
 80030d2:	4a1e      	ldr	r2, [pc, #120]	; (800314c <main+0x81c>)
 80030d4:	6013      	str	r3, [r2, #0]
	  HAL_IWDG_Refresh(&hiwdg);       //feed the watchdog timer
 80030d6:	481e      	ldr	r0, [pc, #120]	; (8003150 <main+0x820>)
 80030d8:	f007 fc7f 	bl	800a9da <HAL_IWDG_Refresh>
	  htim3.Instance->CNT=0;         // reset timer
 80030dc:	e4a2      	b.n	8002a24 <main+0xf4>
 80030de:	bf00      	nop
 80030e0:	cccccccd 	.word	0xcccccccd
 80030e4:	4016cccc 	.word	0x4016cccc
 80030e8:	66666666 	.word	0x66666666
 80030ec:	400a6666 	.word	0x400a6666
 80030f0:	bdab031b 	.word	0xbdab031b
 80030f4:	3ff031bf 	.word	0x3ff031bf
 80030f8:	200007c8 	.word	0x200007c8
 80030fc:	200007cc 	.word	0x200007cc
 8003100:	200007d0 	.word	0x200007d0
 8003104:	200007d4 	.word	0x200007d4
 8003108:	20000992 	.word	0x20000992
 800310c:	20000940 	.word	0x20000940
 8003110:	457ff000 	.word	0x457ff000
 8003114:	20000084 	.word	0x20000084
 8003118:	200008f0 	.word	0x200008f0
 800311c:	200007e4 	.word	0x200007e4
 8003120:	51eb851f 	.word	0x51eb851f
 8003124:	20000970 	.word	0x20000970
 8003128:	200008dc 	.word	0x200008dc
 800312c:	20000244 	.word	0x20000244
 8003130:	20000240 	.word	0x20000240
 8003134:	200009bc 	.word	0x200009bc
 8003138:	20000a8c 	.word	0x20000a8c
 800313c:	20000910 	.word	0x20000910
 8003140:	20000488 	.word	0x20000488
 8003144:	200007d8 	.word	0x200007d8
 8003148:	200007e0 	.word	0x200007e0
 800314c:	200007dc 	.word	0x200007dc
 8003150:	200003ec 	.word	0x200003ec

08003154 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003154:	b580      	push	{r7, lr}
 8003156:	b094      	sub	sp, #80	; 0x50
 8003158:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800315a:	f107 031c 	add.w	r3, r7, #28
 800315e:	2234      	movs	r2, #52	; 0x34
 8003160:	2100      	movs	r1, #0
 8003162:	4618      	mov	r0, r3
 8003164:	f00a fbb8 	bl	800d8d8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003168:	f107 0308 	add.w	r3, r7, #8
 800316c:	2200      	movs	r2, #0
 800316e:	601a      	str	r2, [r3, #0]
 8003170:	605a      	str	r2, [r3, #4]
 8003172:	609a      	str	r2, [r3, #8]
 8003174:	60da      	str	r2, [r3, #12]
 8003176:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8003178:	2300      	movs	r3, #0
 800317a:	607b      	str	r3, [r7, #4]
 800317c:	4b29      	ldr	r3, [pc, #164]	; (8003224 <SystemClock_Config+0xd0>)
 800317e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003180:	4a28      	ldr	r2, [pc, #160]	; (8003224 <SystemClock_Config+0xd0>)
 8003182:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003186:	6413      	str	r3, [r2, #64]	; 0x40
 8003188:	4b26      	ldr	r3, [pc, #152]	; (8003224 <SystemClock_Config+0xd0>)
 800318a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800318c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003190:	607b      	str	r3, [r7, #4]
 8003192:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003194:	2300      	movs	r3, #0
 8003196:	603b      	str	r3, [r7, #0]
 8003198:	4b23      	ldr	r3, [pc, #140]	; (8003228 <SystemClock_Config+0xd4>)
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	4a22      	ldr	r2, [pc, #136]	; (8003228 <SystemClock_Config+0xd4>)
 800319e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80031a2:	6013      	str	r3, [r2, #0]
 80031a4:	4b20      	ldr	r3, [pc, #128]	; (8003228 <SystemClock_Config+0xd4>)
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80031ac:	603b      	str	r3, [r7, #0]
 80031ae:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 80031b0:	230a      	movs	r3, #10
 80031b2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80031b4:	2301      	movs	r3, #1
 80031b6:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80031b8:	2310      	movs	r3, #16
 80031ba:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80031bc:	2301      	movs	r3, #1
 80031be:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80031c0:	2302      	movs	r3, #2
 80031c2:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80031c4:	2300      	movs	r3, #0
 80031c6:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 80031c8:	2308      	movs	r3, #8
 80031ca:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 96;
 80031cc:	2360      	movs	r3, #96	; 0x60
 80031ce:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80031d0:	2302      	movs	r3, #2
 80031d2:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80031d4:	2304      	movs	r3, #4
 80031d6:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80031d8:	2302      	movs	r3, #2
 80031da:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80031dc:	f107 031c 	add.w	r3, r7, #28
 80031e0:	4618      	mov	r0, r3
 80031e2:	f007 fdeb 	bl	800adbc <HAL_RCC_OscConfig>
 80031e6:	4603      	mov	r3, r0
 80031e8:	2b00      	cmp	r3, #0
 80031ea:	d001      	beq.n	80031f0 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80031ec:	f000 fd62 	bl	8003cb4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80031f0:	230f      	movs	r3, #15
 80031f2:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80031f4:	2302      	movs	r3, #2
 80031f6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80031f8:	2300      	movs	r3, #0
 80031fa:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80031fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003200:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003202:	2300      	movs	r3, #0
 8003204:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8003206:	f107 0308 	add.w	r3, r7, #8
 800320a:	2103      	movs	r1, #3
 800320c:	4618      	mov	r0, r3
 800320e:	f007 fbf5 	bl	800a9fc <HAL_RCC_ClockConfig>
 8003212:	4603      	mov	r3, r0
 8003214:	2b00      	cmp	r3, #0
 8003216:	d001      	beq.n	800321c <SystemClock_Config+0xc8>
  {
    Error_Handler();
 8003218:	f000 fd4c 	bl	8003cb4 <Error_Handler>
  }
}
 800321c:	bf00      	nop
 800321e:	3750      	adds	r7, #80	; 0x50
 8003220:	46bd      	mov	sp, r7
 8003222:	bd80      	pop	{r7, pc}
 8003224:	40023800 	.word	0x40023800
 8003228:	40007000 	.word	0x40007000

0800322c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 800322c:	b580      	push	{r7, lr}
 800322e:	b084      	sub	sp, #16
 8003230:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8003232:	463b      	mov	r3, r7
 8003234:	2200      	movs	r2, #0
 8003236:	601a      	str	r2, [r3, #0]
 8003238:	605a      	str	r2, [r3, #4]
 800323a:	609a      	str	r2, [r3, #8]
 800323c:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 800323e:	4b21      	ldr	r3, [pc, #132]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003240:	4a21      	ldr	r2, [pc, #132]	; (80032c8 <MX_ADC1_Init+0x9c>)
 8003242:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8003244:	4b1f      	ldr	r3, [pc, #124]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003246:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800324a:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800324c:	4b1d      	ldr	r3, [pc, #116]	; (80032c4 <MX_ADC1_Init+0x98>)
 800324e:	2200      	movs	r2, #0
 8003250:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8003252:	4b1c      	ldr	r3, [pc, #112]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003254:	2200      	movs	r2, #0
 8003256:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8003258:	4b1a      	ldr	r3, [pc, #104]	; (80032c4 <MX_ADC1_Init+0x98>)
 800325a:	2201      	movs	r2, #1
 800325c:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800325e:	4b19      	ldr	r3, [pc, #100]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003260:	2200      	movs	r2, #0
 8003262:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8003266:	4b17      	ldr	r3, [pc, #92]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003268:	2200      	movs	r2, #0
 800326a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800326c:	4b15      	ldr	r3, [pc, #84]	; (80032c4 <MX_ADC1_Init+0x98>)
 800326e:	4a17      	ldr	r2, [pc, #92]	; (80032cc <MX_ADC1_Init+0xa0>)
 8003270:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8003272:	4b14      	ldr	r3, [pc, #80]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003274:	2200      	movs	r2, #0
 8003276:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8003278:	4b12      	ldr	r3, [pc, #72]	; (80032c4 <MX_ADC1_Init+0x98>)
 800327a:	2201      	movs	r2, #1
 800327c:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 800327e:	4b11      	ldr	r3, [pc, #68]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003280:	2201      	movs	r2, #1
 8003282:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8003286:	4b0f      	ldr	r3, [pc, #60]	; (80032c4 <MX_ADC1_Init+0x98>)
 8003288:	2201      	movs	r2, #1
 800328a:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800328c:	480d      	ldr	r0, [pc, #52]	; (80032c4 <MX_ADC1_Init+0x98>)
 800328e:	f004 f877 	bl	8007380 <HAL_ADC_Init>
 8003292:	4603      	mov	r3, r0
 8003294:	2b00      	cmp	r3, #0
 8003296:	d001      	beq.n	800329c <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8003298:	f000 fd0c 	bl	8003cb4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_9;
 800329c:	2309      	movs	r3, #9
 800329e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80032a0:	2301      	movs	r3, #1
 80032a2:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80032a4:	2307      	movs	r3, #7
 80032a6:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80032a8:	463b      	mov	r3, r7
 80032aa:	4619      	mov	r1, r3
 80032ac:	4805      	ldr	r0, [pc, #20]	; (80032c4 <MX_ADC1_Init+0x98>)
 80032ae:	f004 f9b9 	bl	8007624 <HAL_ADC_ConfigChannel>
 80032b2:	4603      	mov	r3, r0
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d001      	beq.n	80032bc <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 80032b8:	f000 fcfc 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80032bc:	bf00      	nop
 80032be:	3710      	adds	r7, #16
 80032c0:	46bd      	mov	sp, r7
 80032c2:	bd80      	pop	{r7, pc}
 80032c4:	20000248 	.word	0x20000248
 80032c8:	40012000 	.word	0x40012000
 80032cc:	0f000001 	.word	0x0f000001

080032d0 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80032d0:	b580      	push	{r7, lr}
 80032d2:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80032d4:	4b12      	ldr	r3, [pc, #72]	; (8003320 <MX_I2C1_Init+0x50>)
 80032d6:	4a13      	ldr	r2, [pc, #76]	; (8003324 <MX_I2C1_Init+0x54>)
 80032d8:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80032da:	4b11      	ldr	r3, [pc, #68]	; (8003320 <MX_I2C1_Init+0x50>)
 80032dc:	4a12      	ldr	r2, [pc, #72]	; (8003328 <MX_I2C1_Init+0x58>)
 80032de:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80032e0:	4b0f      	ldr	r3, [pc, #60]	; (8003320 <MX_I2C1_Init+0x50>)
 80032e2:	2200      	movs	r2, #0
 80032e4:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80032e6:	4b0e      	ldr	r3, [pc, #56]	; (8003320 <MX_I2C1_Init+0x50>)
 80032e8:	2200      	movs	r2, #0
 80032ea:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80032ec:	4b0c      	ldr	r3, [pc, #48]	; (8003320 <MX_I2C1_Init+0x50>)
 80032ee:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80032f2:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80032f4:	4b0a      	ldr	r3, [pc, #40]	; (8003320 <MX_I2C1_Init+0x50>)
 80032f6:	2200      	movs	r2, #0
 80032f8:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80032fa:	4b09      	ldr	r3, [pc, #36]	; (8003320 <MX_I2C1_Init+0x50>)
 80032fc:	2200      	movs	r2, #0
 80032fe:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003300:	4b07      	ldr	r3, [pc, #28]	; (8003320 <MX_I2C1_Init+0x50>)
 8003302:	2200      	movs	r2, #0
 8003304:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003306:	4b06      	ldr	r3, [pc, #24]	; (8003320 <MX_I2C1_Init+0x50>)
 8003308:	2200      	movs	r2, #0
 800330a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800330c:	4804      	ldr	r0, [pc, #16]	; (8003320 <MX_I2C1_Init+0x50>)
 800330e:	f005 febf 	bl	8009090 <HAL_I2C_Init>
 8003312:	4603      	mov	r3, r0
 8003314:	2b00      	cmp	r3, #0
 8003316:	d001      	beq.n	800331c <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8003318:	f000 fccc 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800331c:	bf00      	nop
 800331e:	bd80      	pop	{r7, pc}
 8003320:	200002f0 	.word	0x200002f0
 8003324:	40005400 	.word	0x40005400
 8003328:	00061a80 	.word	0x00061a80

0800332c <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 800332c:	b580      	push	{r7, lr}
 800332e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8003330:	4b12      	ldr	r3, [pc, #72]	; (800337c <MX_I2C2_Init+0x50>)
 8003332:	4a13      	ldr	r2, [pc, #76]	; (8003380 <MX_I2C2_Init+0x54>)
 8003334:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 400000;
 8003336:	4b11      	ldr	r3, [pc, #68]	; (800337c <MX_I2C2_Init+0x50>)
 8003338:	4a12      	ldr	r2, [pc, #72]	; (8003384 <MX_I2C2_Init+0x58>)
 800333a:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800333c:	4b0f      	ldr	r3, [pc, #60]	; (800337c <MX_I2C2_Init+0x50>)
 800333e:	2200      	movs	r2, #0
 8003340:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 8003342:	4b0e      	ldr	r3, [pc, #56]	; (800337c <MX_I2C2_Init+0x50>)
 8003344:	2200      	movs	r2, #0
 8003346:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8003348:	4b0c      	ldr	r3, [pc, #48]	; (800337c <MX_I2C2_Init+0x50>)
 800334a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800334e:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003350:	4b0a      	ldr	r3, [pc, #40]	; (800337c <MX_I2C2_Init+0x50>)
 8003352:	2200      	movs	r2, #0
 8003354:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8003356:	4b09      	ldr	r3, [pc, #36]	; (800337c <MX_I2C2_Init+0x50>)
 8003358:	2200      	movs	r2, #0
 800335a:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800335c:	4b07      	ldr	r3, [pc, #28]	; (800337c <MX_I2C2_Init+0x50>)
 800335e:	2200      	movs	r2, #0
 8003360:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8003362:	4b06      	ldr	r3, [pc, #24]	; (800337c <MX_I2C2_Init+0x50>)
 8003364:	2200      	movs	r2, #0
 8003366:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8003368:	4804      	ldr	r0, [pc, #16]	; (800337c <MX_I2C2_Init+0x50>)
 800336a:	f005 fe91 	bl	8009090 <HAL_I2C_Init>
 800336e:	4603      	mov	r3, r0
 8003370:	2b00      	cmp	r3, #0
 8003372:	d001      	beq.n	8003378 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8003374:	f000 fc9e 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8003378:	bf00      	nop
 800337a:	bd80      	pop	{r7, pc}
 800337c:	20000344 	.word	0x20000344
 8003380:	40005800 	.word	0x40005800
 8003384:	00061a80 	.word	0x00061a80

08003388 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 8003388:	b580      	push	{r7, lr}
 800338a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 800338c:	4b12      	ldr	r3, [pc, #72]	; (80033d8 <MX_I2C3_Init+0x50>)
 800338e:	4a13      	ldr	r2, [pc, #76]	; (80033dc <MX_I2C3_Init+0x54>)
 8003390:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 400000;
 8003392:	4b11      	ldr	r3, [pc, #68]	; (80033d8 <MX_I2C3_Init+0x50>)
 8003394:	4a12      	ldr	r2, [pc, #72]	; (80033e0 <MX_I2C3_Init+0x58>)
 8003396:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8003398:	4b0f      	ldr	r3, [pc, #60]	; (80033d8 <MX_I2C3_Init+0x50>)
 800339a:	2200      	movs	r2, #0
 800339c:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 800339e:	4b0e      	ldr	r3, [pc, #56]	; (80033d8 <MX_I2C3_Init+0x50>)
 80033a0:	2200      	movs	r2, #0
 80033a2:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80033a4:	4b0c      	ldr	r3, [pc, #48]	; (80033d8 <MX_I2C3_Init+0x50>)
 80033a6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80033aa:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80033ac:	4b0a      	ldr	r3, [pc, #40]	; (80033d8 <MX_I2C3_Init+0x50>)
 80033ae:	2200      	movs	r2, #0
 80033b0:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 80033b2:	4b09      	ldr	r3, [pc, #36]	; (80033d8 <MX_I2C3_Init+0x50>)
 80033b4:	2200      	movs	r2, #0
 80033b6:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80033b8:	4b07      	ldr	r3, [pc, #28]	; (80033d8 <MX_I2C3_Init+0x50>)
 80033ba:	2200      	movs	r2, #0
 80033bc:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80033be:	4b06      	ldr	r3, [pc, #24]	; (80033d8 <MX_I2C3_Init+0x50>)
 80033c0:	2200      	movs	r2, #0
 80033c2:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80033c4:	4804      	ldr	r0, [pc, #16]	; (80033d8 <MX_I2C3_Init+0x50>)
 80033c6:	f005 fe63 	bl	8009090 <HAL_I2C_Init>
 80033ca:	4603      	mov	r3, r0
 80033cc:	2b00      	cmp	r3, #0
 80033ce:	d001      	beq.n	80033d4 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 80033d0:	f000 fc70 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 80033d4:	bf00      	nop
 80033d6:	bd80      	pop	{r7, pc}
 80033d8:	20000398 	.word	0x20000398
 80033dc:	40005c00 	.word	0x40005c00
 80033e0:	00061a80 	.word	0x00061a80

080033e4 <MX_IWDG_Init>:
  * @brief IWDG Initialization Function
  * @param None
  * @retval None
  */
static void MX_IWDG_Init(void)
{
 80033e4:	b580      	push	{r7, lr}
 80033e6:	af00      	add	r7, sp, #0
  /* USER CODE END IWDG_Init 0 */

  /* USER CODE BEGIN IWDG_Init 1 */

  /* USER CODE END IWDG_Init 1 */
  hiwdg.Instance = IWDG;
 80033e8:	4b09      	ldr	r3, [pc, #36]	; (8003410 <MX_IWDG_Init+0x2c>)
 80033ea:	4a0a      	ldr	r2, [pc, #40]	; (8003414 <MX_IWDG_Init+0x30>)
 80033ec:	601a      	str	r2, [r3, #0]
  hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 80033ee:	4b08      	ldr	r3, [pc, #32]	; (8003410 <MX_IWDG_Init+0x2c>)
 80033f0:	2200      	movs	r2, #0
 80033f2:	605a      	str	r2, [r3, #4]
  hiwdg.Init.Reload = 36;
 80033f4:	4b06      	ldr	r3, [pc, #24]	; (8003410 <MX_IWDG_Init+0x2c>)
 80033f6:	2224      	movs	r2, #36	; 0x24
 80033f8:	609a      	str	r2, [r3, #8]
  if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 80033fa:	4805      	ldr	r0, [pc, #20]	; (8003410 <MX_IWDG_Init+0x2c>)
 80033fc:	f007 faab 	bl	800a956 <HAL_IWDG_Init>
 8003400:	4603      	mov	r3, r0
 8003402:	2b00      	cmp	r3, #0
 8003404:	d001      	beq.n	800340a <MX_IWDG_Init+0x26>
  {
    Error_Handler();
 8003406:	f000 fc55 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN IWDG_Init 2 */

  /* USER CODE END IWDG_Init 2 */

}
 800340a:	bf00      	nop
 800340c:	bd80      	pop	{r7, pc}
 800340e:	bf00      	nop
 8003410:	200003ec 	.word	0x200003ec
 8003414:	40003000 	.word	0x40003000

08003418 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8003418:	b580      	push	{r7, lr}
 800341a:	b092      	sub	sp, #72	; 0x48
 800341c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800341e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003422:	2200      	movs	r2, #0
 8003424:	601a      	str	r2, [r3, #0]
 8003426:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003428:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800342c:	2200      	movs	r2, #0
 800342e:	601a      	str	r2, [r3, #0]
 8003430:	605a      	str	r2, [r3, #4]
 8003432:	609a      	str	r2, [r3, #8]
 8003434:	60da      	str	r2, [r3, #12]
 8003436:	611a      	str	r2, [r3, #16]
 8003438:	615a      	str	r2, [r3, #20]
 800343a:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800343c:	1d3b      	adds	r3, r7, #4
 800343e:	2220      	movs	r2, #32
 8003440:	2100      	movs	r1, #0
 8003442:	4618      	mov	r0, r3
 8003444:	f00a fa48 	bl	800d8d8 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8003448:	4b45      	ldr	r3, [pc, #276]	; (8003560 <MX_TIM1_Init+0x148>)
 800344a:	4a46      	ldr	r2, [pc, #280]	; (8003564 <MX_TIM1_Init+0x14c>)
 800344c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 96-1;
 800344e:	4b44      	ldr	r3, [pc, #272]	; (8003560 <MX_TIM1_Init+0x148>)
 8003450:	225f      	movs	r2, #95	; 0x5f
 8003452:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003454:	4b42      	ldr	r3, [pc, #264]	; (8003560 <MX_TIM1_Init+0x148>)
 8003456:	2200      	movs	r2, #0
 8003458:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 1999-1;
 800345a:	4b41      	ldr	r3, [pc, #260]	; (8003560 <MX_TIM1_Init+0x148>)
 800345c:	f240 72ce 	movw	r2, #1998	; 0x7ce
 8003460:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003462:	4b3f      	ldr	r3, [pc, #252]	; (8003560 <MX_TIM1_Init+0x148>)
 8003464:	2200      	movs	r2, #0
 8003466:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8003468:	4b3d      	ldr	r3, [pc, #244]	; (8003560 <MX_TIM1_Init+0x148>)
 800346a:	2200      	movs	r2, #0
 800346c:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800346e:	4b3c      	ldr	r3, [pc, #240]	; (8003560 <MX_TIM1_Init+0x148>)
 8003470:	2200      	movs	r2, #0
 8003472:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8003474:	483a      	ldr	r0, [pc, #232]	; (8003560 <MX_TIM1_Init+0x148>)
 8003476:	f007 ffdd 	bl	800b434 <HAL_TIM_PWM_Init>
 800347a:	4603      	mov	r3, r0
 800347c:	2b00      	cmp	r3, #0
 800347e:	d001      	beq.n	8003484 <MX_TIM1_Init+0x6c>
  {
    Error_Handler();
 8003480:	f000 fc18 	bl	8003cb4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003484:	2300      	movs	r3, #0
 8003486:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003488:	2300      	movs	r3, #0
 800348a:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800348c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003490:	4619      	mov	r1, r3
 8003492:	4833      	ldr	r0, [pc, #204]	; (8003560 <MX_TIM1_Init+0x148>)
 8003494:	f008 fd80 	bl	800bf98 <HAL_TIMEx_MasterConfigSynchronization>
 8003498:	4603      	mov	r3, r0
 800349a:	2b00      	cmp	r3, #0
 800349c:	d001      	beq.n	80034a2 <MX_TIM1_Init+0x8a>
  {
    Error_Handler();
 800349e:	f000 fc09 	bl	8003cb4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80034a2:	2360      	movs	r3, #96	; 0x60
 80034a4:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 80034a6:	2300      	movs	r3, #0
 80034a8:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80034aa:	2300      	movs	r3, #0
 80034ac:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80034ae:	2300      	movs	r3, #0
 80034b0:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80034b2:	2300      	movs	r3, #0
 80034b4:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80034b6:	2300      	movs	r3, #0
 80034b8:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80034ba:	2300      	movs	r3, #0
 80034bc:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80034be:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80034c2:	2200      	movs	r2, #0
 80034c4:	4619      	mov	r1, r3
 80034c6:	4826      	ldr	r0, [pc, #152]	; (8003560 <MX_TIM1_Init+0x148>)
 80034c8:	f008 f8cc 	bl	800b664 <HAL_TIM_PWM_ConfigChannel>
 80034cc:	4603      	mov	r3, r0
 80034ce:	2b00      	cmp	r3, #0
 80034d0:	d001      	beq.n	80034d6 <MX_TIM1_Init+0xbe>
  {
    Error_Handler();
 80034d2:	f000 fbef 	bl	8003cb4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80034d6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80034da:	2204      	movs	r2, #4
 80034dc:	4619      	mov	r1, r3
 80034de:	4820      	ldr	r0, [pc, #128]	; (8003560 <MX_TIM1_Init+0x148>)
 80034e0:	f008 f8c0 	bl	800b664 <HAL_TIM_PWM_ConfigChannel>
 80034e4:	4603      	mov	r3, r0
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	d001      	beq.n	80034ee <MX_TIM1_Init+0xd6>
  {
    Error_Handler();
 80034ea:	f000 fbe3 	bl	8003cb4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80034ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80034f2:	2208      	movs	r2, #8
 80034f4:	4619      	mov	r1, r3
 80034f6:	481a      	ldr	r0, [pc, #104]	; (8003560 <MX_TIM1_Init+0x148>)
 80034f8:	f008 f8b4 	bl	800b664 <HAL_TIM_PWM_ConfigChannel>
 80034fc:	4603      	mov	r3, r0
 80034fe:	2b00      	cmp	r3, #0
 8003500:	d001      	beq.n	8003506 <MX_TIM1_Init+0xee>
  {
    Error_Handler();
 8003502:	f000 fbd7 	bl	8003cb4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8003506:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800350a:	220c      	movs	r2, #12
 800350c:	4619      	mov	r1, r3
 800350e:	4814      	ldr	r0, [pc, #80]	; (8003560 <MX_TIM1_Init+0x148>)
 8003510:	f008 f8a8 	bl	800b664 <HAL_TIM_PWM_ConfigChannel>
 8003514:	4603      	mov	r3, r0
 8003516:	2b00      	cmp	r3, #0
 8003518:	d001      	beq.n	800351e <MX_TIM1_Init+0x106>
  {
    Error_Handler();
 800351a:	f000 fbcb 	bl	8003cb4 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800351e:	2300      	movs	r3, #0
 8003520:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8003522:	2300      	movs	r3, #0
 8003524:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8003526:	2300      	movs	r3, #0
 8003528:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800352a:	2300      	movs	r3, #0
 800352c:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800352e:	2300      	movs	r3, #0
 8003530:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8003532:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003536:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8003538:	2300      	movs	r3, #0
 800353a:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800353c:	1d3b      	adds	r3, r7, #4
 800353e:	4619      	mov	r1, r3
 8003540:	4807      	ldr	r0, [pc, #28]	; (8003560 <MX_TIM1_Init+0x148>)
 8003542:	f008 fda5 	bl	800c090 <HAL_TIMEx_ConfigBreakDeadTime>
 8003546:	4603      	mov	r3, r0
 8003548:	2b00      	cmp	r3, #0
 800354a:	d001      	beq.n	8003550 <MX_TIM1_Init+0x138>
  {
    Error_Handler();
 800354c:	f000 fbb2 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8003550:	4803      	ldr	r0, [pc, #12]	; (8003560 <MX_TIM1_Init+0x148>)
 8003552:	f003 fb2d 	bl	8006bb0 <HAL_TIM_MspPostInit>

}
 8003556:	bf00      	nop
 8003558:	3748      	adds	r7, #72	; 0x48
 800355a:	46bd      	mov	sp, r7
 800355c:	bd80      	pop	{r7, pc}
 800355e:	bf00      	nop
 8003560:	200003f8 	.word	0x200003f8
 8003564:	40010000 	.word	0x40010000

08003568 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8003568:	b580      	push	{r7, lr}
 800356a:	b086      	sub	sp, #24
 800356c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800356e:	f107 0308 	add.w	r3, r7, #8
 8003572:	2200      	movs	r2, #0
 8003574:	601a      	str	r2, [r3, #0]
 8003576:	605a      	str	r2, [r3, #4]
 8003578:	609a      	str	r2, [r3, #8]
 800357a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800357c:	463b      	mov	r3, r7
 800357e:	2200      	movs	r2, #0
 8003580:	601a      	str	r2, [r3, #0]
 8003582:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8003584:	4b1d      	ldr	r3, [pc, #116]	; (80035fc <MX_TIM2_Init+0x94>)
 8003586:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800358a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 96-1;
 800358c:	4b1b      	ldr	r3, [pc, #108]	; (80035fc <MX_TIM2_Init+0x94>)
 800358e:	225f      	movs	r2, #95	; 0x5f
 8003590:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003592:	4b1a      	ldr	r3, [pc, #104]	; (80035fc <MX_TIM2_Init+0x94>)
 8003594:	2200      	movs	r2, #0
 8003596:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8003598:	4b18      	ldr	r3, [pc, #96]	; (80035fc <MX_TIM2_Init+0x94>)
 800359a:	f04f 32ff 	mov.w	r2, #4294967295
 800359e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80035a0:	4b16      	ldr	r3, [pc, #88]	; (80035fc <MX_TIM2_Init+0x94>)
 80035a2:	2200      	movs	r2, #0
 80035a4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80035a6:	4b15      	ldr	r3, [pc, #84]	; (80035fc <MX_TIM2_Init+0x94>)
 80035a8:	2200      	movs	r2, #0
 80035aa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80035ac:	4813      	ldr	r0, [pc, #76]	; (80035fc <MX_TIM2_Init+0x94>)
 80035ae:	f007 fe89 	bl	800b2c4 <HAL_TIM_Base_Init>
 80035b2:	4603      	mov	r3, r0
 80035b4:	2b00      	cmp	r3, #0
 80035b6:	d001      	beq.n	80035bc <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80035b8:	f000 fb7c 	bl	8003cb4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80035bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80035c0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80035c2:	f107 0308 	add.w	r3, r7, #8
 80035c6:	4619      	mov	r1, r3
 80035c8:	480c      	ldr	r0, [pc, #48]	; (80035fc <MX_TIM2_Init+0x94>)
 80035ca:	f008 f90d 	bl	800b7e8 <HAL_TIM_ConfigClockSource>
 80035ce:	4603      	mov	r3, r0
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	d001      	beq.n	80035d8 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80035d4:	f000 fb6e 	bl	8003cb4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80035d8:	2300      	movs	r3, #0
 80035da:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80035dc:	2300      	movs	r3, #0
 80035de:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80035e0:	463b      	mov	r3, r7
 80035e2:	4619      	mov	r1, r3
 80035e4:	4805      	ldr	r0, [pc, #20]	; (80035fc <MX_TIM2_Init+0x94>)
 80035e6:	f008 fcd7 	bl	800bf98 <HAL_TIMEx_MasterConfigSynchronization>
 80035ea:	4603      	mov	r3, r0
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d001      	beq.n	80035f4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80035f0:	f000 fb60 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80035f4:	bf00      	nop
 80035f6:	3718      	adds	r7, #24
 80035f8:	46bd      	mov	sp, r7
 80035fa:	bd80      	pop	{r7, pc}
 80035fc:	20000440 	.word	0x20000440

08003600 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8003600:	b580      	push	{r7, lr}
 8003602:	b086      	sub	sp, #24
 8003604:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003606:	f107 0308 	add.w	r3, r7, #8
 800360a:	2200      	movs	r2, #0
 800360c:	601a      	str	r2, [r3, #0]
 800360e:	605a      	str	r2, [r3, #4]
 8003610:	609a      	str	r2, [r3, #8]
 8003612:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003614:	463b      	mov	r3, r7
 8003616:	2200      	movs	r2, #0
 8003618:	601a      	str	r2, [r3, #0]
 800361a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800361c:	4b1d      	ldr	r3, [pc, #116]	; (8003694 <MX_TIM3_Init+0x94>)
 800361e:	4a1e      	ldr	r2, [pc, #120]	; (8003698 <MX_TIM3_Init+0x98>)
 8003620:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 96-1;
 8003622:	4b1c      	ldr	r3, [pc, #112]	; (8003694 <MX_TIM3_Init+0x94>)
 8003624:	225f      	movs	r2, #95	; 0x5f
 8003626:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003628:	4b1a      	ldr	r3, [pc, #104]	; (8003694 <MX_TIM3_Init+0x94>)
 800362a:	2200      	movs	r2, #0
 800362c:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 800362e:	4b19      	ldr	r3, [pc, #100]	; (8003694 <MX_TIM3_Init+0x94>)
 8003630:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003634:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003636:	4b17      	ldr	r3, [pc, #92]	; (8003694 <MX_TIM3_Init+0x94>)
 8003638:	2200      	movs	r2, #0
 800363a:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800363c:	4b15      	ldr	r3, [pc, #84]	; (8003694 <MX_TIM3_Init+0x94>)
 800363e:	2200      	movs	r2, #0
 8003640:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8003642:	4814      	ldr	r0, [pc, #80]	; (8003694 <MX_TIM3_Init+0x94>)
 8003644:	f007 fe3e 	bl	800b2c4 <HAL_TIM_Base_Init>
 8003648:	4603      	mov	r3, r0
 800364a:	2b00      	cmp	r3, #0
 800364c:	d001      	beq.n	8003652 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 800364e:	f000 fb31 	bl	8003cb4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003652:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003656:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8003658:	f107 0308 	add.w	r3, r7, #8
 800365c:	4619      	mov	r1, r3
 800365e:	480d      	ldr	r0, [pc, #52]	; (8003694 <MX_TIM3_Init+0x94>)
 8003660:	f008 f8c2 	bl	800b7e8 <HAL_TIM_ConfigClockSource>
 8003664:	4603      	mov	r3, r0
 8003666:	2b00      	cmp	r3, #0
 8003668:	d001      	beq.n	800366e <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 800366a:	f000 fb23 	bl	8003cb4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800366e:	2300      	movs	r3, #0
 8003670:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003672:	2300      	movs	r3, #0
 8003674:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8003676:	463b      	mov	r3, r7
 8003678:	4619      	mov	r1, r3
 800367a:	4806      	ldr	r0, [pc, #24]	; (8003694 <MX_TIM3_Init+0x94>)
 800367c:	f008 fc8c 	bl	800bf98 <HAL_TIMEx_MasterConfigSynchronization>
 8003680:	4603      	mov	r3, r0
 8003682:	2b00      	cmp	r3, #0
 8003684:	d001      	beq.n	800368a <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 8003686:	f000 fb15 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800368a:	bf00      	nop
 800368c:	3718      	adds	r7, #24
 800368e:	46bd      	mov	sp, r7
 8003690:	bd80      	pop	{r7, pc}
 8003692:	bf00      	nop
 8003694:	20000488 	.word	0x20000488
 8003698:	40000400 	.word	0x40000400

0800369c <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 800369c:	b580      	push	{r7, lr}
 800369e:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80036a0:	4b11      	ldr	r3, [pc, #68]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036a2:	4a12      	ldr	r2, [pc, #72]	; (80036ec <MX_UART5_Init+0x50>)
 80036a4:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 9600;
 80036a6:	4b10      	ldr	r3, [pc, #64]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036a8:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80036ac:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80036ae:	4b0e      	ldr	r3, [pc, #56]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036b0:	2200      	movs	r2, #0
 80036b2:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80036b4:	4b0c      	ldr	r3, [pc, #48]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036b6:	2200      	movs	r2, #0
 80036b8:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 80036ba:	4b0b      	ldr	r3, [pc, #44]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036bc:	2200      	movs	r2, #0
 80036be:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 80036c0:	4b09      	ldr	r3, [pc, #36]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036c2:	220c      	movs	r2, #12
 80036c4:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80036c6:	4b08      	ldr	r3, [pc, #32]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036c8:	2200      	movs	r2, #0
 80036ca:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 80036cc:	4b06      	ldr	r3, [pc, #24]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036ce:	2200      	movs	r2, #0
 80036d0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 80036d2:	4805      	ldr	r0, [pc, #20]	; (80036e8 <MX_UART5_Init+0x4c>)
 80036d4:	f008 fd2e 	bl	800c134 <HAL_UART_Init>
 80036d8:	4603      	mov	r3, r0
 80036da:	2b00      	cmp	r3, #0
 80036dc:	d001      	beq.n	80036e2 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 80036de:	f000 fae9 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 80036e2:	bf00      	nop
 80036e4:	bd80      	pop	{r7, pc}
 80036e6:	bf00      	nop
 80036e8:	200004d0 	.word	0x200004d0
 80036ec:	40005000 	.word	0x40005000

080036f0 <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 80036f0:	b580      	push	{r7, lr}
 80036f2:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 80036f4:	4b11      	ldr	r3, [pc, #68]	; (800373c <MX_UART7_Init+0x4c>)
 80036f6:	4a12      	ldr	r2, [pc, #72]	; (8003740 <MX_UART7_Init+0x50>)
 80036f8:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 115200;
 80036fa:	4b10      	ldr	r3, [pc, #64]	; (800373c <MX_UART7_Init+0x4c>)
 80036fc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8003700:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 8003702:	4b0e      	ldr	r3, [pc, #56]	; (800373c <MX_UART7_Init+0x4c>)
 8003704:	2200      	movs	r2, #0
 8003706:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 8003708:	4b0c      	ldr	r3, [pc, #48]	; (800373c <MX_UART7_Init+0x4c>)
 800370a:	2200      	movs	r2, #0
 800370c:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 800370e:	4b0b      	ldr	r3, [pc, #44]	; (800373c <MX_UART7_Init+0x4c>)
 8003710:	2200      	movs	r2, #0
 8003712:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8003714:	4b09      	ldr	r3, [pc, #36]	; (800373c <MX_UART7_Init+0x4c>)
 8003716:	220c      	movs	r2, #12
 8003718:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800371a:	4b08      	ldr	r3, [pc, #32]	; (800373c <MX_UART7_Init+0x4c>)
 800371c:	2200      	movs	r2, #0
 800371e:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 8003720:	4b06      	ldr	r3, [pc, #24]	; (800373c <MX_UART7_Init+0x4c>)
 8003722:	2200      	movs	r2, #0
 8003724:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8003726:	4805      	ldr	r0, [pc, #20]	; (800373c <MX_UART7_Init+0x4c>)
 8003728:	f008 fd04 	bl	800c134 <HAL_UART_Init>
 800372c:	4603      	mov	r3, r0
 800372e:	2b00      	cmp	r3, #0
 8003730:	d001      	beq.n	8003736 <MX_UART7_Init+0x46>
  {
    Error_Handler();
 8003732:	f000 fabf 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 8003736:	bf00      	nop
 8003738:	bd80      	pop	{r7, pc}
 800373a:	bf00      	nop
 800373c:	20000514 	.word	0x20000514
 8003740:	40007800 	.word	0x40007800

08003744 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8003744:	b580      	push	{r7, lr}
 8003746:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8003748:	4b11      	ldr	r3, [pc, #68]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 800374a:	4a12      	ldr	r2, [pc, #72]	; (8003794 <MX_USART2_UART_Init+0x50>)
 800374c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 100000;
 800374e:	4b10      	ldr	r3, [pc, #64]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 8003750:	4a11      	ldr	r2, [pc, #68]	; (8003798 <MX_USART2_UART_Init+0x54>)
 8003752:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8003754:	4b0e      	ldr	r3, [pc, #56]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 8003756:	2200      	movs	r2, #0
 8003758:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_2;
 800375a:	4b0d      	ldr	r3, [pc, #52]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 800375c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8003760:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 8003762:	4b0b      	ldr	r3, [pc, #44]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 8003764:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003768:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800376a:	4b09      	ldr	r3, [pc, #36]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 800376c:	220c      	movs	r2, #12
 800376e:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003770:	4b07      	ldr	r3, [pc, #28]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 8003772:	2200      	movs	r2, #0
 8003774:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8003776:	4b06      	ldr	r3, [pc, #24]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 8003778:	2200      	movs	r2, #0
 800377a:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800377c:	4804      	ldr	r0, [pc, #16]	; (8003790 <MX_USART2_UART_Init+0x4c>)
 800377e:	f008 fcd9 	bl	800c134 <HAL_UART_Init>
 8003782:	4603      	mov	r3, r0
 8003784:	2b00      	cmp	r3, #0
 8003786:	d001      	beq.n	800378c <MX_USART2_UART_Init+0x48>
  {
    Error_Handler();
 8003788:	f000 fa94 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800378c:	bf00      	nop
 800378e:	bd80      	pop	{r7, pc}
 8003790:	20000558 	.word	0x20000558
 8003794:	40004400 	.word	0x40004400
 8003798:	000186a0 	.word	0x000186a0

0800379c <MX_USART6_UART_Init>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 800379c:	b580      	push	{r7, lr}
 800379e:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 80037a0:	4b11      	ldr	r3, [pc, #68]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037a2:	4a12      	ldr	r2, [pc, #72]	; (80037ec <MX_USART6_UART_Init+0x50>)
 80037a4:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 9600;
 80037a6:	4b10      	ldr	r3, [pc, #64]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037a8:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80037ac:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 80037ae:	4b0e      	ldr	r3, [pc, #56]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037b0:	2200      	movs	r2, #0
 80037b2:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 80037b4:	4b0c      	ldr	r3, [pc, #48]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037b6:	2200      	movs	r2, #0
 80037b8:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 80037ba:	4b0b      	ldr	r3, [pc, #44]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037bc:	2200      	movs	r2, #0
 80037be:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 80037c0:	4b09      	ldr	r3, [pc, #36]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037c2:	220c      	movs	r2, #12
 80037c4:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80037c6:	4b08      	ldr	r3, [pc, #32]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037c8:	2200      	movs	r2, #0
 80037ca:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 80037cc:	4b06      	ldr	r3, [pc, #24]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037ce:	2200      	movs	r2, #0
 80037d0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart6) != HAL_OK)
 80037d2:	4805      	ldr	r0, [pc, #20]	; (80037e8 <MX_USART6_UART_Init+0x4c>)
 80037d4:	f008 fcae 	bl	800c134 <HAL_UART_Init>
 80037d8:	4603      	mov	r3, r0
 80037da:	2b00      	cmp	r3, #0
 80037dc:	d001      	beq.n	80037e2 <MX_USART6_UART_Init+0x46>
  {
    Error_Handler();
 80037de:	f000 fa69 	bl	8003cb4 <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 80037e2:	bf00      	nop
 80037e4:	bd80      	pop	{r7, pc}
 80037e6:	bf00      	nop
 80037e8:	2000059c 	.word	0x2000059c
 80037ec:	40011400 	.word	0x40011400

080037f0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80037f0:	b580      	push	{r7, lr}
 80037f2:	b082      	sub	sp, #8
 80037f4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80037f6:	2300      	movs	r3, #0
 80037f8:	607b      	str	r3, [r7, #4]
 80037fa:	4b27      	ldr	r3, [pc, #156]	; (8003898 <MX_DMA_Init+0xa8>)
 80037fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80037fe:	4a26      	ldr	r2, [pc, #152]	; (8003898 <MX_DMA_Init+0xa8>)
 8003800:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003804:	6313      	str	r3, [r2, #48]	; 0x30
 8003806:	4b24      	ldr	r3, [pc, #144]	; (8003898 <MX_DMA_Init+0xa8>)
 8003808:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800380a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800380e:	607b      	str	r3, [r7, #4]
 8003810:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8003812:	2300      	movs	r3, #0
 8003814:	603b      	str	r3, [r7, #0]
 8003816:	4b20      	ldr	r3, [pc, #128]	; (8003898 <MX_DMA_Init+0xa8>)
 8003818:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800381a:	4a1f      	ldr	r2, [pc, #124]	; (8003898 <MX_DMA_Init+0xa8>)
 800381c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003820:	6313      	str	r3, [r2, #48]	; 0x30
 8003822:	4b1d      	ldr	r3, [pc, #116]	; (8003898 <MX_DMA_Init+0xa8>)
 8003824:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003826:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800382a:	603b      	str	r3, [r7, #0]
 800382c:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 800382e:	2200      	movs	r2, #0
 8003830:	2100      	movs	r1, #0
 8003832:	200b      	movs	r0, #11
 8003834:	f004 faa5 	bl	8007d82 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8003838:	200b      	movs	r0, #11
 800383a:	f004 fabe 	bl	8007dba <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 800383e:	2200      	movs	r2, #0
 8003840:	2100      	movs	r1, #0
 8003842:	200c      	movs	r0, #12
 8003844:	f004 fa9d 	bl	8007d82 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 8003848:	200c      	movs	r0, #12
 800384a:	f004 fab6 	bl	8007dba <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 800384e:	2200      	movs	r2, #0
 8003850:	2100      	movs	r1, #0
 8003852:	2010      	movs	r0, #16
 8003854:	f004 fa95 	bl	8007d82 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8003858:	2010      	movs	r0, #16
 800385a:	f004 faae 	bl	8007dba <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 800385e:	2200      	movs	r2, #0
 8003860:	2100      	movs	r1, #0
 8003862:	202f      	movs	r0, #47	; 0x2f
 8003864:	f004 fa8d 	bl	8007d82 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8003868:	202f      	movs	r0, #47	; 0x2f
 800386a:	f004 faa6 	bl	8007dba <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800386e:	2200      	movs	r2, #0
 8003870:	2100      	movs	r1, #0
 8003872:	2038      	movs	r0, #56	; 0x38
 8003874:	f004 fa85 	bl	8007d82 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8003878:	2038      	movs	r0, #56	; 0x38
 800387a:	f004 fa9e 	bl	8007dba <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 800387e:	2200      	movs	r2, #0
 8003880:	2100      	movs	r1, #0
 8003882:	203a      	movs	r0, #58	; 0x3a
 8003884:	f004 fa7d 	bl	8007d82 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8003888:	203a      	movs	r0, #58	; 0x3a
 800388a:	f004 fa96 	bl	8007dba <HAL_NVIC_EnableIRQ>

}
 800388e:	bf00      	nop
 8003890:	3708      	adds	r7, #8
 8003892:	46bd      	mov	sp, r7
 8003894:	bd80      	pop	{r7, pc}
 8003896:	bf00      	nop
 8003898:	40023800 	.word	0x40023800

0800389c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800389c:	b580      	push	{r7, lr}
 800389e:	b08a      	sub	sp, #40	; 0x28
 80038a0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80038a2:	f107 0314 	add.w	r3, r7, #20
 80038a6:	2200      	movs	r2, #0
 80038a8:	601a      	str	r2, [r3, #0]
 80038aa:	605a      	str	r2, [r3, #4]
 80038ac:	609a      	str	r2, [r3, #8]
 80038ae:	60da      	str	r2, [r3, #12]
 80038b0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80038b2:	2300      	movs	r3, #0
 80038b4:	613b      	str	r3, [r7, #16]
 80038b6:	4b35      	ldr	r3, [pc, #212]	; (800398c <MX_GPIO_Init+0xf0>)
 80038b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038ba:	4a34      	ldr	r2, [pc, #208]	; (800398c <MX_GPIO_Init+0xf0>)
 80038bc:	f043 0320 	orr.w	r3, r3, #32
 80038c0:	6313      	str	r3, [r2, #48]	; 0x30
 80038c2:	4b32      	ldr	r3, [pc, #200]	; (800398c <MX_GPIO_Init+0xf0>)
 80038c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038c6:	f003 0320 	and.w	r3, r3, #32
 80038ca:	613b      	str	r3, [r7, #16]
 80038cc:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80038ce:	2300      	movs	r3, #0
 80038d0:	60fb      	str	r3, [r7, #12]
 80038d2:	4b2e      	ldr	r3, [pc, #184]	; (800398c <MX_GPIO_Init+0xf0>)
 80038d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038d6:	4a2d      	ldr	r2, [pc, #180]	; (800398c <MX_GPIO_Init+0xf0>)
 80038d8:	f043 0301 	orr.w	r3, r3, #1
 80038dc:	6313      	str	r3, [r2, #48]	; 0x30
 80038de:	4b2b      	ldr	r3, [pc, #172]	; (800398c <MX_GPIO_Init+0xf0>)
 80038e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038e2:	f003 0301 	and.w	r3, r3, #1
 80038e6:	60fb      	str	r3, [r7, #12]
 80038e8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80038ea:	2300      	movs	r3, #0
 80038ec:	60bb      	str	r3, [r7, #8]
 80038ee:	4b27      	ldr	r3, [pc, #156]	; (800398c <MX_GPIO_Init+0xf0>)
 80038f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038f2:	4a26      	ldr	r2, [pc, #152]	; (800398c <MX_GPIO_Init+0xf0>)
 80038f4:	f043 0302 	orr.w	r3, r3, #2
 80038f8:	6313      	str	r3, [r2, #48]	; 0x30
 80038fa:	4b24      	ldr	r3, [pc, #144]	; (800398c <MX_GPIO_Init+0xf0>)
 80038fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038fe:	f003 0302 	and.w	r3, r3, #2
 8003902:	60bb      	str	r3, [r7, #8]
 8003904:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8003906:	2300      	movs	r3, #0
 8003908:	607b      	str	r3, [r7, #4]
 800390a:	4b20      	ldr	r3, [pc, #128]	; (800398c <MX_GPIO_Init+0xf0>)
 800390c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800390e:	4a1f      	ldr	r2, [pc, #124]	; (800398c <MX_GPIO_Init+0xf0>)
 8003910:	f043 0310 	orr.w	r3, r3, #16
 8003914:	6313      	str	r3, [r2, #48]	; 0x30
 8003916:	4b1d      	ldr	r3, [pc, #116]	; (800398c <MX_GPIO_Init+0xf0>)
 8003918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800391a:	f003 0310 	and.w	r3, r3, #16
 800391e:	607b      	str	r3, [r7, #4]
 8003920:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003922:	2300      	movs	r3, #0
 8003924:	603b      	str	r3, [r7, #0]
 8003926:	4b19      	ldr	r3, [pc, #100]	; (800398c <MX_GPIO_Init+0xf0>)
 8003928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800392a:	4a18      	ldr	r2, [pc, #96]	; (800398c <MX_GPIO_Init+0xf0>)
 800392c:	f043 0304 	orr.w	r3, r3, #4
 8003930:	6313      	str	r3, [r2, #48]	; 0x30
 8003932:	4b16      	ldr	r3, [pc, #88]	; (800398c <MX_GPIO_Init+0xf0>)
 8003934:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003936:	f003 0304 	and.w	r3, r3, #4
 800393a:	603b      	str	r3, [r7, #0]
 800393c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED1_Pin|RF_M0_PIN_Pin|RF_M1_PIN_Pin|LED3_Pin
 800393e:	2200      	movs	r2, #0
 8003940:	f644 4181 	movw	r1, #19585	; 0x4c81
 8003944:	4812      	ldr	r0, [pc, #72]	; (8003990 <MX_GPIO_Init+0xf4>)
 8003946:	f005 fb6f 	bl	8009028 <HAL_GPIO_WritePin>
                          |LED2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : LED1_Pin RF_M0_PIN_Pin RF_M1_PIN_Pin LED3_Pin
                           LED2_Pin */
  GPIO_InitStruct.Pin = LED1_Pin|RF_M0_PIN_Pin|RF_M1_PIN_Pin|LED3_Pin
 800394a:	f644 4381 	movw	r3, #19585	; 0x4c81
 800394e:	617b      	str	r3, [r7, #20]
                          |LED2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003950:	2301      	movs	r3, #1
 8003952:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003954:	2300      	movs	r3, #0
 8003956:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003958:	2300      	movs	r3, #0
 800395a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800395c:	f107 0314 	add.w	r3, r7, #20
 8003960:	4619      	mov	r1, r3
 8003962:	480b      	ldr	r0, [pc, #44]	; (8003990 <MX_GPIO_Init+0xf4>)
 8003964:	f005 f8c0 	bl	8008ae8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PE15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8003968:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800396c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800396e:	2300      	movs	r3, #0
 8003970:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003972:	2300      	movs	r3, #0
 8003974:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8003976:	f107 0314 	add.w	r3, r7, #20
 800397a:	4619      	mov	r1, r3
 800397c:	4805      	ldr	r0, [pc, #20]	; (8003994 <MX_GPIO_Init+0xf8>)
 800397e:	f005 f8b3 	bl	8008ae8 <HAL_GPIO_Init>

}
 8003982:	bf00      	nop
 8003984:	3728      	adds	r7, #40	; 0x28
 8003986:	46bd      	mov	sp, r7
 8003988:	bd80      	pop	{r7, pc}
 800398a:	bf00      	nop
 800398c:	40023800 	.word	0x40023800
 8003990:	40020400 	.word	0x40020400
 8003994:	40021000 	.word	0x40021000

08003998 <HAL_UART_TxCpltCallback>:

/* USER CODE BEGIN 4 */

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8003998:	b480      	push	{r7}
 800399a:	b083      	sub	sp, #12
 800399c:	af00      	add	r7, sp, #0
 800399e:	6078      	str	r0, [r7, #4]

	 */
	//HAL_UART_AbortTransmit(huart);
	//E220_receive_payload_DMA(&LoraTX,receive_buffer,32);

}
 80039a0:	bf00      	nop
 80039a2:	370c      	adds	r7, #12
 80039a4:	46bd      	mov	sp, r7
 80039a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039aa:	4770      	bx	lr

080039ac <fill_buffer>:


void fill_buffer()
{
 80039ac:	b580      	push	{r7, lr}
 80039ae:	af00      	add	r7, sp, #0
	log_buffer[0]='!';
 80039b0:	4baf      	ldr	r3, [pc, #700]	; (8003c70 <fill_buffer+0x2c4>)
 80039b2:	2221      	movs	r2, #33	; 0x21
 80039b4:	701a      	strb	r2, [r3, #0]
	log_buffer[1]=0;
 80039b6:	4bae      	ldr	r3, [pc, #696]	; (8003c70 <fill_buffer+0x2c4>)
 80039b8:	2200      	movs	r2, #0
 80039ba:	705a      	strb	r2, [r3, #1]

	log_buffer[3]=(status>>8)&0xFF;
 80039bc:	4bad      	ldr	r3, [pc, #692]	; (8003c74 <fill_buffer+0x2c8>)
 80039be:	881b      	ldrh	r3, [r3, #0]
 80039c0:	0a1b      	lsrs	r3, r3, #8
 80039c2:	b29b      	uxth	r3, r3
 80039c4:	b2da      	uxtb	r2, r3
 80039c6:	4baa      	ldr	r3, [pc, #680]	; (8003c70 <fill_buffer+0x2c4>)
 80039c8:	70da      	strb	r2, [r3, #3]
	log_buffer[2]=(status)&0xFF;
 80039ca:	4baa      	ldr	r3, [pc, #680]	; (8003c74 <fill_buffer+0x2c8>)
 80039cc:	881b      	ldrh	r3, [r3, #0]
 80039ce:	b2da      	uxtb	r2, r3
 80039d0:	4ba7      	ldr	r3, [pc, #668]	; (8003c70 <fill_buffer+0x2c4>)
 80039d2:	709a      	strb	r2, [r3, #2]

	log_buffer[5]=(Calculated_Throttle1>>8)&0xFF;
 80039d4:	4ba8      	ldr	r3, [pc, #672]	; (8003c78 <fill_buffer+0x2cc>)
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	121b      	asrs	r3, r3, #8
 80039da:	b2da      	uxtb	r2, r3
 80039dc:	4ba4      	ldr	r3, [pc, #656]	; (8003c70 <fill_buffer+0x2c4>)
 80039de:	715a      	strb	r2, [r3, #5]
	log_buffer[4]=(Calculated_Throttle1)&0xFF;
 80039e0:	4ba5      	ldr	r3, [pc, #660]	; (8003c78 <fill_buffer+0x2cc>)
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	b2da      	uxtb	r2, r3
 80039e6:	4ba2      	ldr	r3, [pc, #648]	; (8003c70 <fill_buffer+0x2c4>)
 80039e8:	711a      	strb	r2, [r3, #4]

	log_buffer[7]=(Calculated_Throttle2>>8)&0xFF;
 80039ea:	4ba4      	ldr	r3, [pc, #656]	; (8003c7c <fill_buffer+0x2d0>)
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	121b      	asrs	r3, r3, #8
 80039f0:	b2da      	uxtb	r2, r3
 80039f2:	4b9f      	ldr	r3, [pc, #636]	; (8003c70 <fill_buffer+0x2c4>)
 80039f4:	71da      	strb	r2, [r3, #7]
	log_buffer[6]=(Calculated_Throttle2)&0xFF;
 80039f6:	4ba1      	ldr	r3, [pc, #644]	; (8003c7c <fill_buffer+0x2d0>)
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	b2da      	uxtb	r2, r3
 80039fc:	4b9c      	ldr	r3, [pc, #624]	; (8003c70 <fill_buffer+0x2c4>)
 80039fe:	719a      	strb	r2, [r3, #6]

	log_buffer[9]=(Calculated_Throttle3>>8)&0xFF;
 8003a00:	4b9f      	ldr	r3, [pc, #636]	; (8003c80 <fill_buffer+0x2d4>)
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	121b      	asrs	r3, r3, #8
 8003a06:	b2da      	uxtb	r2, r3
 8003a08:	4b99      	ldr	r3, [pc, #612]	; (8003c70 <fill_buffer+0x2c4>)
 8003a0a:	725a      	strb	r2, [r3, #9]
	log_buffer[8]=(Calculated_Throttle3)&0xFF;
 8003a0c:	4b9c      	ldr	r3, [pc, #624]	; (8003c80 <fill_buffer+0x2d4>)
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	b2da      	uxtb	r2, r3
 8003a12:	4b97      	ldr	r3, [pc, #604]	; (8003c70 <fill_buffer+0x2c4>)
 8003a14:	721a      	strb	r2, [r3, #8]

	log_buffer[11]=(Calculated_Throttle4>>8)&0xFF;
 8003a16:	4b9b      	ldr	r3, [pc, #620]	; (8003c84 <fill_buffer+0x2d8>)
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	121b      	asrs	r3, r3, #8
 8003a1c:	b2da      	uxtb	r2, r3
 8003a1e:	4b94      	ldr	r3, [pc, #592]	; (8003c70 <fill_buffer+0x2c4>)
 8003a20:	72da      	strb	r2, [r3, #11]
	log_buffer[10]=(Calculated_Throttle4)&0xFF;
 8003a22:	4b98      	ldr	r3, [pc, #608]	; (8003c84 <fill_buffer+0x2d8>)
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	b2da      	uxtb	r2, r3
 8003a28:	4b91      	ldr	r3, [pc, #580]	; (8003c70 <fill_buffer+0x2c4>)
 8003a2a:	729a      	strb	r2, [r3, #10]

	log_buffer[13]=((int16_t)(battery_voltage_float*100)>>8)&0xFF;
 8003a2c:	4b96      	ldr	r3, [pc, #600]	; (8003c88 <fill_buffer+0x2dc>)
 8003a2e:	edd3 7a00 	vldr	s15, [r3]
 8003a32:	ed9f 7a96 	vldr	s14, [pc, #600]	; 8003c8c <fill_buffer+0x2e0>
 8003a36:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003a3e:	ee17 3a90 	vmov	r3, s15
 8003a42:	b21b      	sxth	r3, r3
 8003a44:	121b      	asrs	r3, r3, #8
 8003a46:	b21b      	sxth	r3, r3
 8003a48:	b2da      	uxtb	r2, r3
 8003a4a:	4b89      	ldr	r3, [pc, #548]	; (8003c70 <fill_buffer+0x2c4>)
 8003a4c:	735a      	strb	r2, [r3, #13]
	log_buffer[12]=((int16_t)(battery_voltage_float*100))&0xFF;
 8003a4e:	4b8e      	ldr	r3, [pc, #568]	; (8003c88 <fill_buffer+0x2dc>)
 8003a50:	edd3 7a00 	vldr	s15, [r3]
 8003a54:	ed9f 7a8d 	vldr	s14, [pc, #564]	; 8003c8c <fill_buffer+0x2e0>
 8003a58:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003a60:	ee17 3a90 	vmov	r3, s15
 8003a64:	b21b      	sxth	r3, r3
 8003a66:	b2da      	uxtb	r2, r3
 8003a68:	4b81      	ldr	r3, [pc, #516]	; (8003c70 <fill_buffer+0x2c4>)
 8003a6a:	731a      	strb	r2, [r3, #12]

	log_buffer[15]=((int16_t)(angle_roll_output*100)>>8)&0xFF;
 8003a6c:	4b88      	ldr	r3, [pc, #544]	; (8003c90 <fill_buffer+0x2e4>)
 8003a6e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003a72:	f04f 0200 	mov.w	r2, #0
 8003a76:	4b87      	ldr	r3, [pc, #540]	; (8003c94 <fill_buffer+0x2e8>)
 8003a78:	f7fc fd8a 	bl	8000590 <__aeabi_dmul>
 8003a7c:	4602      	mov	r2, r0
 8003a7e:	460b      	mov	r3, r1
 8003a80:	4610      	mov	r0, r2
 8003a82:	4619      	mov	r1, r3
 8003a84:	f7fd f834 	bl	8000af0 <__aeabi_d2iz>
 8003a88:	4603      	mov	r3, r0
 8003a8a:	b21b      	sxth	r3, r3
 8003a8c:	121b      	asrs	r3, r3, #8
 8003a8e:	b21b      	sxth	r3, r3
 8003a90:	b2da      	uxtb	r2, r3
 8003a92:	4b77      	ldr	r3, [pc, #476]	; (8003c70 <fill_buffer+0x2c4>)
 8003a94:	73da      	strb	r2, [r3, #15]
	log_buffer[14]=((int16_t)(angle_roll_output*100))&0xFF;
 8003a96:	4b7e      	ldr	r3, [pc, #504]	; (8003c90 <fill_buffer+0x2e4>)
 8003a98:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003a9c:	f04f 0200 	mov.w	r2, #0
 8003aa0:	4b7c      	ldr	r3, [pc, #496]	; (8003c94 <fill_buffer+0x2e8>)
 8003aa2:	f7fc fd75 	bl	8000590 <__aeabi_dmul>
 8003aa6:	4602      	mov	r2, r0
 8003aa8:	460b      	mov	r3, r1
 8003aaa:	4610      	mov	r0, r2
 8003aac:	4619      	mov	r1, r3
 8003aae:	f7fd f81f 	bl	8000af0 <__aeabi_d2iz>
 8003ab2:	4603      	mov	r3, r0
 8003ab4:	b21b      	sxth	r3, r3
 8003ab6:	b2da      	uxtb	r2, r3
 8003ab8:	4b6d      	ldr	r3, [pc, #436]	; (8003c70 <fill_buffer+0x2c4>)
 8003aba:	739a      	strb	r2, [r3, #14]

	log_buffer[17]=((int16_t)(angle_pitch_output*100)>>8)&0xFF;
 8003abc:	4b76      	ldr	r3, [pc, #472]	; (8003c98 <fill_buffer+0x2ec>)
 8003abe:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003ac2:	f04f 0200 	mov.w	r2, #0
 8003ac6:	4b73      	ldr	r3, [pc, #460]	; (8003c94 <fill_buffer+0x2e8>)
 8003ac8:	f7fc fd62 	bl	8000590 <__aeabi_dmul>
 8003acc:	4602      	mov	r2, r0
 8003ace:	460b      	mov	r3, r1
 8003ad0:	4610      	mov	r0, r2
 8003ad2:	4619      	mov	r1, r3
 8003ad4:	f7fd f80c 	bl	8000af0 <__aeabi_d2iz>
 8003ad8:	4603      	mov	r3, r0
 8003ada:	b21b      	sxth	r3, r3
 8003adc:	121b      	asrs	r3, r3, #8
 8003ade:	b21b      	sxth	r3, r3
 8003ae0:	b2da      	uxtb	r2, r3
 8003ae2:	4b63      	ldr	r3, [pc, #396]	; (8003c70 <fill_buffer+0x2c4>)
 8003ae4:	745a      	strb	r2, [r3, #17]
	log_buffer[16]=((int16_t)(angle_pitch_output*100))&0xFF;
 8003ae6:	4b6c      	ldr	r3, [pc, #432]	; (8003c98 <fill_buffer+0x2ec>)
 8003ae8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003aec:	f04f 0200 	mov.w	r2, #0
 8003af0:	4b68      	ldr	r3, [pc, #416]	; (8003c94 <fill_buffer+0x2e8>)
 8003af2:	f7fc fd4d 	bl	8000590 <__aeabi_dmul>
 8003af6:	4602      	mov	r2, r0
 8003af8:	460b      	mov	r3, r1
 8003afa:	4610      	mov	r0, r2
 8003afc:	4619      	mov	r1, r3
 8003afe:	f7fc fff7 	bl	8000af0 <__aeabi_d2iz>
 8003b02:	4603      	mov	r3, r0
 8003b04:	b21b      	sxth	r3, r3
 8003b06:	b2da      	uxtb	r2, r3
 8003b08:	4b59      	ldr	r3, [pc, #356]	; (8003c70 <fill_buffer+0x2c4>)
 8003b0a:	741a      	strb	r2, [r3, #16]

	log_buffer[19]=((int16_t)(heading_corrected*100)>>8)&0xFF;
 8003b0c:	4b63      	ldr	r3, [pc, #396]	; (8003c9c <fill_buffer+0x2f0>)
 8003b0e:	edd3 7a00 	vldr	s15, [r3]
 8003b12:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8003c8c <fill_buffer+0x2e0>
 8003b16:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003b1e:	ee17 3a90 	vmov	r3, s15
 8003b22:	b21b      	sxth	r3, r3
 8003b24:	121b      	asrs	r3, r3, #8
 8003b26:	b21b      	sxth	r3, r3
 8003b28:	b2da      	uxtb	r2, r3
 8003b2a:	4b51      	ldr	r3, [pc, #324]	; (8003c70 <fill_buffer+0x2c4>)
 8003b2c:	74da      	strb	r2, [r3, #19]
	log_buffer[18]=((int16_t)(heading_corrected*100))&0xFF;
 8003b2e:	4b5b      	ldr	r3, [pc, #364]	; (8003c9c <fill_buffer+0x2f0>)
 8003b30:	edd3 7a00 	vldr	s15, [r3]
 8003b34:	ed9f 7a55 	vldr	s14, [pc, #340]	; 8003c8c <fill_buffer+0x2e0>
 8003b38:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003b40:	ee17 3a90 	vmov	r3, s15
 8003b44:	b21b      	sxth	r3, r3
 8003b46:	b2da      	uxtb	r2, r3
 8003b48:	4b49      	ldr	r3, [pc, #292]	; (8003c70 <fill_buffer+0x2c4>)
 8003b4a:	749a      	strb	r2, [r3, #18]

	log_buffer[21]=((uint16_t)(baro_filter_output[0]*10)>>8)&0xFF;
 8003b4c:	4b54      	ldr	r3, [pc, #336]	; (8003ca0 <fill_buffer+0x2f4>)
 8003b4e:	edd3 7a00 	vldr	s15, [r3]
 8003b52:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003b56:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b5a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b5e:	ee17 3a90 	vmov	r3, s15
 8003b62:	b29b      	uxth	r3, r3
 8003b64:	0a1b      	lsrs	r3, r3, #8
 8003b66:	b29b      	uxth	r3, r3
 8003b68:	b2da      	uxtb	r2, r3
 8003b6a:	4b41      	ldr	r3, [pc, #260]	; (8003c70 <fill_buffer+0x2c4>)
 8003b6c:	755a      	strb	r2, [r3, #21]
	log_buffer[20]=((uint16_t)(baro_filter_output[0]*10))&0xFF;
 8003b6e:	4b4c      	ldr	r3, [pc, #304]	; (8003ca0 <fill_buffer+0x2f4>)
 8003b70:	edd3 7a00 	vldr	s15, [r3]
 8003b74:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003b78:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b7c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b80:	ee17 3a90 	vmov	r3, s15
 8003b84:	b29b      	uxth	r3, r3
 8003b86:	b2da      	uxtb	r2, r3
 8003b88:	4b39      	ldr	r3, [pc, #228]	; (8003c70 <fill_buffer+0x2c4>)
 8003b8a:	751a      	strb	r2, [r3, #20]

	log_buffer[23]=((latitude)>>8)&0xFF;
 8003b8c:	4b45      	ldr	r3, [pc, #276]	; (8003ca4 <fill_buffer+0x2f8>)
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	0a1b      	lsrs	r3, r3, #8
 8003b92:	b2da      	uxtb	r2, r3
 8003b94:	4b36      	ldr	r3, [pc, #216]	; (8003c70 <fill_buffer+0x2c4>)
 8003b96:	75da      	strb	r2, [r3, #23]
	log_buffer[22]=((latitude))&0xFF;
 8003b98:	4b42      	ldr	r3, [pc, #264]	; (8003ca4 <fill_buffer+0x2f8>)
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	b2da      	uxtb	r2, r3
 8003b9e:	4b34      	ldr	r3, [pc, #208]	; (8003c70 <fill_buffer+0x2c4>)
 8003ba0:	759a      	strb	r2, [r3, #22]

	log_buffer[25]=((latitude)>>24)&0xFF;
 8003ba2:	4b40      	ldr	r3, [pc, #256]	; (8003ca4 <fill_buffer+0x2f8>)
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	0e1b      	lsrs	r3, r3, #24
 8003ba8:	b2da      	uxtb	r2, r3
 8003baa:	4b31      	ldr	r3, [pc, #196]	; (8003c70 <fill_buffer+0x2c4>)
 8003bac:	765a      	strb	r2, [r3, #25]
	log_buffer[24]=((latitude)>>16)&0xFF;
 8003bae:	4b3d      	ldr	r3, [pc, #244]	; (8003ca4 <fill_buffer+0x2f8>)
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	0c1b      	lsrs	r3, r3, #16
 8003bb4:	b2da      	uxtb	r2, r3
 8003bb6:	4b2e      	ldr	r3, [pc, #184]	; (8003c70 <fill_buffer+0x2c4>)
 8003bb8:	761a      	strb	r2, [r3, #24]
	longitude_address
	latitude
	longitude
	*/

	log_buffer[27]=((longitude)>>8)&0xFF;
 8003bba:	4b3b      	ldr	r3, [pc, #236]	; (8003ca8 <fill_buffer+0x2fc>)
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	0a1b      	lsrs	r3, r3, #8
 8003bc0:	b2da      	uxtb	r2, r3
 8003bc2:	4b2b      	ldr	r3, [pc, #172]	; (8003c70 <fill_buffer+0x2c4>)
 8003bc4:	76da      	strb	r2, [r3, #27]
	log_buffer[26]=((longitude))&0xFF;
 8003bc6:	4b38      	ldr	r3, [pc, #224]	; (8003ca8 <fill_buffer+0x2fc>)
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	b2da      	uxtb	r2, r3
 8003bcc:	4b28      	ldr	r3, [pc, #160]	; (8003c70 <fill_buffer+0x2c4>)
 8003bce:	769a      	strb	r2, [r3, #26]

	log_buffer[29]=((longitude)>>24)&0xFF;
 8003bd0:	4b35      	ldr	r3, [pc, #212]	; (8003ca8 <fill_buffer+0x2fc>)
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	0e1b      	lsrs	r3, r3, #24
 8003bd6:	b2da      	uxtb	r2, r3
 8003bd8:	4b25      	ldr	r3, [pc, #148]	; (8003c70 <fill_buffer+0x2c4>)
 8003bda:	775a      	strb	r2, [r3, #29]
	log_buffer[28]=((longitude)>>16)&0xFF;
 8003bdc:	4b32      	ldr	r3, [pc, #200]	; (8003ca8 <fill_buffer+0x2fc>)
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	0c1b      	lsrs	r3, r3, #16
 8003be2:	b2da      	uxtb	r2, r3
 8003be4:	4b22      	ldr	r3, [pc, #136]	; (8003c70 <fill_buffer+0x2c4>)
 8003be6:	771a      	strb	r2, [r3, #28]

	log_buffer[31]=((int16_t)(gyro_roll_input*10)>>8)&0xFF;
 8003be8:	4b30      	ldr	r3, [pc, #192]	; (8003cac <fill_buffer+0x300>)
 8003bea:	edd3 7a00 	vldr	s15, [r3]
 8003bee:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003bf2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003bf6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003bfa:	ee17 3a90 	vmov	r3, s15
 8003bfe:	b21b      	sxth	r3, r3
 8003c00:	121b      	asrs	r3, r3, #8
 8003c02:	b21b      	sxth	r3, r3
 8003c04:	b2da      	uxtb	r2, r3
 8003c06:	4b1a      	ldr	r3, [pc, #104]	; (8003c70 <fill_buffer+0x2c4>)
 8003c08:	77da      	strb	r2, [r3, #31]
	log_buffer[30]=((int16_t)(gyro_roll_input*10))&0xFF;
 8003c0a:	4b28      	ldr	r3, [pc, #160]	; (8003cac <fill_buffer+0x300>)
 8003c0c:	edd3 7a00 	vldr	s15, [r3]
 8003c10:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c14:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c1c:	ee17 3a90 	vmov	r3, s15
 8003c20:	b21b      	sxth	r3, r3
 8003c22:	b2da      	uxtb	r2, r3
 8003c24:	4b12      	ldr	r3, [pc, #72]	; (8003c70 <fill_buffer+0x2c4>)
 8003c26:	779a      	strb	r2, [r3, #30]

	log_buffer[33]=((int16_t)(gyro_pitch_input*10)>>8)&0xFF;
 8003c28:	4b21      	ldr	r3, [pc, #132]	; (8003cb0 <fill_buffer+0x304>)
 8003c2a:	edd3 7a00 	vldr	s15, [r3]
 8003c2e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c32:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c3a:	ee17 3a90 	vmov	r3, s15
 8003c3e:	b21b      	sxth	r3, r3
 8003c40:	121b      	asrs	r3, r3, #8
 8003c42:	b21b      	sxth	r3, r3
 8003c44:	b2da      	uxtb	r2, r3
 8003c46:	4b0a      	ldr	r3, [pc, #40]	; (8003c70 <fill_buffer+0x2c4>)
 8003c48:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
	log_buffer[32]=((int16_t)(gyro_pitch_input*10))&0xFF;
 8003c4c:	4b18      	ldr	r3, [pc, #96]	; (8003cb0 <fill_buffer+0x304>)
 8003c4e:	edd3 7a00 	vldr	s15, [r3]
 8003c52:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003c56:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003c5e:	ee17 3a90 	vmov	r3, s15
 8003c62:	b21b      	sxth	r3, r3
 8003c64:	b2da      	uxtb	r2, r3
 8003c66:	4b02      	ldr	r3, [pc, #8]	; (8003c70 <fill_buffer+0x2c4>)
 8003c68:	f883 2020 	strb.w	r2, [r3, #32]


}
 8003c6c:	bf00      	nop
 8003c6e:	bd80      	pop	{r7, pc}
 8003c70:	20000970 	.word	0x20000970
 8003c74:	20000992 	.word	0x20000992
 8003c78:	200007c8 	.word	0x200007c8
 8003c7c:	200007cc 	.word	0x200007cc
 8003c80:	200007d0 	.word	0x200007d0
 8003c84:	200007d4 	.word	0x200007d4
 8003c88:	20000084 	.word	0x20000084
 8003c8c:	42c80000 	.word	0x42c80000
 8003c90:	200008a8 	.word	0x200008a8
 8003c94:	40590000 	.word	0x40590000
 8003c98:	200008a0 	.word	0x200008a0
 8003c9c:	200001c8 	.word	0x200001c8
 8003ca0:	200009ac 	.word	0x200009ac
 8003ca4:	20000240 	.word	0x20000240
 8003ca8:	20000244 	.word	0x20000244
 8003cac:	20000a90 	.word	0x20000a90
 8003cb0:	20000a94 	.word	0x20000a94

08003cb4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003cb4:	b480      	push	{r7}
 8003cb6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003cb8:	b672      	cpsid	i
}
 8003cba:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003cbc:	e7fe      	b.n	8003cbc <Error_Handler+0x8>
	...

08003cc0 <MPU6050_Read_All>:
float accel_filter_input_coeff[4]={2.914649446569766e-05,8.743948339709297e-05,
		8.743948339709297e-05,2.914649446569766e-05};
int cnt=0;


void MPU6050_Read_All(I2C_HandleTypeDef *I2Cx, MPU6050_t *DataStruct) {
 8003cc0:	b5b0      	push	{r4, r5, r7, lr}
 8003cc2:	b08a      	sub	sp, #40	; 0x28
 8003cc4:	af04      	add	r7, sp, #16
 8003cc6:	6078      	str	r0, [r7, #4]
 8003cc8:	6039      	str	r1, [r7, #0]
    uint8_t Rec_Data[14];
    int16_t temp;

    // Read 14 BYTES of data starting from ACCEL_XOUT_H register

    while(HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, MPU6050_TIMEOUT)!=HAL_OK){
 8003cca:	e00d      	b.n	8003ce8 <MPU6050_Read_All+0x28>
    	DRONE_STATUS |= MPU6050_CONNECTION_LOST ;
 8003ccc:	4bb6      	ldr	r3, [pc, #728]	; (8003fa8 <MPU6050_Read_All+0x2e8>)
 8003cce:	881b      	ldrh	r3, [r3, #0]
 8003cd0:	f043 0301 	orr.w	r3, r3, #1
 8003cd4:	b29a      	uxth	r2, r3
 8003cd6:	4bb4      	ldr	r3, [pc, #720]	; (8003fa8 <MPU6050_Read_All+0x2e8>)
 8003cd8:	801a      	strh	r2, [r3, #0]
    	imu_fault_counter+=1;
 8003cda:	4bb4      	ldr	r3, [pc, #720]	; (8003fac <MPU6050_Read_All+0x2ec>)
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	3301      	adds	r3, #1
 8003ce0:	4ab2      	ldr	r2, [pc, #712]	; (8003fac <MPU6050_Read_All+0x2ec>)
 8003ce2:	6013      	str	r3, [r2, #0]
    	i2c_disconnected();
 8003ce4:	f7fd fe5a 	bl	800199c <i2c_disconnected>
    while(HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, MPU6050_TIMEOUT)!=HAL_OK){
 8003ce8:	2301      	movs	r3, #1
 8003cea:	9302      	str	r3, [sp, #8]
 8003cec:	230e      	movs	r3, #14
 8003cee:	9301      	str	r3, [sp, #4]
 8003cf0:	f107 0308 	add.w	r3, r7, #8
 8003cf4:	9300      	str	r3, [sp, #0]
 8003cf6:	2301      	movs	r3, #1
 8003cf8:	223b      	movs	r2, #59	; 0x3b
 8003cfa:	21d0      	movs	r1, #208	; 0xd0
 8003cfc:	6878      	ldr	r0, [r7, #4]
 8003cfe:	f005 ff59 	bl	8009bb4 <HAL_I2C_Mem_Read>
 8003d02:	4603      	mov	r3, r0
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	d1e1      	bne.n	8003ccc <MPU6050_Read_All+0xc>
    }

    DataStruct->Accel_X_RAW = (int16_t) (Rec_Data[0] << 8 | Rec_Data[1]);
 8003d08:	7a3b      	ldrb	r3, [r7, #8]
 8003d0a:	021b      	lsls	r3, r3, #8
 8003d0c:	b21a      	sxth	r2, r3
 8003d0e:	7a7b      	ldrb	r3, [r7, #9]
 8003d10:	b21b      	sxth	r3, r3
 8003d12:	4313      	orrs	r3, r2
 8003d14:	b21a      	sxth	r2, r3
 8003d16:	683b      	ldr	r3, [r7, #0]
 8003d18:	801a      	strh	r2, [r3, #0]
    DataStruct->Accel_Y_RAW = (int16_t) (Rec_Data[2] << 8 | Rec_Data[3]);
 8003d1a:	7abb      	ldrb	r3, [r7, #10]
 8003d1c:	021b      	lsls	r3, r3, #8
 8003d1e:	b21a      	sxth	r2, r3
 8003d20:	7afb      	ldrb	r3, [r7, #11]
 8003d22:	b21b      	sxth	r3, r3
 8003d24:	4313      	orrs	r3, r2
 8003d26:	b21a      	sxth	r2, r3
 8003d28:	683b      	ldr	r3, [r7, #0]
 8003d2a:	805a      	strh	r2, [r3, #2]
    DataStruct->Accel_Z_RAW = (int16_t) (Rec_Data[4] << 8 | Rec_Data[5]);
 8003d2c:	7b3b      	ldrb	r3, [r7, #12]
 8003d2e:	021b      	lsls	r3, r3, #8
 8003d30:	b21a      	sxth	r2, r3
 8003d32:	7b7b      	ldrb	r3, [r7, #13]
 8003d34:	b21b      	sxth	r3, r3
 8003d36:	4313      	orrs	r3, r2
 8003d38:	b21a      	sxth	r2, r3
 8003d3a:	683b      	ldr	r3, [r7, #0]
 8003d3c:	809a      	strh	r2, [r3, #4]
    temp = (int16_t) (Rec_Data[6] << 8 | Rec_Data[7]);
 8003d3e:	7bbb      	ldrb	r3, [r7, #14]
 8003d40:	021b      	lsls	r3, r3, #8
 8003d42:	b21a      	sxth	r2, r3
 8003d44:	7bfb      	ldrb	r3, [r7, #15]
 8003d46:	b21b      	sxth	r3, r3
 8003d48:	4313      	orrs	r3, r2
 8003d4a:	82fb      	strh	r3, [r7, #22]
    DataStruct->Gyro_X_RAW = (int16_t) (Rec_Data[8] << 8 | Rec_Data[9]);
 8003d4c:	7c3b      	ldrb	r3, [r7, #16]
 8003d4e:	021b      	lsls	r3, r3, #8
 8003d50:	b21a      	sxth	r2, r3
 8003d52:	7c7b      	ldrb	r3, [r7, #17]
 8003d54:	b21b      	sxth	r3, r3
 8003d56:	4313      	orrs	r3, r2
 8003d58:	b21a      	sxth	r2, r3
 8003d5a:	683b      	ldr	r3, [r7, #0]
 8003d5c:	841a      	strh	r2, [r3, #32]
    DataStruct->Gyro_Y_RAW = (int16_t) (Rec_Data[10] << 8 | Rec_Data[11]);
 8003d5e:	7cbb      	ldrb	r3, [r7, #18]
 8003d60:	021b      	lsls	r3, r3, #8
 8003d62:	b21a      	sxth	r2, r3
 8003d64:	7cfb      	ldrb	r3, [r7, #19]
 8003d66:	b21b      	sxth	r3, r3
 8003d68:	4313      	orrs	r3, r2
 8003d6a:	b21a      	sxth	r2, r3
 8003d6c:	683b      	ldr	r3, [r7, #0]
 8003d6e:	845a      	strh	r2, [r3, #34]	; 0x22
    DataStruct->Gyro_Z_RAW = (int16_t) (Rec_Data[12] << 8 | Rec_Data[13]);
 8003d70:	7d3b      	ldrb	r3, [r7, #20]
 8003d72:	021b      	lsls	r3, r3, #8
 8003d74:	b21a      	sxth	r2, r3
 8003d76:	7d7b      	ldrb	r3, [r7, #21]
 8003d78:	b21b      	sxth	r3, r3
 8003d7a:	4313      	orrs	r3, r2
 8003d7c:	b21a      	sxth	r2, r3
 8003d7e:	683b      	ldr	r3, [r7, #0]
 8003d80:	849a      	strh	r2, [r3, #36]	; 0x24

    DataStruct->Ax = DataStruct->Accel_X_RAW / ACCELERATION_RATE;
 8003d82:	683b      	ldr	r3, [r7, #0]
 8003d84:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003d88:	ee07 3a90 	vmov	s15, r3
 8003d8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003d90:	ed9f 7a87 	vldr	s14, [pc, #540]	; 8003fb0 <MPU6050_Read_All+0x2f0>
 8003d94:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8003d98:	ee16 0a90 	vmov	r0, s13
 8003d9c:	f7fc fba0 	bl	80004e0 <__aeabi_f2d>
 8003da0:	4602      	mov	r2, r0
 8003da2:	460b      	mov	r3, r1
 8003da4:	6839      	ldr	r1, [r7, #0]
 8003da6:	e9c1 2302 	strd	r2, r3, [r1, #8]
    DataStruct->Ay = DataStruct->Accel_Y_RAW / ACCELERATION_RATE;
 8003daa:	683b      	ldr	r3, [r7, #0]
 8003dac:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003db0:	ee07 3a90 	vmov	s15, r3
 8003db4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003db8:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 8003fb0 <MPU6050_Read_All+0x2f0>
 8003dbc:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8003dc0:	ee16 0a90 	vmov	r0, s13
 8003dc4:	f7fc fb8c 	bl	80004e0 <__aeabi_f2d>
 8003dc8:	4602      	mov	r2, r0
 8003dca:	460b      	mov	r3, r1
 8003dcc:	6839      	ldr	r1, [r7, #0]
 8003dce:	e9c1 2304 	strd	r2, r3, [r1, #16]
    DataStruct->Az = DataStruct->Accel_Z_RAW / ACCELERATION_RATE_Z; // burayÄ± yapmayÄ± unutma
 8003dd2:	683b      	ldr	r3, [r7, #0]
 8003dd4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003dd8:	ee07 3a90 	vmov	s15, r3
 8003ddc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003de0:	ed9f 7a74 	vldr	s14, [pc, #464]	; 8003fb4 <MPU6050_Read_All+0x2f4>
 8003de4:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8003de8:	ee16 0a90 	vmov	r0, s13
 8003dec:	f7fc fb78 	bl	80004e0 <__aeabi_f2d>
 8003df0:	4602      	mov	r2, r0
 8003df2:	460b      	mov	r3, r1
 8003df4:	6839      	ldr	r1, [r7, #0]
 8003df6:	e9c1 2306 	strd	r2, r3, [r1, #24]
    DataStruct->Temperature = (float) ((int16_t) temp / (float) 340.0 + (float) 36.53);
 8003dfa:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8003dfe:	ee07 3a90 	vmov	s15, r3
 8003e02:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003e06:	eddf 6a6c 	vldr	s13, [pc, #432]	; 8003fb8 <MPU6050_Read_All+0x2f8>
 8003e0a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003e0e:	ed9f 7a6b 	vldr	s14, [pc, #428]	; 8003fbc <MPU6050_Read_All+0x2fc>
 8003e12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003e16:	683b      	ldr	r3, [r7, #0]
 8003e18:	edc3 7a13 	vstr	s15, [r3, #76]	; 0x4c
    DataStruct->Gx = DataStruct->Gyro_X_RAW / GYRO_RATE; // buralar 131di
 8003e1c:	683b      	ldr	r3, [r7, #0]
 8003e1e:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8003e22:	ee07 3a90 	vmov	s15, r3
 8003e26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003e2a:	ed9f 7a65 	vldr	s14, [pc, #404]	; 8003fc0 <MPU6050_Read_All+0x300>
 8003e2e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8003e32:	ee16 0a90 	vmov	r0, s13
 8003e36:	f7fc fb53 	bl	80004e0 <__aeabi_f2d>
 8003e3a:	4602      	mov	r2, r0
 8003e3c:	460b      	mov	r3, r1
 8003e3e:	6839      	ldr	r1, [r7, #0]
 8003e40:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    DataStruct->Gy = DataStruct->Gyro_Y_RAW / GYRO_RATE;
 8003e44:	683b      	ldr	r3, [r7, #0]
 8003e46:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8003e4a:	ee07 3a90 	vmov	s15, r3
 8003e4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003e52:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 8003fc0 <MPU6050_Read_All+0x300>
 8003e56:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8003e5a:	ee16 0a90 	vmov	r0, s13
 8003e5e:	f7fc fb3f 	bl	80004e0 <__aeabi_f2d>
 8003e62:	4602      	mov	r2, r0
 8003e64:	460b      	mov	r3, r1
 8003e66:	6839      	ldr	r1, [r7, #0]
 8003e68:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
    DataStruct->Gz = DataStruct->Gyro_Z_RAW / GYRO_RATE;
 8003e6c:	683b      	ldr	r3, [r7, #0]
 8003e6e:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003e72:	ee07 3a90 	vmov	s15, r3
 8003e76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003e7a:	ed9f 7a51 	vldr	s14, [pc, #324]	; 8003fc0 <MPU6050_Read_All+0x300>
 8003e7e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8003e82:	ee16 0a90 	vmov	r0, s13
 8003e86:	f7fc fb2b 	bl	80004e0 <__aeabi_f2d>
 8003e8a:	4602      	mov	r2, r0
 8003e8c:	460b      	mov	r3, r1
 8003e8e:	6839      	ldr	r1, [r7, #0]
 8003e90:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38

    DataStruct->Gx = DataStruct->Gx - DataStruct->pitch_calibration_value;
 8003e94:	683b      	ldr	r3, [r7, #0]
 8003e96:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 8003e9a:	683b      	ldr	r3, [r7, #0]
 8003e9c:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 8003ea0:	f7fc f9be 	bl	8000220 <__aeabi_dsub>
 8003ea4:	4602      	mov	r2, r0
 8003ea6:	460b      	mov	r3, r1
 8003ea8:	6839      	ldr	r1, [r7, #0]
 8003eaa:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    DataStruct->Gy = DataStruct->Gy - DataStruct->roll_calibration_value;
 8003eae:	683b      	ldr	r3, [r7, #0]
 8003eb0:	e9d3 010c 	ldrd	r0, r1, [r3, #48]	; 0x30
 8003eb4:	683b      	ldr	r3, [r7, #0]
 8003eb6:	e9d3 2316 	ldrd	r2, r3, [r3, #88]	; 0x58
 8003eba:	f7fc f9b1 	bl	8000220 <__aeabi_dsub>
 8003ebe:	4602      	mov	r2, r0
 8003ec0:	460b      	mov	r3, r1
 8003ec2:	6839      	ldr	r1, [r7, #0]
 8003ec4:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
    DataStruct->Gz = DataStruct->Gz - DataStruct->yaw_calibration_value;
 8003ec8:	683b      	ldr	r3, [r7, #0]
 8003eca:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 8003ece:	683b      	ldr	r3, [r7, #0]
 8003ed0:	e9d3 2314 	ldrd	r2, r3, [r3, #80]	; 0x50
 8003ed4:	f7fc f9a4 	bl	8000220 <__aeabi_dsub>
 8003ed8:	4602      	mov	r2, r0
 8003eda:	460b      	mov	r3, r1
 8003edc:	6839      	ldr	r1, [r7, #0]
 8003ede:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38

    DataStruct->acc_total_vector = sqrt((DataStruct->Ax*DataStruct->Ax)+(DataStruct->Ay*DataStruct->Ay)+(DataStruct->Az*DataStruct->Az));
 8003ee2:	683b      	ldr	r3, [r7, #0]
 8003ee4:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8003ee8:	683b      	ldr	r3, [r7, #0]
 8003eea:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8003eee:	f7fc fb4f 	bl	8000590 <__aeabi_dmul>
 8003ef2:	4602      	mov	r2, r0
 8003ef4:	460b      	mov	r3, r1
 8003ef6:	4614      	mov	r4, r2
 8003ef8:	461d      	mov	r5, r3
 8003efa:	683b      	ldr	r3, [r7, #0]
 8003efc:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8003f00:	683b      	ldr	r3, [r7, #0]
 8003f02:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8003f06:	f7fc fb43 	bl	8000590 <__aeabi_dmul>
 8003f0a:	4602      	mov	r2, r0
 8003f0c:	460b      	mov	r3, r1
 8003f0e:	4620      	mov	r0, r4
 8003f10:	4629      	mov	r1, r5
 8003f12:	f7fc f987 	bl	8000224 <__adddf3>
 8003f16:	4602      	mov	r2, r0
 8003f18:	460b      	mov	r3, r1
 8003f1a:	4614      	mov	r4, r2
 8003f1c:	461d      	mov	r5, r3
 8003f1e:	683b      	ldr	r3, [r7, #0]
 8003f20:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8003f24:	683b      	ldr	r3, [r7, #0]
 8003f26:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8003f2a:	f7fc fb31 	bl	8000590 <__aeabi_dmul>
 8003f2e:	4602      	mov	r2, r0
 8003f30:	460b      	mov	r3, r1
 8003f32:	4620      	mov	r0, r4
 8003f34:	4629      	mov	r1, r5
 8003f36:	f7fc f975 	bl	8000224 <__adddf3>
 8003f3a:	4602      	mov	r2, r0
 8003f3c:	460b      	mov	r3, r1
 8003f3e:	ec43 2b17 	vmov	d7, r2, r3
 8003f42:	eeb0 0a47 	vmov.f32	s0, s14
 8003f46:	eef0 0a67 	vmov.f32	s1, s15
 8003f4a:	f009 fe1f 	bl	800db8c <sqrt>
 8003f4e:	eeb0 7a40 	vmov.f32	s14, s0
 8003f52:	eef0 7a60 	vmov.f32	s15, s1
 8003f56:	683b      	ldr	r3, [r7, #0]
 8003f58:	ed83 7b1c 	vstr	d7, [r3, #112]	; 0x70
    DataStruct->angle_pitch_acc = asin((float)DataStruct->Ay/DataStruct->acc_total_vector)* RAD_TO_DEG;
 8003f5c:	683b      	ldr	r3, [r7, #0]
 8003f5e:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8003f62:	4610      	mov	r0, r2
 8003f64:	4619      	mov	r1, r3
 8003f66:	f7fc fdeb 	bl	8000b40 <__aeabi_d2f>
 8003f6a:	4603      	mov	r3, r0
 8003f6c:	4618      	mov	r0, r3
 8003f6e:	f7fc fab7 	bl	80004e0 <__aeabi_f2d>
 8003f72:	683b      	ldr	r3, [r7, #0]
 8003f74:	e9d3 231c 	ldrd	r2, r3, [r3, #112]	; 0x70
 8003f78:	f7fc fc34 	bl	80007e4 <__aeabi_ddiv>
 8003f7c:	4602      	mov	r2, r0
 8003f7e:	460b      	mov	r3, r1
 8003f80:	ec43 2b17 	vmov	d7, r2, r3
 8003f84:	eeb0 0a47 	vmov.f32	s0, s14
 8003f88:	eef0 0a67 	vmov.f32	s1, s15
 8003f8c:	f009 fd58 	bl	800da40 <asin>
 8003f90:	ec51 0b10 	vmov	r0, r1, d0
 8003f94:	a302      	add	r3, pc, #8	; (adr r3, 8003fa0 <MPU6050_Read_All+0x2e0>)
 8003f96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f9a:	e013      	b.n	8003fc4 <MPU6050_Read_All+0x304>
 8003f9c:	f3af 8000 	nop.w
 8003fa0:	1a63c1f8 	.word	0x1a63c1f8
 8003fa4:	404ca5dc 	.word	0x404ca5dc
 8003fa8:	200008b8 	.word	0x200008b8
 8003fac:	20000a9c 	.word	0x20000a9c
 8003fb0:	46800000 	.word	0x46800000
 8003fb4:	468ad400 	.word	0x468ad400
 8003fb8:	43aa0000 	.word	0x43aa0000
 8003fbc:	42121eb8 	.word	0x42121eb8
 8003fc0:	42830000 	.word	0x42830000
 8003fc4:	f7fc fae4 	bl	8000590 <__aeabi_dmul>
 8003fc8:	4602      	mov	r2, r0
 8003fca:	460b      	mov	r3, r1
 8003fcc:	6839      	ldr	r1, [r7, #0]
 8003fce:	e9c1 231e 	strd	r2, r3, [r1, #120]	; 0x78
    DataStruct->angle_roll_acc = asin((float)DataStruct->Ax/DataStruct->acc_total_vector)* -RAD_TO_DEG;
 8003fd2:	683b      	ldr	r3, [r7, #0]
 8003fd4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8003fd8:	4610      	mov	r0, r2
 8003fda:	4619      	mov	r1, r3
 8003fdc:	f7fc fdb0 	bl	8000b40 <__aeabi_d2f>
 8003fe0:	4603      	mov	r3, r0
 8003fe2:	4618      	mov	r0, r3
 8003fe4:	f7fc fa7c 	bl	80004e0 <__aeabi_f2d>
 8003fe8:	683b      	ldr	r3, [r7, #0]
 8003fea:	e9d3 231c 	ldrd	r2, r3, [r3, #112]	; 0x70
 8003fee:	f7fc fbf9 	bl	80007e4 <__aeabi_ddiv>
 8003ff2:	4602      	mov	r2, r0
 8003ff4:	460b      	mov	r3, r1
 8003ff6:	ec43 2b17 	vmov	d7, r2, r3
 8003ffa:	eeb0 0a47 	vmov.f32	s0, s14
 8003ffe:	eef0 0a67 	vmov.f32	s1, s15
 8004002:	f009 fd1d 	bl	800da40 <asin>
 8004006:	ec51 0b10 	vmov	r0, r1, d0
 800400a:	a31b      	add	r3, pc, #108	; (adr r3, 8004078 <MPU6050_Read_All+0x3b8>)
 800400c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004010:	f7fc fabe 	bl	8000590 <__aeabi_dmul>
 8004014:	4602      	mov	r2, r0
 8004016:	460b      	mov	r3, r1
 8004018:	6839      	ldr	r1, [r7, #0]
 800401a:	e9c1 2320 	strd	r2, r3, [r1, #128]	; 0x80
    DataStruct->angle_pitch_acc-=DataStruct->angle_pitch_acc_calib;
 800401e:	683b      	ldr	r3, [r7, #0]
 8004020:	e9d3 451e 	ldrd	r4, r5, [r3, #120]	; 0x78
 8004024:	683b      	ldr	r3, [r7, #0]
 8004026:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800402a:	4618      	mov	r0, r3
 800402c:	f7fc fa58 	bl	80004e0 <__aeabi_f2d>
 8004030:	4602      	mov	r2, r0
 8004032:	460b      	mov	r3, r1
 8004034:	4620      	mov	r0, r4
 8004036:	4629      	mov	r1, r5
 8004038:	f7fc f8f2 	bl	8000220 <__aeabi_dsub>
 800403c:	4602      	mov	r2, r0
 800403e:	460b      	mov	r3, r1
 8004040:	6839      	ldr	r1, [r7, #0]
 8004042:	e9c1 231e 	strd	r2, r3, [r1, #120]	; 0x78
    DataStruct->angle_roll_acc-=DataStruct->angle_roll_acc_calib;
 8004046:	683b      	ldr	r3, [r7, #0]
 8004048:	e9d3 4520 	ldrd	r4, r5, [r3, #128]	; 0x80
 800404c:	683b      	ldr	r3, [r7, #0]
 800404e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8004052:	4618      	mov	r0, r3
 8004054:	f7fc fa44 	bl	80004e0 <__aeabi_f2d>
 8004058:	4602      	mov	r2, r0
 800405a:	460b      	mov	r3, r1
 800405c:	4620      	mov	r0, r4
 800405e:	4629      	mov	r1, r5
 8004060:	f7fc f8de 	bl	8000220 <__aeabi_dsub>
 8004064:	4602      	mov	r2, r0
 8004066:	460b      	mov	r3, r1
 8004068:	6839      	ldr	r1, [r7, #0]
 800406a:	e9c1 2320 	strd	r2, r3, [r1, #128]	; 0x80

}
 800406e:	bf00      	nop
 8004070:	3718      	adds	r7, #24
 8004072:	46bd      	mov	sp, r7
 8004074:	bdb0      	pop	{r4, r5, r7, pc}
 8004076:	bf00      	nop
 8004078:	1a63c1f8 	.word	0x1a63c1f8
 800407c:	c04ca5dc 	.word	0xc04ca5dc

08004080 <calibrate_yaw>:


bool calibrate_yaw(I2C_HandleTypeDef *I2Cx, MPU6050_t *DataStruct)
{
 8004080:	b580      	push	{r7, lr}
 8004082:	b08c      	sub	sp, #48	; 0x30
 8004084:	af00      	add	r7, sp, #0
 8004086:	6078      	str	r0, [r7, #4]
 8004088:	6039      	str	r1, [r7, #0]
	int i;
	double summationZ=0;
 800408a:	f04f 0200 	mov.w	r2, #0
 800408e:	f04f 0300 	mov.w	r3, #0
 8004092:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double summationX=0;
 8004096:	f04f 0200 	mov.w	r2, #0
 800409a:	f04f 0300 	mov.w	r3, #0
 800409e:	e9c7 2306 	strd	r2, r3, [r7, #24]
	double summationY=0;
 80040a2:	f04f 0200 	mov.w	r2, #0
 80040a6:	f04f 0300 	mov.w	r3, #0
 80040aa:	e9c7 2304 	strd	r2, r3, [r7, #16]
	float summation_temp=0;
 80040ae:	f04f 0300 	mov.w	r3, #0
 80040b2:	60fb      	str	r3, [r7, #12]
	for (i=0;i<4000;i++)
 80040b4:	2300      	movs	r3, #0
 80040b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80040b8:	e03f      	b.n	800413a <calibrate_yaw+0xba>
	{
		MPU6050_Read_All(I2Cx,DataStruct);
 80040ba:	6839      	ldr	r1, [r7, #0]
 80040bc:	6878      	ldr	r0, [r7, #4]
 80040be:	f7ff fdff 	bl	8003cc0 <MPU6050_Read_All>
		summationZ+=DataStruct->Gyro_Z_RAW;
 80040c2:	683b      	ldr	r3, [r7, #0]
 80040c4:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 80040c8:	4618      	mov	r0, r3
 80040ca:	f7fc f9f7 	bl	80004bc <__aeabi_i2d>
 80040ce:	4602      	mov	r2, r0
 80040d0:	460b      	mov	r3, r1
 80040d2:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80040d6:	f7fc f8a5 	bl	8000224 <__adddf3>
 80040da:	4602      	mov	r2, r0
 80040dc:	460b      	mov	r3, r1
 80040de:	e9c7 2308 	strd	r2, r3, [r7, #32]
		summationX+=DataStruct->Gyro_X_RAW;
 80040e2:	683b      	ldr	r3, [r7, #0]
 80040e4:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 80040e8:	4618      	mov	r0, r3
 80040ea:	f7fc f9e7 	bl	80004bc <__aeabi_i2d>
 80040ee:	4602      	mov	r2, r0
 80040f0:	460b      	mov	r3, r1
 80040f2:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80040f6:	f7fc f895 	bl	8000224 <__adddf3>
 80040fa:	4602      	mov	r2, r0
 80040fc:	460b      	mov	r3, r1
 80040fe:	e9c7 2306 	strd	r2, r3, [r7, #24]
		summationY+=DataStruct->Gyro_Y_RAW;
 8004102:	683b      	ldr	r3, [r7, #0]
 8004104:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8004108:	4618      	mov	r0, r3
 800410a:	f7fc f9d7 	bl	80004bc <__aeabi_i2d>
 800410e:	4602      	mov	r2, r0
 8004110:	460b      	mov	r3, r1
 8004112:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8004116:	f7fc f885 	bl	8000224 <__adddf3>
 800411a:	4602      	mov	r2, r0
 800411c:	460b      	mov	r3, r1
 800411e:	e9c7 2304 	strd	r2, r3, [r7, #16]
		summation_temp+=DataStruct->Temperature;
 8004122:	683b      	ldr	r3, [r7, #0]
 8004124:	edd3 7a13 	vldr	s15, [r3, #76]	; 0x4c
 8004128:	ed97 7a03 	vldr	s14, [r7, #12]
 800412c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004130:	edc7 7a03 	vstr	s15, [r7, #12]
	for (i=0;i<4000;i++)
 8004134:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004136:	3301      	adds	r3, #1
 8004138:	62fb      	str	r3, [r7, #44]	; 0x2c
 800413a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800413c:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 8004140:	dbbb      	blt.n	80040ba <calibrate_yaw+0x3a>


	}
	DataStruct->yaw_calibration_value=summationZ/(double)i;
 8004142:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004144:	f7fc f9ba 	bl	80004bc <__aeabi_i2d>
 8004148:	4602      	mov	r2, r0
 800414a:	460b      	mov	r3, r1
 800414c:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8004150:	f7fc fb48 	bl	80007e4 <__aeabi_ddiv>
 8004154:	4602      	mov	r2, r0
 8004156:	460b      	mov	r3, r1
 8004158:	6839      	ldr	r1, [r7, #0]
 800415a:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
	DataStruct->pitch_calibration_value=summationX/(double)i;
 800415e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004160:	f7fc f9ac 	bl	80004bc <__aeabi_i2d>
 8004164:	4602      	mov	r2, r0
 8004166:	460b      	mov	r3, r1
 8004168:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800416c:	f7fc fb3a 	bl	80007e4 <__aeabi_ddiv>
 8004170:	4602      	mov	r2, r0
 8004172:	460b      	mov	r3, r1
 8004174:	6839      	ldr	r1, [r7, #0]
 8004176:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
	DataStruct->roll_calibration_value=summationY/(double)i;
 800417a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800417c:	f7fc f99e 	bl	80004bc <__aeabi_i2d>
 8004180:	4602      	mov	r2, r0
 8004182:	460b      	mov	r3, r1
 8004184:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8004188:	f7fc fb2c 	bl	80007e4 <__aeabi_ddiv>
 800418c:	4602      	mov	r2, r0
 800418e:	460b      	mov	r3, r1
 8004190:	6839      	ldr	r1, [r7, #0]
 8004192:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
	DataStruct->temp_calibration_value=summation_temp/i;
 8004196:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004198:	ee07 3a90 	vmov	s15, r3
 800419c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80041a0:	edd7 6a03 	vldr	s13, [r7, #12]
 80041a4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80041a8:	683b      	ldr	r3, [r7, #0]
 80041aa:	edc3 7a1a 	vstr	s15, [r3, #104]	; 0x68
	return 1;
 80041ae:	2301      	movs	r3, #1
}
 80041b0:	4618      	mov	r0, r3
 80041b2:	3730      	adds	r7, #48	; 0x30
 80041b4:	46bd      	mov	sp, r7
 80041b6:	bd80      	pop	{r7, pc}

080041b8 <calibrate_Benim>:
	DataStruct->Accel_Z_Calib=summation_Z/i;
	return 1;
}

bool calibrate_Benim(I2C_HandleTypeDef *I2Cx, MPU6050_t *DataStruct)
{
 80041b8:	b580      	push	{r7, lr}
 80041ba:	b08a      	sub	sp, #40	; 0x28
 80041bc:	af00      	add	r7, sp, #0
 80041be:	6078      	str	r0, [r7, #4]
 80041c0:	6039      	str	r1, [r7, #0]
	int i;
	double summationRoll=0;
 80041c2:	f04f 0200 	mov.w	r2, #0
 80041c6:	f04f 0300 	mov.w	r3, #0
 80041ca:	e9c7 2306 	strd	r2, r3, [r7, #24]
	double summationPitch=0;
 80041ce:	f04f 0200 	mov.w	r2, #0
 80041d2:	f04f 0300 	mov.w	r3, #0
 80041d6:	e9c7 2304 	strd	r2, r3, [r7, #16]
	double summation_Z=0;
 80041da:	f04f 0200 	mov.w	r2, #0
 80041de:	f04f 0300 	mov.w	r3, #0
 80041e2:	e9c7 2302 	strd	r2, r3, [r7, #8]
	for (i=0;i<2000;i++)
 80041e6:	2300      	movs	r3, #0
 80041e8:	627b      	str	r3, [r7, #36]	; 0x24
 80041ea:	e036      	b.n	800425a <calibrate_Benim+0xa2>
	{
		MPU6050_Read_All(I2Cx,DataStruct);
 80041ec:	6839      	ldr	r1, [r7, #0]
 80041ee:	6878      	ldr	r0, [r7, #4]
 80041f0:	f7ff fd66 	bl	8003cc0 <MPU6050_Read_All>
		summationRoll+=DataStruct->Accel_X_RAW;
 80041f4:	683b      	ldr	r3, [r7, #0]
 80041f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80041fa:	4618      	mov	r0, r3
 80041fc:	f7fc f95e 	bl	80004bc <__aeabi_i2d>
 8004200:	4602      	mov	r2, r0
 8004202:	460b      	mov	r3, r1
 8004204:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004208:	f7fc f80c 	bl	8000224 <__adddf3>
 800420c:	4602      	mov	r2, r0
 800420e:	460b      	mov	r3, r1
 8004210:	e9c7 2306 	strd	r2, r3, [r7, #24]
		summationPitch+=DataStruct->Accel_Y_RAW;
 8004214:	683b      	ldr	r3, [r7, #0]
 8004216:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800421a:	4618      	mov	r0, r3
 800421c:	f7fc f94e 	bl	80004bc <__aeabi_i2d>
 8004220:	4602      	mov	r2, r0
 8004222:	460b      	mov	r3, r1
 8004224:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8004228:	f7fb fffc 	bl	8000224 <__adddf3>
 800422c:	4602      	mov	r2, r0
 800422e:	460b      	mov	r3, r1
 8004230:	e9c7 2304 	strd	r2, r3, [r7, #16]
		summation_Z+=DataStruct->Accel_Z_RAW;
 8004234:	683b      	ldr	r3, [r7, #0]
 8004236:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800423a:	4618      	mov	r0, r3
 800423c:	f7fc f93e 	bl	80004bc <__aeabi_i2d>
 8004240:	4602      	mov	r2, r0
 8004242:	460b      	mov	r3, r1
 8004244:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8004248:	f7fb ffec 	bl	8000224 <__adddf3>
 800424c:	4602      	mov	r2, r0
 800424e:	460b      	mov	r3, r1
 8004250:	e9c7 2302 	strd	r2, r3, [r7, #8]
	for (i=0;i<2000;i++)
 8004254:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004256:	3301      	adds	r3, #1
 8004258:	627b      	str	r3, [r7, #36]	; 0x24
 800425a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800425c:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8004260:	dbc4      	blt.n	80041ec <calibrate_Benim+0x34>
	}
	DataStruct->Accel_X_Raw_Offset=summationRoll/i;
 8004262:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004264:	f7fc f92a 	bl	80004bc <__aeabi_i2d>
 8004268:	4602      	mov	r2, r0
 800426a:	460b      	mov	r3, r1
 800426c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004270:	f7fc fab8 	bl	80007e4 <__aeabi_ddiv>
 8004274:	4602      	mov	r2, r0
 8004276:	460b      	mov	r3, r1
 8004278:	4610      	mov	r0, r2
 800427a:	4619      	mov	r1, r3
 800427c:	f7fc fc60 	bl	8000b40 <__aeabi_d2f>
 8004280:	4602      	mov	r2, r0
 8004282:	683b      	ldr	r3, [r7, #0]
 8004284:	641a      	str	r2, [r3, #64]	; 0x40
	DataStruct->Accel_Y_Raw_Offset=summationPitch/i;
 8004286:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004288:	f7fc f918 	bl	80004bc <__aeabi_i2d>
 800428c:	4602      	mov	r2, r0
 800428e:	460b      	mov	r3, r1
 8004290:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8004294:	f7fc faa6 	bl	80007e4 <__aeabi_ddiv>
 8004298:	4602      	mov	r2, r0
 800429a:	460b      	mov	r3, r1
 800429c:	4610      	mov	r0, r2
 800429e:	4619      	mov	r1, r3
 80042a0:	f7fc fc4e 	bl	8000b40 <__aeabi_d2f>
 80042a4:	4602      	mov	r2, r0
 80042a6:	683b      	ldr	r3, [r7, #0]
 80042a8:	645a      	str	r2, [r3, #68]	; 0x44
	DataStruct->Accel_Z_Raw_Rate=summation_Z/i;
 80042aa:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80042ac:	f7fc f906 	bl	80004bc <__aeabi_i2d>
 80042b0:	4602      	mov	r2, r0
 80042b2:	460b      	mov	r3, r1
 80042b4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80042b8:	f7fc fa94 	bl	80007e4 <__aeabi_ddiv>
 80042bc:	4602      	mov	r2, r0
 80042be:	460b      	mov	r3, r1
 80042c0:	4610      	mov	r0, r2
 80042c2:	4619      	mov	r1, r3
 80042c4:	f7fc fc3c 	bl	8000b40 <__aeabi_d2f>
 80042c8:	4602      	mov	r2, r0
 80042ca:	683b      	ldr	r3, [r7, #0]
 80042cc:	649a      	str	r2, [r3, #72]	; 0x48

	return 1;
 80042ce:	2301      	movs	r3, #1
}
 80042d0:	4618      	mov	r0, r3
 80042d2:	3728      	adds	r7, #40	; 0x28
 80042d4:	46bd      	mov	sp, r7
 80042d6:	bd80      	pop	{r7, pc}

080042d8 <MPU6050_Init_Benim>:



uint8_t MPU6050_Init_Benim(I2C_HandleTypeDef *I2Cx) {
 80042d8:	b580      	push	{r7, lr}
 80042da:	b088      	sub	sp, #32
 80042dc:	af04      	add	r7, sp, #16
 80042de:	6078      	str	r0, [r7, #4]
    uint8_t check;
    uint8_t Data;

    // check device ID WHO_AM_I

    while(HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, MPU6050_TIMEOUT)!=HAL_OK){
 80042e0:	e00d      	b.n	80042fe <MPU6050_Init_Benim+0x26>
    	DRONE_STATUS |= MPU6050_CONNECTION_LOST ;
 80042e2:	4b41      	ldr	r3, [pc, #260]	; (80043e8 <MPU6050_Init_Benim+0x110>)
 80042e4:	881b      	ldrh	r3, [r3, #0]
 80042e6:	f043 0301 	orr.w	r3, r3, #1
 80042ea:	b29a      	uxth	r2, r3
 80042ec:	4b3e      	ldr	r3, [pc, #248]	; (80043e8 <MPU6050_Init_Benim+0x110>)
 80042ee:	801a      	strh	r2, [r3, #0]
    	imu_fault_counter+=1;
 80042f0:	4b3e      	ldr	r3, [pc, #248]	; (80043ec <MPU6050_Init_Benim+0x114>)
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	3301      	adds	r3, #1
 80042f6:	4a3d      	ldr	r2, [pc, #244]	; (80043ec <MPU6050_Init_Benim+0x114>)
 80042f8:	6013      	str	r3, [r2, #0]
    	i2c_disconnected();
 80042fa:	f7fd fb4f 	bl	800199c <i2c_disconnected>
    while(HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, MPU6050_TIMEOUT)!=HAL_OK){
 80042fe:	2301      	movs	r3, #1
 8004300:	9302      	str	r3, [sp, #8]
 8004302:	2301      	movs	r3, #1
 8004304:	9301      	str	r3, [sp, #4]
 8004306:	f107 030f 	add.w	r3, r7, #15
 800430a:	9300      	str	r3, [sp, #0]
 800430c:	2301      	movs	r3, #1
 800430e:	2275      	movs	r2, #117	; 0x75
 8004310:	21d0      	movs	r1, #208	; 0xd0
 8004312:	6878      	ldr	r0, [r7, #4]
 8004314:	f005 fc4e 	bl	8009bb4 <HAL_I2C_Mem_Read>
 8004318:	4603      	mov	r3, r0
 800431a:	2b00      	cmp	r3, #0
 800431c:	d1e1      	bne.n	80042e2 <MPU6050_Init_Benim+0xa>
    }



    if (check == 104)  // 0x68 will be returned by the sensor if everything goes well
 800431e:	7bfb      	ldrb	r3, [r7, #15]
 8004320:	2b68      	cmp	r3, #104	; 0x68
 8004322:	d15c      	bne.n	80043de <MPU6050_Init_Benim+0x106>
    {
        // power management register 0X6B we should write all 0's to wake the sensor up
        Data = 0;
 8004324:	2300      	movs	r3, #0
 8004326:	73bb      	strb	r3, [r7, #14]
        HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, PWR_MGMT_1_REG, 1, &Data, 1, MPU6050_TIMEOUT);
 8004328:	2301      	movs	r3, #1
 800432a:	9302      	str	r3, [sp, #8]
 800432c:	2301      	movs	r3, #1
 800432e:	9301      	str	r3, [sp, #4]
 8004330:	f107 030e 	add.w	r3, r7, #14
 8004334:	9300      	str	r3, [sp, #0]
 8004336:	2301      	movs	r3, #1
 8004338:	226b      	movs	r2, #107	; 0x6b
 800433a:	21d0      	movs	r1, #208	; 0xd0
 800433c:	6878      	ldr	r0, [r7, #4]
 800433e:	f005 fb3f 	bl	80099c0 <HAL_I2C_Mem_Write>

        // Set DATA RATE of 8KHz by writing SMPLRT_DIV register because we will turn low pass filter on, it will automatically decrease to 1kHz
        Data = 00;
 8004342:	2300      	movs	r3, #0
 8004344:	73bb      	strb	r3, [r7, #14]
        HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, MPU6050_TIMEOUT);
 8004346:	2301      	movs	r3, #1
 8004348:	9302      	str	r3, [sp, #8]
 800434a:	2301      	movs	r3, #1
 800434c:	9301      	str	r3, [sp, #4]
 800434e:	f107 030e 	add.w	r3, r7, #14
 8004352:	9300      	str	r3, [sp, #0]
 8004354:	2301      	movs	r3, #1
 8004356:	2219      	movs	r2, #25
 8004358:	21d0      	movs	r1, #208	; 0xd0
 800435a:	6878      	ldr	r0, [r7, #4]
 800435c:	f005 fb30 	bl	80099c0 <HAL_I2C_Mem_Write>

        // Set accelerometer configuration in ACCEL_CONFIG Register
        // XA_ST=0,YA_ST=0,ZA_ST=0, FS_SEL=0 -> ï¿½ 2g
        Data = 0x00;
 8004360:	2300      	movs	r3, #0
 8004362:	73bb      	strb	r3, [r7, #14]
        HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &Data, 1, MPU6050_TIMEOUT);
 8004364:	2301      	movs	r3, #1
 8004366:	9302      	str	r3, [sp, #8]
 8004368:	2301      	movs	r3, #1
 800436a:	9301      	str	r3, [sp, #4]
 800436c:	f107 030e 	add.w	r3, r7, #14
 8004370:	9300      	str	r3, [sp, #0]
 8004372:	2301      	movs	r3, #1
 8004374:	221c      	movs	r2, #28
 8004376:	21d0      	movs	r1, #208	; 0xd0
 8004378:	6878      	ldr	r0, [r7, #4]
 800437a:	f005 fb21 	bl	80099c0 <HAL_I2C_Mem_Write>

        // Set Gyroscopic configuration in GYRO_CONFIG Register
        // XG_ST=0,YG_ST=0,ZG_ST=0, FS_SEL=0 -> ï¿½ 250 ï¿½/s
        Data = 0x01<<3;
 800437e:	2308      	movs	r3, #8
 8004380:	73bb      	strb	r3, [r7, #14]
        HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, MPU6050_TIMEOUT);
 8004382:	2301      	movs	r3, #1
 8004384:	9302      	str	r3, [sp, #8]
 8004386:	2301      	movs	r3, #1
 8004388:	9301      	str	r3, [sp, #4]
 800438a:	f107 030e 	add.w	r3, r7, #14
 800438e:	9300      	str	r3, [sp, #0]
 8004390:	2301      	movs	r3, #1
 8004392:	221b      	movs	r2, #27
 8004394:	21d0      	movs	r1, #208	; 0xd0
 8004396:	6878      	ldr	r0, [r7, #4]
 8004398:	f005 fb12 	bl	80099c0 <HAL_I2C_Mem_Write>

        //TURN DLPF ON

        HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, 0x1A, 1, &Data, 1, MPU6050_TIMEOUT);
 800439c:	2301      	movs	r3, #1
 800439e:	9302      	str	r3, [sp, #8]
 80043a0:	2301      	movs	r3, #1
 80043a2:	9301      	str	r3, [sp, #4]
 80043a4:	f107 030e 	add.w	r3, r7, #14
 80043a8:	9300      	str	r3, [sp, #0]
 80043aa:	2301      	movs	r3, #1
 80043ac:	221a      	movs	r2, #26
 80043ae:	21d0      	movs	r1, #208	; 0xd0
 80043b0:	6878      	ldr	r0, [r7, #4]
 80043b2:	f005 fbff 	bl	8009bb4 <HAL_I2C_Mem_Read>
        Data= Data | 0x06;
 80043b6:	7bbb      	ldrb	r3, [r7, #14]
 80043b8:	f043 0306 	orr.w	r3, r3, #6
 80043bc:	b2db      	uxtb	r3, r3
 80043be:	73bb      	strb	r3, [r7, #14]
        HAL_I2C_Mem_Write(I2Cx, MPU6050_ADDR, 0x1A, 1, &Data, 1, MPU6050_TIMEOUT);
 80043c0:	2301      	movs	r3, #1
 80043c2:	9302      	str	r3, [sp, #8]
 80043c4:	2301      	movs	r3, #1
 80043c6:	9301      	str	r3, [sp, #4]
 80043c8:	f107 030e 	add.w	r3, r7, #14
 80043cc:	9300      	str	r3, [sp, #0]
 80043ce:	2301      	movs	r3, #1
 80043d0:	221a      	movs	r2, #26
 80043d2:	21d0      	movs	r1, #208	; 0xd0
 80043d4:	6878      	ldr	r0, [r7, #4]
 80043d6:	f005 faf3 	bl	80099c0 <HAL_I2C_Mem_Write>

        return 0;
 80043da:	2300      	movs	r3, #0
 80043dc:	e000      	b.n	80043e0 <MPU6050_Init_Benim+0x108>
    }
    return 1;
 80043de:	2301      	movs	r3, #1
}
 80043e0:	4618      	mov	r0, r3
 80043e2:	3710      	adds	r7, #16
 80043e4:	46bd      	mov	sp, r7
 80043e6:	bd80      	pop	{r7, pc}
 80043e8:	200008b8 	.word	0x200008b8
 80043ec:	20000a9c 	.word	0x20000a9c

080043f0 <MPU6050_Read_All_Benim>:

void MPU6050_Read_All_Benim(I2C_HandleTypeDef *I2Cx, MPU6050_t *DataStruct) {
 80043f0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80043f4:	b08e      	sub	sp, #56	; 0x38
 80043f6:	af04      	add	r7, sp, #16
 80043f8:	60f8      	str	r0, [r7, #12]
 80043fa:	60b9      	str	r1, [r7, #8]
    uint8_t Rec_Data[14];
    int16_t temp;

    // Read 14 BYTES of data starting from ACCEL_XOUT_H register

    while(HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, MPU6050_TIMEOUT)!=HAL_OK){
 80043fc:	e00d      	b.n	800441a <MPU6050_Read_All_Benim+0x2a>
    	DRONE_STATUS |= MPU6050_CONNECTION_LOST ;
 80043fe:	4bae      	ldr	r3, [pc, #696]	; (80046b8 <MPU6050_Read_All_Benim+0x2c8>)
 8004400:	881b      	ldrh	r3, [r3, #0]
 8004402:	f043 0301 	orr.w	r3, r3, #1
 8004406:	b29a      	uxth	r2, r3
 8004408:	4bab      	ldr	r3, [pc, #684]	; (80046b8 <MPU6050_Read_All_Benim+0x2c8>)
 800440a:	801a      	strh	r2, [r3, #0]
    	imu_fault_counter+=1;
 800440c:	4bab      	ldr	r3, [pc, #684]	; (80046bc <MPU6050_Read_All_Benim+0x2cc>)
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	3301      	adds	r3, #1
 8004412:	4aaa      	ldr	r2, [pc, #680]	; (80046bc <MPU6050_Read_All_Benim+0x2cc>)
 8004414:	6013      	str	r3, [r2, #0]
    	        	i2c_disconnected();
 8004416:	f7fd fac1 	bl	800199c <i2c_disconnected>
    while(HAL_I2C_Mem_Read(I2Cx, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, MPU6050_TIMEOUT)!=HAL_OK){
 800441a:	2301      	movs	r3, #1
 800441c:	9302      	str	r3, [sp, #8]
 800441e:	230e      	movs	r3, #14
 8004420:	9301      	str	r3, [sp, #4]
 8004422:	f107 0314 	add.w	r3, r7, #20
 8004426:	9300      	str	r3, [sp, #0]
 8004428:	2301      	movs	r3, #1
 800442a:	223b      	movs	r2, #59	; 0x3b
 800442c:	21d0      	movs	r1, #208	; 0xd0
 800442e:	68f8      	ldr	r0, [r7, #12]
 8004430:	f005 fbc0 	bl	8009bb4 <HAL_I2C_Mem_Read>
 8004434:	4603      	mov	r3, r0
 8004436:	2b00      	cmp	r3, #0
 8004438:	d1e1      	bne.n	80043fe <MPU6050_Read_All_Benim+0xe>
    }

    DataStruct->Accel_X_RAW = (int16_t) (Rec_Data[0] << 8 | Rec_Data[1]);
 800443a:	7d3b      	ldrb	r3, [r7, #20]
 800443c:	021b      	lsls	r3, r3, #8
 800443e:	b21a      	sxth	r2, r3
 8004440:	7d7b      	ldrb	r3, [r7, #21]
 8004442:	b21b      	sxth	r3, r3
 8004444:	4313      	orrs	r3, r2
 8004446:	b21a      	sxth	r2, r3
 8004448:	68bb      	ldr	r3, [r7, #8]
 800444a:	801a      	strh	r2, [r3, #0]
    DataStruct->Accel_Y_RAW = (int16_t) (Rec_Data[2] << 8 | Rec_Data[3]);
 800444c:	7dbb      	ldrb	r3, [r7, #22]
 800444e:	021b      	lsls	r3, r3, #8
 8004450:	b21a      	sxth	r2, r3
 8004452:	7dfb      	ldrb	r3, [r7, #23]
 8004454:	b21b      	sxth	r3, r3
 8004456:	4313      	orrs	r3, r2
 8004458:	b21a      	sxth	r2, r3
 800445a:	68bb      	ldr	r3, [r7, #8]
 800445c:	805a      	strh	r2, [r3, #2]
    DataStruct->Accel_Z_RAW = (int16_t) (Rec_Data[4] << 8 | Rec_Data[5]);
 800445e:	7e3b      	ldrb	r3, [r7, #24]
 8004460:	021b      	lsls	r3, r3, #8
 8004462:	b21a      	sxth	r2, r3
 8004464:	7e7b      	ldrb	r3, [r7, #25]
 8004466:	b21b      	sxth	r3, r3
 8004468:	4313      	orrs	r3, r2
 800446a:	b21a      	sxth	r2, r3
 800446c:	68bb      	ldr	r3, [r7, #8]
 800446e:	809a      	strh	r2, [r3, #4]
    temp = (int16_t) (Rec_Data[6] << 8 | Rec_Data[7]);
 8004470:	7ebb      	ldrb	r3, [r7, #26]
 8004472:	021b      	lsls	r3, r3, #8
 8004474:	b21a      	sxth	r2, r3
 8004476:	7efb      	ldrb	r3, [r7, #27]
 8004478:	b21b      	sxth	r3, r3
 800447a:	4313      	orrs	r3, r2
 800447c:	847b      	strh	r3, [r7, #34]	; 0x22
    DataStruct->Gyro_X_RAW = (int16_t) (Rec_Data[8] << 8 | Rec_Data[9]);
 800447e:	7f3b      	ldrb	r3, [r7, #28]
 8004480:	021b      	lsls	r3, r3, #8
 8004482:	b21a      	sxth	r2, r3
 8004484:	7f7b      	ldrb	r3, [r7, #29]
 8004486:	b21b      	sxth	r3, r3
 8004488:	4313      	orrs	r3, r2
 800448a:	b21a      	sxth	r2, r3
 800448c:	68bb      	ldr	r3, [r7, #8]
 800448e:	841a      	strh	r2, [r3, #32]
    DataStruct->Gyro_Y_RAW = (int16_t) (Rec_Data[10] << 8 | Rec_Data[11]);
 8004490:	7fbb      	ldrb	r3, [r7, #30]
 8004492:	021b      	lsls	r3, r3, #8
 8004494:	b21a      	sxth	r2, r3
 8004496:	7ffb      	ldrb	r3, [r7, #31]
 8004498:	b21b      	sxth	r3, r3
 800449a:	4313      	orrs	r3, r2
 800449c:	b21a      	sxth	r2, r3
 800449e:	68bb      	ldr	r3, [r7, #8]
 80044a0:	845a      	strh	r2, [r3, #34]	; 0x22
    DataStruct->Gyro_Z_RAW = (int16_t) (Rec_Data[12] << 8 | Rec_Data[13]);
 80044a2:	f897 3020 	ldrb.w	r3, [r7, #32]
 80044a6:	021b      	lsls	r3, r3, #8
 80044a8:	b21a      	sxth	r2, r3
 80044aa:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 80044ae:	b21b      	sxth	r3, r3
 80044b0:	4313      	orrs	r3, r2
 80044b2:	b21a      	sxth	r2, r3
 80044b4:	68bb      	ldr	r3, [r7, #8]
 80044b6:	849a      	strh	r2, [r3, #36]	; 0x24

    DataStruct->Ax = (DataStruct->Accel_X_RAW -DataStruct->Accel_X_Raw_Offset ) / ACCELERATION_RATE;  /// BURA DEÄÄ°ÅTÄ°
 80044b8:	68bb      	ldr	r3, [r7, #8]
 80044ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80044be:	ee07 3a90 	vmov	s15, r3
 80044c2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80044c6:	68bb      	ldr	r3, [r7, #8]
 80044c8:	edd3 7a10 	vldr	s15, [r3, #64]	; 0x40
 80044cc:	ee77 7a67 	vsub.f32	s15, s14, s15
 80044d0:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 80046c0 <MPU6050_Read_All_Benim+0x2d0>
 80044d4:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80044d8:	ee16 0a90 	vmov	r0, s13
 80044dc:	f7fc f800 	bl	80004e0 <__aeabi_f2d>
 80044e0:	4602      	mov	r2, r0
 80044e2:	460b      	mov	r3, r1
 80044e4:	68b9      	ldr	r1, [r7, #8]
 80044e6:	e9c1 2302 	strd	r2, r3, [r1, #8]
    DataStruct->Ay = (DataStruct->Accel_Y_RAW -DataStruct->Accel_Y_Raw_Offset ) / ACCELERATION_RATE;
 80044ea:	68bb      	ldr	r3, [r7, #8]
 80044ec:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80044f0:	ee07 3a90 	vmov	s15, r3
 80044f4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80044f8:	68bb      	ldr	r3, [r7, #8]
 80044fa:	edd3 7a11 	vldr	s15, [r3, #68]	; 0x44
 80044fe:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004502:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 80046c0 <MPU6050_Read_All_Benim+0x2d0>
 8004506:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800450a:	ee16 0a90 	vmov	r0, s13
 800450e:	f7fb ffe7 	bl	80004e0 <__aeabi_f2d>
 8004512:	4602      	mov	r2, r0
 8004514:	460b      	mov	r3, r1
 8004516:	68b9      	ldr	r1, [r7, #8]
 8004518:	e9c1 2304 	strd	r2, r3, [r1, #16]
    DataStruct->Az = DataStruct->Accel_Z_RAW / DataStruct->Accel_Z_Raw_Rate;
 800451c:	68bb      	ldr	r3, [r7, #8]
 800451e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8004522:	ee07 3a90 	vmov	s15, r3
 8004526:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800452a:	68bb      	ldr	r3, [r7, #8]
 800452c:	edd3 7a12 	vldr	s15, [r3, #72]	; 0x48
 8004530:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8004534:	ee16 0a90 	vmov	r0, s13
 8004538:	f7fb ffd2 	bl	80004e0 <__aeabi_f2d>
 800453c:	4602      	mov	r2, r0
 800453e:	460b      	mov	r3, r1
 8004540:	68b9      	ldr	r1, [r7, #8]
 8004542:	e9c1 2306 	strd	r2, r3, [r1, #24]

    DataStruct->Temperature = (float) ((int16_t) temp / (float) 340.0 + (float) 36.53);
 8004546:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	; 0x22
 800454a:	ee07 3a90 	vmov	s15, r3
 800454e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004552:	eddf 6a5c 	vldr	s13, [pc, #368]	; 80046c4 <MPU6050_Read_All_Benim+0x2d4>
 8004556:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800455a:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 80046c8 <MPU6050_Read_All_Benim+0x2d8>
 800455e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004562:	68bb      	ldr	r3, [r7, #8]
 8004564:	edc3 7a13 	vstr	s15, [r3, #76]	; 0x4c


    DataStruct->Gx = DataStruct->Gyro_X_RAW  - DataStruct->pitch_calibration_value;
 8004568:	68bb      	ldr	r3, [r7, #8]
 800456a:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 800456e:	4618      	mov	r0, r3
 8004570:	f7fb ffa4 	bl	80004bc <__aeabi_i2d>
 8004574:	68bb      	ldr	r3, [r7, #8]
 8004576:	e9d3 2318 	ldrd	r2, r3, [r3, #96]	; 0x60
 800457a:	f7fb fe51 	bl	8000220 <__aeabi_dsub>
 800457e:	4602      	mov	r2, r0
 8004580:	460b      	mov	r3, r1
 8004582:	68b9      	ldr	r1, [r7, #8]
 8004584:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    if(DataStruct->Gx>-10 && DataStruct->Gx<10) DataStruct->Gx=0; // dead zone, caused by temperature change , with this config, there is no angular motion between these values, don't worry
 8004588:	68bb      	ldr	r3, [r7, #8]
 800458a:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 800458e:	f04f 0200 	mov.w	r2, #0
 8004592:	4b4e      	ldr	r3, [pc, #312]	; (80046cc <MPU6050_Read_All_Benim+0x2dc>)
 8004594:	f7fc fa8c 	bl	8000ab0 <__aeabi_dcmpgt>
 8004598:	4603      	mov	r3, r0
 800459a:	2b00      	cmp	r3, #0
 800459c:	d011      	beq.n	80045c2 <MPU6050_Read_All_Benim+0x1d2>
 800459e:	68bb      	ldr	r3, [r7, #8]
 80045a0:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 80045a4:	f04f 0200 	mov.w	r2, #0
 80045a8:	4b49      	ldr	r3, [pc, #292]	; (80046d0 <MPU6050_Read_All_Benim+0x2e0>)
 80045aa:	f7fc fa63 	bl	8000a74 <__aeabi_dcmplt>
 80045ae:	4603      	mov	r3, r0
 80045b0:	2b00      	cmp	r3, #0
 80045b2:	d006      	beq.n	80045c2 <MPU6050_Read_All_Benim+0x1d2>
 80045b4:	68b9      	ldr	r1, [r7, #8]
 80045b6:	f04f 0200 	mov.w	r2, #0
 80045ba:	f04f 0300 	mov.w	r3, #0
 80045be:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28

    DataStruct->Gy = DataStruct->Gyro_Y_RAW  - DataStruct->roll_calibration_value ;
 80045c2:	68bb      	ldr	r3, [r7, #8]
 80045c4:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 80045c8:	4618      	mov	r0, r3
 80045ca:	f7fb ff77 	bl	80004bc <__aeabi_i2d>
 80045ce:	68bb      	ldr	r3, [r7, #8]
 80045d0:	e9d3 2316 	ldrd	r2, r3, [r3, #88]	; 0x58
 80045d4:	f7fb fe24 	bl	8000220 <__aeabi_dsub>
 80045d8:	4602      	mov	r2, r0
 80045da:	460b      	mov	r3, r1
 80045dc:	68b9      	ldr	r1, [r7, #8]
 80045de:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
    if(DataStruct->Gy>-5 && DataStruct->Gy<5) DataStruct->Gy=0;  // dead zone, caused by temperature change , with this config, there is no angular motion between these values, don't worry
 80045e2:	68bb      	ldr	r3, [r7, #8]
 80045e4:	e9d3 010c 	ldrd	r0, r1, [r3, #48]	; 0x30
 80045e8:	f04f 0200 	mov.w	r2, #0
 80045ec:	4b39      	ldr	r3, [pc, #228]	; (80046d4 <MPU6050_Read_All_Benim+0x2e4>)
 80045ee:	f7fc fa5f 	bl	8000ab0 <__aeabi_dcmpgt>
 80045f2:	4603      	mov	r3, r0
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d011      	beq.n	800461c <MPU6050_Read_All_Benim+0x22c>
 80045f8:	68bb      	ldr	r3, [r7, #8]
 80045fa:	e9d3 010c 	ldrd	r0, r1, [r3, #48]	; 0x30
 80045fe:	f04f 0200 	mov.w	r2, #0
 8004602:	4b35      	ldr	r3, [pc, #212]	; (80046d8 <MPU6050_Read_All_Benim+0x2e8>)
 8004604:	f7fc fa36 	bl	8000a74 <__aeabi_dcmplt>
 8004608:	4603      	mov	r3, r0
 800460a:	2b00      	cmp	r3, #0
 800460c:	d006      	beq.n	800461c <MPU6050_Read_All_Benim+0x22c>
 800460e:	68b9      	ldr	r1, [r7, #8]
 8004610:	f04f 0200 	mov.w	r2, #0
 8004614:	f04f 0300 	mov.w	r3, #0
 8004618:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30

    DataStruct->Gz = DataStruct->Gyro_Z_RAW  - DataStruct->yaw_calibration_value;
 800461c:	68bb      	ldr	r3, [r7, #8]
 800461e:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004622:	4618      	mov	r0, r3
 8004624:	f7fb ff4a 	bl	80004bc <__aeabi_i2d>
 8004628:	68bb      	ldr	r3, [r7, #8]
 800462a:	e9d3 2314 	ldrd	r2, r3, [r3, #80]	; 0x50
 800462e:	f7fb fdf7 	bl	8000220 <__aeabi_dsub>
 8004632:	4602      	mov	r2, r0
 8004634:	460b      	mov	r3, r1
 8004636:	68b9      	ldr	r1, [r7, #8]
 8004638:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
    if(DataStruct->Gz>-5 && DataStruct->Gz<5) DataStruct->Gz=0;  // dead zone, caused by temperature change , with this config, there is no angular motion between these values, don't worry
 800463c:	68bb      	ldr	r3, [r7, #8]
 800463e:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 8004642:	f04f 0200 	mov.w	r2, #0
 8004646:	4b23      	ldr	r3, [pc, #140]	; (80046d4 <MPU6050_Read_All_Benim+0x2e4>)
 8004648:	f7fc fa32 	bl	8000ab0 <__aeabi_dcmpgt>
 800464c:	4603      	mov	r3, r0
 800464e:	2b00      	cmp	r3, #0
 8004650:	d011      	beq.n	8004676 <MPU6050_Read_All_Benim+0x286>
 8004652:	68bb      	ldr	r3, [r7, #8]
 8004654:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 8004658:	f04f 0200 	mov.w	r2, #0
 800465c:	4b1e      	ldr	r3, [pc, #120]	; (80046d8 <MPU6050_Read_All_Benim+0x2e8>)
 800465e:	f7fc fa09 	bl	8000a74 <__aeabi_dcmplt>
 8004662:	4603      	mov	r3, r0
 8004664:	2b00      	cmp	r3, #0
 8004666:	d006      	beq.n	8004676 <MPU6050_Read_All_Benim+0x286>
 8004668:	68b9      	ldr	r1, [r7, #8]
 800466a:	f04f 0200 	mov.w	r2, #0
 800466e:	f04f 0300 	mov.w	r3, #0
 8004672:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38

    DataStruct->Gx = DataStruct->Gx / GYRO_RATE;
 8004676:	68bb      	ldr	r3, [r7, #8]
 8004678:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 800467c:	a30c      	add	r3, pc, #48	; (adr r3, 80046b0 <MPU6050_Read_All_Benim+0x2c0>)
 800467e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004682:	f7fc f8af 	bl	80007e4 <__aeabi_ddiv>
 8004686:	4602      	mov	r2, r0
 8004688:	460b      	mov	r3, r1
 800468a:	68b9      	ldr	r1, [r7, #8]
 800468c:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    DataStruct->Gy = DataStruct->Gy / GYRO_RATE;
 8004690:	68bb      	ldr	r3, [r7, #8]
 8004692:	e9d3 010c 	ldrd	r0, r1, [r3, #48]	; 0x30
 8004696:	a306      	add	r3, pc, #24	; (adr r3, 80046b0 <MPU6050_Read_All_Benim+0x2c0>)
 8004698:	e9d3 2300 	ldrd	r2, r3, [r3]
 800469c:	f7fc f8a2 	bl	80007e4 <__aeabi_ddiv>
 80046a0:	4602      	mov	r2, r0
 80046a2:	460b      	mov	r3, r1
 80046a4:	68b9      	ldr	r1, [r7, #8]
 80046a6:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
    DataStruct->Gz = DataStruct->Gz / GYRO_RATE;
 80046aa:	68bb      	ldr	r3, [r7, #8]
 80046ac:	e016      	b.n	80046dc <MPU6050_Read_All_Benim+0x2ec>
 80046ae:	bf00      	nop
 80046b0:	00000000 	.word	0x00000000
 80046b4:	40506000 	.word	0x40506000
 80046b8:	200008b8 	.word	0x200008b8
 80046bc:	20000a9c 	.word	0x20000a9c
 80046c0:	46800000 	.word	0x46800000
 80046c4:	43aa0000 	.word	0x43aa0000
 80046c8:	42121eb8 	.word	0x42121eb8
 80046cc:	c0240000 	.word	0xc0240000
 80046d0:	40240000 	.word	0x40240000
 80046d4:	c0140000 	.word	0xc0140000
 80046d8:	40140000 	.word	0x40140000
 80046dc:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 80046e0:	a3d2      	add	r3, pc, #840	; (adr r3, 8004a2c <MPU6050_Read_All_Benim+0x63c>)
 80046e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80046e6:	f7fc f87d 	bl	80007e4 <__aeabi_ddiv>
 80046ea:	4602      	mov	r2, r0
 80046ec:	460b      	mov	r3, r1
 80046ee:	68b9      	ldr	r1, [r7, #8]
 80046f0:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38



    gyro_roll_input = (gyro_roll_input * gyro_filter_coeff) + (DataStruct->Gy * (1-gyro_filter_coeff));   //Gyro pid input is deg/sec.
 80046f4:	4bc6      	ldr	r3, [pc, #792]	; (8004a10 <MPU6050_Read_All_Benim+0x620>)
 80046f6:	ed93 7a00 	vldr	s14, [r3]
 80046fa:	4bc6      	ldr	r3, [pc, #792]	; (8004a14 <MPU6050_Read_All_Benim+0x624>)
 80046fc:	edd3 7a00 	vldr	s15, [r3]
 8004700:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004704:	ee17 0a90 	vmov	r0, s15
 8004708:	f7fb feea 	bl	80004e0 <__aeabi_f2d>
 800470c:	4682      	mov	sl, r0
 800470e:	468b      	mov	fp, r1
 8004710:	68bb      	ldr	r3, [r7, #8]
 8004712:	e9d3 890c 	ldrd	r8, r9, [r3, #48]	; 0x30
 8004716:	4bbf      	ldr	r3, [pc, #764]	; (8004a14 <MPU6050_Read_All_Benim+0x624>)
 8004718:	edd3 7a00 	vldr	s15, [r3]
 800471c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8004720:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004724:	ee17 0a90 	vmov	r0, s15
 8004728:	f7fb feda 	bl	80004e0 <__aeabi_f2d>
 800472c:	4602      	mov	r2, r0
 800472e:	460b      	mov	r3, r1
 8004730:	4640      	mov	r0, r8
 8004732:	4649      	mov	r1, r9
 8004734:	f7fb ff2c 	bl	8000590 <__aeabi_dmul>
 8004738:	4602      	mov	r2, r0
 800473a:	460b      	mov	r3, r1
 800473c:	4650      	mov	r0, sl
 800473e:	4659      	mov	r1, fp
 8004740:	f7fb fd70 	bl	8000224 <__adddf3>
 8004744:	4602      	mov	r2, r0
 8004746:	460b      	mov	r3, r1
 8004748:	4610      	mov	r0, r2
 800474a:	4619      	mov	r1, r3
 800474c:	f7fc f9f8 	bl	8000b40 <__aeabi_d2f>
 8004750:	4603      	mov	r3, r0
 8004752:	4aaf      	ldr	r2, [pc, #700]	; (8004a10 <MPU6050_Read_All_Benim+0x620>)
 8004754:	6013      	str	r3, [r2, #0]
    gyro_pitch_input = (gyro_pitch_input * gyro_filter_coeff) + (DataStruct->Gx *(1-gyro_filter_coeff));//Gyro pid input is deg/sec.
 8004756:	4bb0      	ldr	r3, [pc, #704]	; (8004a18 <MPU6050_Read_All_Benim+0x628>)
 8004758:	ed93 7a00 	vldr	s14, [r3]
 800475c:	4bad      	ldr	r3, [pc, #692]	; (8004a14 <MPU6050_Read_All_Benim+0x624>)
 800475e:	edd3 7a00 	vldr	s15, [r3]
 8004762:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004766:	ee17 0a90 	vmov	r0, s15
 800476a:	f7fb feb9 	bl	80004e0 <__aeabi_f2d>
 800476e:	4682      	mov	sl, r0
 8004770:	468b      	mov	fp, r1
 8004772:	68bb      	ldr	r3, [r7, #8]
 8004774:	e9d3 890a 	ldrd	r8, r9, [r3, #40]	; 0x28
 8004778:	4ba6      	ldr	r3, [pc, #664]	; (8004a14 <MPU6050_Read_All_Benim+0x624>)
 800477a:	edd3 7a00 	vldr	s15, [r3]
 800477e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8004782:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004786:	ee17 0a90 	vmov	r0, s15
 800478a:	f7fb fea9 	bl	80004e0 <__aeabi_f2d>
 800478e:	4602      	mov	r2, r0
 8004790:	460b      	mov	r3, r1
 8004792:	4640      	mov	r0, r8
 8004794:	4649      	mov	r1, r9
 8004796:	f7fb fefb 	bl	8000590 <__aeabi_dmul>
 800479a:	4602      	mov	r2, r0
 800479c:	460b      	mov	r3, r1
 800479e:	4650      	mov	r0, sl
 80047a0:	4659      	mov	r1, fp
 80047a2:	f7fb fd3f 	bl	8000224 <__adddf3>
 80047a6:	4602      	mov	r2, r0
 80047a8:	460b      	mov	r3, r1
 80047aa:	4610      	mov	r0, r2
 80047ac:	4619      	mov	r1, r3
 80047ae:	f7fc f9c7 	bl	8000b40 <__aeabi_d2f>
 80047b2:	4603      	mov	r3, r0
 80047b4:	4a98      	ldr	r2, [pc, #608]	; (8004a18 <MPU6050_Read_All_Benim+0x628>)
 80047b6:	6013      	str	r3, [r2, #0]
    gyro_yaw_input = (gyro_yaw_input * gyro_filter_coeff) + (DataStruct->Gz* (1-gyro_filter_coeff));
 80047b8:	4b98      	ldr	r3, [pc, #608]	; (8004a1c <MPU6050_Read_All_Benim+0x62c>)
 80047ba:	ed93 7a00 	vldr	s14, [r3]
 80047be:	4b95      	ldr	r3, [pc, #596]	; (8004a14 <MPU6050_Read_All_Benim+0x624>)
 80047c0:	edd3 7a00 	vldr	s15, [r3]
 80047c4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80047c8:	ee17 0a90 	vmov	r0, s15
 80047cc:	f7fb fe88 	bl	80004e0 <__aeabi_f2d>
 80047d0:	4682      	mov	sl, r0
 80047d2:	468b      	mov	fp, r1
 80047d4:	68bb      	ldr	r3, [r7, #8]
 80047d6:	e9d3 890e 	ldrd	r8, r9, [r3, #56]	; 0x38
 80047da:	4b8e      	ldr	r3, [pc, #568]	; (8004a14 <MPU6050_Read_All_Benim+0x624>)
 80047dc:	edd3 7a00 	vldr	s15, [r3]
 80047e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80047e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80047e8:	ee17 0a90 	vmov	r0, s15
 80047ec:	f7fb fe78 	bl	80004e0 <__aeabi_f2d>
 80047f0:	4602      	mov	r2, r0
 80047f2:	460b      	mov	r3, r1
 80047f4:	4640      	mov	r0, r8
 80047f6:	4649      	mov	r1, r9
 80047f8:	f7fb feca 	bl	8000590 <__aeabi_dmul>
 80047fc:	4602      	mov	r2, r0
 80047fe:	460b      	mov	r3, r1
 8004800:	4650      	mov	r0, sl
 8004802:	4659      	mov	r1, fp
 8004804:	f7fb fd0e 	bl	8000224 <__adddf3>
 8004808:	4602      	mov	r2, r0
 800480a:	460b      	mov	r3, r1
 800480c:	4610      	mov	r0, r2
 800480e:	4619      	mov	r1, r3
 8004810:	f7fc f996 	bl	8000b40 <__aeabi_d2f>
 8004814:	4603      	mov	r3, r0
 8004816:	4a81      	ldr	r2, [pc, #516]	; (8004a1c <MPU6050_Read_All_Benim+0x62c>)
 8004818:	6013      	str	r3, [r2, #0]

    // numeric integration
    DataStruct->angle_pitch += (float)DataStruct->Gx/dF;
 800481a:	68bb      	ldr	r3, [r7, #8]
 800481c:	e9d3 8922 	ldrd	r8, r9, [r3, #136]	; 0x88
 8004820:	68bb      	ldr	r3, [r7, #8]
 8004822:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 8004826:	4610      	mov	r0, r2
 8004828:	4619      	mov	r1, r3
 800482a:	f7fc f989 	bl	8000b40 <__aeabi_d2f>
 800482e:	ee06 0a90 	vmov	s13, r0
 8004832:	4b7b      	ldr	r3, [pc, #492]	; (8004a20 <MPU6050_Read_All_Benim+0x630>)
 8004834:	edd3 7a00 	vldr	s15, [r3]
 8004838:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800483c:	ee17 0a10 	vmov	r0, s14
 8004840:	f7fb fe4e 	bl	80004e0 <__aeabi_f2d>
 8004844:	4602      	mov	r2, r0
 8004846:	460b      	mov	r3, r1
 8004848:	4640      	mov	r0, r8
 800484a:	4649      	mov	r1, r9
 800484c:	f7fb fcea 	bl	8000224 <__adddf3>
 8004850:	4602      	mov	r2, r0
 8004852:	460b      	mov	r3, r1
 8004854:	68b9      	ldr	r1, [r7, #8]
 8004856:	e9c1 2322 	strd	r2, r3, [r1, #136]	; 0x88
    DataStruct->angle_roll += (float)DataStruct->Gy/dF;
 800485a:	68bb      	ldr	r3, [r7, #8]
 800485c:	e9d3 8924 	ldrd	r8, r9, [r3, #144]	; 0x90
 8004860:	68bb      	ldr	r3, [r7, #8]
 8004862:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 8004866:	4610      	mov	r0, r2
 8004868:	4619      	mov	r1, r3
 800486a:	f7fc f969 	bl	8000b40 <__aeabi_d2f>
 800486e:	ee06 0a90 	vmov	s13, r0
 8004872:	4b6b      	ldr	r3, [pc, #428]	; (8004a20 <MPU6050_Read_All_Benim+0x630>)
 8004874:	edd3 7a00 	vldr	s15, [r3]
 8004878:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800487c:	ee17 0a10 	vmov	r0, s14
 8004880:	f7fb fe2e 	bl	80004e0 <__aeabi_f2d>
 8004884:	4602      	mov	r2, r0
 8004886:	460b      	mov	r3, r1
 8004888:	4640      	mov	r0, r8
 800488a:	4649      	mov	r1, r9
 800488c:	f7fb fcca 	bl	8000224 <__adddf3>
 8004890:	4602      	mov	r2, r0
 8004892:	460b      	mov	r3, r1
 8004894:	68b9      	ldr	r1, [r7, #8]
 8004896:	e9c1 2324 	strd	r2, r3, [r1, #144]	; 0x90
    DataStruct->angle_yaw += (float)DataStruct->Gz/dF;
 800489a:	68bb      	ldr	r3, [r7, #8]
 800489c:	e9d3 8926 	ldrd	r8, r9, [r3, #152]	; 0x98
 80048a0:	68bb      	ldr	r3, [r7, #8]
 80048a2:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 80048a6:	4610      	mov	r0, r2
 80048a8:	4619      	mov	r1, r3
 80048aa:	f7fc f949 	bl	8000b40 <__aeabi_d2f>
 80048ae:	ee06 0a90 	vmov	s13, r0
 80048b2:	4b5b      	ldr	r3, [pc, #364]	; (8004a20 <MPU6050_Read_All_Benim+0x630>)
 80048b4:	edd3 7a00 	vldr	s15, [r3]
 80048b8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80048bc:	ee17 0a10 	vmov	r0, s14
 80048c0:	f7fb fe0e 	bl	80004e0 <__aeabi_f2d>
 80048c4:	4602      	mov	r2, r0
 80048c6:	460b      	mov	r3, r1
 80048c8:	4640      	mov	r0, r8
 80048ca:	4649      	mov	r1, r9
 80048cc:	f7fb fcaa 	bl	8000224 <__adddf3>
 80048d0:	4602      	mov	r2, r0
 80048d2:	460b      	mov	r3, r1
 80048d4:	68b9      	ldr	r1, [r7, #8]
 80048d6:	e9c1 2326 	strd	r2, r3, [r1, #152]	; 0x98



    DataStruct->acc_total_vector = sqrt((DataStruct->Ax*DataStruct->Ax)+(DataStruct->Ay*DataStruct->Ay)+(DataStruct->Az*DataStruct->Az));
 80048da:	68bb      	ldr	r3, [r7, #8]
 80048dc:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 80048e0:	68bb      	ldr	r3, [r7, #8]
 80048e2:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80048e6:	f7fb fe53 	bl	8000590 <__aeabi_dmul>
 80048ea:	4602      	mov	r2, r0
 80048ec:	460b      	mov	r3, r1
 80048ee:	4690      	mov	r8, r2
 80048f0:	4699      	mov	r9, r3
 80048f2:	68bb      	ldr	r3, [r7, #8]
 80048f4:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 80048f8:	68bb      	ldr	r3, [r7, #8]
 80048fa:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80048fe:	f7fb fe47 	bl	8000590 <__aeabi_dmul>
 8004902:	4602      	mov	r2, r0
 8004904:	460b      	mov	r3, r1
 8004906:	4640      	mov	r0, r8
 8004908:	4649      	mov	r1, r9
 800490a:	f7fb fc8b 	bl	8000224 <__adddf3>
 800490e:	4602      	mov	r2, r0
 8004910:	460b      	mov	r3, r1
 8004912:	4690      	mov	r8, r2
 8004914:	4699      	mov	r9, r3
 8004916:	68bb      	ldr	r3, [r7, #8]
 8004918:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 800491c:	68bb      	ldr	r3, [r7, #8]
 800491e:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004922:	f7fb fe35 	bl	8000590 <__aeabi_dmul>
 8004926:	4602      	mov	r2, r0
 8004928:	460b      	mov	r3, r1
 800492a:	4640      	mov	r0, r8
 800492c:	4649      	mov	r1, r9
 800492e:	f7fb fc79 	bl	8000224 <__adddf3>
 8004932:	4602      	mov	r2, r0
 8004934:	460b      	mov	r3, r1
 8004936:	ec43 2b17 	vmov	d7, r2, r3
 800493a:	eeb0 0a47 	vmov.f32	s0, s14
 800493e:	eef0 0a67 	vmov.f32	s1, s15
 8004942:	f009 f923 	bl	800db8c <sqrt>
 8004946:	eeb0 7a40 	vmov.f32	s14, s0
 800494a:	eef0 7a60 	vmov.f32	s15, s1
 800494e:	68bb      	ldr	r3, [r7, #8]
 8004950:	ed83 7b1c 	vstr	d7, [r3, #112]	; 0x70

    DataStruct->angle_pitch_acc = asin((float)DataStruct->Ay/DataStruct->acc_total_vector)* RAD_TO_DEG;
 8004954:	68bb      	ldr	r3, [r7, #8]
 8004956:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 800495a:	4610      	mov	r0, r2
 800495c:	4619      	mov	r1, r3
 800495e:	f7fc f8ef 	bl	8000b40 <__aeabi_d2f>
 8004962:	4603      	mov	r3, r0
 8004964:	4618      	mov	r0, r3
 8004966:	f7fb fdbb 	bl	80004e0 <__aeabi_f2d>
 800496a:	68bb      	ldr	r3, [r7, #8]
 800496c:	e9d3 231c 	ldrd	r2, r3, [r3, #112]	; 0x70
 8004970:	f7fb ff38 	bl	80007e4 <__aeabi_ddiv>
 8004974:	4602      	mov	r2, r0
 8004976:	460b      	mov	r3, r1
 8004978:	ec43 2b17 	vmov	d7, r2, r3
 800497c:	eeb0 0a47 	vmov.f32	s0, s14
 8004980:	eef0 0a67 	vmov.f32	s1, s15
 8004984:	f009 f85c 	bl	800da40 <asin>
 8004988:	ec51 0b10 	vmov	r0, r1, d0
 800498c:	a31c      	add	r3, pc, #112	; (adr r3, 8004a00 <MPU6050_Read_All_Benim+0x610>)
 800498e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004992:	f7fb fdfd 	bl	8000590 <__aeabi_dmul>
 8004996:	4602      	mov	r2, r0
 8004998:	460b      	mov	r3, r1
 800499a:	68b9      	ldr	r1, [r7, #8]
 800499c:	e9c1 231e 	strd	r2, r3, [r1, #120]	; 0x78
    DataStruct->angle_roll_acc = asin((float)DataStruct->Ax/DataStruct->acc_total_vector)* -RAD_TO_DEG;
 80049a0:	68bb      	ldr	r3, [r7, #8]
 80049a2:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80049a6:	4610      	mov	r0, r2
 80049a8:	4619      	mov	r1, r3
 80049aa:	f7fc f8c9 	bl	8000b40 <__aeabi_d2f>
 80049ae:	4603      	mov	r3, r0
 80049b0:	4618      	mov	r0, r3
 80049b2:	f7fb fd95 	bl	80004e0 <__aeabi_f2d>
 80049b6:	68bb      	ldr	r3, [r7, #8]
 80049b8:	e9d3 231c 	ldrd	r2, r3, [r3, #112]	; 0x70
 80049bc:	f7fb ff12 	bl	80007e4 <__aeabi_ddiv>
 80049c0:	4602      	mov	r2, r0
 80049c2:	460b      	mov	r3, r1
 80049c4:	ec43 2b17 	vmov	d7, r2, r3
 80049c8:	eeb0 0a47 	vmov.f32	s0, s14
 80049cc:	eef0 0a67 	vmov.f32	s1, s15
 80049d0:	f009 f836 	bl	800da40 <asin>
 80049d4:	ec51 0b10 	vmov	r0, r1, d0
 80049d8:	a30b      	add	r3, pc, #44	; (adr r3, 8004a08 <MPU6050_Read_All_Benim+0x618>)
 80049da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80049de:	f7fb fdd7 	bl	8000590 <__aeabi_dmul>
 80049e2:	4602      	mov	r2, r0
 80049e4:	460b      	mov	r3, r1
 80049e6:	68b9      	ldr	r1, [r7, #8]
 80049e8:	e9c1 2320 	strd	r2, r3, [r1, #128]	; 0x80


    if(set_gyro_angles){                                                 //If the IMU is already started
 80049ec:	4b0d      	ldr	r3, [pc, #52]	; (8004a24 <MPU6050_Read_All_Benim+0x634>)
 80049ee:	781b      	ldrb	r3, [r3, #0]
 80049f0:	2b00      	cmp	r3, #0
 80049f2:	d07f      	beq.n	8004af4 <MPU6050_Read_All_Benim+0x704>
    	DataStruct->angle_pitch = DataStruct->angle_pitch * my_alpha + DataStruct->angle_pitch_acc * (1-my_alpha);     //Correct the drift of the gyro pitch angle with the accelerometer pitch angle
 80049f4:	68bb      	ldr	r3, [r7, #8]
 80049f6:	e9d3 8922 	ldrd	r8, r9, [r3, #136]	; 0x88
 80049fa:	4b0b      	ldr	r3, [pc, #44]	; (8004a28 <MPU6050_Read_All_Benim+0x638>)
 80049fc:	681b      	ldr	r3, [r3, #0]
 80049fe:	e019      	b.n	8004a34 <MPU6050_Read_All_Benim+0x644>
 8004a00:	1a63c1f8 	.word	0x1a63c1f8
 8004a04:	404ca5dc 	.word	0x404ca5dc
 8004a08:	1a63c1f8 	.word	0x1a63c1f8
 8004a0c:	c04ca5dc 	.word	0xc04ca5dc
 8004a10:	20000a90 	.word	0x20000a90
 8004a14:	200000a4 	.word	0x200000a4
 8004a18:	20000a94 	.word	0x20000a94
 8004a1c:	20000a98 	.word	0x20000a98
 8004a20:	200000ac 	.word	0x200000ac
 8004a24:	20000a8d 	.word	0x20000a8d
 8004a28:	200000a8 	.word	0x200000a8
 8004a2c:	00000000 	.word	0x00000000
 8004a30:	40506000 	.word	0x40506000
 8004a34:	4618      	mov	r0, r3
 8004a36:	f7fb fd53 	bl	80004e0 <__aeabi_f2d>
 8004a3a:	4602      	mov	r2, r0
 8004a3c:	460b      	mov	r3, r1
 8004a3e:	4640      	mov	r0, r8
 8004a40:	4649      	mov	r1, r9
 8004a42:	f7fb fda5 	bl	8000590 <__aeabi_dmul>
 8004a46:	4602      	mov	r2, r0
 8004a48:	460b      	mov	r3, r1
 8004a4a:	4692      	mov	sl, r2
 8004a4c:	469b      	mov	fp, r3
 8004a4e:	68bb      	ldr	r3, [r7, #8]
 8004a50:	e9d3 891e 	ldrd	r8, r9, [r3, #120]	; 0x78
 8004a54:	4b26      	ldr	r3, [pc, #152]	; (8004af0 <MPU6050_Read_All_Benim+0x700>)
 8004a56:	edd3 7a00 	vldr	s15, [r3]
 8004a5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8004a5e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004a62:	ee17 0a90 	vmov	r0, s15
 8004a66:	f7fb fd3b 	bl	80004e0 <__aeabi_f2d>
 8004a6a:	4602      	mov	r2, r0
 8004a6c:	460b      	mov	r3, r1
 8004a6e:	4640      	mov	r0, r8
 8004a70:	4649      	mov	r1, r9
 8004a72:	f7fb fd8d 	bl	8000590 <__aeabi_dmul>
 8004a76:	4602      	mov	r2, r0
 8004a78:	460b      	mov	r3, r1
 8004a7a:	4650      	mov	r0, sl
 8004a7c:	4659      	mov	r1, fp
 8004a7e:	f7fb fbd1 	bl	8000224 <__adddf3>
 8004a82:	4602      	mov	r2, r0
 8004a84:	460b      	mov	r3, r1
 8004a86:	68b9      	ldr	r1, [r7, #8]
 8004a88:	e9c1 2322 	strd	r2, r3, [r1, #136]	; 0x88
    	DataStruct->angle_roll = DataStruct->angle_roll * my_alpha + DataStruct->angle_roll_acc * (1-my_alpha);        //Correct the drift of the gyro roll angle with the accelerometer roll angle
 8004a8c:	68bb      	ldr	r3, [r7, #8]
 8004a8e:	e9d3 8924 	ldrd	r8, r9, [r3, #144]	; 0x90
 8004a92:	4b17      	ldr	r3, [pc, #92]	; (8004af0 <MPU6050_Read_All_Benim+0x700>)
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	4618      	mov	r0, r3
 8004a98:	f7fb fd22 	bl	80004e0 <__aeabi_f2d>
 8004a9c:	4602      	mov	r2, r0
 8004a9e:	460b      	mov	r3, r1
 8004aa0:	4640      	mov	r0, r8
 8004aa2:	4649      	mov	r1, r9
 8004aa4:	f7fb fd74 	bl	8000590 <__aeabi_dmul>
 8004aa8:	4602      	mov	r2, r0
 8004aaa:	460b      	mov	r3, r1
 8004aac:	4692      	mov	sl, r2
 8004aae:	469b      	mov	fp, r3
 8004ab0:	68bb      	ldr	r3, [r7, #8]
 8004ab2:	e9d3 8920 	ldrd	r8, r9, [r3, #128]	; 0x80
 8004ab6:	4b0e      	ldr	r3, [pc, #56]	; (8004af0 <MPU6050_Read_All_Benim+0x700>)
 8004ab8:	edd3 7a00 	vldr	s15, [r3]
 8004abc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8004ac0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004ac4:	ee17 0a90 	vmov	r0, s15
 8004ac8:	f7fb fd0a 	bl	80004e0 <__aeabi_f2d>
 8004acc:	4602      	mov	r2, r0
 8004ace:	460b      	mov	r3, r1
 8004ad0:	4640      	mov	r0, r8
 8004ad2:	4649      	mov	r1, r9
 8004ad4:	f7fb fd5c 	bl	8000590 <__aeabi_dmul>
 8004ad8:	4602      	mov	r2, r0
 8004ada:	460b      	mov	r3, r1
 8004adc:	4650      	mov	r0, sl
 8004ade:	4659      	mov	r1, fp
 8004ae0:	f7fb fba0 	bl	8000224 <__adddf3>
 8004ae4:	4602      	mov	r2, r0
 8004ae6:	460b      	mov	r3, r1
 8004ae8:	68b9      	ldr	r1, [r7, #8]
 8004aea:	e9c1 2324 	strd	r2, r3, [r1, #144]	; 0x90
 8004aee:	e010      	b.n	8004b12 <MPU6050_Read_All_Benim+0x722>
 8004af0:	200000a8 	.word	0x200000a8
      }
      else{
    	  //At first start
    	  DataStruct->angle_pitch = DataStruct->angle_pitch_acc;                                     //Set the gyro pitch angle equal to the accelerometer pitch angle
 8004af4:	68bb      	ldr	r3, [r7, #8]
 8004af6:	e9d3 231e 	ldrd	r2, r3, [r3, #120]	; 0x78
 8004afa:	68b9      	ldr	r1, [r7, #8]
 8004afc:	e9c1 2322 	strd	r2, r3, [r1, #136]	; 0x88
    	  DataStruct->angle_roll = DataStruct->angle_roll_acc;
 8004b00:	68bb      	ldr	r3, [r7, #8]
 8004b02:	e9d3 2320 	ldrd	r2, r3, [r3, #128]	; 0x80
 8004b06:	68b9      	ldr	r1, [r7, #8]
 8004b08:	e9c1 2324 	strd	r2, r3, [r1, #144]	; 0x90


        set_gyro_angles = true;                                            //Set the IMU started flag
 8004b0c:	4bcc      	ldr	r3, [pc, #816]	; (8004e40 <MPU6050_Read_All_Benim+0xa50>)
 8004b0e:	2201      	movs	r2, #1
 8004b10:	701a      	strb	r2, [r3, #0]
      }
    // yaw compensation to roll and pitch
        DataStruct->angle_roll-=DataStruct->angle_pitch * sin((DataStruct->Gz/dF)*M_PI/180);
 8004b12:	68bb      	ldr	r3, [r7, #8]
 8004b14:	e9d3 8924 	ldrd	r8, r9, [r3, #144]	; 0x90
 8004b18:	68bb      	ldr	r3, [r7, #8]
 8004b1a:	e9d3 ab22 	ldrd	sl, fp, [r3, #136]	; 0x88
 8004b1e:	68bb      	ldr	r3, [r7, #8]
 8004b20:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 8004b24:	ed87 7b00 	vstr	d7, [r7]
 8004b28:	4bc6      	ldr	r3, [pc, #792]	; (8004e44 <MPU6050_Read_All_Benim+0xa54>)
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	4618      	mov	r0, r3
 8004b2e:	f7fb fcd7 	bl	80004e0 <__aeabi_f2d>
 8004b32:	4602      	mov	r2, r0
 8004b34:	460b      	mov	r3, r1
 8004b36:	e9d7 0100 	ldrd	r0, r1, [r7]
 8004b3a:	f7fb fe53 	bl	80007e4 <__aeabi_ddiv>
 8004b3e:	4602      	mov	r2, r0
 8004b40:	460b      	mov	r3, r1
 8004b42:	4610      	mov	r0, r2
 8004b44:	4619      	mov	r1, r3
 8004b46:	a3b8      	add	r3, pc, #736	; (adr r3, 8004e28 <MPU6050_Read_All_Benim+0xa38>)
 8004b48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b4c:	f7fb fd20 	bl	8000590 <__aeabi_dmul>
 8004b50:	4602      	mov	r2, r0
 8004b52:	460b      	mov	r3, r1
 8004b54:	4610      	mov	r0, r2
 8004b56:	4619      	mov	r1, r3
 8004b58:	f04f 0200 	mov.w	r2, #0
 8004b5c:	4bba      	ldr	r3, [pc, #744]	; (8004e48 <MPU6050_Read_All_Benim+0xa58>)
 8004b5e:	f7fb fe41 	bl	80007e4 <__aeabi_ddiv>
 8004b62:	4602      	mov	r2, r0
 8004b64:	460b      	mov	r3, r1
 8004b66:	ec43 2b17 	vmov	d7, r2, r3
 8004b6a:	eeb0 0a47 	vmov.f32	s0, s14
 8004b6e:	eef0 0a67 	vmov.f32	s1, s15
 8004b72:	f008 ff0d 	bl	800d990 <sin>
 8004b76:	ec53 2b10 	vmov	r2, r3, d0
 8004b7a:	4650      	mov	r0, sl
 8004b7c:	4659      	mov	r1, fp
 8004b7e:	f7fb fd07 	bl	8000590 <__aeabi_dmul>
 8004b82:	4602      	mov	r2, r0
 8004b84:	460b      	mov	r3, r1
 8004b86:	4640      	mov	r0, r8
 8004b88:	4649      	mov	r1, r9
 8004b8a:	f7fb fb49 	bl	8000220 <__aeabi_dsub>
 8004b8e:	4602      	mov	r2, r0
 8004b90:	460b      	mov	r3, r1
 8004b92:	68b9      	ldr	r1, [r7, #8]
 8004b94:	e9c1 2324 	strd	r2, r3, [r1, #144]	; 0x90
        DataStruct->angle_pitch+=DataStruct->angle_roll * sin((DataStruct->Gz/dF)*M_PI/180);
 8004b98:	68bb      	ldr	r3, [r7, #8]
 8004b9a:	e9d3 8922 	ldrd	r8, r9, [r3, #136]	; 0x88
 8004b9e:	68bb      	ldr	r3, [r7, #8]
 8004ba0:	e9d3 ab24 	ldrd	sl, fp, [r3, #144]	; 0x90
 8004ba4:	68bb      	ldr	r3, [r7, #8]
 8004ba6:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 8004baa:	ed87 7b00 	vstr	d7, [r7]
 8004bae:	4ba5      	ldr	r3, [pc, #660]	; (8004e44 <MPU6050_Read_All_Benim+0xa54>)
 8004bb0:	681b      	ldr	r3, [r3, #0]
 8004bb2:	4618      	mov	r0, r3
 8004bb4:	f7fb fc94 	bl	80004e0 <__aeabi_f2d>
 8004bb8:	4602      	mov	r2, r0
 8004bba:	460b      	mov	r3, r1
 8004bbc:	e9d7 0100 	ldrd	r0, r1, [r7]
 8004bc0:	f7fb fe10 	bl	80007e4 <__aeabi_ddiv>
 8004bc4:	4602      	mov	r2, r0
 8004bc6:	460b      	mov	r3, r1
 8004bc8:	4610      	mov	r0, r2
 8004bca:	4619      	mov	r1, r3
 8004bcc:	a396      	add	r3, pc, #600	; (adr r3, 8004e28 <MPU6050_Read_All_Benim+0xa38>)
 8004bce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004bd2:	f7fb fcdd 	bl	8000590 <__aeabi_dmul>
 8004bd6:	4602      	mov	r2, r0
 8004bd8:	460b      	mov	r3, r1
 8004bda:	4610      	mov	r0, r2
 8004bdc:	4619      	mov	r1, r3
 8004bde:	f04f 0200 	mov.w	r2, #0
 8004be2:	4b99      	ldr	r3, [pc, #612]	; (8004e48 <MPU6050_Read_All_Benim+0xa58>)
 8004be4:	f7fb fdfe 	bl	80007e4 <__aeabi_ddiv>
 8004be8:	4602      	mov	r2, r0
 8004bea:	460b      	mov	r3, r1
 8004bec:	ec43 2b17 	vmov	d7, r2, r3
 8004bf0:	eeb0 0a47 	vmov.f32	s0, s14
 8004bf4:	eef0 0a67 	vmov.f32	s1, s15
 8004bf8:	f008 feca 	bl	800d990 <sin>
 8004bfc:	ec53 2b10 	vmov	r2, r3, d0
 8004c00:	4650      	mov	r0, sl
 8004c02:	4659      	mov	r1, fp
 8004c04:	f7fb fcc4 	bl	8000590 <__aeabi_dmul>
 8004c08:	4602      	mov	r2, r0
 8004c0a:	460b      	mov	r3, r1
 8004c0c:	4640      	mov	r0, r8
 8004c0e:	4649      	mov	r1, r9
 8004c10:	f7fb fb08 	bl	8000224 <__adddf3>
 8004c14:	4602      	mov	r2, r0
 8004c16:	460b      	mov	r3, r1
 8004c18:	68b9      	ldr	r1, [r7, #8]
 8004c1a:	e9c1 2322 	strd	r2, r3, [r1, #136]	; 0x88





    angle_pitch_output = angle_pitch_output * 0.9 + DataStruct->angle_pitch* 0.1 ;
 8004c1e:	4b8b      	ldr	r3, [pc, #556]	; (8004e4c <MPU6050_Read_All_Benim+0xa5c>)
 8004c20:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004c24:	a382      	add	r3, pc, #520	; (adr r3, 8004e30 <MPU6050_Read_All_Benim+0xa40>)
 8004c26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c2a:	f7fb fcb1 	bl	8000590 <__aeabi_dmul>
 8004c2e:	4602      	mov	r2, r0
 8004c30:	460b      	mov	r3, r1
 8004c32:	4690      	mov	r8, r2
 8004c34:	4699      	mov	r9, r3
 8004c36:	68bb      	ldr	r3, [r7, #8]
 8004c38:	e9d3 0122 	ldrd	r0, r1, [r3, #136]	; 0x88
 8004c3c:	a37e      	add	r3, pc, #504	; (adr r3, 8004e38 <MPU6050_Read_All_Benim+0xa48>)
 8004c3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c42:	f7fb fca5 	bl	8000590 <__aeabi_dmul>
 8004c46:	4602      	mov	r2, r0
 8004c48:	460b      	mov	r3, r1
 8004c4a:	4640      	mov	r0, r8
 8004c4c:	4649      	mov	r1, r9
 8004c4e:	f7fb fae9 	bl	8000224 <__adddf3>
 8004c52:	4602      	mov	r2, r0
 8004c54:	460b      	mov	r3, r1
 8004c56:	497d      	ldr	r1, [pc, #500]	; (8004e4c <MPU6050_Read_All_Benim+0xa5c>)
 8004c58:	e9c1 2300 	strd	r2, r3, [r1]
    angle_roll_output = angle_roll_output * 0.9 + DataStruct->angle_roll* 0.1;
 8004c5c:	4b7c      	ldr	r3, [pc, #496]	; (8004e50 <MPU6050_Read_All_Benim+0xa60>)
 8004c5e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004c62:	a373      	add	r3, pc, #460	; (adr r3, 8004e30 <MPU6050_Read_All_Benim+0xa40>)
 8004c64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c68:	f7fb fc92 	bl	8000590 <__aeabi_dmul>
 8004c6c:	4602      	mov	r2, r0
 8004c6e:	460b      	mov	r3, r1
 8004c70:	4690      	mov	r8, r2
 8004c72:	4699      	mov	r9, r3
 8004c74:	68bb      	ldr	r3, [r7, #8]
 8004c76:	e9d3 0124 	ldrd	r0, r1, [r3, #144]	; 0x90
 8004c7a:	a36f      	add	r3, pc, #444	; (adr r3, 8004e38 <MPU6050_Read_All_Benim+0xa48>)
 8004c7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c80:	f7fb fc86 	bl	8000590 <__aeabi_dmul>
 8004c84:	4602      	mov	r2, r0
 8004c86:	460b      	mov	r3, r1
 8004c88:	4640      	mov	r0, r8
 8004c8a:	4649      	mov	r1, r9
 8004c8c:	f7fb faca 	bl	8000224 <__adddf3>
 8004c90:	4602      	mov	r2, r0
 8004c92:	460b      	mov	r3, r1
 8004c94:	496e      	ldr	r1, [pc, #440]	; (8004e50 <MPU6050_Read_All_Benim+0xa60>)
 8004c96:	e9c1 2300 	strd	r2, r3, [r1]

    angle_yaw_rate_output=DataStruct->Gz;
 8004c9a:	68bb      	ldr	r3, [r7, #8]
 8004c9c:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 8004ca0:	496c      	ldr	r1, [pc, #432]	; (8004e54 <MPU6050_Read_All_Benim+0xa64>)
 8004ca2:	e9c1 2300 	strd	r2, r3, [r1]

    /// VERTICAL VELOCITY CALCULATION
    // THIS PART OF THE CODE IS EXPERIMENTAL, NOT USED IN THE CODE YET !!!!
    DataStruct->accel_in_z= (double)-(DataStruct->Ax)*16384.0/ACCELERATION_RATE *sin(angle_pitch_output*M_PI/180)
 8004ca6:	68bb      	ldr	r3, [r7, #8]
 8004ca8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8004cac:	4614      	mov	r4, r2
 8004cae:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 8004cb2:	f04f 0200 	mov.w	r2, #0
 8004cb6:	4b68      	ldr	r3, [pc, #416]	; (8004e58 <MPU6050_Read_All_Benim+0xa68>)
 8004cb8:	4620      	mov	r0, r4
 8004cba:	4629      	mov	r1, r5
 8004cbc:	f7fb fc68 	bl	8000590 <__aeabi_dmul>
 8004cc0:	4602      	mov	r2, r0
 8004cc2:	460b      	mov	r3, r1
 8004cc4:	4610      	mov	r0, r2
 8004cc6:	4619      	mov	r1, r3
 8004cc8:	f04f 0200 	mov.w	r2, #0
 8004ccc:	4b62      	ldr	r3, [pc, #392]	; (8004e58 <MPU6050_Read_All_Benim+0xa68>)
 8004cce:	f7fb fd89 	bl	80007e4 <__aeabi_ddiv>
 8004cd2:	4602      	mov	r2, r0
 8004cd4:	460b      	mov	r3, r1
 8004cd6:	4614      	mov	r4, r2
 8004cd8:	461d      	mov	r5, r3
 8004cda:	4b5c      	ldr	r3, [pc, #368]	; (8004e4c <MPU6050_Read_All_Benim+0xa5c>)
 8004cdc:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004ce0:	a351      	add	r3, pc, #324	; (adr r3, 8004e28 <MPU6050_Read_All_Benim+0xa38>)
 8004ce2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ce6:	f7fb fc53 	bl	8000590 <__aeabi_dmul>
 8004cea:	4602      	mov	r2, r0
 8004cec:	460b      	mov	r3, r1
 8004cee:	4610      	mov	r0, r2
 8004cf0:	4619      	mov	r1, r3
 8004cf2:	f04f 0200 	mov.w	r2, #0
 8004cf6:	4b54      	ldr	r3, [pc, #336]	; (8004e48 <MPU6050_Read_All_Benim+0xa58>)
 8004cf8:	f7fb fd74 	bl	80007e4 <__aeabi_ddiv>
 8004cfc:	4602      	mov	r2, r0
 8004cfe:	460b      	mov	r3, r1
 8004d00:	ec43 2b17 	vmov	d7, r2, r3
 8004d04:	eeb0 0a47 	vmov.f32	s0, s14
 8004d08:	eef0 0a67 	vmov.f32	s1, s15
 8004d0c:	f008 fe40 	bl	800d990 <sin>
 8004d10:	ec53 2b10 	vmov	r2, r3, d0
 8004d14:	4620      	mov	r0, r4
 8004d16:	4629      	mov	r1, r5
 8004d18:	f7fb fc3a 	bl	8000590 <__aeabi_dmul>
 8004d1c:	4602      	mov	r2, r0
 8004d1e:	460b      	mov	r3, r1
 8004d20:	4614      	mov	r4, r2
 8004d22:	461d      	mov	r5, r3
    + (double)(DataStruct->Ay)*16384.0/ACCELERATION_RATE*sin(angle_roll_output*M_PI/180)*cos(angle_pitch_output*M_PI/180)
 8004d24:	68bb      	ldr	r3, [r7, #8]
 8004d26:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8004d2a:	f04f 0200 	mov.w	r2, #0
 8004d2e:	4b4a      	ldr	r3, [pc, #296]	; (8004e58 <MPU6050_Read_All_Benim+0xa68>)
 8004d30:	f7fb fc2e 	bl	8000590 <__aeabi_dmul>
 8004d34:	4602      	mov	r2, r0
 8004d36:	460b      	mov	r3, r1
 8004d38:	4610      	mov	r0, r2
 8004d3a:	4619      	mov	r1, r3
 8004d3c:	f04f 0200 	mov.w	r2, #0
 8004d40:	4b45      	ldr	r3, [pc, #276]	; (8004e58 <MPU6050_Read_All_Benim+0xa68>)
 8004d42:	f7fb fd4f 	bl	80007e4 <__aeabi_ddiv>
 8004d46:	4602      	mov	r2, r0
 8004d48:	460b      	mov	r3, r1
 8004d4a:	4690      	mov	r8, r2
 8004d4c:	4699      	mov	r9, r3
 8004d4e:	4b40      	ldr	r3, [pc, #256]	; (8004e50 <MPU6050_Read_All_Benim+0xa60>)
 8004d50:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004d54:	a334      	add	r3, pc, #208	; (adr r3, 8004e28 <MPU6050_Read_All_Benim+0xa38>)
 8004d56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d5a:	f7fb fc19 	bl	8000590 <__aeabi_dmul>
 8004d5e:	4602      	mov	r2, r0
 8004d60:	460b      	mov	r3, r1
 8004d62:	4610      	mov	r0, r2
 8004d64:	4619      	mov	r1, r3
 8004d66:	f04f 0200 	mov.w	r2, #0
 8004d6a:	4b37      	ldr	r3, [pc, #220]	; (8004e48 <MPU6050_Read_All_Benim+0xa58>)
 8004d6c:	f7fb fd3a 	bl	80007e4 <__aeabi_ddiv>
 8004d70:	4602      	mov	r2, r0
 8004d72:	460b      	mov	r3, r1
 8004d74:	ec43 2b17 	vmov	d7, r2, r3
 8004d78:	eeb0 0a47 	vmov.f32	s0, s14
 8004d7c:	eef0 0a67 	vmov.f32	s1, s15
 8004d80:	f008 fe06 	bl	800d990 <sin>
 8004d84:	ec53 2b10 	vmov	r2, r3, d0
 8004d88:	4640      	mov	r0, r8
 8004d8a:	4649      	mov	r1, r9
 8004d8c:	f7fb fc00 	bl	8000590 <__aeabi_dmul>
 8004d90:	4602      	mov	r2, r0
 8004d92:	460b      	mov	r3, r1
 8004d94:	4690      	mov	r8, r2
 8004d96:	4699      	mov	r9, r3
 8004d98:	4b2c      	ldr	r3, [pc, #176]	; (8004e4c <MPU6050_Read_All_Benim+0xa5c>)
 8004d9a:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004d9e:	a322      	add	r3, pc, #136	; (adr r3, 8004e28 <MPU6050_Read_All_Benim+0xa38>)
 8004da0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004da4:	f7fb fbf4 	bl	8000590 <__aeabi_dmul>
 8004da8:	4602      	mov	r2, r0
 8004daa:	460b      	mov	r3, r1
 8004dac:	4610      	mov	r0, r2
 8004dae:	4619      	mov	r1, r3
 8004db0:	f04f 0200 	mov.w	r2, #0
 8004db4:	4b24      	ldr	r3, [pc, #144]	; (8004e48 <MPU6050_Read_All_Benim+0xa58>)
 8004db6:	f7fb fd15 	bl	80007e4 <__aeabi_ddiv>
 8004dba:	4602      	mov	r2, r0
 8004dbc:	460b      	mov	r3, r1
 8004dbe:	ec43 2b17 	vmov	d7, r2, r3
 8004dc2:	eeb0 0a47 	vmov.f32	s0, s14
 8004dc6:	eef0 0a67 	vmov.f32	s1, s15
 8004dca:	f008 fd8d 	bl	800d8e8 <cos>
 8004dce:	ec53 2b10 	vmov	r2, r3, d0
 8004dd2:	4640      	mov	r0, r8
 8004dd4:	4649      	mov	r1, r9
 8004dd6:	f7fb fbdb 	bl	8000590 <__aeabi_dmul>
 8004dda:	4602      	mov	r2, r0
 8004ddc:	460b      	mov	r3, r1
 8004dde:	4620      	mov	r0, r4
 8004de0:	4629      	mov	r1, r5
 8004de2:	f7fb fa1f 	bl	8000224 <__adddf3>
 8004de6:	4602      	mov	r2, r0
 8004de8:	460b      	mov	r3, r1
 8004dea:	4690      	mov	r8, r2
 8004dec:	4699      	mov	r9, r3
	+ (double)(DataStruct->Az)*cos(angle_roll_output*M_PI/180)*cos(angle_pitch_output*M_PI/180);
 8004dee:	68bb      	ldr	r3, [r7, #8]
 8004df0:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 8004df4:	4b16      	ldr	r3, [pc, #88]	; (8004e50 <MPU6050_Read_All_Benim+0xa60>)
 8004df6:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004dfa:	a30b      	add	r3, pc, #44	; (adr r3, 8004e28 <MPU6050_Read_All_Benim+0xa38>)
 8004dfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e00:	f7fb fbc6 	bl	8000590 <__aeabi_dmul>
 8004e04:	4602      	mov	r2, r0
 8004e06:	460b      	mov	r3, r1
 8004e08:	4610      	mov	r0, r2
 8004e0a:	4619      	mov	r1, r3
 8004e0c:	f04f 0200 	mov.w	r2, #0
 8004e10:	4b0d      	ldr	r3, [pc, #52]	; (8004e48 <MPU6050_Read_All_Benim+0xa58>)
 8004e12:	f7fb fce7 	bl	80007e4 <__aeabi_ddiv>
 8004e16:	4602      	mov	r2, r0
 8004e18:	460b      	mov	r3, r1
 8004e1a:	ec43 2b17 	vmov	d7, r2, r3
 8004e1e:	eeb0 0a47 	vmov.f32	s0, s14
 8004e22:	eef0 0a67 	vmov.f32	s1, s15
 8004e26:	e019      	b.n	8004e5c <MPU6050_Read_All_Benim+0xa6c>
 8004e28:	54442d18 	.word	0x54442d18
 8004e2c:	400921fb 	.word	0x400921fb
 8004e30:	cccccccd 	.word	0xcccccccd
 8004e34:	3feccccc 	.word	0x3feccccc
 8004e38:	9999999a 	.word	0x9999999a
 8004e3c:	3fb99999 	.word	0x3fb99999
 8004e40:	20000a8d 	.word	0x20000a8d
 8004e44:	200000ac 	.word	0x200000ac
 8004e48:	40668000 	.word	0x40668000
 8004e4c:	200008a0 	.word	0x200008a0
 8004e50:	200008a8 	.word	0x200008a8
 8004e54:	200008b0 	.word	0x200008b0
 8004e58:	40d00000 	.word	0x40d00000
 8004e5c:	f008 fd44 	bl	800d8e8 <cos>
 8004e60:	ec53 2b10 	vmov	r2, r3, d0
 8004e64:	4620      	mov	r0, r4
 8004e66:	4629      	mov	r1, r5
 8004e68:	f7fb fb92 	bl	8000590 <__aeabi_dmul>
 8004e6c:	4602      	mov	r2, r0
 8004e6e:	460b      	mov	r3, r1
 8004e70:	4614      	mov	r4, r2
 8004e72:	461d      	mov	r5, r3
 8004e74:	4b80      	ldr	r3, [pc, #512]	; (8005078 <MPU6050_Read_All_Benim+0xc88>)
 8004e76:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004e7a:	a37b      	add	r3, pc, #492	; (adr r3, 8005068 <MPU6050_Read_All_Benim+0xc78>)
 8004e7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e80:	f7fb fb86 	bl	8000590 <__aeabi_dmul>
 8004e84:	4602      	mov	r2, r0
 8004e86:	460b      	mov	r3, r1
 8004e88:	4610      	mov	r0, r2
 8004e8a:	4619      	mov	r1, r3
 8004e8c:	f04f 0200 	mov.w	r2, #0
 8004e90:	4b7a      	ldr	r3, [pc, #488]	; (800507c <MPU6050_Read_All_Benim+0xc8c>)
 8004e92:	f7fb fca7 	bl	80007e4 <__aeabi_ddiv>
 8004e96:	4602      	mov	r2, r0
 8004e98:	460b      	mov	r3, r1
 8004e9a:	ec43 2b17 	vmov	d7, r2, r3
 8004e9e:	eeb0 0a47 	vmov.f32	s0, s14
 8004ea2:	eef0 0a67 	vmov.f32	s1, s15
 8004ea6:	f008 fd1f 	bl	800d8e8 <cos>
 8004eaa:	ec53 2b10 	vmov	r2, r3, d0
 8004eae:	4620      	mov	r0, r4
 8004eb0:	4629      	mov	r1, r5
 8004eb2:	f7fb fb6d 	bl	8000590 <__aeabi_dmul>
 8004eb6:	4602      	mov	r2, r0
 8004eb8:	460b      	mov	r3, r1
 8004eba:	4640      	mov	r0, r8
 8004ebc:	4649      	mov	r1, r9
 8004ebe:	f7fb f9b1 	bl	8000224 <__adddf3>
 8004ec2:	4602      	mov	r2, r0
 8004ec4:	460b      	mov	r3, r1
 8004ec6:	4610      	mov	r0, r2
 8004ec8:	4619      	mov	r1, r3
 8004eca:	f7fb fe39 	bl	8000b40 <__aeabi_d2f>
 8004ece:	4602      	mov	r2, r0
    DataStruct->accel_in_z= (double)-(DataStruct->Ax)*16384.0/ACCELERATION_RATE *sin(angle_pitch_output*M_PI/180)
 8004ed0:	68bb      	ldr	r3, [r7, #8]
 8004ed2:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8

    accel_input[0]=DataStruct->accel_in_z;
 8004ed6:	68bb      	ldr	r3, [r7, #8]
 8004ed8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8004edc:	4a68      	ldr	r2, [pc, #416]	; (8005080 <MPU6050_Read_All_Benim+0xc90>)
 8004ede:	6013      	str	r3, [r2, #0]
    accel_output[0] = accel_filter_output_coeff[0]*accel_output[1] + accel_filter_output_coeff[1]*accel_output[2] + accel_filter_output_coeff[2]*accel_output[3] +accel_filter_input_coeff[0]*accel_input[0] + accel_filter_input_coeff[1]*accel_input[1] + accel_filter_input_coeff[2]*accel_input[2]+ accel_filter_input_coeff[3]*accel_input[3];
 8004ee0:	4b68      	ldr	r3, [pc, #416]	; (8005084 <MPU6050_Read_All_Benim+0xc94>)
 8004ee2:	ed93 7a00 	vldr	s14, [r3]
 8004ee6:	4b68      	ldr	r3, [pc, #416]	; (8005088 <MPU6050_Read_All_Benim+0xc98>)
 8004ee8:	edd3 7a01 	vldr	s15, [r3, #4]
 8004eec:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004ef0:	4b64      	ldr	r3, [pc, #400]	; (8005084 <MPU6050_Read_All_Benim+0xc94>)
 8004ef2:	edd3 6a01 	vldr	s13, [r3, #4]
 8004ef6:	4b64      	ldr	r3, [pc, #400]	; (8005088 <MPU6050_Read_All_Benim+0xc98>)
 8004ef8:	edd3 7a02 	vldr	s15, [r3, #8]
 8004efc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004f00:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f04:	4b5f      	ldr	r3, [pc, #380]	; (8005084 <MPU6050_Read_All_Benim+0xc94>)
 8004f06:	edd3 6a02 	vldr	s13, [r3, #8]
 8004f0a:	4b5f      	ldr	r3, [pc, #380]	; (8005088 <MPU6050_Read_All_Benim+0xc98>)
 8004f0c:	edd3 7a03 	vldr	s15, [r3, #12]
 8004f10:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004f14:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f18:	4b5c      	ldr	r3, [pc, #368]	; (800508c <MPU6050_Read_All_Benim+0xc9c>)
 8004f1a:	edd3 6a00 	vldr	s13, [r3]
 8004f1e:	4b58      	ldr	r3, [pc, #352]	; (8005080 <MPU6050_Read_All_Benim+0xc90>)
 8004f20:	edd3 7a00 	vldr	s15, [r3]
 8004f24:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004f28:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f2c:	4b57      	ldr	r3, [pc, #348]	; (800508c <MPU6050_Read_All_Benim+0xc9c>)
 8004f2e:	edd3 6a01 	vldr	s13, [r3, #4]
 8004f32:	4b53      	ldr	r3, [pc, #332]	; (8005080 <MPU6050_Read_All_Benim+0xc90>)
 8004f34:	edd3 7a01 	vldr	s15, [r3, #4]
 8004f38:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004f3c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f40:	4b52      	ldr	r3, [pc, #328]	; (800508c <MPU6050_Read_All_Benim+0xc9c>)
 8004f42:	edd3 6a02 	vldr	s13, [r3, #8]
 8004f46:	4b4e      	ldr	r3, [pc, #312]	; (8005080 <MPU6050_Read_All_Benim+0xc90>)
 8004f48:	edd3 7a02 	vldr	s15, [r3, #8]
 8004f4c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004f50:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f54:	4b4d      	ldr	r3, [pc, #308]	; (800508c <MPU6050_Read_All_Benim+0xc9c>)
 8004f56:	edd3 6a03 	vldr	s13, [r3, #12]
 8004f5a:	4b49      	ldr	r3, [pc, #292]	; (8005080 <MPU6050_Read_All_Benim+0xc90>)
 8004f5c:	edd3 7a03 	vldr	s15, [r3, #12]
 8004f60:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004f64:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004f68:	4b47      	ldr	r3, [pc, #284]	; (8005088 <MPU6050_Read_All_Benim+0xc98>)
 8004f6a:	edc3 7a00 	vstr	s15, [r3]
    for(int i = 2; i >= 0; i--){
 8004f6e:	2302      	movs	r3, #2
 8004f70:	627b      	str	r3, [r7, #36]	; 0x24
 8004f72:	e018      	b.n	8004fa6 <MPU6050_Read_All_Benim+0xbb6>
    	accel_input[i+1] = accel_input[i]; // store xi
 8004f74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f76:	3301      	adds	r3, #1
 8004f78:	4941      	ldr	r1, [pc, #260]	; (8005080 <MPU6050_Read_All_Benim+0xc90>)
 8004f7a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004f7c:	0092      	lsls	r2, r2, #2
 8004f7e:	440a      	add	r2, r1
 8004f80:	6812      	ldr	r2, [r2, #0]
 8004f82:	493f      	ldr	r1, [pc, #252]	; (8005080 <MPU6050_Read_All_Benim+0xc90>)
 8004f84:	009b      	lsls	r3, r3, #2
 8004f86:	440b      	add	r3, r1
 8004f88:	601a      	str	r2, [r3, #0]
    	accel_output[i+1] = accel_output[i]; // store yi
 8004f8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f8c:	3301      	adds	r3, #1
 8004f8e:	493e      	ldr	r1, [pc, #248]	; (8005088 <MPU6050_Read_All_Benim+0xc98>)
 8004f90:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004f92:	0092      	lsls	r2, r2, #2
 8004f94:	440a      	add	r2, r1
 8004f96:	6812      	ldr	r2, [r2, #0]
 8004f98:	493b      	ldr	r1, [pc, #236]	; (8005088 <MPU6050_Read_All_Benim+0xc98>)
 8004f9a:	009b      	lsls	r3, r3, #2
 8004f9c:	440b      	add	r3, r1
 8004f9e:	601a      	str	r2, [r3, #0]
    for(int i = 2; i >= 0; i--){
 8004fa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fa2:	3b01      	subs	r3, #1
 8004fa4:	627b      	str	r3, [r7, #36]	; 0x24
 8004fa6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fa8:	2b00      	cmp	r3, #0
 8004faa:	dae3      	bge.n	8004f74 <MPU6050_Read_All_Benim+0xb84>
    }
    if(cnt<200) cnt++;
 8004fac:	4b38      	ldr	r3, [pc, #224]	; (8005090 <MPU6050_Read_All_Benim+0xca0>)
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	2bc7      	cmp	r3, #199	; 0xc7
 8004fb2:	dc04      	bgt.n	8004fbe <MPU6050_Read_All_Benim+0xbce>
 8004fb4:	4b36      	ldr	r3, [pc, #216]	; (8005090 <MPU6050_Read_All_Benim+0xca0>)
 8004fb6:	681b      	ldr	r3, [r3, #0]
 8004fb8:	3301      	adds	r3, #1
 8004fba:	4a35      	ldr	r2, [pc, #212]	; (8005090 <MPU6050_Read_All_Benim+0xca0>)
 8004fbc:	6013      	str	r3, [r2, #0]

    if(cnt>=200){
 8004fbe:	4b34      	ldr	r3, [pc, #208]	; (8005090 <MPU6050_Read_All_Benim+0xca0>)
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	2bc7      	cmp	r3, #199	; 0xc7
 8004fc4:	dd4b      	ble.n	800505e <MPU6050_Read_All_Benim+0xc6e>
    	DataStruct->accel_in_z= (accel_output[0]-1)*9.81*100;
 8004fc6:	4b30      	ldr	r3, [pc, #192]	; (8005088 <MPU6050_Read_All_Benim+0xc98>)
 8004fc8:	edd3 7a00 	vldr	s15, [r3]
 8004fcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8004fd0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004fd4:	ee17 0a90 	vmov	r0, s15
 8004fd8:	f7fb fa82 	bl	80004e0 <__aeabi_f2d>
 8004fdc:	a324      	add	r3, pc, #144	; (adr r3, 8005070 <MPU6050_Read_All_Benim+0xc80>)
 8004fde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004fe2:	f7fb fad5 	bl	8000590 <__aeabi_dmul>
 8004fe6:	4602      	mov	r2, r0
 8004fe8:	460b      	mov	r3, r1
 8004fea:	4610      	mov	r0, r2
 8004fec:	4619      	mov	r1, r3
 8004fee:	f04f 0200 	mov.w	r2, #0
 8004ff2:	4b28      	ldr	r3, [pc, #160]	; (8005094 <MPU6050_Read_All_Benim+0xca4>)
 8004ff4:	f7fb facc 	bl	8000590 <__aeabi_dmul>
 8004ff8:	4602      	mov	r2, r0
 8004ffa:	460b      	mov	r3, r1
 8004ffc:	4610      	mov	r0, r2
 8004ffe:	4619      	mov	r1, r3
 8005000:	f7fb fd9e 	bl	8000b40 <__aeabi_d2f>
 8005004:	4602      	mov	r2, r0
 8005006:	68bb      	ldr	r3, [r7, #8]
 8005008:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
    	if((DataStruct->accel_in_z > -10) && (DataStruct->accel_in_z < 10)) DataStruct->accel_in_z=0;
 800500c:	68bb      	ldr	r3, [r7, #8]
 800500e:	edd3 7a2a 	vldr	s15, [r3, #168]	; 0xa8
 8005012:	eeba 7a04 	vmov.f32	s14, #164	; 0xc1200000 -10.0
 8005016:	eef4 7ac7 	vcmpe.f32	s15, s14
 800501a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800501e:	dd0e      	ble.n	800503e <MPU6050_Read_All_Benim+0xc4e>
 8005020:	68bb      	ldr	r3, [r7, #8]
 8005022:	edd3 7a2a 	vldr	s15, [r3, #168]	; 0xa8
 8005026:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800502a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800502e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005032:	d504      	bpl.n	800503e <MPU6050_Read_All_Benim+0xc4e>
 8005034:	68bb      	ldr	r3, [r7, #8]
 8005036:	f04f 0200 	mov.w	r2, #0
 800503a:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
    	DataStruct->velocity_in_z+=DataStruct->accel_in_z/dF;
 800503e:	68bb      	ldr	r3, [r7, #8]
 8005040:	ed93 7a2b 	vldr	s14, [r3, #172]	; 0xac
 8005044:	68bb      	ldr	r3, [r7, #8]
 8005046:	ed93 6a2a 	vldr	s12, [r3, #168]	; 0xa8
 800504a:	4b13      	ldr	r3, [pc, #76]	; (8005098 <MPU6050_Read_All_Benim+0xca8>)
 800504c:	edd3 6a00 	vldr	s13, [r3]
 8005050:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8005054:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005058:	68bb      	ldr	r3, [r7, #8]
 800505a:	edc3 7a2b 	vstr	s15, [r3, #172]	; 0xac
    }

}
 800505e:	bf00      	nop
 8005060:	3728      	adds	r7, #40	; 0x28
 8005062:	46bd      	mov	sp, r7
 8005064:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005068:	54442d18 	.word	0x54442d18
 800506c:	400921fb 	.word	0x400921fb
 8005070:	51eb851f 	.word	0x51eb851f
 8005074:	40239eb8 	.word	0x40239eb8
 8005078:	200008a0 	.word	0x200008a0
 800507c:	40668000 	.word	0x40668000
 8005080:	20000aa0 	.word	0x20000aa0
 8005084:	200000b0 	.word	0x200000b0
 8005088:	20000ab0 	.word	0x20000ab0
 800508c:	200000bc 	.word	0x200000bc
 8005090:	20000ac0 	.word	0x20000ac0
 8005094:	40590000 	.word	0x40590000
 8005098:	200000ac 	.word	0x200000ac

0800509c <calibrate_mpu6050>:

void calibrate_mpu6050(){
 800509c:	b580      	push	{r7, lr}
 800509e:	af00      	add	r7, sp, #0

	while(!calibrate_yaw(&hi2c2,&MPU6050_1));
 80050a0:	bf00      	nop
 80050a2:	490e      	ldr	r1, [pc, #56]	; (80050dc <calibrate_mpu6050+0x40>)
 80050a4:	480e      	ldr	r0, [pc, #56]	; (80050e0 <calibrate_mpu6050+0x44>)
 80050a6:	f7fe ffeb 	bl	8004080 <calibrate_yaw>
 80050aa:	4603      	mov	r3, r0
 80050ac:	f083 0301 	eor.w	r3, r3, #1
 80050b0:	b2db      	uxtb	r3, r3
 80050b2:	2b00      	cmp	r3, #0
 80050b4:	d1f5      	bne.n	80050a2 <calibrate_mpu6050+0x6>
	while(!calibrate_Benim(&hi2c2,&MPU6050_1));
 80050b6:	bf00      	nop
 80050b8:	4908      	ldr	r1, [pc, #32]	; (80050dc <calibrate_mpu6050+0x40>)
 80050ba:	4809      	ldr	r0, [pc, #36]	; (80050e0 <calibrate_mpu6050+0x44>)
 80050bc:	f7ff f87c 	bl	80041b8 <calibrate_Benim>
 80050c0:	4603      	mov	r3, r0
 80050c2:	f083 0301 	eor.w	r3, r3, #1
 80050c6:	b2db      	uxtb	r3, r3
 80050c8:	2b00      	cmp	r3, #0
 80050ca:	d1f5      	bne.n	80050b8 <calibrate_mpu6050+0x1c>
	fill_calibration_buffer();
 80050cc:	f7fd fbd0 	bl	8002870 <fill_calibration_buffer>
	flash_write_calib_data_four_byte(calibration_buffer_float,6);
 80050d0:	2106      	movs	r1, #6
 80050d2:	4804      	ldr	r0, [pc, #16]	; (80050e4 <calibrate_mpu6050+0x48>)
 80050d4:	f7fd fb3e 	bl	8002754 <flash_write_calib_data_four_byte>

}
 80050d8:	bf00      	nop
 80050da:	bd80      	pop	{r7, pc}
 80050dc:	200007e8 	.word	0x200007e8
 80050e0:	20000344 	.word	0x20000344
 80050e4:	20000944 	.word	0x20000944

080050e8 <getControlSignal>:
#define MAX_CONTROL_SIGNAL 400
#define MIN_CONTROL_SIGNAL -400
#include "pid.h"

double getControlSignal(double error, double kp, double ki, double kd, double* pid_i, double* last_error, double delta_time_in_seconds)
{
 80050e8:	b5b0      	push	{r4, r5, r7, lr}
 80050ea:	b092      	sub	sp, #72	; 0x48
 80050ec:	af00      	add	r7, sp, #0
 80050ee:	ed87 0b0a 	vstr	d0, [r7, #40]	; 0x28
 80050f2:	ed87 1b08 	vstr	d1, [r7, #32]
 80050f6:	ed87 2b06 	vstr	d2, [r7, #24]
 80050fa:	ed87 3b04 	vstr	d3, [r7, #16]
 80050fe:	60f8      	str	r0, [r7, #12]
 8005100:	60b9      	str	r1, [r7, #8]
 8005102:	ed87 4b00 	vstr	d4, [r7]
  double pid_p = error;
 8005106:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800510a:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
  double pid_d = (error - *last_error);
 800510e:	68bb      	ldr	r3, [r7, #8]
 8005110:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005114:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8005118:	f7fb f882 	bl	8000220 <__aeabi_dsub>
 800511c:	4602      	mov	r2, r0
 800511e:	460b      	mov	r3, r1
 8005120:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
  *pid_i += error  ;
 8005124:	68fb      	ldr	r3, [r7, #12]
 8005126:	e9d3 0100 	ldrd	r0, r1, [r3]
 800512a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800512e:	f7fb f879 	bl	8000224 <__adddf3>
 8005132:	4602      	mov	r2, r0
 8005134:	460b      	mov	r3, r1
 8005136:	68f9      	ldr	r1, [r7, #12]
 8005138:	e9c1 2300 	strd	r2, r3, [r1]
  if(*pid_i>100)*pid_i=100;
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8005142:	f04f 0200 	mov.w	r2, #0
 8005146:	4b3a      	ldr	r3, [pc, #232]	; (8005230 <getControlSignal+0x148>)
 8005148:	f7fb fcb2 	bl	8000ab0 <__aeabi_dcmpgt>
 800514c:	4603      	mov	r3, r0
 800514e:	2b00      	cmp	r3, #0
 8005150:	d005      	beq.n	800515e <getControlSignal+0x76>
 8005152:	68f9      	ldr	r1, [r7, #12]
 8005154:	f04f 0200 	mov.w	r2, #0
 8005158:	4b35      	ldr	r3, [pc, #212]	; (8005230 <getControlSignal+0x148>)
 800515a:	e9c1 2300 	strd	r2, r3, [r1]
  if(*pid_i<-100)*pid_i=-100;
 800515e:	68fb      	ldr	r3, [r7, #12]
 8005160:	e9d3 0100 	ldrd	r0, r1, [r3]
 8005164:	f04f 0200 	mov.w	r2, #0
 8005168:	4b32      	ldr	r3, [pc, #200]	; (8005234 <getControlSignal+0x14c>)
 800516a:	f7fb fc83 	bl	8000a74 <__aeabi_dcmplt>
 800516e:	4603      	mov	r3, r0
 8005170:	2b00      	cmp	r3, #0
 8005172:	d005      	beq.n	8005180 <getControlSignal+0x98>
 8005174:	68f9      	ldr	r1, [r7, #12]
 8005176:	f04f 0200 	mov.w	r2, #0
 800517a:	4b2e      	ldr	r3, [pc, #184]	; (8005234 <getControlSignal+0x14c>)
 800517c:	e9c1 2300 	strd	r2, r3, [r1]
  double control_signal = (kp * pid_p) + (ki * (*pid_i)) + (kd * pid_d);
 8005180:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8005184:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8005188:	f7fb fa02 	bl	8000590 <__aeabi_dmul>
 800518c:	4602      	mov	r2, r0
 800518e:	460b      	mov	r3, r1
 8005190:	4614      	mov	r4, r2
 8005192:	461d      	mov	r5, r3
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	e9d3 0100 	ldrd	r0, r1, [r3]
 800519a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800519e:	f7fb f9f7 	bl	8000590 <__aeabi_dmul>
 80051a2:	4602      	mov	r2, r0
 80051a4:	460b      	mov	r3, r1
 80051a6:	4620      	mov	r0, r4
 80051a8:	4629      	mov	r1, r5
 80051aa:	f7fb f83b 	bl	8000224 <__adddf3>
 80051ae:	4602      	mov	r2, r0
 80051b0:	460b      	mov	r3, r1
 80051b2:	4614      	mov	r4, r2
 80051b4:	461d      	mov	r5, r3
 80051b6:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 80051ba:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80051be:	f7fb f9e7 	bl	8000590 <__aeabi_dmul>
 80051c2:	4602      	mov	r2, r0
 80051c4:	460b      	mov	r3, r1
 80051c6:	4620      	mov	r0, r4
 80051c8:	4629      	mov	r1, r5
 80051ca:	f7fb f82b 	bl	8000224 <__adddf3>
 80051ce:	4602      	mov	r2, r0
 80051d0:	460b      	mov	r3, r1
 80051d2:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
  *last_error = error;
 80051d6:	68b9      	ldr	r1, [r7, #8]
 80051d8:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80051dc:	e9c1 2300 	strd	r2, r3, [r1]


  if(control_signal>MAX_CONTROL_SIGNAL)
 80051e0:	f04f 0200 	mov.w	r2, #0
 80051e4:	4b14      	ldr	r3, [pc, #80]	; (8005238 <getControlSignal+0x150>)
 80051e6:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 80051ea:	f7fb fc61 	bl	8000ab0 <__aeabi_dcmpgt>
 80051ee:	4603      	mov	r3, r0
 80051f0:	2b00      	cmp	r3, #0
 80051f2:	d003      	beq.n	80051fc <getControlSignal+0x114>
	  return MAX_CONTROL_SIGNAL;
 80051f4:	f04f 0200 	mov.w	r2, #0
 80051f8:	4b0f      	ldr	r3, [pc, #60]	; (8005238 <getControlSignal+0x150>)
 80051fa:	e00f      	b.n	800521c <getControlSignal+0x134>
  else if (control_signal<MIN_CONTROL_SIGNAL)
 80051fc:	f04f 0200 	mov.w	r2, #0
 8005200:	4b0e      	ldr	r3, [pc, #56]	; (800523c <getControlSignal+0x154>)
 8005202:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8005206:	f7fb fc35 	bl	8000a74 <__aeabi_dcmplt>
 800520a:	4603      	mov	r3, r0
 800520c:	2b00      	cmp	r3, #0
 800520e:	d003      	beq.n	8005218 <getControlSignal+0x130>
	  return MIN_CONTROL_SIGNAL;
 8005210:	f04f 0200 	mov.w	r2, #0
 8005214:	4b09      	ldr	r3, [pc, #36]	; (800523c <getControlSignal+0x154>)
 8005216:	e001      	b.n	800521c <getControlSignal+0x134>
  else

	  return control_signal;
 8005218:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
}
 800521c:	ec43 2b17 	vmov	d7, r2, r3
 8005220:	eeb0 0a47 	vmov.f32	s0, s14
 8005224:	eef0 0a67 	vmov.f32	s1, s15
 8005228:	3748      	adds	r7, #72	; 0x48
 800522a:	46bd      	mov	sp, r7
 800522c:	bdb0      	pop	{r4, r5, r7, pc}
 800522e:	bf00      	nop
 8005230:	40590000 	.word	0x40590000
 8005234:	c0590000 	.word	0xc0590000
 8005238:	40790000 	.word	0x40790000
 800523c:	c0790000 	.word	0xc0790000

08005240 <getControlSignal_roll_pitch>:

double getControlSignal_roll_pitch(double error, double kp, double ki, double kd, double* pid_i, double* last_error, double delta_time_in_seconds)
{
 8005240:	b5b0      	push	{r4, r5, r7, lr}
 8005242:	b092      	sub	sp, #72	; 0x48
 8005244:	af00      	add	r7, sp, #0
 8005246:	ed87 0b0a 	vstr	d0, [r7, #40]	; 0x28
 800524a:	ed87 1b08 	vstr	d1, [r7, #32]
 800524e:	ed87 2b06 	vstr	d2, [r7, #24]
 8005252:	ed87 3b04 	vstr	d3, [r7, #16]
 8005256:	60f8      	str	r0, [r7, #12]
 8005258:	60b9      	str	r1, [r7, #8]
 800525a:	ed87 4b00 	vstr	d4, [r7]
  double pid_p = error;
 800525e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8005262:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
  double pid_d = (error - *last_error);
 8005266:	68bb      	ldr	r3, [r7, #8]
 8005268:	e9d3 2300 	ldrd	r2, r3, [r3]
 800526c:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8005270:	f7fa ffd6 	bl	8000220 <__aeabi_dsub>
 8005274:	4602      	mov	r2, r0
 8005276:	460b      	mov	r3, r1
 8005278:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
  *pid_i += error  ;
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8005282:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8005286:	f7fa ffcd 	bl	8000224 <__adddf3>
 800528a:	4602      	mov	r2, r0
 800528c:	460b      	mov	r3, r1
 800528e:	68f9      	ldr	r1, [r7, #12]
 8005290:	e9c1 2300 	strd	r2, r3, [r1]
  if(*pid_i>50/ki)*pid_i=50/ki;
 8005294:	68fb      	ldr	r3, [r7, #12]
 8005296:	e9d3 4500 	ldrd	r4, r5, [r3]
 800529a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800529e:	f04f 0000 	mov.w	r0, #0
 80052a2:	4947      	ldr	r1, [pc, #284]	; (80053c0 <getControlSignal_roll_pitch+0x180>)
 80052a4:	f7fb fa9e 	bl	80007e4 <__aeabi_ddiv>
 80052a8:	4602      	mov	r2, r0
 80052aa:	460b      	mov	r3, r1
 80052ac:	4620      	mov	r0, r4
 80052ae:	4629      	mov	r1, r5
 80052b0:	f7fb fbfe 	bl	8000ab0 <__aeabi_dcmpgt>
 80052b4:	4603      	mov	r3, r0
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d00b      	beq.n	80052d2 <getControlSignal_roll_pitch+0x92>
 80052ba:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80052be:	f04f 0000 	mov.w	r0, #0
 80052c2:	493f      	ldr	r1, [pc, #252]	; (80053c0 <getControlSignal_roll_pitch+0x180>)
 80052c4:	f7fb fa8e 	bl	80007e4 <__aeabi_ddiv>
 80052c8:	4602      	mov	r2, r0
 80052ca:	460b      	mov	r3, r1
 80052cc:	68f9      	ldr	r1, [r7, #12]
 80052ce:	e9c1 2300 	strd	r2, r3, [r1]
  if(*pid_i<-50/ki)*pid_i=-50/ki;
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	e9d3 4500 	ldrd	r4, r5, [r3]
 80052d8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80052dc:	f04f 0000 	mov.w	r0, #0
 80052e0:	4938      	ldr	r1, [pc, #224]	; (80053c4 <getControlSignal_roll_pitch+0x184>)
 80052e2:	f7fb fa7f 	bl	80007e4 <__aeabi_ddiv>
 80052e6:	4602      	mov	r2, r0
 80052e8:	460b      	mov	r3, r1
 80052ea:	4620      	mov	r0, r4
 80052ec:	4629      	mov	r1, r5
 80052ee:	f7fb fbc1 	bl	8000a74 <__aeabi_dcmplt>
 80052f2:	4603      	mov	r3, r0
 80052f4:	2b00      	cmp	r3, #0
 80052f6:	d00b      	beq.n	8005310 <getControlSignal_roll_pitch+0xd0>
 80052f8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80052fc:	f04f 0000 	mov.w	r0, #0
 8005300:	4930      	ldr	r1, [pc, #192]	; (80053c4 <getControlSignal_roll_pitch+0x184>)
 8005302:	f7fb fa6f 	bl	80007e4 <__aeabi_ddiv>
 8005306:	4602      	mov	r2, r0
 8005308:	460b      	mov	r3, r1
 800530a:	68f9      	ldr	r1, [r7, #12]
 800530c:	e9c1 2300 	strd	r2, r3, [r1]
  double control_signal = (kp * pid_p) + (ki * (*pid_i)) + (kd * pid_d);
 8005310:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8005314:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8005318:	f7fb f93a 	bl	8000590 <__aeabi_dmul>
 800531c:	4602      	mov	r2, r0
 800531e:	460b      	mov	r3, r1
 8005320:	4614      	mov	r4, r2
 8005322:	461d      	mov	r5, r3
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	e9d3 0100 	ldrd	r0, r1, [r3]
 800532a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800532e:	f7fb f92f 	bl	8000590 <__aeabi_dmul>
 8005332:	4602      	mov	r2, r0
 8005334:	460b      	mov	r3, r1
 8005336:	4620      	mov	r0, r4
 8005338:	4629      	mov	r1, r5
 800533a:	f7fa ff73 	bl	8000224 <__adddf3>
 800533e:	4602      	mov	r2, r0
 8005340:	460b      	mov	r3, r1
 8005342:	4614      	mov	r4, r2
 8005344:	461d      	mov	r5, r3
 8005346:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800534a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800534e:	f7fb f91f 	bl	8000590 <__aeabi_dmul>
 8005352:	4602      	mov	r2, r0
 8005354:	460b      	mov	r3, r1
 8005356:	4620      	mov	r0, r4
 8005358:	4629      	mov	r1, r5
 800535a:	f7fa ff63 	bl	8000224 <__adddf3>
 800535e:	4602      	mov	r2, r0
 8005360:	460b      	mov	r3, r1
 8005362:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
  *last_error = error;
 8005366:	68b9      	ldr	r1, [r7, #8]
 8005368:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800536c:	e9c1 2300 	strd	r2, r3, [r1]


  if(control_signal>MAX_CONTROL_SIGNAL)
 8005370:	f04f 0200 	mov.w	r2, #0
 8005374:	4b14      	ldr	r3, [pc, #80]	; (80053c8 <getControlSignal_roll_pitch+0x188>)
 8005376:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800537a:	f7fb fb99 	bl	8000ab0 <__aeabi_dcmpgt>
 800537e:	4603      	mov	r3, r0
 8005380:	2b00      	cmp	r3, #0
 8005382:	d003      	beq.n	800538c <getControlSignal_roll_pitch+0x14c>
	  return MAX_CONTROL_SIGNAL;
 8005384:	f04f 0200 	mov.w	r2, #0
 8005388:	4b0f      	ldr	r3, [pc, #60]	; (80053c8 <getControlSignal_roll_pitch+0x188>)
 800538a:	e00f      	b.n	80053ac <getControlSignal_roll_pitch+0x16c>
  else if (control_signal<MIN_CONTROL_SIGNAL)
 800538c:	f04f 0200 	mov.w	r2, #0
 8005390:	4b0e      	ldr	r3, [pc, #56]	; (80053cc <getControlSignal_roll_pitch+0x18c>)
 8005392:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8005396:	f7fb fb6d 	bl	8000a74 <__aeabi_dcmplt>
 800539a:	4603      	mov	r3, r0
 800539c:	2b00      	cmp	r3, #0
 800539e:	d003      	beq.n	80053a8 <getControlSignal_roll_pitch+0x168>
	  return MIN_CONTROL_SIGNAL;
 80053a0:	f04f 0200 	mov.w	r2, #0
 80053a4:	4b09      	ldr	r3, [pc, #36]	; (80053cc <getControlSignal_roll_pitch+0x18c>)
 80053a6:	e001      	b.n	80053ac <getControlSignal_roll_pitch+0x16c>
  else

	  return control_signal;
 80053a8:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
}
 80053ac:	ec43 2b17 	vmov	d7, r2, r3
 80053b0:	eeb0 0a47 	vmov.f32	s0, s14
 80053b4:	eef0 0a67 	vmov.f32	s1, s15
 80053b8:	3748      	adds	r7, #72	; 0x48
 80053ba:	46bd      	mov	sp, r7
 80053bc:	bdb0      	pop	{r4, r5, r7, pc}
 80053be:	bf00      	nop
 80053c0:	40490000 	.word	0x40490000
 80053c4:	c0490000 	.word	0xc0490000
 80053c8:	40790000 	.word	0x40790000
 80053cc:	c0790000 	.word	0xc0790000

080053d0 <activate_motors>:
float map(int kanal,int kumanda_min, int kumanda_max, int istenen_aralık_alt, int istenen_aralık_üst){
	return (((istenen_aralık_üst-istenen_aralık_alt)*(kanal-kumanda_min)/(kumanda_max-kumanda_min))+istenen_aralık_alt);
}

// bu fonksiyon cagrilmadan motorlar baslamaz.
void activate_motors(){
 80053d0:	b580      	push	{r7, lr}
 80053d2:	af00      	add	r7, sp, #0
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 80053d4:	2100      	movs	r1, #0
 80053d6:	4808      	ldr	r0, [pc, #32]	; (80053f8 <activate_motors+0x28>)
 80053d8:	f006 f87c 	bl	800b4d4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 80053dc:	2104      	movs	r1, #4
 80053de:	4806      	ldr	r0, [pc, #24]	; (80053f8 <activate_motors+0x28>)
 80053e0:	f006 f878 	bl	800b4d4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 80053e4:	2108      	movs	r1, #8
 80053e6:	4804      	ldr	r0, [pc, #16]	; (80053f8 <activate_motors+0x28>)
 80053e8:	f006 f874 	bl	800b4d4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 80053ec:	210c      	movs	r1, #12
 80053ee:	4802      	ldr	r0, [pc, #8]	; (80053f8 <activate_motors+0x28>)
 80053f0:	f006 f870 	bl	800b4d4 <HAL_TIM_PWM_Start>

}
 80053f4:	bf00      	nop
 80053f6:	bd80      	pop	{r7, pc}
 80053f8:	200003f8 	.word	0x200003f8

080053fc <changespeedM1>:

void changespeedM1(int *duty_cycle_1,int MIN_Duty_cycle){
 80053fc:	b480      	push	{r7}
 80053fe:	b083      	sub	sp, #12
 8005400:	af00      	add	r7, sp, #0
 8005402:	6078      	str	r0, [r7, #4]
 8005404:	6039      	str	r1, [r7, #0]
	if (*duty_cycle_1<=MIN_Duty_cycle){
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	683a      	ldr	r2, [r7, #0]
 800540c:	429a      	cmp	r2, r3
 800540e:	db03      	blt.n	8005418 <changespeedM1+0x1c>
		TIM1->CCR1= MIN_Duty_cycle;
 8005410:	4a06      	ldr	r2, [pc, #24]	; (800542c <changespeedM1+0x30>)
 8005412:	683b      	ldr	r3, [r7, #0]
 8005414:	6353      	str	r3, [r2, #52]	; 0x34
	}



	//ESC_PWM_degisken=*duty_cycle_1;
}
 8005416:	e003      	b.n	8005420 <changespeedM1+0x24>
		TIM1->CCR1= *duty_cycle_1;
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	681a      	ldr	r2, [r3, #0]
 800541c:	4b03      	ldr	r3, [pc, #12]	; (800542c <changespeedM1+0x30>)
 800541e:	635a      	str	r2, [r3, #52]	; 0x34
}
 8005420:	bf00      	nop
 8005422:	370c      	adds	r7, #12
 8005424:	46bd      	mov	sp, r7
 8005426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800542a:	4770      	bx	lr
 800542c:	40010000 	.word	0x40010000

08005430 <changespeedM2>:


void changespeedM2(int *duty_cycle_2,int MIN_Duty_cycle){
 8005430:	b480      	push	{r7}
 8005432:	b083      	sub	sp, #12
 8005434:	af00      	add	r7, sp, #0
 8005436:	6078      	str	r0, [r7, #4]
 8005438:	6039      	str	r1, [r7, #0]
	if(*duty_cycle_2<=MIN_Duty_cycle){
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	683a      	ldr	r2, [r7, #0]
 8005440:	429a      	cmp	r2, r3
 8005442:	db03      	blt.n	800544c <changespeedM2+0x1c>
		TIM1->CCR2= MIN_Duty_cycle;
 8005444:	4a06      	ldr	r2, [pc, #24]	; (8005460 <changespeedM2+0x30>)
 8005446:	683b      	ldr	r3, [r7, #0]
 8005448:	6393      	str	r3, [r2, #56]	; 0x38
	}
	else{
		TIM1->CCR2= *duty_cycle_2;

	}
}
 800544a:	e003      	b.n	8005454 <changespeedM2+0x24>
		TIM1->CCR2= *duty_cycle_2;
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	681a      	ldr	r2, [r3, #0]
 8005450:	4b03      	ldr	r3, [pc, #12]	; (8005460 <changespeedM2+0x30>)
 8005452:	639a      	str	r2, [r3, #56]	; 0x38
}
 8005454:	bf00      	nop
 8005456:	370c      	adds	r7, #12
 8005458:	46bd      	mov	sp, r7
 800545a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800545e:	4770      	bx	lr
 8005460:	40010000 	.word	0x40010000

08005464 <changespeedM3>:


void changespeedM3(int *duty_cycle_3,int MIN_Duty_cycle){
 8005464:	b480      	push	{r7}
 8005466:	b083      	sub	sp, #12
 8005468:	af00      	add	r7, sp, #0
 800546a:	6078      	str	r0, [r7, #4]
 800546c:	6039      	str	r1, [r7, #0]
	if(*duty_cycle_3<=MIN_Duty_cycle){
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	683a      	ldr	r2, [r7, #0]
 8005474:	429a      	cmp	r2, r3
 8005476:	db03      	blt.n	8005480 <changespeedM3+0x1c>
		TIM1->CCR3= MIN_Duty_cycle;
 8005478:	4a06      	ldr	r2, [pc, #24]	; (8005494 <changespeedM3+0x30>)
 800547a:	683b      	ldr	r3, [r7, #0]
 800547c:	63d3      	str	r3, [r2, #60]	; 0x3c
	}
	else{
		TIM1->CCR3= *duty_cycle_3;

	}
}
 800547e:	e003      	b.n	8005488 <changespeedM3+0x24>
		TIM1->CCR3= *duty_cycle_3;
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	681a      	ldr	r2, [r3, #0]
 8005484:	4b03      	ldr	r3, [pc, #12]	; (8005494 <changespeedM3+0x30>)
 8005486:	63da      	str	r2, [r3, #60]	; 0x3c
}
 8005488:	bf00      	nop
 800548a:	370c      	adds	r7, #12
 800548c:	46bd      	mov	sp, r7
 800548e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005492:	4770      	bx	lr
 8005494:	40010000 	.word	0x40010000

08005498 <changespeedM4>:

void changespeedM4(int *duty_cycle_4,int MIN_Duty_cycle){
 8005498:	b480      	push	{r7}
 800549a:	b083      	sub	sp, #12
 800549c:	af00      	add	r7, sp, #0
 800549e:	6078      	str	r0, [r7, #4]
 80054a0:	6039      	str	r1, [r7, #0]
	if (*duty_cycle_4<=MIN_Duty_cycle){
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	681b      	ldr	r3, [r3, #0]
 80054a6:	683a      	ldr	r2, [r7, #0]
 80054a8:	429a      	cmp	r2, r3
 80054aa:	db03      	blt.n	80054b4 <changespeedM4+0x1c>
		TIM1->CCR4=MIN_Duty_cycle;
 80054ac:	4a06      	ldr	r2, [pc, #24]	; (80054c8 <changespeedM4+0x30>)
 80054ae:	683b      	ldr	r3, [r7, #0]
 80054b0:	6413      	str	r3, [r2, #64]	; 0x40
	}
	else{
		TIM1->CCR4=*duty_cycle_4;

	}
}
 80054b2:	e003      	b.n	80054bc <changespeedM4+0x24>
		TIM1->CCR4=*duty_cycle_4;
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	681a      	ldr	r2, [r3, #0]
 80054b8:	4b03      	ldr	r3, [pc, #12]	; (80054c8 <changespeedM4+0x30>)
 80054ba:	641a      	str	r2, [r3, #64]	; 0x40
}
 80054bc:	bf00      	nop
 80054be:	370c      	adds	r7, #12
 80054c0:	46bd      	mov	sp, r7
 80054c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054c6:	4770      	bx	lr
 80054c8:	40010000 	.word	0x40010000
 80054cc:	00000000 	.word	0x00000000

080054d0 <calculate_motor_powers>:
extern float GpsRollControl_temp,GpsPitchControl_temp;
extern uint8_t gps_go_flag;
extern uint8_t heading_lock;
extern float heading_error;
extern uint32_t loop_counter;
void calculate_motor_powers(){
 80054d0:	b5b0      	push	{r4, r5, r7, lr}
 80054d2:	af00      	add	r7, sp, #0

	if(gps_hold_flag){
 80054d4:	4bc0      	ldr	r3, [pc, #768]	; (80057d8 <calculate_motor_powers+0x308>)
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d021      	beq.n	8005520 <calculate_motor_powers+0x50>
		_channels[0]+=GpsRollControl;
 80054dc:	4bbf      	ldr	r3, [pc, #764]	; (80057dc <calculate_motor_powers+0x30c>)
 80054de:	681b      	ldr	r3, [r3, #0]
 80054e0:	ee07 3a90 	vmov	s15, r3
 80054e4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80054e8:	4bbd      	ldr	r3, [pc, #756]	; (80057e0 <calculate_motor_powers+0x310>)
 80054ea:	edd3 7a00 	vldr	s15, [r3]
 80054ee:	ee77 7a27 	vadd.f32	s15, s14, s15
 80054f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054f6:	ee17 2a90 	vmov	r2, s15
 80054fa:	4bb8      	ldr	r3, [pc, #736]	; (80057dc <calculate_motor_powers+0x30c>)
 80054fc:	601a      	str	r2, [r3, #0]
		_channels[1]-=GpsPitchControl;
 80054fe:	4bb7      	ldr	r3, [pc, #732]	; (80057dc <calculate_motor_powers+0x30c>)
 8005500:	685b      	ldr	r3, [r3, #4]
 8005502:	ee07 3a90 	vmov	s15, r3
 8005506:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800550a:	4bb6      	ldr	r3, [pc, #728]	; (80057e4 <calculate_motor_powers+0x314>)
 800550c:	edd3 7a00 	vldr	s15, [r3]
 8005510:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005514:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005518:	ee17 2a90 	vmov	r2, s15
 800551c:	4baf      	ldr	r3, [pc, #700]	; (80057dc <calculate_motor_powers+0x30c>)
 800551e:	605a      	str	r2, [r3, #4]
	}
	if(gps_go_flag){
 8005520:	4bb1      	ldr	r3, [pc, #708]	; (80057e8 <calculate_motor_powers+0x318>)
 8005522:	781b      	ldrb	r3, [r3, #0]
 8005524:	2b00      	cmp	r3, #0
 8005526:	d023      	beq.n	8005570 <calculate_motor_powers+0xa0>

		_channels[3]-=heading_error;
 8005528:	4bac      	ldr	r3, [pc, #688]	; (80057dc <calculate_motor_powers+0x30c>)
 800552a:	68db      	ldr	r3, [r3, #12]
 800552c:	ee07 3a90 	vmov	s15, r3
 8005530:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005534:	4bad      	ldr	r3, [pc, #692]	; (80057ec <calculate_motor_powers+0x31c>)
 8005536:	edd3 7a00 	vldr	s15, [r3]
 800553a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800553e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005542:	ee17 2a90 	vmov	r2, s15
 8005546:	4ba5      	ldr	r3, [pc, #660]	; (80057dc <calculate_motor_powers+0x30c>)
 8005548:	60da      	str	r2, [r3, #12]
		if(abs(heading_error)<2){
 800554a:	4ba8      	ldr	r3, [pc, #672]	; (80057ec <calculate_motor_powers+0x31c>)
 800554c:	681b      	ldr	r3, [r3, #0]
 800554e:	4618      	mov	r0, r3
 8005550:	f7fa ffc6 	bl	80004e0 <__aeabi_f2d>
 8005554:	4602      	mov	r2, r0
 8005556:	460b      	mov	r3, r1
 8005558:	ec43 2b10 	vmov	d0, r2, r3
 800555c:	f008 f98e 	bl	800d87c <abs>
 8005560:	4603      	mov	r3, r0
 8005562:	2b01      	cmp	r3, #1
 8005564:	dc04      	bgt.n	8005570 <calculate_motor_powers+0xa0>
			_channels[1]-=155; //5 derece*31=155;
 8005566:	4b9d      	ldr	r3, [pc, #628]	; (80057dc <calculate_motor_powers+0x30c>)
 8005568:	685b      	ldr	r3, [r3, #4]
 800556a:	3b9b      	subs	r3, #155	; 0x9b
 800556c:	4a9b      	ldr	r2, [pc, #620]	; (80057dc <calculate_motor_powers+0x30c>)
 800556e:	6053      	str	r3, [r2, #4]
	*/
	//kp_gps=((double)_channels[7]) /1000;   //KUMANDADAN PID TUNE ICIN

	//kd_gps=((double)_channels[11]) /330;

	kp_alt=((double)_channels[5]) /200;   //KUMANDADAN PID TUNE ICIN
 8005570:	4b9a      	ldr	r3, [pc, #616]	; (80057dc <calculate_motor_powers+0x30c>)
 8005572:	695b      	ldr	r3, [r3, #20]
 8005574:	4618      	mov	r0, r3
 8005576:	f7fa ffa1 	bl	80004bc <__aeabi_i2d>
 800557a:	f04f 0200 	mov.w	r2, #0
 800557e:	4b9c      	ldr	r3, [pc, #624]	; (80057f0 <calculate_motor_powers+0x320>)
 8005580:	f7fb f930 	bl	80007e4 <__aeabi_ddiv>
 8005584:	4602      	mov	r2, r0
 8005586:	460b      	mov	r3, r1
 8005588:	4610      	mov	r0, r2
 800558a:	4619      	mov	r1, r3
 800558c:	f7fb fad8 	bl	8000b40 <__aeabi_d2f>
 8005590:	4603      	mov	r3, r0
 8005592:	4a98      	ldr	r2, [pc, #608]	; (80057f4 <calculate_motor_powers+0x324>)
 8005594:	6013      	str	r3, [r2, #0]

	kd_alt=((double)_channels[7]) /100;
 8005596:	4b91      	ldr	r3, [pc, #580]	; (80057dc <calculate_motor_powers+0x30c>)
 8005598:	69db      	ldr	r3, [r3, #28]
 800559a:	4618      	mov	r0, r3
 800559c:	f7fa ff8e 	bl	80004bc <__aeabi_i2d>
 80055a0:	f04f 0200 	mov.w	r2, #0
 80055a4:	4b94      	ldr	r3, [pc, #592]	; (80057f8 <calculate_motor_powers+0x328>)
 80055a6:	f7fb f91d 	bl	80007e4 <__aeabi_ddiv>
 80055aa:	4602      	mov	r2, r0
 80055ac:	460b      	mov	r3, r1
 80055ae:	4610      	mov	r0, r2
 80055b0:	4619      	mov	r1, r3
 80055b2:	f7fb fac5 	bl	8000b40 <__aeabi_d2f>
 80055b6:	4603      	mov	r3, r0
 80055b8:	4a90      	ldr	r2, [pc, #576]	; (80057fc <calculate_motor_powers+0x32c>)
 80055ba:	6013      	str	r3, [r2, #0]
	ki_alt=((double)_channels[6]) /5000;
 80055bc:	4b87      	ldr	r3, [pc, #540]	; (80057dc <calculate_motor_powers+0x30c>)
 80055be:	699b      	ldr	r3, [r3, #24]
 80055c0:	4618      	mov	r0, r3
 80055c2:	f7fa ff7b 	bl	80004bc <__aeabi_i2d>
 80055c6:	a380      	add	r3, pc, #512	; (adr r3, 80057c8 <calculate_motor_powers+0x2f8>)
 80055c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055cc:	f7fb f90a 	bl	80007e4 <__aeabi_ddiv>
 80055d0:	4602      	mov	r2, r0
 80055d2:	460b      	mov	r3, r1
 80055d4:	4610      	mov	r0, r2
 80055d6:	4619      	mov	r1, r3
 80055d8:	f7fb fab2 	bl	8000b40 <__aeabi_d2f>
 80055dc:	4603      	mov	r3, r0
 80055de:	4a88      	ldr	r2, [pc, #544]	; (8005800 <calculate_motor_powers+0x330>)
 80055e0:	6013      	str	r3, [r2, #0]

	kd_roll=28+((double)_channels[11]) /200;
 80055e2:	4b7e      	ldr	r3, [pc, #504]	; (80057dc <calculate_motor_powers+0x30c>)
 80055e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80055e6:	4618      	mov	r0, r3
 80055e8:	f7fa ff68 	bl	80004bc <__aeabi_i2d>
 80055ec:	f04f 0200 	mov.w	r2, #0
 80055f0:	4b7f      	ldr	r3, [pc, #508]	; (80057f0 <calculate_motor_powers+0x320>)
 80055f2:	f7fb f8f7 	bl	80007e4 <__aeabi_ddiv>
 80055f6:	4602      	mov	r2, r0
 80055f8:	460b      	mov	r3, r1
 80055fa:	4610      	mov	r0, r2
 80055fc:	4619      	mov	r1, r3
 80055fe:	f04f 0200 	mov.w	r2, #0
 8005602:	4b80      	ldr	r3, [pc, #512]	; (8005804 <calculate_motor_powers+0x334>)
 8005604:	f7fa fe0e 	bl	8000224 <__adddf3>
 8005608:	4602      	mov	r2, r0
 800560a:	460b      	mov	r3, r1
 800560c:	497e      	ldr	r1, [pc, #504]	; (8005808 <calculate_motor_powers+0x338>)
 800560e:	e9c1 2300 	strd	r2, r3, [r1]
	kd_pitch=kd_roll;
 8005612:	4b7d      	ldr	r3, [pc, #500]	; (8005808 <calculate_motor_powers+0x338>)
 8005614:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005618:	497c      	ldr	r1, [pc, #496]	; (800580c <calculate_motor_powers+0x33c>)
 800561a:	e9c1 2300 	strd	r2, r3, [r1]

	Roll_Error=(((_channels[0])-1000)-(roll_level_adjust))/6     -   gyro_roll_input;
 800561e:	4b6f      	ldr	r3, [pc, #444]	; (80057dc <calculate_motor_powers+0x30c>)
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	f5a3 737a 	sub.w	r3, r3, #1000	; 0x3e8
 8005626:	ee07 3a90 	vmov	s15, r3
 800562a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800562e:	4b78      	ldr	r3, [pc, #480]	; (8005810 <calculate_motor_powers+0x340>)
 8005630:	edd3 7a00 	vldr	s15, [r3]
 8005634:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005638:	eef1 6a08 	vmov.f32	s13, #24	; 0x40c00000  6.0
 800563c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8005640:	4b74      	ldr	r3, [pc, #464]	; (8005814 <calculate_motor_powers+0x344>)
 8005642:	edd3 7a00 	vldr	s15, [r3]
 8005646:	ee77 7a67 	vsub.f32	s15, s14, s15
 800564a:	ee17 0a90 	vmov	r0, s15
 800564e:	f7fa ff47 	bl	80004e0 <__aeabi_f2d>
 8005652:	4602      	mov	r2, r0
 8005654:	460b      	mov	r3, r1
 8005656:	4970      	ldr	r1, [pc, #448]	; (8005818 <calculate_motor_powers+0x348>)
 8005658:	e9c1 2300 	strd	r2, r3, [r1]

	Pitch_Error=(((_channels[1])-1000)-(pitch_level_adjust))/6 	 -   gyro_pitch_input;
 800565c:	4b5f      	ldr	r3, [pc, #380]	; (80057dc <calculate_motor_powers+0x30c>)
 800565e:	685b      	ldr	r3, [r3, #4]
 8005660:	f5a3 737a 	sub.w	r3, r3, #1000	; 0x3e8
 8005664:	ee07 3a90 	vmov	s15, r3
 8005668:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800566c:	4b6b      	ldr	r3, [pc, #428]	; (800581c <calculate_motor_powers+0x34c>)
 800566e:	edd3 7a00 	vldr	s15, [r3]
 8005672:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005676:	eef1 6a08 	vmov.f32	s13, #24	; 0x40c00000  6.0
 800567a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800567e:	4b68      	ldr	r3, [pc, #416]	; (8005820 <calculate_motor_powers+0x350>)
 8005680:	edd3 7a00 	vldr	s15, [r3]
 8005684:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005688:	ee17 0a90 	vmov	r0, s15
 800568c:	f7fa ff28 	bl	80004e0 <__aeabi_f2d>
 8005690:	4602      	mov	r2, r0
 8005692:	460b      	mov	r3, r1
 8005694:	4963      	ldr	r1, [pc, #396]	; (8005824 <calculate_motor_powers+0x354>)
 8005696:	e9c1 2300 	strd	r2, r3, [r1]

	Yaw_Error=((_channels[3])-1000)*0.166   -   gyro_yaw_input;
 800569a:	4b50      	ldr	r3, [pc, #320]	; (80057dc <calculate_motor_powers+0x30c>)
 800569c:	68db      	ldr	r3, [r3, #12]
 800569e:	f5a3 737a 	sub.w	r3, r3, #1000	; 0x3e8
 80056a2:	4618      	mov	r0, r3
 80056a4:	f7fa ff0a 	bl	80004bc <__aeabi_i2d>
 80056a8:	a349      	add	r3, pc, #292	; (adr r3, 80057d0 <calculate_motor_powers+0x300>)
 80056aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056ae:	f7fa ff6f 	bl	8000590 <__aeabi_dmul>
 80056b2:	4602      	mov	r2, r0
 80056b4:	460b      	mov	r3, r1
 80056b6:	4614      	mov	r4, r2
 80056b8:	461d      	mov	r5, r3
 80056ba:	4b5b      	ldr	r3, [pc, #364]	; (8005828 <calculate_motor_powers+0x358>)
 80056bc:	681b      	ldr	r3, [r3, #0]
 80056be:	4618      	mov	r0, r3
 80056c0:	f7fa ff0e 	bl	80004e0 <__aeabi_f2d>
 80056c4:	4602      	mov	r2, r0
 80056c6:	460b      	mov	r3, r1
 80056c8:	4620      	mov	r0, r4
 80056ca:	4629      	mov	r1, r5
 80056cc:	f7fa fda8 	bl	8000220 <__aeabi_dsub>
 80056d0:	4602      	mov	r2, r0
 80056d2:	460b      	mov	r3, r1
 80056d4:	4955      	ldr	r1, [pc, #340]	; (800582c <calculate_motor_powers+0x35c>)
 80056d6:	e9c1 2300 	strd	r2, r3, [r1]

	Roll_Control= getControlSignal_roll_pitch(Roll_Error, kp_roll,ki_roll  ,kd_roll,
 80056da:	4b4f      	ldr	r3, [pc, #316]	; (8005818 <calculate_motor_powers+0x348>)
 80056dc:	ed93 7b00 	vldr	d7, [r3]
 80056e0:	4b53      	ldr	r3, [pc, #332]	; (8005830 <calculate_motor_powers+0x360>)
 80056e2:	ed93 6b00 	vldr	d6, [r3]
 80056e6:	4b53      	ldr	r3, [pc, #332]	; (8005834 <calculate_motor_powers+0x364>)
 80056e8:	ed93 5b00 	vldr	d5, [r3]
 80056ec:	4b46      	ldr	r3, [pc, #280]	; (8005808 <calculate_motor_powers+0x338>)
 80056ee:	ed93 3b00 	vldr	d3, [r3]
 80056f2:	4b51      	ldr	r3, [pc, #324]	; (8005838 <calculate_motor_powers+0x368>)
 80056f4:	ed93 4b00 	vldr	d4, [r3]
 80056f8:	4950      	ldr	r1, [pc, #320]	; (800583c <calculate_motor_powers+0x36c>)
 80056fa:	4851      	ldr	r0, [pc, #324]	; (8005840 <calculate_motor_powers+0x370>)
 80056fc:	eeb0 2a45 	vmov.f32	s4, s10
 8005700:	eef0 2a65 	vmov.f32	s5, s11
 8005704:	eeb0 1a46 	vmov.f32	s2, s12
 8005708:	eef0 1a66 	vmov.f32	s3, s13
 800570c:	eeb0 0a47 	vmov.f32	s0, s14
 8005710:	eef0 0a67 	vmov.f32	s1, s15
 8005714:	f7ff fd94 	bl	8005240 <getControlSignal_roll_pitch>
 8005718:	eeb0 7a40 	vmov.f32	s14, s0
 800571c:	eef0 7a60 	vmov.f32	s15, s1
 8005720:	4b48      	ldr	r3, [pc, #288]	; (8005844 <calculate_motor_powers+0x374>)
 8005722:	ed83 7b00 	vstr	d7, [r3]
			&pid_i_roll,&last_error_roll , delta_time_in_seconds);

	Pitch_Control= getControlSignal_roll_pitch(Pitch_Error, kp_pitch,ki_pitch  ,kd_pitch,
 8005726:	4b3f      	ldr	r3, [pc, #252]	; (8005824 <calculate_motor_powers+0x354>)
 8005728:	ed93 7b00 	vldr	d7, [r3]
 800572c:	4b46      	ldr	r3, [pc, #280]	; (8005848 <calculate_motor_powers+0x378>)
 800572e:	ed93 6b00 	vldr	d6, [r3]
 8005732:	4b46      	ldr	r3, [pc, #280]	; (800584c <calculate_motor_powers+0x37c>)
 8005734:	ed93 5b00 	vldr	d5, [r3]
 8005738:	4b34      	ldr	r3, [pc, #208]	; (800580c <calculate_motor_powers+0x33c>)
 800573a:	ed93 3b00 	vldr	d3, [r3]
 800573e:	4b3e      	ldr	r3, [pc, #248]	; (8005838 <calculate_motor_powers+0x368>)
 8005740:	ed93 4b00 	vldr	d4, [r3]
 8005744:	4942      	ldr	r1, [pc, #264]	; (8005850 <calculate_motor_powers+0x380>)
 8005746:	4843      	ldr	r0, [pc, #268]	; (8005854 <calculate_motor_powers+0x384>)
 8005748:	eeb0 2a45 	vmov.f32	s4, s10
 800574c:	eef0 2a65 	vmov.f32	s5, s11
 8005750:	eeb0 1a46 	vmov.f32	s2, s12
 8005754:	eef0 1a66 	vmov.f32	s3, s13
 8005758:	eeb0 0a47 	vmov.f32	s0, s14
 800575c:	eef0 0a67 	vmov.f32	s1, s15
 8005760:	f7ff fd6e 	bl	8005240 <getControlSignal_roll_pitch>
 8005764:	eeb0 7a40 	vmov.f32	s14, s0
 8005768:	eef0 7a60 	vmov.f32	s15, s1
 800576c:	4b3a      	ldr	r3, [pc, #232]	; (8005858 <calculate_motor_powers+0x388>)
 800576e:	ed83 7b00 	vstr	d7, [r3]
				&pid_i_pitch,&last_error_pitch , delta_time_in_seconds);

	Yaw_Control= getControlSignal_roll_pitch(Yaw_Error, kp_yaw, ki_yaw  ,kd_yaw,
 8005772:	4b2e      	ldr	r3, [pc, #184]	; (800582c <calculate_motor_powers+0x35c>)
 8005774:	ed93 7b00 	vldr	d7, [r3]
 8005778:	4b38      	ldr	r3, [pc, #224]	; (800585c <calculate_motor_powers+0x38c>)
 800577a:	ed93 6b00 	vldr	d6, [r3]
 800577e:	4b38      	ldr	r3, [pc, #224]	; (8005860 <calculate_motor_powers+0x390>)
 8005780:	ed93 5b00 	vldr	d5, [r3]
 8005784:	4b37      	ldr	r3, [pc, #220]	; (8005864 <calculate_motor_powers+0x394>)
 8005786:	ed93 3b00 	vldr	d3, [r3]
 800578a:	4b2b      	ldr	r3, [pc, #172]	; (8005838 <calculate_motor_powers+0x368>)
 800578c:	ed93 4b00 	vldr	d4, [r3]
 8005790:	4935      	ldr	r1, [pc, #212]	; (8005868 <calculate_motor_powers+0x398>)
 8005792:	4836      	ldr	r0, [pc, #216]	; (800586c <calculate_motor_powers+0x39c>)
 8005794:	eeb0 2a45 	vmov.f32	s4, s10
 8005798:	eef0 2a65 	vmov.f32	s5, s11
 800579c:	eeb0 1a46 	vmov.f32	s2, s12
 80057a0:	eef0 1a66 	vmov.f32	s3, s13
 80057a4:	eeb0 0a47 	vmov.f32	s0, s14
 80057a8:	eef0 0a67 	vmov.f32	s1, s15
 80057ac:	f7ff fd48 	bl	8005240 <getControlSignal_roll_pitch>
 80057b0:	eeb0 7a40 	vmov.f32	s14, s0
 80057b4:	eef0 7a60 	vmov.f32	s15, s1
 80057b8:	4b2d      	ldr	r3, [pc, #180]	; (8005870 <calculate_motor_powers+0x3a0>)
 80057ba:	ed83 7b00 	vstr	d7, [r3]
				&pid_i_yaw,&last_error_yaw , delta_time_in_seconds);


}
 80057be:	bf00      	nop
 80057c0:	bdb0      	pop	{r4, r5, r7, pc}
 80057c2:	bf00      	nop
 80057c4:	f3af 8000 	nop.w
 80057c8:	00000000 	.word	0x00000000
 80057cc:	40b38800 	.word	0x40b38800
 80057d0:	ed916873 	.word	0xed916873
 80057d4:	3fc53f7c 	.word	0x3fc53f7c
 80057d8:	20000a68 	.word	0x20000a68
 80057dc:	20000910 	.word	0x20000910
 80057e0:	20000a74 	.word	0x20000a74
 80057e4:	20000a78 	.word	0x20000a78
 80057e8:	20000a84 	.word	0x20000a84
 80057ec:	20000a88 	.word	0x20000a88
 80057f0:	40690000 	.word	0x40690000
 80057f4:	20000118 	.word	0x20000118
 80057f8:	40590000 	.word	0x40590000
 80057fc:	2000011c 	.word	0x2000011c
 8005800:	20000b38 	.word	0x20000b38
 8005804:	403c0000 	.word	0x403c0000
 8005808:	200000e8 	.word	0x200000e8
 800580c:	20000100 	.word	0x20000100
 8005810:	200007c0 	.word	0x200007c0
 8005814:	20000a90 	.word	0x20000a90
 8005818:	20000ac8 	.word	0x20000ac8
 800581c:	200007c4 	.word	0x200007c4
 8005820:	20000a94 	.word	0x20000a94
 8005824:	20000ad8 	.word	0x20000ad8
 8005828:	20000a98 	.word	0x20000a98
 800582c:	20000ad0 	.word	0x20000ad0
 8005830:	200000d8 	.word	0x200000d8
 8005834:	200000e0 	.word	0x200000e0
 8005838:	200000d0 	.word	0x200000d0
 800583c:	20000b00 	.word	0x20000b00
 8005840:	20000af8 	.word	0x20000af8
 8005844:	20000ae0 	.word	0x20000ae0
 8005848:	200000f0 	.word	0x200000f0
 800584c:	200000f8 	.word	0x200000f8
 8005850:	20000b10 	.word	0x20000b10
 8005854:	20000b08 	.word	0x20000b08
 8005858:	20000af0 	.word	0x20000af0
 800585c:	20000108 	.word	0x20000108
 8005860:	20000110 	.word	0x20000110
 8005864:	20000b18 	.word	0x20000b18
 8005868:	20000b28 	.word	0x20000b28
 800586c:	20000b20 	.word	0x20000b20
 8005870:	20000ae8 	.word	0x20000ae8

08005874 <calculate_pid_altitude>:
void calculate_pid_altitude(){
 8005874:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005878:	af00      	add	r7, sp, #0


	Alt_Error=  alt_setpoint - baro_filter_output[0];
 800587a:	4b31      	ldr	r3, [pc, #196]	; (8005940 <calculate_pid_altitude+0xcc>)
 800587c:	ed93 7a00 	vldr	s14, [r3]
 8005880:	4b30      	ldr	r3, [pc, #192]	; (8005944 <calculate_pid_altitude+0xd0>)
 8005882:	edd3 7a00 	vldr	s15, [r3]
 8005886:	ee77 7a67 	vsub.f32	s15, s14, s15
 800588a:	4b2f      	ldr	r3, [pc, #188]	; (8005948 <calculate_pid_altitude+0xd4>)
 800588c:	edc3 7a00 	vstr	s15, [r3]

	Alt_Control= getControlSignal(Alt_Error, kp_alt,ki_alt  ,kd_alt,   ///kp 73 145-145 üzerinden
 8005890:	4b2d      	ldr	r3, [pc, #180]	; (8005948 <calculate_pid_altitude+0xd4>)
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	4618      	mov	r0, r3
 8005896:	f7fa fe23 	bl	80004e0 <__aeabi_f2d>
 800589a:	4604      	mov	r4, r0
 800589c:	460d      	mov	r5, r1
 800589e:	4b2b      	ldr	r3, [pc, #172]	; (800594c <calculate_pid_altitude+0xd8>)
 80058a0:	681b      	ldr	r3, [r3, #0]
 80058a2:	4618      	mov	r0, r3
 80058a4:	f7fa fe1c 	bl	80004e0 <__aeabi_f2d>
 80058a8:	4680      	mov	r8, r0
 80058aa:	4689      	mov	r9, r1
 80058ac:	4b28      	ldr	r3, [pc, #160]	; (8005950 <calculate_pid_altitude+0xdc>)
 80058ae:	681b      	ldr	r3, [r3, #0]
 80058b0:	4618      	mov	r0, r3
 80058b2:	f7fa fe15 	bl	80004e0 <__aeabi_f2d>
 80058b6:	4682      	mov	sl, r0
 80058b8:	468b      	mov	fp, r1
 80058ba:	4b26      	ldr	r3, [pc, #152]	; (8005954 <calculate_pid_altitude+0xe0>)
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	4618      	mov	r0, r3
 80058c0:	f7fa fe0e 	bl	80004e0 <__aeabi_f2d>
 80058c4:	ec41 0b16 	vmov	d6, r0, r1
 80058c8:	4b23      	ldr	r3, [pc, #140]	; (8005958 <calculate_pid_altitude+0xe4>)
 80058ca:	ed93 7b00 	vldr	d7, [r3]
 80058ce:	eeb0 4a47 	vmov.f32	s8, s14
 80058d2:	eef0 4a67 	vmov.f32	s9, s15
 80058d6:	4921      	ldr	r1, [pc, #132]	; (800595c <calculate_pid_altitude+0xe8>)
 80058d8:	4821      	ldr	r0, [pc, #132]	; (8005960 <calculate_pid_altitude+0xec>)
 80058da:	eeb0 3a46 	vmov.f32	s6, s12
 80058de:	eef0 3a66 	vmov.f32	s7, s13
 80058e2:	ec4b ab12 	vmov	d2, sl, fp
 80058e6:	ec49 8b11 	vmov	d1, r8, r9
 80058ea:	ec45 4b10 	vmov	d0, r4, r5
 80058ee:	f7ff fbfb 	bl	80050e8 <getControlSignal>
 80058f2:	ec53 2b10 	vmov	r2, r3, d0
 80058f6:	4610      	mov	r0, r2
 80058f8:	4619      	mov	r1, r3
 80058fa:	f7fb f921 	bl	8000b40 <__aeabi_d2f>
 80058fe:	4603      	mov	r3, r0
 8005900:	4a18      	ldr	r2, [pc, #96]	; (8005964 <calculate_pid_altitude+0xf0>)
 8005902:	6013      	str	r3, [r2, #0]
				&pid_i_alt,&last_error_alt , delta_time_in_seconds);
	if(Alt_Control>300)Alt_Control=300;
 8005904:	4b17      	ldr	r3, [pc, #92]	; (8005964 <calculate_pid_altitude+0xf0>)
 8005906:	edd3 7a00 	vldr	s15, [r3]
 800590a:	ed9f 7a17 	vldr	s14, [pc, #92]	; 8005968 <calculate_pid_altitude+0xf4>
 800590e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005916:	dd02      	ble.n	800591e <calculate_pid_altitude+0xaa>
 8005918:	4b12      	ldr	r3, [pc, #72]	; (8005964 <calculate_pid_altitude+0xf0>)
 800591a:	4a14      	ldr	r2, [pc, #80]	; (800596c <calculate_pid_altitude+0xf8>)
 800591c:	601a      	str	r2, [r3, #0]
	if(Alt_Control<-300)Alt_Control=-300;
 800591e:	4b11      	ldr	r3, [pc, #68]	; (8005964 <calculate_pid_altitude+0xf0>)
 8005920:	edd3 7a00 	vldr	s15, [r3]
 8005924:	ed9f 7a12 	vldr	s14, [pc, #72]	; 8005970 <calculate_pid_altitude+0xfc>
 8005928:	eef4 7ac7 	vcmpe.f32	s15, s14
 800592c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005930:	d400      	bmi.n	8005934 <calculate_pid_altitude+0xc0>

}
 8005932:	e002      	b.n	800593a <calculate_pid_altitude+0xc6>
	if(Alt_Control<-300)Alt_Control=-300;
 8005934:	4b0b      	ldr	r3, [pc, #44]	; (8005964 <calculate_pid_altitude+0xf0>)
 8005936:	4a0f      	ldr	r2, [pc, #60]	; (8005974 <calculate_pid_altitude+0x100>)
 8005938:	601a      	str	r2, [r3, #0]
}
 800593a:	bf00      	nop
 800593c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005940:	20000998 	.word	0x20000998
 8005944:	200009ac 	.word	0x200009ac
 8005948:	20000b30 	.word	0x20000b30
 800594c:	20000118 	.word	0x20000118
 8005950:	20000b38 	.word	0x20000b38
 8005954:	2000011c 	.word	0x2000011c
 8005958:	200000d0 	.word	0x200000d0
 800595c:	20000b48 	.word	0x20000b48
 8005960:	20000b40 	.word	0x20000b40
 8005964:	20000b34 	.word	0x20000b34
 8005968:	43960000 	.word	0x43960000
 800596c:	43960000 	.word	0x43960000
 8005970:	c3960000 	.word	0xc3960000
 8005974:	c3960000 	.word	0xc3960000

08005978 <calculate_pid_gps>:
void calculate_pid_gps(){
 8005978:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800597c:	ed2d 8b02 	vpush	{d8}
 8005980:	af00      	add	r7, sp, #0


	lat_error=(double)gps_setpoint_lat-(double)latitude;
 8005982:	4bc3      	ldr	r3, [pc, #780]	; (8005c90 <calculate_pid_gps+0x318>)
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	4618      	mov	r0, r3
 8005988:	f7fa fd88 	bl	800049c <__aeabi_ui2d>
 800598c:	4604      	mov	r4, r0
 800598e:	460d      	mov	r5, r1
 8005990:	4bc0      	ldr	r3, [pc, #768]	; (8005c94 <calculate_pid_gps+0x31c>)
 8005992:	681b      	ldr	r3, [r3, #0]
 8005994:	4618      	mov	r0, r3
 8005996:	f7fa fd81 	bl	800049c <__aeabi_ui2d>
 800599a:	4602      	mov	r2, r0
 800599c:	460b      	mov	r3, r1
 800599e:	4620      	mov	r0, r4
 80059a0:	4629      	mov	r1, r5
 80059a2:	f7fa fc3d 	bl	8000220 <__aeabi_dsub>
 80059a6:	4602      	mov	r2, r0
 80059a8:	460b      	mov	r3, r1
 80059aa:	49bb      	ldr	r1, [pc, #748]	; (8005c98 <calculate_pid_gps+0x320>)
 80059ac:	e9c1 2300 	strd	r2, r3, [r1]
	lon_error=(double)gps_setpoint_lon-(double)longitude;
 80059b0:	4bba      	ldr	r3, [pc, #744]	; (8005c9c <calculate_pid_gps+0x324>)
 80059b2:	681b      	ldr	r3, [r3, #0]
 80059b4:	4618      	mov	r0, r3
 80059b6:	f7fa fd71 	bl	800049c <__aeabi_ui2d>
 80059ba:	4604      	mov	r4, r0
 80059bc:	460d      	mov	r5, r1
 80059be:	4bb8      	ldr	r3, [pc, #736]	; (8005ca0 <calculate_pid_gps+0x328>)
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	4618      	mov	r0, r3
 80059c4:	f7fa fd6a 	bl	800049c <__aeabi_ui2d>
 80059c8:	4602      	mov	r2, r0
 80059ca:	460b      	mov	r3, r1
 80059cc:	4620      	mov	r0, r4
 80059ce:	4629      	mov	r1, r5
 80059d0:	f7fa fc26 	bl	8000220 <__aeabi_dsub>
 80059d4:	4602      	mov	r2, r0
 80059d6:	460b      	mov	r3, r1
 80059d8:	49b2      	ldr	r1, [pc, #712]	; (8005ca4 <calculate_pid_gps+0x32c>)
 80059da:	e9c1 2300 	strd	r2, r3, [r1]
	GpsRollControl_temp= getControlSignal(lat_error, kp_gps,ki_gps  ,kd_gps,   ///kp 73 145-145 üzerinden
 80059de:	4bae      	ldr	r3, [pc, #696]	; (8005c98 <calculate_pid_gps+0x320>)
 80059e0:	ed93 8b00 	vldr	d8, [r3]
 80059e4:	4bb0      	ldr	r3, [pc, #704]	; (8005ca8 <calculate_pid_gps+0x330>)
 80059e6:	681b      	ldr	r3, [r3, #0]
 80059e8:	4618      	mov	r0, r3
 80059ea:	f7fa fd79 	bl	80004e0 <__aeabi_f2d>
 80059ee:	4604      	mov	r4, r0
 80059f0:	460d      	mov	r5, r1
 80059f2:	4bae      	ldr	r3, [pc, #696]	; (8005cac <calculate_pid_gps+0x334>)
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	4618      	mov	r0, r3
 80059f8:	f7fa fd72 	bl	80004e0 <__aeabi_f2d>
 80059fc:	4680      	mov	r8, r0
 80059fe:	4689      	mov	r9, r1
 8005a00:	4bab      	ldr	r3, [pc, #684]	; (8005cb0 <calculate_pid_gps+0x338>)
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	4618      	mov	r0, r3
 8005a06:	f7fa fd6b 	bl	80004e0 <__aeabi_f2d>
 8005a0a:	4682      	mov	sl, r0
 8005a0c:	468b      	mov	fp, r1
 8005a0e:	4ba9      	ldr	r3, [pc, #676]	; (8005cb4 <calculate_pid_gps+0x33c>)
 8005a10:	ed93 7b00 	vldr	d7, [r3]
 8005a14:	eeb0 4a47 	vmov.f32	s8, s14
 8005a18:	eef0 4a67 	vmov.f32	s9, s15
 8005a1c:	49a6      	ldr	r1, [pc, #664]	; (8005cb8 <calculate_pid_gps+0x340>)
 8005a1e:	48a7      	ldr	r0, [pc, #668]	; (8005cbc <calculate_pid_gps+0x344>)
 8005a20:	ec4b ab13 	vmov	d3, sl, fp
 8005a24:	ec49 8b12 	vmov	d2, r8, r9
 8005a28:	ec45 4b11 	vmov	d1, r4, r5
 8005a2c:	eeb0 0a48 	vmov.f32	s0, s16
 8005a30:	eef0 0a68 	vmov.f32	s1, s17
 8005a34:	f7ff fb58 	bl	80050e8 <getControlSignal>
 8005a38:	ec53 2b10 	vmov	r2, r3, d0
 8005a3c:	4610      	mov	r0, r2
 8005a3e:	4619      	mov	r1, r3
 8005a40:	f7fb f87e 	bl	8000b40 <__aeabi_d2f>
 8005a44:	4603      	mov	r3, r0
 8005a46:	4a9e      	ldr	r2, [pc, #632]	; (8005cc0 <calculate_pid_gps+0x348>)
 8005a48:	6013      	str	r3, [r2, #0]
			&pid_i_lat,&last_error_lat , delta_time_in_seconds);
	GpsPitchControl_temp= getControlSignal(lon_error, kp_gps,ki_gps  ,kd_gps,   ///kp 73 145-145 üzerinden
 8005a4a:	4b96      	ldr	r3, [pc, #600]	; (8005ca4 <calculate_pid_gps+0x32c>)
 8005a4c:	ed93 8b00 	vldr	d8, [r3]
 8005a50:	4b95      	ldr	r3, [pc, #596]	; (8005ca8 <calculate_pid_gps+0x330>)
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	4618      	mov	r0, r3
 8005a56:	f7fa fd43 	bl	80004e0 <__aeabi_f2d>
 8005a5a:	4604      	mov	r4, r0
 8005a5c:	460d      	mov	r5, r1
 8005a5e:	4b93      	ldr	r3, [pc, #588]	; (8005cac <calculate_pid_gps+0x334>)
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	4618      	mov	r0, r3
 8005a64:	f7fa fd3c 	bl	80004e0 <__aeabi_f2d>
 8005a68:	4680      	mov	r8, r0
 8005a6a:	4689      	mov	r9, r1
 8005a6c:	4b90      	ldr	r3, [pc, #576]	; (8005cb0 <calculate_pid_gps+0x338>)
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	4618      	mov	r0, r3
 8005a72:	f7fa fd35 	bl	80004e0 <__aeabi_f2d>
 8005a76:	4682      	mov	sl, r0
 8005a78:	468b      	mov	fp, r1
 8005a7a:	4b8e      	ldr	r3, [pc, #568]	; (8005cb4 <calculate_pid_gps+0x33c>)
 8005a7c:	ed93 7b00 	vldr	d7, [r3]
 8005a80:	eeb0 4a47 	vmov.f32	s8, s14
 8005a84:	eef0 4a67 	vmov.f32	s9, s15
 8005a88:	498e      	ldr	r1, [pc, #568]	; (8005cc4 <calculate_pid_gps+0x34c>)
 8005a8a:	488f      	ldr	r0, [pc, #572]	; (8005cc8 <calculate_pid_gps+0x350>)
 8005a8c:	ec4b ab13 	vmov	d3, sl, fp
 8005a90:	ec49 8b12 	vmov	d2, r8, r9
 8005a94:	ec45 4b11 	vmov	d1, r4, r5
 8005a98:	eeb0 0a48 	vmov.f32	s0, s16
 8005a9c:	eef0 0a68 	vmov.f32	s1, s17
 8005aa0:	f7ff fb22 	bl	80050e8 <getControlSignal>
 8005aa4:	ec53 2b10 	vmov	r2, r3, d0
 8005aa8:	4610      	mov	r0, r2
 8005aaa:	4619      	mov	r1, r3
 8005aac:	f7fb f848 	bl	8000b40 <__aeabi_d2f>
 8005ab0:	4603      	mov	r3, r0
 8005ab2:	4a86      	ldr	r2, [pc, #536]	; (8005ccc <calculate_pid_gps+0x354>)
 8005ab4:	6013      	str	r3, [r2, #0]
				&pid_i_lon,&last_error_lon , delta_time_in_seconds);

	GpsPitchControl=GpsPitchControl_temp*cos(heading_corrected*M_PI/180)+GpsRollControl_temp*cos((heading_corrected-90)*M_PI/180);
 8005ab6:	4b85      	ldr	r3, [pc, #532]	; (8005ccc <calculate_pid_gps+0x354>)
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	4618      	mov	r0, r3
 8005abc:	f7fa fd10 	bl	80004e0 <__aeabi_f2d>
 8005ac0:	4604      	mov	r4, r0
 8005ac2:	460d      	mov	r5, r1
 8005ac4:	4b82      	ldr	r3, [pc, #520]	; (8005cd0 <calculate_pid_gps+0x358>)
 8005ac6:	681b      	ldr	r3, [r3, #0]
 8005ac8:	4618      	mov	r0, r3
 8005aca:	f7fa fd09 	bl	80004e0 <__aeabi_f2d>
 8005ace:	a36e      	add	r3, pc, #440	; (adr r3, 8005c88 <calculate_pid_gps+0x310>)
 8005ad0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ad4:	f7fa fd5c 	bl	8000590 <__aeabi_dmul>
 8005ad8:	4602      	mov	r2, r0
 8005ada:	460b      	mov	r3, r1
 8005adc:	4610      	mov	r0, r2
 8005ade:	4619      	mov	r1, r3
 8005ae0:	f04f 0200 	mov.w	r2, #0
 8005ae4:	4b7b      	ldr	r3, [pc, #492]	; (8005cd4 <calculate_pid_gps+0x35c>)
 8005ae6:	f7fa fe7d 	bl	80007e4 <__aeabi_ddiv>
 8005aea:	4602      	mov	r2, r0
 8005aec:	460b      	mov	r3, r1
 8005aee:	ec43 2b17 	vmov	d7, r2, r3
 8005af2:	eeb0 0a47 	vmov.f32	s0, s14
 8005af6:	eef0 0a67 	vmov.f32	s1, s15
 8005afa:	f007 fef5 	bl	800d8e8 <cos>
 8005afe:	ec53 2b10 	vmov	r2, r3, d0
 8005b02:	4620      	mov	r0, r4
 8005b04:	4629      	mov	r1, r5
 8005b06:	f7fa fd43 	bl	8000590 <__aeabi_dmul>
 8005b0a:	4602      	mov	r2, r0
 8005b0c:	460b      	mov	r3, r1
 8005b0e:	4690      	mov	r8, r2
 8005b10:	4699      	mov	r9, r3
 8005b12:	4b6b      	ldr	r3, [pc, #428]	; (8005cc0 <calculate_pid_gps+0x348>)
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	4618      	mov	r0, r3
 8005b18:	f7fa fce2 	bl	80004e0 <__aeabi_f2d>
 8005b1c:	4604      	mov	r4, r0
 8005b1e:	460d      	mov	r5, r1
 8005b20:	4b6b      	ldr	r3, [pc, #428]	; (8005cd0 <calculate_pid_gps+0x358>)
 8005b22:	edd3 7a00 	vldr	s15, [r3]
 8005b26:	ed9f 7a6c 	vldr	s14, [pc, #432]	; 8005cd8 <calculate_pid_gps+0x360>
 8005b2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005b2e:	ee17 0a90 	vmov	r0, s15
 8005b32:	f7fa fcd5 	bl	80004e0 <__aeabi_f2d>
 8005b36:	a354      	add	r3, pc, #336	; (adr r3, 8005c88 <calculate_pid_gps+0x310>)
 8005b38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b3c:	f7fa fd28 	bl	8000590 <__aeabi_dmul>
 8005b40:	4602      	mov	r2, r0
 8005b42:	460b      	mov	r3, r1
 8005b44:	4610      	mov	r0, r2
 8005b46:	4619      	mov	r1, r3
 8005b48:	f04f 0200 	mov.w	r2, #0
 8005b4c:	4b61      	ldr	r3, [pc, #388]	; (8005cd4 <calculate_pid_gps+0x35c>)
 8005b4e:	f7fa fe49 	bl	80007e4 <__aeabi_ddiv>
 8005b52:	4602      	mov	r2, r0
 8005b54:	460b      	mov	r3, r1
 8005b56:	ec43 2b17 	vmov	d7, r2, r3
 8005b5a:	eeb0 0a47 	vmov.f32	s0, s14
 8005b5e:	eef0 0a67 	vmov.f32	s1, s15
 8005b62:	f007 fec1 	bl	800d8e8 <cos>
 8005b66:	ec53 2b10 	vmov	r2, r3, d0
 8005b6a:	4620      	mov	r0, r4
 8005b6c:	4629      	mov	r1, r5
 8005b6e:	f7fa fd0f 	bl	8000590 <__aeabi_dmul>
 8005b72:	4602      	mov	r2, r0
 8005b74:	460b      	mov	r3, r1
 8005b76:	4640      	mov	r0, r8
 8005b78:	4649      	mov	r1, r9
 8005b7a:	f7fa fb53 	bl	8000224 <__adddf3>
 8005b7e:	4602      	mov	r2, r0
 8005b80:	460b      	mov	r3, r1
 8005b82:	4610      	mov	r0, r2
 8005b84:	4619      	mov	r1, r3
 8005b86:	f7fa ffdb 	bl	8000b40 <__aeabi_d2f>
 8005b8a:	4603      	mov	r3, r0
 8005b8c:	4a53      	ldr	r2, [pc, #332]	; (8005cdc <calculate_pid_gps+0x364>)
 8005b8e:	6013      	str	r3, [r2, #0]
	GpsRollControl=GpsRollControl_temp*cos(heading_corrected*M_PI/180)+GpsPitchControl_temp*cos((heading_corrected+90)*M_PI/180);
 8005b90:	4b4b      	ldr	r3, [pc, #300]	; (8005cc0 <calculate_pid_gps+0x348>)
 8005b92:	681b      	ldr	r3, [r3, #0]
 8005b94:	4618      	mov	r0, r3
 8005b96:	f7fa fca3 	bl	80004e0 <__aeabi_f2d>
 8005b9a:	4604      	mov	r4, r0
 8005b9c:	460d      	mov	r5, r1
 8005b9e:	4b4c      	ldr	r3, [pc, #304]	; (8005cd0 <calculate_pid_gps+0x358>)
 8005ba0:	681b      	ldr	r3, [r3, #0]
 8005ba2:	4618      	mov	r0, r3
 8005ba4:	f7fa fc9c 	bl	80004e0 <__aeabi_f2d>
 8005ba8:	a337      	add	r3, pc, #220	; (adr r3, 8005c88 <calculate_pid_gps+0x310>)
 8005baa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005bae:	f7fa fcef 	bl	8000590 <__aeabi_dmul>
 8005bb2:	4602      	mov	r2, r0
 8005bb4:	460b      	mov	r3, r1
 8005bb6:	4610      	mov	r0, r2
 8005bb8:	4619      	mov	r1, r3
 8005bba:	f04f 0200 	mov.w	r2, #0
 8005bbe:	4b45      	ldr	r3, [pc, #276]	; (8005cd4 <calculate_pid_gps+0x35c>)
 8005bc0:	f7fa fe10 	bl	80007e4 <__aeabi_ddiv>
 8005bc4:	4602      	mov	r2, r0
 8005bc6:	460b      	mov	r3, r1
 8005bc8:	ec43 2b17 	vmov	d7, r2, r3
 8005bcc:	eeb0 0a47 	vmov.f32	s0, s14
 8005bd0:	eef0 0a67 	vmov.f32	s1, s15
 8005bd4:	f007 fe88 	bl	800d8e8 <cos>
 8005bd8:	ec53 2b10 	vmov	r2, r3, d0
 8005bdc:	4620      	mov	r0, r4
 8005bde:	4629      	mov	r1, r5
 8005be0:	f7fa fcd6 	bl	8000590 <__aeabi_dmul>
 8005be4:	4602      	mov	r2, r0
 8005be6:	460b      	mov	r3, r1
 8005be8:	4690      	mov	r8, r2
 8005bea:	4699      	mov	r9, r3
 8005bec:	4b37      	ldr	r3, [pc, #220]	; (8005ccc <calculate_pid_gps+0x354>)
 8005bee:	681b      	ldr	r3, [r3, #0]
 8005bf0:	4618      	mov	r0, r3
 8005bf2:	f7fa fc75 	bl	80004e0 <__aeabi_f2d>
 8005bf6:	4604      	mov	r4, r0
 8005bf8:	460d      	mov	r5, r1
 8005bfa:	4b35      	ldr	r3, [pc, #212]	; (8005cd0 <calculate_pid_gps+0x358>)
 8005bfc:	edd3 7a00 	vldr	s15, [r3]
 8005c00:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8005cd8 <calculate_pid_gps+0x360>
 8005c04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c08:	ee17 0a90 	vmov	r0, s15
 8005c0c:	f7fa fc68 	bl	80004e0 <__aeabi_f2d>
 8005c10:	a31d      	add	r3, pc, #116	; (adr r3, 8005c88 <calculate_pid_gps+0x310>)
 8005c12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c16:	f7fa fcbb 	bl	8000590 <__aeabi_dmul>
 8005c1a:	4602      	mov	r2, r0
 8005c1c:	460b      	mov	r3, r1
 8005c1e:	4610      	mov	r0, r2
 8005c20:	4619      	mov	r1, r3
 8005c22:	f04f 0200 	mov.w	r2, #0
 8005c26:	4b2b      	ldr	r3, [pc, #172]	; (8005cd4 <calculate_pid_gps+0x35c>)
 8005c28:	f7fa fddc 	bl	80007e4 <__aeabi_ddiv>
 8005c2c:	4602      	mov	r2, r0
 8005c2e:	460b      	mov	r3, r1
 8005c30:	ec43 2b17 	vmov	d7, r2, r3
 8005c34:	eeb0 0a47 	vmov.f32	s0, s14
 8005c38:	eef0 0a67 	vmov.f32	s1, s15
 8005c3c:	f007 fe54 	bl	800d8e8 <cos>
 8005c40:	ec53 2b10 	vmov	r2, r3, d0
 8005c44:	4620      	mov	r0, r4
 8005c46:	4629      	mov	r1, r5
 8005c48:	f7fa fca2 	bl	8000590 <__aeabi_dmul>
 8005c4c:	4602      	mov	r2, r0
 8005c4e:	460b      	mov	r3, r1
 8005c50:	4640      	mov	r0, r8
 8005c52:	4649      	mov	r1, r9
 8005c54:	f7fa fae6 	bl	8000224 <__adddf3>
 8005c58:	4602      	mov	r2, r0
 8005c5a:	460b      	mov	r3, r1
 8005c5c:	4610      	mov	r0, r2
 8005c5e:	4619      	mov	r1, r3
 8005c60:	f7fa ff6e 	bl	8000b40 <__aeabi_d2f>
 8005c64:	4603      	mov	r3, r0
 8005c66:	4a1e      	ldr	r2, [pc, #120]	; (8005ce0 <calculate_pid_gps+0x368>)
 8005c68:	6013      	str	r3, [r2, #0]
	if(GpsPitchControl>500)GpsPitchControl=500;
 8005c6a:	4b1c      	ldr	r3, [pc, #112]	; (8005cdc <calculate_pid_gps+0x364>)
 8005c6c:	edd3 7a00 	vldr	s15, [r3]
 8005c70:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8005ce4 <calculate_pid_gps+0x36c>
 8005c74:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005c78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c7c:	dd36      	ble.n	8005cec <calculate_pid_gps+0x374>
 8005c7e:	4b17      	ldr	r3, [pc, #92]	; (8005cdc <calculate_pid_gps+0x364>)
 8005c80:	4a19      	ldr	r2, [pc, #100]	; (8005ce8 <calculate_pid_gps+0x370>)
 8005c82:	601a      	str	r2, [r3, #0]
 8005c84:	e03f      	b.n	8005d06 <calculate_pid_gps+0x38e>
 8005c86:	bf00      	nop
 8005c88:	54442d18 	.word	0x54442d18
 8005c8c:	400921fb 	.word	0x400921fb
 8005c90:	20000a6c 	.word	0x20000a6c
 8005c94:	20000240 	.word	0x20000240
 8005c98:	20000b68 	.word	0x20000b68
 8005c9c:	20000a70 	.word	0x20000a70
 8005ca0:	20000244 	.word	0x20000244
 8005ca4:	20000b60 	.word	0x20000b60
 8005ca8:	20000120 	.word	0x20000120
 8005cac:	20000b70 	.word	0x20000b70
 8005cb0:	20000124 	.word	0x20000124
 8005cb4:	200000d0 	.word	0x200000d0
 8005cb8:	20000b58 	.word	0x20000b58
 8005cbc:	20000b50 	.word	0x20000b50
 8005cc0:	20000a7c 	.word	0x20000a7c
 8005cc4:	20000b5c 	.word	0x20000b5c
 8005cc8:	20000b54 	.word	0x20000b54
 8005ccc:	20000a80 	.word	0x20000a80
 8005cd0:	200001c8 	.word	0x200001c8
 8005cd4:	40668000 	.word	0x40668000
 8005cd8:	42b40000 	.word	0x42b40000
 8005cdc:	20000a78 	.word	0x20000a78
 8005ce0:	20000a74 	.word	0x20000a74
 8005ce4:	43fa0000 	.word	0x43fa0000
 8005ce8:	43fa0000 	.word	0x43fa0000
	else if(GpsPitchControl<-500)GpsPitchControl=-500;
 8005cec:	4b17      	ldr	r3, [pc, #92]	; (8005d4c <calculate_pid_gps+0x3d4>)
 8005cee:	edd3 7a00 	vldr	s15, [r3]
 8005cf2:	ed9f 7a17 	vldr	s14, [pc, #92]	; 8005d50 <calculate_pid_gps+0x3d8>
 8005cf6:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cfe:	d502      	bpl.n	8005d06 <calculate_pid_gps+0x38e>
 8005d00:	4b12      	ldr	r3, [pc, #72]	; (8005d4c <calculate_pid_gps+0x3d4>)
 8005d02:	4a14      	ldr	r2, [pc, #80]	; (8005d54 <calculate_pid_gps+0x3dc>)
 8005d04:	601a      	str	r2, [r3, #0]
	if(GpsRollControl>500)GpsRollControl=500;
 8005d06:	4b14      	ldr	r3, [pc, #80]	; (8005d58 <calculate_pid_gps+0x3e0>)
 8005d08:	edd3 7a00 	vldr	s15, [r3]
 8005d0c:	ed9f 7a13 	vldr	s14, [pc, #76]	; 8005d5c <calculate_pid_gps+0x3e4>
 8005d10:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d18:	dd03      	ble.n	8005d22 <calculate_pid_gps+0x3aa>
 8005d1a:	4b0f      	ldr	r3, [pc, #60]	; (8005d58 <calculate_pid_gps+0x3e0>)
 8005d1c:	4a10      	ldr	r2, [pc, #64]	; (8005d60 <calculate_pid_gps+0x3e8>)
 8005d1e:	601a      	str	r2, [r3, #0]
	else if(GpsRollControl<-500)GpsRollControl=-500;
}
 8005d20:	e00d      	b.n	8005d3e <calculate_pid_gps+0x3c6>
	else if(GpsRollControl<-500)GpsRollControl=-500;
 8005d22:	4b0d      	ldr	r3, [pc, #52]	; (8005d58 <calculate_pid_gps+0x3e0>)
 8005d24:	edd3 7a00 	vldr	s15, [r3]
 8005d28:	ed9f 7a09 	vldr	s14, [pc, #36]	; 8005d50 <calculate_pid_gps+0x3d8>
 8005d2c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d34:	d400      	bmi.n	8005d38 <calculate_pid_gps+0x3c0>
}
 8005d36:	e002      	b.n	8005d3e <calculate_pid_gps+0x3c6>
	else if(GpsRollControl<-500)GpsRollControl=-500;
 8005d38:	4b07      	ldr	r3, [pc, #28]	; (8005d58 <calculate_pid_gps+0x3e0>)
 8005d3a:	4a06      	ldr	r2, [pc, #24]	; (8005d54 <calculate_pid_gps+0x3dc>)
 8005d3c:	601a      	str	r2, [r3, #0]
}
 8005d3e:	bf00      	nop
 8005d40:	46bd      	mov	sp, r7
 8005d42:	ecbd 8b02 	vpop	{d8}
 8005d46:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005d4a:	bf00      	nop
 8005d4c:	20000a78 	.word	0x20000a78
 8005d50:	c3fa0000 	.word	0xc3fa0000
 8005d54:	c3fa0000 	.word	0xc3fa0000
 8005d58:	20000a74 	.word	0x20000a74
 8005d5c:	43fa0000 	.word	0x43fa0000
 8005d60:	43fa0000 	.word	0x43fa0000

08005d64 <reset_alt_pid>:

void reset_alt_pid(){
 8005d64:	b480      	push	{r7}
 8005d66:	af00      	add	r7, sp, #0
	pid_i_alt=0;
 8005d68:	490b      	ldr	r1, [pc, #44]	; (8005d98 <reset_alt_pid+0x34>)
 8005d6a:	f04f 0200 	mov.w	r2, #0
 8005d6e:	f04f 0300 	mov.w	r3, #0
 8005d72:	e9c1 2300 	strd	r2, r3, [r1]
	last_error_alt=0;
 8005d76:	4909      	ldr	r1, [pc, #36]	; (8005d9c <reset_alt_pid+0x38>)
 8005d78:	f04f 0200 	mov.w	r2, #0
 8005d7c:	f04f 0300 	mov.w	r3, #0
 8005d80:	e9c1 2300 	strd	r2, r3, [r1]
	Alt_Error=0;
 8005d84:	4b06      	ldr	r3, [pc, #24]	; (8005da0 <reset_alt_pid+0x3c>)
 8005d86:	f04f 0200 	mov.w	r2, #0
 8005d8a:	601a      	str	r2, [r3, #0]
}
 8005d8c:	bf00      	nop
 8005d8e:	46bd      	mov	sp, r7
 8005d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d94:	4770      	bx	lr
 8005d96:	bf00      	nop
 8005d98:	20000b40 	.word	0x20000b40
 8005d9c:	20000b48 	.word	0x20000b48
 8005da0:	20000b30 	.word	0x20000b30

08005da4 <reset_gps_pid>:
void reset_gps_pid(){
 8005da4:	b480      	push	{r7}
 8005da6:	af00      	add	r7, sp, #0

	pid_i_lat=0;
 8005da8:	4b11      	ldr	r3, [pc, #68]	; (8005df0 <reset_gps_pid+0x4c>)
 8005daa:	f04f 0200 	mov.w	r2, #0
 8005dae:	601a      	str	r2, [r3, #0]
	pid_i_lon=0;
 8005db0:	4b10      	ldr	r3, [pc, #64]	; (8005df4 <reset_gps_pid+0x50>)
 8005db2:	f04f 0200 	mov.w	r2, #0
 8005db6:	601a      	str	r2, [r3, #0]
	last_error_lat=0;
 8005db8:	4b0f      	ldr	r3, [pc, #60]	; (8005df8 <reset_gps_pid+0x54>)
 8005dba:	f04f 0200 	mov.w	r2, #0
 8005dbe:	601a      	str	r2, [r3, #0]
	last_error_lon=0;
 8005dc0:	4b0e      	ldr	r3, [pc, #56]	; (8005dfc <reset_gps_pid+0x58>)
 8005dc2:	f04f 0200 	mov.w	r2, #0
 8005dc6:	601a      	str	r2, [r3, #0]
	lat_error=0;
 8005dc8:	490d      	ldr	r1, [pc, #52]	; (8005e00 <reset_gps_pid+0x5c>)
 8005dca:	f04f 0200 	mov.w	r2, #0
 8005dce:	f04f 0300 	mov.w	r3, #0
 8005dd2:	e9c1 2300 	strd	r2, r3, [r1]
	lon_error=0;
 8005dd6:	490b      	ldr	r1, [pc, #44]	; (8005e04 <reset_gps_pid+0x60>)
 8005dd8:	f04f 0200 	mov.w	r2, #0
 8005ddc:	f04f 0300 	mov.w	r3, #0
 8005de0:	e9c1 2300 	strd	r2, r3, [r1]
}
 8005de4:	bf00      	nop
 8005de6:	46bd      	mov	sp, r7
 8005de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dec:	4770      	bx	lr
 8005dee:	bf00      	nop
 8005df0:	20000b50 	.word	0x20000b50
 8005df4:	20000b54 	.word	0x20000b54
 8005df8:	20000b58 	.word	0x20000b58
 8005dfc:	20000b5c 	.word	0x20000b5c
 8005e00:	20000b68 	.word	0x20000b68
 8005e04:	20000b60 	.word	0x20000b60

08005e08 <calibrate_esc_and_rc>:
int calibrate_esc_and_rc()
{
 8005e08:	b580      	push	{r7, lr}
 8005e0a:	b082      	sub	sp, #8
 8005e0c:	af00      	add	r7, sp, #0
	uint8_t Calib=0;
 8005e0e:	2300      	movs	r3, #0
 8005e10:	71fb      	strb	r3, [r7, #7]
	while(Calib!=1){
 8005e12:	e02c      	b.n	8005e6e <calibrate_esc_and_rc+0x66>
		decode_receiver();
 8005e14:	f000 f894 	bl	8005f40 <decode_receiver>
		if(_channels[10]<1000){
 8005e18:	4b19      	ldr	r3, [pc, #100]	; (8005e80 <calibrate_esc_and_rc+0x78>)
 8005e1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005e1c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005e20:	da02      	bge.n	8005e28 <calibrate_esc_and_rc+0x20>
				  stop_motors();
 8005e22:	f000 f831 	bl	8005e88 <stop_motors>
 8005e26:	e022      	b.n	8005e6e <calibrate_esc_and_rc+0x66>
			  }
		else{
			changespeedM1(&_channels[2],MIN_Duty_cycle);
 8005e28:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005e2c:	4815      	ldr	r0, [pc, #84]	; (8005e84 <calibrate_esc_and_rc+0x7c>)
 8005e2e:	f7ff fae5 	bl	80053fc <changespeedM1>
			changespeedM2(&_channels[2],MIN_Duty_cycle);
 8005e32:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005e36:	4813      	ldr	r0, [pc, #76]	; (8005e84 <calibrate_esc_and_rc+0x7c>)
 8005e38:	f7ff fafa 	bl	8005430 <changespeedM2>
			changespeedM3(&_channels[2],MIN_Duty_cycle);
 8005e3c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005e40:	4810      	ldr	r0, [pc, #64]	; (8005e84 <calibrate_esc_and_rc+0x7c>)
 8005e42:	f7ff fb0f 	bl	8005464 <changespeedM3>
			changespeedM4(&_channels[2],MIN_Duty_cycle);
 8005e46:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005e4a:	480e      	ldr	r0, [pc, #56]	; (8005e84 <calibrate_esc_and_rc+0x7c>)
 8005e4c:	f7ff fb24 	bl	8005498 <changespeedM4>
			if(_channels[2]<1100 && _channels[3]<100){
 8005e50:	4b0b      	ldr	r3, [pc, #44]	; (8005e80 <calibrate_esc_and_rc+0x78>)
 8005e52:	689b      	ldr	r3, [r3, #8]
 8005e54:	f240 424b 	movw	r2, #1099	; 0x44b
 8005e58:	4293      	cmp	r3, r2
 8005e5a:	dc06      	bgt.n	8005e6a <calibrate_esc_and_rc+0x62>
 8005e5c:	4b08      	ldr	r3, [pc, #32]	; (8005e80 <calibrate_esc_and_rc+0x78>)
 8005e5e:	68db      	ldr	r3, [r3, #12]
 8005e60:	2b63      	cmp	r3, #99	; 0x63
 8005e62:	dc02      	bgt.n	8005e6a <calibrate_esc_and_rc+0x62>
				Calib=1;
 8005e64:	2301      	movs	r3, #1
 8005e66:	71fb      	strb	r3, [r7, #7]
 8005e68:	e001      	b.n	8005e6e <calibrate_esc_and_rc+0x66>
				}
			else
				Calib=0;
 8005e6a:	2300      	movs	r3, #0
 8005e6c:	71fb      	strb	r3, [r7, #7]
	while(Calib!=1){
 8005e6e:	79fb      	ldrb	r3, [r7, #7]
 8005e70:	2b01      	cmp	r3, #1
 8005e72:	d1cf      	bne.n	8005e14 <calibrate_esc_and_rc+0xc>
		}

	}
	return 0;
 8005e74:	2300      	movs	r3, #0
}
 8005e76:	4618      	mov	r0, r3
 8005e78:	3708      	adds	r7, #8
 8005e7a:	46bd      	mov	sp, r7
 8005e7c:	bd80      	pop	{r7, pc}
 8005e7e:	bf00      	nop
 8005e80:	20000910 	.word	0x20000910
 8005e84:	20000918 	.word	0x20000918

08005e88 <stop_motors>:
void stop_motors()
{
 8005e88:	b580      	push	{r7, lr}
 8005e8a:	af00      	add	r7, sp, #0
	changespeedM1(&stopMotors,MIN_Duty_cycle);
 8005e8c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005e90:	4809      	ldr	r0, [pc, #36]	; (8005eb8 <stop_motors+0x30>)
 8005e92:	f7ff fab3 	bl	80053fc <changespeedM1>
	changespeedM2(&stopMotors,MIN_Duty_cycle);
 8005e96:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005e9a:	4807      	ldr	r0, [pc, #28]	; (8005eb8 <stop_motors+0x30>)
 8005e9c:	f7ff fac8 	bl	8005430 <changespeedM2>
	changespeedM3(&stopMotors,MIN_Duty_cycle);
 8005ea0:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005ea4:	4804      	ldr	r0, [pc, #16]	; (8005eb8 <stop_motors+0x30>)
 8005ea6:	f7ff fadd 	bl	8005464 <changespeedM3>
	changespeedM4(&stopMotors,MIN_Duty_cycle);
 8005eaa:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8005eae:	4802      	ldr	r0, [pc, #8]	; (8005eb8 <stop_motors+0x30>)
 8005eb0:	f7ff faf2 	bl	8005498 <changespeedM4>
}
 8005eb4:	bf00      	nop
 8005eb6:	bd80      	pop	{r7, pc}
 8005eb8:	200000cc 	.word	0x200000cc

08005ebc <connect_receiver>:
		if(_channels[0]>1900 && _channels[1]>1900) isArmed=1;


	}
}
uint8_t connect_receiver(void){
 8005ebc:	b580      	push	{r7, lr}
 8005ebe:	b082      	sub	sp, #8
 8005ec0:	af00      	add	r7, sp, #0
	uint8_t receiver_connected=0;
 8005ec2:	2300      	movs	r3, #0
 8005ec4:	71fb      	strb	r3, [r7, #7]
	while(!receiver_connected){
 8005ec6:	e02f      	b.n	8005f28 <connect_receiver+0x6c>
		HAL_UART_Receive_DMA(&huart2, (uint8_t *)buffer,25);
 8005ec8:	2219      	movs	r2, #25
 8005eca:	491b      	ldr	r1, [pc, #108]	; (8005f38 <connect_receiver+0x7c>)
 8005ecc:	481b      	ldr	r0, [pc, #108]	; (8005f3c <connect_receiver+0x80>)
 8005ece:	f006 fabd 	bl	800c44c <HAL_UART_Receive_DMA>
		if(buffer[0]!=15){
 8005ed2:	4b19      	ldr	r3, [pc, #100]	; (8005f38 <connect_receiver+0x7c>)
 8005ed4:	781b      	ldrb	r3, [r3, #0]
 8005ed6:	2b0f      	cmp	r3, #15
 8005ed8:	d01c      	beq.n	8005f14 <connect_receiver+0x58>
			HAL_UART_DMAStop(&huart2);
 8005eda:	4818      	ldr	r0, [pc, #96]	; (8005f3c <connect_receiver+0x80>)
 8005edc:	f006 fae6 	bl	800c4ac <HAL_UART_DMAStop>
			HAL_Delay(10);
 8005ee0:	200a      	movs	r0, #10
 8005ee2:	f001 fa29 	bl	8007338 <HAL_Delay>
			HAL_UART_DeInit(&huart2);
 8005ee6:	4815      	ldr	r0, [pc, #84]	; (8005f3c <connect_receiver+0x80>)
 8005ee8:	f006 f971 	bl	800c1ce <HAL_UART_DeInit>
			HAL_Delay(10);
 8005eec:	200a      	movs	r0, #10
 8005eee:	f001 fa23 	bl	8007338 <HAL_Delay>
			HAL_UART_Init(&huart2);
 8005ef2:	4812      	ldr	r0, [pc, #72]	; (8005f3c <connect_receiver+0x80>)
 8005ef4:	f006 f91e 	bl	800c134 <HAL_UART_Init>
			HAL_Delay(10);
 8005ef8:	200a      	movs	r0, #10
 8005efa:	f001 fa1d 	bl	8007338 <HAL_Delay>
			HAL_UART_Receive_DMA(&huart2, (uint8_t *)buffer,25);
 8005efe:	2219      	movs	r2, #25
 8005f00:	490d      	ldr	r1, [pc, #52]	; (8005f38 <connect_receiver+0x7c>)
 8005f02:	480e      	ldr	r0, [pc, #56]	; (8005f3c <connect_receiver+0x80>)
 8005f04:	f006 faa2 	bl	800c44c <HAL_UART_Receive_DMA>
			HAL_Delay(100);
 8005f08:	2064      	movs	r0, #100	; 0x64
 8005f0a:	f001 fa15 	bl	8007338 <HAL_Delay>
			receiver_connected=0;
 8005f0e:	2300      	movs	r3, #0
 8005f10:	71fb      	strb	r3, [r7, #7]
 8005f12:	e009      	b.n	8005f28 <connect_receiver+0x6c>
		}
		else if (buffer[0]==15 && buffer[23]==0){
 8005f14:	4b08      	ldr	r3, [pc, #32]	; (8005f38 <connect_receiver+0x7c>)
 8005f16:	781b      	ldrb	r3, [r3, #0]
 8005f18:	2b0f      	cmp	r3, #15
 8005f1a:	d105      	bne.n	8005f28 <connect_receiver+0x6c>
 8005f1c:	4b06      	ldr	r3, [pc, #24]	; (8005f38 <connect_receiver+0x7c>)
 8005f1e:	7ddb      	ldrb	r3, [r3, #23]
 8005f20:	2b00      	cmp	r3, #0
 8005f22:	d101      	bne.n	8005f28 <connect_receiver+0x6c>
			receiver_connected=1;
 8005f24:	2301      	movs	r3, #1
 8005f26:	71fb      	strb	r3, [r7, #7]
	while(!receiver_connected){
 8005f28:	79fb      	ldrb	r3, [r7, #7]
 8005f2a:	2b00      	cmp	r3, #0
 8005f2c:	d0cc      	beq.n	8005ec8 <connect_receiver+0xc>
		}
	}
	return 0;
 8005f2e:	2300      	movs	r3, #0
}
 8005f30:	4618      	mov	r0, r3
 8005f32:	3708      	adds	r7, #8
 8005f34:	46bd      	mov	sp, r7
 8005f36:	bd80      	pop	{r7, pc}
 8005f38:	200008f4 	.word	0x200008f4
 8005f3c:	20000558 	.word	0x20000558

08005f40 <decode_receiver>:

int decode_receiver()
{
 8005f40:	b480      	push	{r7}
 8005f42:	af00      	add	r7, sp, #0
	if(buffer[0]==15){
 8005f44:	4b7a      	ldr	r3, [pc, #488]	; (8006130 <decode_receiver+0x1f0>)
 8005f46:	781b      	ldrb	r3, [r3, #0]
 8005f48:	2b0f      	cmp	r3, #15
 8005f4a:	f040 80e9 	bne.w	8006120 <decode_receiver+0x1e0>
		_channels[0]  = ((buffer[1]    |buffer[2]<<8)                 & 0x07FF);
 8005f4e:	4b78      	ldr	r3, [pc, #480]	; (8006130 <decode_receiver+0x1f0>)
 8005f50:	785b      	ldrb	r3, [r3, #1]
 8005f52:	461a      	mov	r2, r3
 8005f54:	4b76      	ldr	r3, [pc, #472]	; (8006130 <decode_receiver+0x1f0>)
 8005f56:	789b      	ldrb	r3, [r3, #2]
 8005f58:	021b      	lsls	r3, r3, #8
 8005f5a:	4313      	orrs	r3, r2
 8005f5c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005f60:	4a74      	ldr	r2, [pc, #464]	; (8006134 <decode_receiver+0x1f4>)
 8005f62:	6013      	str	r3, [r2, #0]
		_channels[1]  = ((buffer[2]>>3 |buffer[3]<<5)                 & 0x07FF);
 8005f64:	4b72      	ldr	r3, [pc, #456]	; (8006130 <decode_receiver+0x1f0>)
 8005f66:	789b      	ldrb	r3, [r3, #2]
 8005f68:	08db      	lsrs	r3, r3, #3
 8005f6a:	b2db      	uxtb	r3, r3
 8005f6c:	461a      	mov	r2, r3
 8005f6e:	4b70      	ldr	r3, [pc, #448]	; (8006130 <decode_receiver+0x1f0>)
 8005f70:	78db      	ldrb	r3, [r3, #3]
 8005f72:	015b      	lsls	r3, r3, #5
 8005f74:	4313      	orrs	r3, r2
 8005f76:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005f7a:	4a6e      	ldr	r2, [pc, #440]	; (8006134 <decode_receiver+0x1f4>)
 8005f7c:	6053      	str	r3, [r2, #4]
		_channels[2]  = ((buffer[3]>>6 |buffer[4]<<2 |buffer[5]<<10)  & 0x07FF)/2+1000;
 8005f7e:	4b6c      	ldr	r3, [pc, #432]	; (8006130 <decode_receiver+0x1f0>)
 8005f80:	78db      	ldrb	r3, [r3, #3]
 8005f82:	099b      	lsrs	r3, r3, #6
 8005f84:	b2db      	uxtb	r3, r3
 8005f86:	461a      	mov	r2, r3
 8005f88:	4b69      	ldr	r3, [pc, #420]	; (8006130 <decode_receiver+0x1f0>)
 8005f8a:	791b      	ldrb	r3, [r3, #4]
 8005f8c:	009b      	lsls	r3, r3, #2
 8005f8e:	431a      	orrs	r2, r3
 8005f90:	4b67      	ldr	r3, [pc, #412]	; (8006130 <decode_receiver+0x1f0>)
 8005f92:	795b      	ldrb	r3, [r3, #5]
 8005f94:	029b      	lsls	r3, r3, #10
 8005f96:	4313      	orrs	r3, r2
 8005f98:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005f9c:	0fda      	lsrs	r2, r3, #31
 8005f9e:	4413      	add	r3, r2
 8005fa0:	105b      	asrs	r3, r3, #1
 8005fa2:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8005fa6:	4a63      	ldr	r2, [pc, #396]	; (8006134 <decode_receiver+0x1f4>)
 8005fa8:	6093      	str	r3, [r2, #8]
		_channels[3]  = ((buffer[5]>>1 |buffer[6]<<7)                 & 0x07FF);
 8005faa:	4b61      	ldr	r3, [pc, #388]	; (8006130 <decode_receiver+0x1f0>)
 8005fac:	795b      	ldrb	r3, [r3, #5]
 8005fae:	085b      	lsrs	r3, r3, #1
 8005fb0:	b2db      	uxtb	r3, r3
 8005fb2:	461a      	mov	r2, r3
 8005fb4:	4b5e      	ldr	r3, [pc, #376]	; (8006130 <decode_receiver+0x1f0>)
 8005fb6:	799b      	ldrb	r3, [r3, #6]
 8005fb8:	01db      	lsls	r3, r3, #7
 8005fba:	4313      	orrs	r3, r2
 8005fbc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005fc0:	4a5c      	ldr	r2, [pc, #368]	; (8006134 <decode_receiver+0x1f4>)
 8005fc2:	60d3      	str	r3, [r2, #12]
		_channels[4]  = ((buffer[6]>>4 |buffer[7]<<4)                 & 0x07FF);
 8005fc4:	4b5a      	ldr	r3, [pc, #360]	; (8006130 <decode_receiver+0x1f0>)
 8005fc6:	799b      	ldrb	r3, [r3, #6]
 8005fc8:	091b      	lsrs	r3, r3, #4
 8005fca:	b2db      	uxtb	r3, r3
 8005fcc:	461a      	mov	r2, r3
 8005fce:	4b58      	ldr	r3, [pc, #352]	; (8006130 <decode_receiver+0x1f0>)
 8005fd0:	79db      	ldrb	r3, [r3, #7]
 8005fd2:	011b      	lsls	r3, r3, #4
 8005fd4:	4313      	orrs	r3, r2
 8005fd6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005fda:	4a56      	ldr	r2, [pc, #344]	; (8006134 <decode_receiver+0x1f4>)
 8005fdc:	6113      	str	r3, [r2, #16]
		_channels[5]  = ((buffer[7]>>7 |buffer[8]<<1 |buffer[9]<<9)   & 0x07FF);
 8005fde:	4b54      	ldr	r3, [pc, #336]	; (8006130 <decode_receiver+0x1f0>)
 8005fe0:	79db      	ldrb	r3, [r3, #7]
 8005fe2:	09db      	lsrs	r3, r3, #7
 8005fe4:	b2db      	uxtb	r3, r3
 8005fe6:	461a      	mov	r2, r3
 8005fe8:	4b51      	ldr	r3, [pc, #324]	; (8006130 <decode_receiver+0x1f0>)
 8005fea:	7a1b      	ldrb	r3, [r3, #8]
 8005fec:	005b      	lsls	r3, r3, #1
 8005fee:	431a      	orrs	r2, r3
 8005ff0:	4b4f      	ldr	r3, [pc, #316]	; (8006130 <decode_receiver+0x1f0>)
 8005ff2:	7a5b      	ldrb	r3, [r3, #9]
 8005ff4:	025b      	lsls	r3, r3, #9
 8005ff6:	4313      	orrs	r3, r2
 8005ff8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005ffc:	4a4d      	ldr	r2, [pc, #308]	; (8006134 <decode_receiver+0x1f4>)
 8005ffe:	6153      	str	r3, [r2, #20]
		_channels[6]  = ((buffer[9]>>2 |buffer[10]<<6)                & 0x07FF);
 8006000:	4b4b      	ldr	r3, [pc, #300]	; (8006130 <decode_receiver+0x1f0>)
 8006002:	7a5b      	ldrb	r3, [r3, #9]
 8006004:	089b      	lsrs	r3, r3, #2
 8006006:	b2db      	uxtb	r3, r3
 8006008:	461a      	mov	r2, r3
 800600a:	4b49      	ldr	r3, [pc, #292]	; (8006130 <decode_receiver+0x1f0>)
 800600c:	7a9b      	ldrb	r3, [r3, #10]
 800600e:	019b      	lsls	r3, r3, #6
 8006010:	4313      	orrs	r3, r2
 8006012:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006016:	4a47      	ldr	r2, [pc, #284]	; (8006134 <decode_receiver+0x1f4>)
 8006018:	6193      	str	r3, [r2, #24]
		_channels[7]  = ((buffer[10]>>5|buffer[11]<<3)                & 0x07FF);
 800601a:	4b45      	ldr	r3, [pc, #276]	; (8006130 <decode_receiver+0x1f0>)
 800601c:	7a9b      	ldrb	r3, [r3, #10]
 800601e:	095b      	lsrs	r3, r3, #5
 8006020:	b2db      	uxtb	r3, r3
 8006022:	461a      	mov	r2, r3
 8006024:	4b42      	ldr	r3, [pc, #264]	; (8006130 <decode_receiver+0x1f0>)
 8006026:	7adb      	ldrb	r3, [r3, #11]
 8006028:	00db      	lsls	r3, r3, #3
 800602a:	4313      	orrs	r3, r2
 800602c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006030:	4a40      	ldr	r2, [pc, #256]	; (8006134 <decode_receiver+0x1f4>)
 8006032:	61d3      	str	r3, [r2, #28]
		_channels[8]  = ((buffer[12]   |buffer[13]<<8)                & 0x07FF);
 8006034:	4b3e      	ldr	r3, [pc, #248]	; (8006130 <decode_receiver+0x1f0>)
 8006036:	7b1b      	ldrb	r3, [r3, #12]
 8006038:	461a      	mov	r2, r3
 800603a:	4b3d      	ldr	r3, [pc, #244]	; (8006130 <decode_receiver+0x1f0>)
 800603c:	7b5b      	ldrb	r3, [r3, #13]
 800603e:	021b      	lsls	r3, r3, #8
 8006040:	4313      	orrs	r3, r2
 8006042:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006046:	4a3b      	ldr	r2, [pc, #236]	; (8006134 <decode_receiver+0x1f4>)
 8006048:	6213      	str	r3, [r2, #32]
		_channels[9]  = ((buffer[13]>>3|buffer[14]<<5)                & 0x07FF);
 800604a:	4b39      	ldr	r3, [pc, #228]	; (8006130 <decode_receiver+0x1f0>)
 800604c:	7b5b      	ldrb	r3, [r3, #13]
 800604e:	08db      	lsrs	r3, r3, #3
 8006050:	b2db      	uxtb	r3, r3
 8006052:	461a      	mov	r2, r3
 8006054:	4b36      	ldr	r3, [pc, #216]	; (8006130 <decode_receiver+0x1f0>)
 8006056:	7b9b      	ldrb	r3, [r3, #14]
 8006058:	015b      	lsls	r3, r3, #5
 800605a:	4313      	orrs	r3, r2
 800605c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006060:	4a34      	ldr	r2, [pc, #208]	; (8006134 <decode_receiver+0x1f4>)
 8006062:	6253      	str	r3, [r2, #36]	; 0x24
		_channels[10] = ((buffer[14]>>6|buffer[15]<<2|buffer[16]<<10) & 0x07FF);
 8006064:	4b32      	ldr	r3, [pc, #200]	; (8006130 <decode_receiver+0x1f0>)
 8006066:	7b9b      	ldrb	r3, [r3, #14]
 8006068:	099b      	lsrs	r3, r3, #6
 800606a:	b2db      	uxtb	r3, r3
 800606c:	461a      	mov	r2, r3
 800606e:	4b30      	ldr	r3, [pc, #192]	; (8006130 <decode_receiver+0x1f0>)
 8006070:	7bdb      	ldrb	r3, [r3, #15]
 8006072:	009b      	lsls	r3, r3, #2
 8006074:	431a      	orrs	r2, r3
 8006076:	4b2e      	ldr	r3, [pc, #184]	; (8006130 <decode_receiver+0x1f0>)
 8006078:	7c1b      	ldrb	r3, [r3, #16]
 800607a:	029b      	lsls	r3, r3, #10
 800607c:	4313      	orrs	r3, r2
 800607e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006082:	4a2c      	ldr	r2, [pc, #176]	; (8006134 <decode_receiver+0x1f4>)
 8006084:	6293      	str	r3, [r2, #40]	; 0x28
		_channels[11] = ((buffer[16]>>1|buffer[17]<<7)                & 0x07FF);
 8006086:	4b2a      	ldr	r3, [pc, #168]	; (8006130 <decode_receiver+0x1f0>)
 8006088:	7c1b      	ldrb	r3, [r3, #16]
 800608a:	085b      	lsrs	r3, r3, #1
 800608c:	b2db      	uxtb	r3, r3
 800608e:	461a      	mov	r2, r3
 8006090:	4b27      	ldr	r3, [pc, #156]	; (8006130 <decode_receiver+0x1f0>)
 8006092:	7c5b      	ldrb	r3, [r3, #17]
 8006094:	01db      	lsls	r3, r3, #7
 8006096:	4313      	orrs	r3, r2
 8006098:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800609c:	4a25      	ldr	r2, [pc, #148]	; (8006134 <decode_receiver+0x1f4>)
 800609e:	62d3      	str	r3, [r2, #44]	; 0x2c
		_channels[12] = ((buffer[17]>>4|buffer[18]<<4)                & 0x07FF);
 80060a0:	4b23      	ldr	r3, [pc, #140]	; (8006130 <decode_receiver+0x1f0>)
 80060a2:	7c5b      	ldrb	r3, [r3, #17]
 80060a4:	091b      	lsrs	r3, r3, #4
 80060a6:	b2db      	uxtb	r3, r3
 80060a8:	461a      	mov	r2, r3
 80060aa:	4b21      	ldr	r3, [pc, #132]	; (8006130 <decode_receiver+0x1f0>)
 80060ac:	7c9b      	ldrb	r3, [r3, #18]
 80060ae:	011b      	lsls	r3, r3, #4
 80060b0:	4313      	orrs	r3, r2
 80060b2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060b6:	4a1f      	ldr	r2, [pc, #124]	; (8006134 <decode_receiver+0x1f4>)
 80060b8:	6313      	str	r3, [r2, #48]	; 0x30
		_channels[13] = ((buffer[18]>>7|buffer[19]<<1|buffer[20]<<9)  & 0x07FF);
 80060ba:	4b1d      	ldr	r3, [pc, #116]	; (8006130 <decode_receiver+0x1f0>)
 80060bc:	7c9b      	ldrb	r3, [r3, #18]
 80060be:	09db      	lsrs	r3, r3, #7
 80060c0:	b2db      	uxtb	r3, r3
 80060c2:	461a      	mov	r2, r3
 80060c4:	4b1a      	ldr	r3, [pc, #104]	; (8006130 <decode_receiver+0x1f0>)
 80060c6:	7cdb      	ldrb	r3, [r3, #19]
 80060c8:	005b      	lsls	r3, r3, #1
 80060ca:	431a      	orrs	r2, r3
 80060cc:	4b18      	ldr	r3, [pc, #96]	; (8006130 <decode_receiver+0x1f0>)
 80060ce:	7d1b      	ldrb	r3, [r3, #20]
 80060d0:	025b      	lsls	r3, r3, #9
 80060d2:	4313      	orrs	r3, r2
 80060d4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060d8:	4a16      	ldr	r2, [pc, #88]	; (8006134 <decode_receiver+0x1f4>)
 80060da:	6353      	str	r3, [r2, #52]	; 0x34
		_channels[14] = ((buffer[20]>>2|buffer[21]<<6)                & 0x07FF);
 80060dc:	4b14      	ldr	r3, [pc, #80]	; (8006130 <decode_receiver+0x1f0>)
 80060de:	7d1b      	ldrb	r3, [r3, #20]
 80060e0:	089b      	lsrs	r3, r3, #2
 80060e2:	b2db      	uxtb	r3, r3
 80060e4:	461a      	mov	r2, r3
 80060e6:	4b12      	ldr	r3, [pc, #72]	; (8006130 <decode_receiver+0x1f0>)
 80060e8:	7d5b      	ldrb	r3, [r3, #21]
 80060ea:	019b      	lsls	r3, r3, #6
 80060ec:	4313      	orrs	r3, r2
 80060ee:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060f2:	4a10      	ldr	r2, [pc, #64]	; (8006134 <decode_receiver+0x1f4>)
 80060f4:	6393      	str	r3, [r2, #56]	; 0x38
		_channels[15] = ((buffer[21]>>5|buffer[22]<<3)                & 0x07FF);
 80060f6:	4b0e      	ldr	r3, [pc, #56]	; (8006130 <decode_receiver+0x1f0>)
 80060f8:	7d5b      	ldrb	r3, [r3, #21]
 80060fa:	095b      	lsrs	r3, r3, #5
 80060fc:	b2db      	uxtb	r3, r3
 80060fe:	461a      	mov	r2, r3
 8006100:	4b0b      	ldr	r3, [pc, #44]	; (8006130 <decode_receiver+0x1f0>)
 8006102:	7d9b      	ldrb	r3, [r3, #22]
 8006104:	00db      	lsls	r3, r3, #3
 8006106:	4313      	orrs	r3, r2
 8006108:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800610c:	4a09      	ldr	r2, [pc, #36]	; (8006134 <decode_receiver+0x1f4>)
 800610e:	63d3      	str	r3, [r2, #60]	; 0x3c

		if(buffer[23]!=0){
 8006110:	4b07      	ldr	r3, [pc, #28]	; (8006130 <decode_receiver+0x1f0>)
 8006112:	7ddb      	ldrb	r3, [r3, #23]
 8006114:	2b00      	cmp	r3, #0
 8006116:	d001      	beq.n	800611c <decode_receiver+0x1dc>
			return 1;
 8006118:	2301      	movs	r3, #1
 800611a:	e003      	b.n	8006124 <decode_receiver+0x1e4>
			}
		else
			return 0;
 800611c:	2300      	movs	r3, #0
 800611e:	e001      	b.n	8006124 <decode_receiver+0x1e4>
}
	return -1;
 8006120:	f04f 33ff 	mov.w	r3, #4294967295
}
 8006124:	4618      	mov	r0, r3
 8006126:	46bd      	mov	sp, r7
 8006128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800612c:	4770      	bx	lr
 800612e:	bf00      	nop
 8006130:	200008f4 	.word	0x200008f4
 8006134:	20000910 	.word	0x20000910

08006138 <startup_handler>:

int startup_handler(){
 8006138:	b580      	push	{r7, lr}
 800613a:	b082      	sub	sp, #8
 800613c:	af00      	add	r7, sp, #0
	uint8_t startup_flag=1;
 800613e:	2301      	movs	r3, #1
 8006140:	71fb      	strb	r3, [r7, #7]

	while(startup_flag){
 8006142:	e0d4      	b.n	80062ee <startup_handler+0x1b6>
		if(!decode_receiver()){
 8006144:	f7ff fefc 	bl	8005f40 <decode_receiver>
 8006148:	4603      	mov	r3, r0
 800614a:	2b00      	cmp	r3, #0
 800614c:	f040 80cd 	bne.w	80062ea <startup_handler+0x1b2>
			red_led_off();
 8006150:	f7fb fc76 	bl	8001a40 <red_led_off>
			if(_channels[10]<1000){
 8006154:	4b6a      	ldr	r3, [pc, #424]	; (8006300 <startup_handler+0x1c8>)
 8006156:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006158:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800615c:	f280 80c7 	bge.w	80062ee <startup_handler+0x1b6>
				if(_channels[3]>1800 && _channels[9]<1000){
 8006160:	4b67      	ldr	r3, [pc, #412]	; (8006300 <startup_handler+0x1c8>)
 8006162:	68db      	ldr	r3, [r3, #12]
 8006164:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8006168:	dd15      	ble.n	8006196 <startup_handler+0x5e>
 800616a:	4b65      	ldr	r3, [pc, #404]	; (8006300 <startup_handler+0x1c8>)
 800616c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800616e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006172:	da10      	bge.n	8006196 <startup_handler+0x5e>
					HAL_GPIO_WritePin(GPIOB, LED2_Pin, SET);
 8006174:	2201      	movs	r2, #1
 8006176:	2180      	movs	r1, #128	; 0x80
 8006178:	4862      	ldr	r0, [pc, #392]	; (8006304 <startup_handler+0x1cc>)
 800617a:	f002 ff55 	bl	8009028 <HAL_GPIO_WritePin>
					HAL_Delay(2000);
 800617e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8006182:	f001 f8d9 	bl	8007338 <HAL_Delay>
					calibrate_mpu6050();
 8006186:	f7fe ff89 	bl	800509c <calibrate_mpu6050>

					HAL_GPIO_WritePin(GPIOB, LED2_Pin, RESET);
 800618a:	2200      	movs	r2, #0
 800618c:	2180      	movs	r1, #128	; 0x80
 800618e:	485d      	ldr	r0, [pc, #372]	; (8006304 <startup_handler+0x1cc>)
 8006190:	f002 ff4a 	bl	8009028 <HAL_GPIO_WritePin>
 8006194:	e0ab      	b.n	80062ee <startup_handler+0x1b6>
				}
				else if(_channels[3]<100 && _channels[9]<1000){
 8006196:	4b5a      	ldr	r3, [pc, #360]	; (8006300 <startup_handler+0x1c8>)
 8006198:	68db      	ldr	r3, [r3, #12]
 800619a:	2b63      	cmp	r3, #99	; 0x63
 800619c:	dc59      	bgt.n	8006252 <startup_handler+0x11a>
 800619e:	4b58      	ldr	r3, [pc, #352]	; (8006300 <startup_handler+0x1c8>)
 80061a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061a2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80061a6:	da54      	bge.n	8006252 <startup_handler+0x11a>
					read_calib_value(Sector15_Address,6,imu_calibration_values);
 80061a8:	4a57      	ldr	r2, [pc, #348]	; (8006308 <startup_handler+0x1d0>)
 80061aa:	2106      	movs	r1, #6
 80061ac:	4857      	ldr	r0, [pc, #348]	; (800630c <startup_handler+0x1d4>)
 80061ae:	f7fc fb31 	bl	8002814 <read_calib_value>
					MPU6050_1.pitch_calibration_value=imu_calibration_values[0];
 80061b2:	4b55      	ldr	r3, [pc, #340]	; (8006308 <startup_handler+0x1d0>)
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	4618      	mov	r0, r3
 80061b8:	f7fa f992 	bl	80004e0 <__aeabi_f2d>
 80061bc:	4602      	mov	r2, r0
 80061be:	460b      	mov	r3, r1
 80061c0:	4953      	ldr	r1, [pc, #332]	; (8006310 <startup_handler+0x1d8>)
 80061c2:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
					MPU6050_1.roll_calibration_value=imu_calibration_values[1];
 80061c6:	4b50      	ldr	r3, [pc, #320]	; (8006308 <startup_handler+0x1d0>)
 80061c8:	685b      	ldr	r3, [r3, #4]
 80061ca:	4618      	mov	r0, r3
 80061cc:	f7fa f988 	bl	80004e0 <__aeabi_f2d>
 80061d0:	4602      	mov	r2, r0
 80061d2:	460b      	mov	r3, r1
 80061d4:	494e      	ldr	r1, [pc, #312]	; (8006310 <startup_handler+0x1d8>)
 80061d6:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
					MPU6050_1.yaw_calibration_value=imu_calibration_values[2];
 80061da:	4b4b      	ldr	r3, [pc, #300]	; (8006308 <startup_handler+0x1d0>)
 80061dc:	689b      	ldr	r3, [r3, #8]
 80061de:	4618      	mov	r0, r3
 80061e0:	f7fa f97e 	bl	80004e0 <__aeabi_f2d>
 80061e4:	4602      	mov	r2, r0
 80061e6:	460b      	mov	r3, r1
 80061e8:	4949      	ldr	r1, [pc, #292]	; (8006310 <startup_handler+0x1d8>)
 80061ea:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
					MPU6050_1.Accel_X_Raw_Offset=imu_calibration_values[3];
 80061ee:	4b46      	ldr	r3, [pc, #280]	; (8006308 <startup_handler+0x1d0>)
 80061f0:	68db      	ldr	r3, [r3, #12]
 80061f2:	4a47      	ldr	r2, [pc, #284]	; (8006310 <startup_handler+0x1d8>)
 80061f4:	6413      	str	r3, [r2, #64]	; 0x40
					MPU6050_1.Accel_Y_Raw_Offset=imu_calibration_values[4];
 80061f6:	4b44      	ldr	r3, [pc, #272]	; (8006308 <startup_handler+0x1d0>)
 80061f8:	691b      	ldr	r3, [r3, #16]
 80061fa:	4a45      	ldr	r2, [pc, #276]	; (8006310 <startup_handler+0x1d8>)
 80061fc:	6453      	str	r3, [r2, #68]	; 0x44
					MPU6050_1.Accel_Z_Raw_Rate=imu_calibration_values[5];
 80061fe:	4b42      	ldr	r3, [pc, #264]	; (8006308 <startup_handler+0x1d0>)
 8006200:	695b      	ldr	r3, [r3, #20]
 8006202:	4a43      	ldr	r2, [pc, #268]	; (8006310 <startup_handler+0x1d8>)
 8006204:	6493      	str	r3, [r2, #72]	; 0x48

					read_calib_value(Sector14_Address,6,imu_calibration_values);
 8006206:	4a40      	ldr	r2, [pc, #256]	; (8006308 <startup_handler+0x1d0>)
 8006208:	2106      	movs	r1, #6
 800620a:	4842      	ldr	r0, [pc, #264]	; (8006314 <startup_handler+0x1dc>)
 800620c:	f7fc fb02 	bl	8002814 <read_calib_value>
					Xsf=imu_calibration_values[0];
 8006210:	4b3d      	ldr	r3, [pc, #244]	; (8006308 <startup_handler+0x1d0>)
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	4a40      	ldr	r2, [pc, #256]	; (8006318 <startup_handler+0x1e0>)
 8006216:	6013      	str	r3, [r2, #0]
					Ysf=imu_calibration_values[1];
 8006218:	4b3b      	ldr	r3, [pc, #236]	; (8006308 <startup_handler+0x1d0>)
 800621a:	685b      	ldr	r3, [r3, #4]
 800621c:	4a3f      	ldr	r2, [pc, #252]	; (800631c <startup_handler+0x1e4>)
 800621e:	6013      	str	r3, [r2, #0]
					Xoff=imu_calibration_values[2];
 8006220:	4b39      	ldr	r3, [pc, #228]	; (8006308 <startup_handler+0x1d0>)
 8006222:	689b      	ldr	r3, [r3, #8]
 8006224:	4a3e      	ldr	r2, [pc, #248]	; (8006320 <startup_handler+0x1e8>)
 8006226:	6013      	str	r3, [r2, #0]
					Yoff=imu_calibration_values[3];
 8006228:	4b37      	ldr	r3, [pc, #220]	; (8006308 <startup_handler+0x1d0>)
 800622a:	68db      	ldr	r3, [r3, #12]
 800622c:	4a3d      	ldr	r2, [pc, #244]	; (8006324 <startup_handler+0x1ec>)
 800622e:	6013      	str	r3, [r2, #0]
					Zsf=imu_calibration_values[4];
 8006230:	4b35      	ldr	r3, [pc, #212]	; (8006308 <startup_handler+0x1d0>)
 8006232:	691b      	ldr	r3, [r3, #16]
 8006234:	4a3c      	ldr	r2, [pc, #240]	; (8006328 <startup_handler+0x1f0>)
 8006236:	6013      	str	r3, [r2, #0]
					Zoff=imu_calibration_values[5];
 8006238:	4b33      	ldr	r3, [pc, #204]	; (8006308 <startup_handler+0x1d0>)
 800623a:	695b      	ldr	r3, [r3, #20]
 800623c:	4a3b      	ldr	r2, [pc, #236]	; (800632c <startup_handler+0x1f4>)
 800623e:	6013      	str	r3, [r2, #0]

					while(compass_connect());
 8006240:	bf00      	nop
 8006242:	f7fb fb01 	bl	8001848 <compass_connect>
 8006246:	4603      	mov	r3, r0
 8006248:	2b00      	cmp	r3, #0
 800624a:	d1fa      	bne.n	8006242 <startup_handler+0x10a>
					startup_flag=0;
 800624c:	2300      	movs	r3, #0
 800624e:	71fb      	strb	r3, [r7, #7]
 8006250:	e04d      	b.n	80062ee <startup_handler+0x1b6>

				}
				else if( _channels[1]>1800 && _channels[0]>1800){
 8006252:	4b2b      	ldr	r3, [pc, #172]	; (8006300 <startup_handler+0x1c8>)
 8006254:	685b      	ldr	r3, [r3, #4]
 8006256:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 800625a:	dd48      	ble.n	80062ee <startup_handler+0x1b6>
 800625c:	4b28      	ldr	r3, [pc, #160]	; (8006300 <startup_handler+0x1c8>)
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8006264:	dd43      	ble.n	80062ee <startup_handler+0x1b6>
					read_calib_value(Sector15_Address,6,imu_calibration_values);
 8006266:	4a28      	ldr	r2, [pc, #160]	; (8006308 <startup_handler+0x1d0>)
 8006268:	2106      	movs	r1, #6
 800626a:	4828      	ldr	r0, [pc, #160]	; (800630c <startup_handler+0x1d4>)
 800626c:	f7fc fad2 	bl	8002814 <read_calib_value>
					MPU6050_1.pitch_calibration_value=imu_calibration_values[0];
 8006270:	4b25      	ldr	r3, [pc, #148]	; (8006308 <startup_handler+0x1d0>)
 8006272:	681b      	ldr	r3, [r3, #0]
 8006274:	4618      	mov	r0, r3
 8006276:	f7fa f933 	bl	80004e0 <__aeabi_f2d>
 800627a:	4602      	mov	r2, r0
 800627c:	460b      	mov	r3, r1
 800627e:	4924      	ldr	r1, [pc, #144]	; (8006310 <startup_handler+0x1d8>)
 8006280:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
					MPU6050_1.roll_calibration_value=imu_calibration_values[1];
 8006284:	4b20      	ldr	r3, [pc, #128]	; (8006308 <startup_handler+0x1d0>)
 8006286:	685b      	ldr	r3, [r3, #4]
 8006288:	4618      	mov	r0, r3
 800628a:	f7fa f929 	bl	80004e0 <__aeabi_f2d>
 800628e:	4602      	mov	r2, r0
 8006290:	460b      	mov	r3, r1
 8006292:	491f      	ldr	r1, [pc, #124]	; (8006310 <startup_handler+0x1d8>)
 8006294:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
					MPU6050_1.yaw_calibration_value=imu_calibration_values[2];
 8006298:	4b1b      	ldr	r3, [pc, #108]	; (8006308 <startup_handler+0x1d0>)
 800629a:	689b      	ldr	r3, [r3, #8]
 800629c:	4618      	mov	r0, r3
 800629e:	f7fa f91f 	bl	80004e0 <__aeabi_f2d>
 80062a2:	4602      	mov	r2, r0
 80062a4:	460b      	mov	r3, r1
 80062a6:	491a      	ldr	r1, [pc, #104]	; (8006310 <startup_handler+0x1d8>)
 80062a8:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
					MPU6050_1.Accel_X_Raw_Offset=imu_calibration_values[3];
 80062ac:	4b16      	ldr	r3, [pc, #88]	; (8006308 <startup_handler+0x1d0>)
 80062ae:	68db      	ldr	r3, [r3, #12]
 80062b0:	4a17      	ldr	r2, [pc, #92]	; (8006310 <startup_handler+0x1d8>)
 80062b2:	6413      	str	r3, [r2, #64]	; 0x40
					MPU6050_1.Accel_Y_Raw_Offset=imu_calibration_values[4];
 80062b4:	4b14      	ldr	r3, [pc, #80]	; (8006308 <startup_handler+0x1d0>)
 80062b6:	691b      	ldr	r3, [r3, #16]
 80062b8:	4a15      	ldr	r2, [pc, #84]	; (8006310 <startup_handler+0x1d8>)
 80062ba:	6453      	str	r3, [r2, #68]	; 0x44
					MPU6050_1.Accel_Z_Raw_Rate=imu_calibration_values[5];
 80062bc:	4b12      	ldr	r3, [pc, #72]	; (8006308 <startup_handler+0x1d0>)
 80062be:	695b      	ldr	r3, [r3, #20]
 80062c0:	4a13      	ldr	r2, [pc, #76]	; (8006310 <startup_handler+0x1d8>)
 80062c2:	6493      	str	r3, [r2, #72]	; 0x48

					while(compass_connect());
 80062c4:	bf00      	nop
 80062c6:	f7fb fabf 	bl	8001848 <compass_connect>
 80062ca:	4603      	mov	r3, r0
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	d1fa      	bne.n	80062c6 <startup_handler+0x18e>
					HAL_GPIO_WritePin(GPIOB, LED2_Pin, SET);
 80062d0:	2201      	movs	r2, #1
 80062d2:	2180      	movs	r1, #128	; 0x80
 80062d4:	480b      	ldr	r0, [pc, #44]	; (8006304 <startup_handler+0x1cc>)
 80062d6:	f002 fea7 	bl	8009028 <HAL_GPIO_WritePin>
					compas_calibrate();
 80062da:	f7fb f961 	bl	80015a0 <compas_calibrate>
					HAL_GPIO_WritePin(GPIOB, LED2_Pin, RESET);
 80062de:	2200      	movs	r2, #0
 80062e0:	2180      	movs	r1, #128	; 0x80
 80062e2:	4808      	ldr	r0, [pc, #32]	; (8006304 <startup_handler+0x1cc>)
 80062e4:	f002 fea0 	bl	8009028 <HAL_GPIO_WritePin>
 80062e8:	e001      	b.n	80062ee <startup_handler+0x1b6>

				}

			}
		}
		else red_led_on();
 80062ea:	f7fb fb9d 	bl	8001a28 <red_led_on>
	while(startup_flag){
 80062ee:	79fb      	ldrb	r3, [r7, #7]
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	f47f af27 	bne.w	8006144 <startup_handler+0xc>
	}
	return 0;
 80062f6:	2300      	movs	r3, #0
}
 80062f8:	4618      	mov	r0, r3
 80062fa:	3708      	adds	r7, #8
 80062fc:	46bd      	mov	sp, r7
 80062fe:	bd80      	pop	{r7, pc}
 8006300:	20000910 	.word	0x20000910
 8006304:	40020400 	.word	0x40020400
 8006308:	20000958 	.word	0x20000958
 800630c:	08160000 	.word	0x08160000
 8006310:	200007e8 	.word	0x200007e8
 8006314:	08140000 	.word	0x08140000
 8006318:	20000a4c 	.word	0x20000a4c
 800631c:	20000a50 	.word	0x20000a50
 8006320:	20000a54 	.word	0x20000a54
 8006324:	20000a58 	.word	0x20000a58
 8006328:	20000a5c 	.word	0x20000a5c
 800632c:	20000a60 	.word	0x20000a60

08006330 <arm_handler>:


int arm_handler(){
 8006330:	b580      	push	{r7, lr}
 8006332:	b082      	sub	sp, #8
 8006334:	af00      	add	r7, sp, #0
	uint8_t arm_flag=0;
 8006336:	2300      	movs	r3, #0
 8006338:	71fb      	strb	r3, [r7, #7]
	while(!arm_flag){
 800633a:	e044      	b.n	80063c6 <arm_handler+0x96>
		if(!decode_receiver()){
 800633c:	f7ff fe00 	bl	8005f40 <decode_receiver>
 8006340:	4603      	mov	r3, r0
 8006342:	2b00      	cmp	r3, #0
 8006344:	d13d      	bne.n	80063c2 <arm_handler+0x92>
			red_led_off();
 8006346:	f7fb fb7b 	bl	8001a40 <red_led_off>
			if(_channels[2]<1100 && _channels[10]>1000){
 800634a:	4b23      	ldr	r3, [pc, #140]	; (80063d8 <arm_handler+0xa8>)
 800634c:	689b      	ldr	r3, [r3, #8]
 800634e:	f240 424b 	movw	r2, #1099	; 0x44b
 8006352:	4293      	cmp	r3, r2
 8006354:	dc32      	bgt.n	80063bc <arm_handler+0x8c>
 8006356:	4b20      	ldr	r3, [pc, #128]	; (80063d8 <arm_handler+0xa8>)
 8006358:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800635a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800635e:	dd2d      	ble.n	80063bc <arm_handler+0x8c>
				activate_motors();
 8006360:	f7ff f836 	bl	80053d0 <activate_motors>
				while(calibrate_esc_and_rc());
 8006364:	bf00      	nop
 8006366:	f7ff fd4f 	bl	8005e08 <calibrate_esc_and_rc>
 800636a:	4603      	mov	r3, r0
 800636c:	2b00      	cmp	r3, #0
 800636e:	d1fa      	bne.n	8006366 <arm_handler+0x36>
				while(1){
					if(!decode_receiver()){
 8006370:	f7ff fde6 	bl	8005f40 <decode_receiver>
 8006374:	4603      	mov	r3, r0
 8006376:	2b00      	cmp	r3, #0
 8006378:	d1fa      	bne.n	8006370 <arm_handler+0x40>
						if(_channels[2]<1100 && _channels[10]>1000 && (_channels[3]<1100 && _channels[3]>900) && _channels[9]<1000){
 800637a:	4b17      	ldr	r3, [pc, #92]	; (80063d8 <arm_handler+0xa8>)
 800637c:	689b      	ldr	r3, [r3, #8]
 800637e:	f240 424b 	movw	r2, #1099	; 0x44b
 8006382:	4293      	cmp	r3, r2
 8006384:	dc18      	bgt.n	80063b8 <arm_handler+0x88>
 8006386:	4b14      	ldr	r3, [pc, #80]	; (80063d8 <arm_handler+0xa8>)
 8006388:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800638a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800638e:	dd13      	ble.n	80063b8 <arm_handler+0x88>
 8006390:	4b11      	ldr	r3, [pc, #68]	; (80063d8 <arm_handler+0xa8>)
 8006392:	68db      	ldr	r3, [r3, #12]
 8006394:	f240 424b 	movw	r2, #1099	; 0x44b
 8006398:	4293      	cmp	r3, r2
 800639a:	dc0d      	bgt.n	80063b8 <arm_handler+0x88>
 800639c:	4b0e      	ldr	r3, [pc, #56]	; (80063d8 <arm_handler+0xa8>)
 800639e:	68db      	ldr	r3, [r3, #12]
 80063a0:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 80063a4:	dd08      	ble.n	80063b8 <arm_handler+0x88>
 80063a6:	4b0c      	ldr	r3, [pc, #48]	; (80063d8 <arm_handler+0xa8>)
 80063a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063aa:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80063ae:	da03      	bge.n	80063b8 <arm_handler+0x88>
							arm_flag=1;
 80063b0:	2301      	movs	r3, #1
 80063b2:	71fb      	strb	r3, [r7, #7]
							break;
 80063b4:	bf00      	nop
			if(_channels[2]<1100 && _channels[10]>1000){
 80063b6:	e006      	b.n	80063c6 <arm_handler+0x96>
						}
						else
							continue;
 80063b8:	bf00      	nop
					if(!decode_receiver()){
 80063ba:	e7d9      	b.n	8006370 <arm_handler+0x40>
				}


			}
			else
				arm_flag=0;
 80063bc:	2300      	movs	r3, #0
 80063be:	71fb      	strb	r3, [r7, #7]
 80063c0:	e001      	b.n	80063c6 <arm_handler+0x96>

		}
		else red_led_on();
 80063c2:	f7fb fb31 	bl	8001a28 <red_led_on>
	while(!arm_flag){
 80063c6:	79fb      	ldrb	r3, [r7, #7]
 80063c8:	2b00      	cmp	r3, #0
 80063ca:	d0b7      	beq.n	800633c <arm_handler+0xc>
	}
	return 0;
 80063cc:	2300      	movs	r3, #0
}
 80063ce:	4618      	mov	r0, r3
 80063d0:	3708      	adds	r7, #8
 80063d2:	46bd      	mov	sp, r7
 80063d4:	bd80      	pop	{r7, pc}
 80063d6:	bf00      	nop
 80063d8:	20000910 	.word	0x20000910

080063dc <altitude_hold>:

void altitude_hold(){
 80063dc:	b580      	push	{r7, lr}
 80063de:	af00      	add	r7, sp, #0

	if(!alt_hold_flag){
 80063e0:	4b58      	ldr	r3, [pc, #352]	; (8006544 <altitude_hold+0x168>)
 80063e2:	781b      	ldrb	r3, [r3, #0]
 80063e4:	2b00      	cmp	r3, #0
 80063e6:	d107      	bne.n	80063f8 <altitude_hold+0x1c>
		alt_hold_flag=1;
 80063e8:	4b56      	ldr	r3, [pc, #344]	; (8006544 <altitude_hold+0x168>)
 80063ea:	2201      	movs	r2, #1
 80063ec:	701a      	strb	r2, [r3, #0]
		alt_setpoint=baro_filter_output[0];
 80063ee:	4b56      	ldr	r3, [pc, #344]	; (8006548 <altitude_hold+0x16c>)
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	4a56      	ldr	r2, [pc, #344]	; (800654c <altitude_hold+0x170>)
 80063f4:	6013      	str	r3, [r2, #0]
		if(Calculated_Throttle3<1100) Calculated_Throttle3=1100;
		if(Calculated_Throttle3>1800) Calculated_Throttle3=1800;
		if(Calculated_Throttle4<1100) Calculated_Throttle4=1100;
		if(Calculated_Throttle4>1800) Calculated_Throttle4=1800;
	}
}
 80063f6:	e0a2      	b.n	800653e <altitude_hold+0x162>
		if(loop_counter%6==0 && loop_counter!=0){  //24'dü
 80063f8:	4b55      	ldr	r3, [pc, #340]	; (8006550 <altitude_hold+0x174>)
 80063fa:	6819      	ldr	r1, [r3, #0]
 80063fc:	4b55      	ldr	r3, [pc, #340]	; (8006554 <altitude_hold+0x178>)
 80063fe:	fba3 2301 	umull	r2, r3, r3, r1
 8006402:	089a      	lsrs	r2, r3, #2
 8006404:	4613      	mov	r3, r2
 8006406:	005b      	lsls	r3, r3, #1
 8006408:	4413      	add	r3, r2
 800640a:	005b      	lsls	r3, r3, #1
 800640c:	1aca      	subs	r2, r1, r3
 800640e:	2a00      	cmp	r2, #0
 8006410:	d105      	bne.n	800641e <altitude_hold+0x42>
 8006412:	4b4f      	ldr	r3, [pc, #316]	; (8006550 <altitude_hold+0x174>)
 8006414:	681b      	ldr	r3, [r3, #0]
 8006416:	2b00      	cmp	r3, #0
 8006418:	d001      	beq.n	800641e <altitude_hold+0x42>
			calculate_pid_altitude();
 800641a:	f7ff fa2b 	bl	8005874 <calculate_pid_altitude>
		Calculated_Throttle4-=Alt_Control;
 800641e:	4b4e      	ldr	r3, [pc, #312]	; (8006558 <altitude_hold+0x17c>)
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	ee07 3a90 	vmov	s15, r3
 8006426:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800642a:	4b4c      	ldr	r3, [pc, #304]	; (800655c <altitude_hold+0x180>)
 800642c:	edd3 7a00 	vldr	s15, [r3]
 8006430:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006434:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006438:	ee17 2a90 	vmov	r2, s15
 800643c:	4b46      	ldr	r3, [pc, #280]	; (8006558 <altitude_hold+0x17c>)
 800643e:	601a      	str	r2, [r3, #0]
		Calculated_Throttle3-=Alt_Control;
 8006440:	4b47      	ldr	r3, [pc, #284]	; (8006560 <altitude_hold+0x184>)
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	ee07 3a90 	vmov	s15, r3
 8006448:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800644c:	4b43      	ldr	r3, [pc, #268]	; (800655c <altitude_hold+0x180>)
 800644e:	edd3 7a00 	vldr	s15, [r3]
 8006452:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006456:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800645a:	ee17 2a90 	vmov	r2, s15
 800645e:	4b40      	ldr	r3, [pc, #256]	; (8006560 <altitude_hold+0x184>)
 8006460:	601a      	str	r2, [r3, #0]
		Calculated_Throttle2-=Alt_Control;
 8006462:	4b40      	ldr	r3, [pc, #256]	; (8006564 <altitude_hold+0x188>)
 8006464:	681b      	ldr	r3, [r3, #0]
 8006466:	ee07 3a90 	vmov	s15, r3
 800646a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800646e:	4b3b      	ldr	r3, [pc, #236]	; (800655c <altitude_hold+0x180>)
 8006470:	edd3 7a00 	vldr	s15, [r3]
 8006474:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006478:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800647c:	ee17 2a90 	vmov	r2, s15
 8006480:	4b38      	ldr	r3, [pc, #224]	; (8006564 <altitude_hold+0x188>)
 8006482:	601a      	str	r2, [r3, #0]
		Calculated_Throttle1-=Alt_Control;
 8006484:	4b38      	ldr	r3, [pc, #224]	; (8006568 <altitude_hold+0x18c>)
 8006486:	681b      	ldr	r3, [r3, #0]
 8006488:	ee07 3a90 	vmov	s15, r3
 800648c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006490:	4b32      	ldr	r3, [pc, #200]	; (800655c <altitude_hold+0x180>)
 8006492:	edd3 7a00 	vldr	s15, [r3]
 8006496:	ee77 7a67 	vsub.f32	s15, s14, s15
 800649a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800649e:	ee17 2a90 	vmov	r2, s15
 80064a2:	4b31      	ldr	r3, [pc, #196]	; (8006568 <altitude_hold+0x18c>)
 80064a4:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle1<1100) Calculated_Throttle1=1100;
 80064a6:	4b30      	ldr	r3, [pc, #192]	; (8006568 <altitude_hold+0x18c>)
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	f240 424b 	movw	r2, #1099	; 0x44b
 80064ae:	4293      	cmp	r3, r2
 80064b0:	dc03      	bgt.n	80064ba <altitude_hold+0xde>
 80064b2:	4b2d      	ldr	r3, [pc, #180]	; (8006568 <altitude_hold+0x18c>)
 80064b4:	f240 424c 	movw	r2, #1100	; 0x44c
 80064b8:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle1>1800) Calculated_Throttle1=1800;
 80064ba:	4b2b      	ldr	r3, [pc, #172]	; (8006568 <altitude_hold+0x18c>)
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 80064c2:	dd03      	ble.n	80064cc <altitude_hold+0xf0>
 80064c4:	4b28      	ldr	r3, [pc, #160]	; (8006568 <altitude_hold+0x18c>)
 80064c6:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 80064ca:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle2<1100) Calculated_Throttle2=1100;
 80064cc:	4b25      	ldr	r3, [pc, #148]	; (8006564 <altitude_hold+0x188>)
 80064ce:	681b      	ldr	r3, [r3, #0]
 80064d0:	f240 424b 	movw	r2, #1099	; 0x44b
 80064d4:	4293      	cmp	r3, r2
 80064d6:	dc03      	bgt.n	80064e0 <altitude_hold+0x104>
 80064d8:	4b22      	ldr	r3, [pc, #136]	; (8006564 <altitude_hold+0x188>)
 80064da:	f240 424c 	movw	r2, #1100	; 0x44c
 80064de:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle2>1800) Calculated_Throttle2=1800;
 80064e0:	4b20      	ldr	r3, [pc, #128]	; (8006564 <altitude_hold+0x188>)
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 80064e8:	dd03      	ble.n	80064f2 <altitude_hold+0x116>
 80064ea:	4b1e      	ldr	r3, [pc, #120]	; (8006564 <altitude_hold+0x188>)
 80064ec:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 80064f0:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle3<1100) Calculated_Throttle3=1100;
 80064f2:	4b1b      	ldr	r3, [pc, #108]	; (8006560 <altitude_hold+0x184>)
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	f240 424b 	movw	r2, #1099	; 0x44b
 80064fa:	4293      	cmp	r3, r2
 80064fc:	dc03      	bgt.n	8006506 <altitude_hold+0x12a>
 80064fe:	4b18      	ldr	r3, [pc, #96]	; (8006560 <altitude_hold+0x184>)
 8006500:	f240 424c 	movw	r2, #1100	; 0x44c
 8006504:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle3>1800) Calculated_Throttle3=1800;
 8006506:	4b16      	ldr	r3, [pc, #88]	; (8006560 <altitude_hold+0x184>)
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 800650e:	dd03      	ble.n	8006518 <altitude_hold+0x13c>
 8006510:	4b13      	ldr	r3, [pc, #76]	; (8006560 <altitude_hold+0x184>)
 8006512:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8006516:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle4<1100) Calculated_Throttle4=1100;
 8006518:	4b0f      	ldr	r3, [pc, #60]	; (8006558 <altitude_hold+0x17c>)
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	f240 424b 	movw	r2, #1099	; 0x44b
 8006520:	4293      	cmp	r3, r2
 8006522:	dc03      	bgt.n	800652c <altitude_hold+0x150>
 8006524:	4b0c      	ldr	r3, [pc, #48]	; (8006558 <altitude_hold+0x17c>)
 8006526:	f240 424c 	movw	r2, #1100	; 0x44c
 800652a:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle4>1800) Calculated_Throttle4=1800;
 800652c:	4b0a      	ldr	r3, [pc, #40]	; (8006558 <altitude_hold+0x17c>)
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8006534:	dd03      	ble.n	800653e <altitude_hold+0x162>
 8006536:	4b08      	ldr	r3, [pc, #32]	; (8006558 <altitude_hold+0x17c>)
 8006538:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 800653c:	601a      	str	r2, [r3, #0]
}
 800653e:	bf00      	nop
 8006540:	bd80      	pop	{r7, pc}
 8006542:	bf00      	nop
 8006544:	20000994 	.word	0x20000994
 8006548:	200009ac 	.word	0x200009ac
 800654c:	20000998 	.word	0x20000998
 8006550:	200007e4 	.word	0x200007e4
 8006554:	aaaaaaab 	.word	0xaaaaaaab
 8006558:	200007d4 	.word	0x200007d4
 800655c:	20000b34 	.word	0x20000b34
 8006560:	200007d0 	.word	0x200007d0
 8006564:	200007cc 	.word	0x200007cc
 8006568:	200007c8 	.word	0x200007c8

0800656c <gps_hold>:
		}
	}


}
void gps_hold(){
 800656c:	b580      	push	{r7, lr}
 800656e:	af00      	add	r7, sp, #0
	if(!gps_hold_flag){
 8006570:	4b37      	ldr	r3, [pc, #220]	; (8006650 <gps_hold+0xe4>)
 8006572:	681b      	ldr	r3, [r3, #0]
 8006574:	2b00      	cmp	r3, #0
 8006576:	d10b      	bne.n	8006590 <gps_hold+0x24>
		gps_hold_flag=1;
 8006578:	4b35      	ldr	r3, [pc, #212]	; (8006650 <gps_hold+0xe4>)
 800657a:	2201      	movs	r2, #1
 800657c:	601a      	str	r2, [r3, #0]
		gps_setpoint_lat=latitude;
 800657e:	4b35      	ldr	r3, [pc, #212]	; (8006654 <gps_hold+0xe8>)
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	4a35      	ldr	r2, [pc, #212]	; (8006658 <gps_hold+0xec>)
 8006584:	6013      	str	r3, [r2, #0]
		gps_setpoint_lon=longitude;
 8006586:	4b35      	ldr	r3, [pc, #212]	; (800665c <gps_hold+0xf0>)
 8006588:	681b      	ldr	r3, [r3, #0]
 800658a:	4a35      	ldr	r2, [pc, #212]	; (8006660 <gps_hold+0xf4>)
 800658c:	6013      	str	r3, [r2, #0]
		if(Calculated_Throttle4>1800) Calculated_Throttle4=1800;
	}



}
 800658e:	e05d      	b.n	800664c <gps_hold+0xe0>
		if(loop_counter%50==0 && loop_counter!=0){
 8006590:	4b34      	ldr	r3, [pc, #208]	; (8006664 <gps_hold+0xf8>)
 8006592:	681a      	ldr	r2, [r3, #0]
 8006594:	4b34      	ldr	r3, [pc, #208]	; (8006668 <gps_hold+0xfc>)
 8006596:	fba3 1302 	umull	r1, r3, r3, r2
 800659a:	091b      	lsrs	r3, r3, #4
 800659c:	2132      	movs	r1, #50	; 0x32
 800659e:	fb01 f303 	mul.w	r3, r1, r3
 80065a2:	1ad3      	subs	r3, r2, r3
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d105      	bne.n	80065b4 <gps_hold+0x48>
 80065a8:	4b2e      	ldr	r3, [pc, #184]	; (8006664 <gps_hold+0xf8>)
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	2b00      	cmp	r3, #0
 80065ae:	d001      	beq.n	80065b4 <gps_hold+0x48>
			calculate_pid_gps();
 80065b0:	f7ff f9e2 	bl	8005978 <calculate_pid_gps>
		if(Calculated_Throttle1<1100) Calculated_Throttle1=1100;
 80065b4:	4b2d      	ldr	r3, [pc, #180]	; (800666c <gps_hold+0x100>)
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	f240 424b 	movw	r2, #1099	; 0x44b
 80065bc:	4293      	cmp	r3, r2
 80065be:	dc03      	bgt.n	80065c8 <gps_hold+0x5c>
 80065c0:	4b2a      	ldr	r3, [pc, #168]	; (800666c <gps_hold+0x100>)
 80065c2:	f240 424c 	movw	r2, #1100	; 0x44c
 80065c6:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle1>1800) Calculated_Throttle1=1800;
 80065c8:	4b28      	ldr	r3, [pc, #160]	; (800666c <gps_hold+0x100>)
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 80065d0:	dd03      	ble.n	80065da <gps_hold+0x6e>
 80065d2:	4b26      	ldr	r3, [pc, #152]	; (800666c <gps_hold+0x100>)
 80065d4:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 80065d8:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle2<1100) Calculated_Throttle2=1100;
 80065da:	4b25      	ldr	r3, [pc, #148]	; (8006670 <gps_hold+0x104>)
 80065dc:	681b      	ldr	r3, [r3, #0]
 80065de:	f240 424b 	movw	r2, #1099	; 0x44b
 80065e2:	4293      	cmp	r3, r2
 80065e4:	dc03      	bgt.n	80065ee <gps_hold+0x82>
 80065e6:	4b22      	ldr	r3, [pc, #136]	; (8006670 <gps_hold+0x104>)
 80065e8:	f240 424c 	movw	r2, #1100	; 0x44c
 80065ec:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle2>1800) Calculated_Throttle2=1800;
 80065ee:	4b20      	ldr	r3, [pc, #128]	; (8006670 <gps_hold+0x104>)
 80065f0:	681b      	ldr	r3, [r3, #0]
 80065f2:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 80065f6:	dd03      	ble.n	8006600 <gps_hold+0x94>
 80065f8:	4b1d      	ldr	r3, [pc, #116]	; (8006670 <gps_hold+0x104>)
 80065fa:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 80065fe:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle3<1100) Calculated_Throttle3=1100;
 8006600:	4b1c      	ldr	r3, [pc, #112]	; (8006674 <gps_hold+0x108>)
 8006602:	681b      	ldr	r3, [r3, #0]
 8006604:	f240 424b 	movw	r2, #1099	; 0x44b
 8006608:	4293      	cmp	r3, r2
 800660a:	dc03      	bgt.n	8006614 <gps_hold+0xa8>
 800660c:	4b19      	ldr	r3, [pc, #100]	; (8006674 <gps_hold+0x108>)
 800660e:	f240 424c 	movw	r2, #1100	; 0x44c
 8006612:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle3>1800) Calculated_Throttle3=1800;
 8006614:	4b17      	ldr	r3, [pc, #92]	; (8006674 <gps_hold+0x108>)
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 800661c:	dd03      	ble.n	8006626 <gps_hold+0xba>
 800661e:	4b15      	ldr	r3, [pc, #84]	; (8006674 <gps_hold+0x108>)
 8006620:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 8006624:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle4<1100) Calculated_Throttle4=1100;
 8006626:	4b14      	ldr	r3, [pc, #80]	; (8006678 <gps_hold+0x10c>)
 8006628:	681b      	ldr	r3, [r3, #0]
 800662a:	f240 424b 	movw	r2, #1099	; 0x44b
 800662e:	4293      	cmp	r3, r2
 8006630:	dc03      	bgt.n	800663a <gps_hold+0xce>
 8006632:	4b11      	ldr	r3, [pc, #68]	; (8006678 <gps_hold+0x10c>)
 8006634:	f240 424c 	movw	r2, #1100	; 0x44c
 8006638:	601a      	str	r2, [r3, #0]
		if(Calculated_Throttle4>1800) Calculated_Throttle4=1800;
 800663a:	4b0f      	ldr	r3, [pc, #60]	; (8006678 <gps_hold+0x10c>)
 800663c:	681b      	ldr	r3, [r3, #0]
 800663e:	f5b3 6fe1 	cmp.w	r3, #1800	; 0x708
 8006642:	dd03      	ble.n	800664c <gps_hold+0xe0>
 8006644:	4b0c      	ldr	r3, [pc, #48]	; (8006678 <gps_hold+0x10c>)
 8006646:	f44f 62e1 	mov.w	r2, #1800	; 0x708
 800664a:	601a      	str	r2, [r3, #0]
}
 800664c:	bf00      	nop
 800664e:	bd80      	pop	{r7, pc}
 8006650:	20000a68 	.word	0x20000a68
 8006654:	20000240 	.word	0x20000240
 8006658:	20000a6c 	.word	0x20000a6c
 800665c:	20000244 	.word	0x20000244
 8006660:	20000a70 	.word	0x20000a70
 8006664:	200007e4 	.word	0x200007e4
 8006668:	51eb851f 	.word	0x51eb851f
 800666c:	200007c8 	.word	0x200007c8
 8006670:	200007cc 	.word	0x200007cc
 8006674:	200007d0 	.word	0x200007d0
 8006678:	200007d4 	.word	0x200007d4

0800667c <reset_pid>:
	  changespeedM2(&_channels[2],MIN_Duty_cycle);
	  changespeedM3(&_channels[2],MIN_Duty_cycle);
	  changespeedM4(&_channels[2],MIN_Duty_cycle);
}
*/
void reset_pid(){
 800667c:	b480      	push	{r7}
 800667e:	af00      	add	r7, sp, #0
	last_error_roll=0;
 8006680:	492c      	ldr	r1, [pc, #176]	; (8006734 <reset_pid+0xb8>)
 8006682:	f04f 0200 	mov.w	r2, #0
 8006686:	f04f 0300 	mov.w	r3, #0
 800668a:	e9c1 2300 	strd	r2, r3, [r1]
	last_error_pitch=0;
 800668e:	492a      	ldr	r1, [pc, #168]	; (8006738 <reset_pid+0xbc>)
 8006690:	f04f 0200 	mov.w	r2, #0
 8006694:	f04f 0300 	mov.w	r3, #0
 8006698:	e9c1 2300 	strd	r2, r3, [r1]
	last_error_yaw=0;
 800669c:	4927      	ldr	r1, [pc, #156]	; (800673c <reset_pid+0xc0>)
 800669e:	f04f 0200 	mov.w	r2, #0
 80066a2:	f04f 0300 	mov.w	r3, #0
 80066a6:	e9c1 2300 	strd	r2, r3, [r1]
	pid_i_yaw=0;
 80066aa:	4925      	ldr	r1, [pc, #148]	; (8006740 <reset_pid+0xc4>)
 80066ac:	f04f 0200 	mov.w	r2, #0
 80066b0:	f04f 0300 	mov.w	r3, #0
 80066b4:	e9c1 2300 	strd	r2, r3, [r1]
	pid_i_roll=0;
 80066b8:	4922      	ldr	r1, [pc, #136]	; (8006744 <reset_pid+0xc8>)
 80066ba:	f04f 0200 	mov.w	r2, #0
 80066be:	f04f 0300 	mov.w	r3, #0
 80066c2:	e9c1 2300 	strd	r2, r3, [r1]
	pid_i_pitch=0;
 80066c6:	4920      	ldr	r1, [pc, #128]	; (8006748 <reset_pid+0xcc>)
 80066c8:	f04f 0200 	mov.w	r2, #0
 80066cc:	f04f 0300 	mov.w	r3, #0
 80066d0:	e9c1 2300 	strd	r2, r3, [r1]
	Roll_Error=0;
 80066d4:	491d      	ldr	r1, [pc, #116]	; (800674c <reset_pid+0xd0>)
 80066d6:	f04f 0200 	mov.w	r2, #0
 80066da:	f04f 0300 	mov.w	r3, #0
 80066de:	e9c1 2300 	strd	r2, r3, [r1]
	Pitch_Error=0;
 80066e2:	491b      	ldr	r1, [pc, #108]	; (8006750 <reset_pid+0xd4>)
 80066e4:	f04f 0200 	mov.w	r2, #0
 80066e8:	f04f 0300 	mov.w	r3, #0
 80066ec:	e9c1 2300 	strd	r2, r3, [r1]
	Yaw_Error=0;
 80066f0:	4918      	ldr	r1, [pc, #96]	; (8006754 <reset_pid+0xd8>)
 80066f2:	f04f 0200 	mov.w	r2, #0
 80066f6:	f04f 0300 	mov.w	r3, #0
 80066fa:	e9c1 2300 	strd	r2, r3, [r1]
	Roll_Control=0;
 80066fe:	4916      	ldr	r1, [pc, #88]	; (8006758 <reset_pid+0xdc>)
 8006700:	f04f 0200 	mov.w	r2, #0
 8006704:	f04f 0300 	mov.w	r3, #0
 8006708:	e9c1 2300 	strd	r2, r3, [r1]
	Pitch_Control=0;
 800670c:	4913      	ldr	r1, [pc, #76]	; (800675c <reset_pid+0xe0>)
 800670e:	f04f 0200 	mov.w	r2, #0
 8006712:	f04f 0300 	mov.w	r3, #0
 8006716:	e9c1 2300 	strd	r2, r3, [r1]
	Yaw_Control=0;
 800671a:	4911      	ldr	r1, [pc, #68]	; (8006760 <reset_pid+0xe4>)
 800671c:	f04f 0200 	mov.w	r2, #0
 8006720:	f04f 0300 	mov.w	r3, #0
 8006724:	e9c1 2300 	strd	r2, r3, [r1]

}
 8006728:	bf00      	nop
 800672a:	46bd      	mov	sp, r7
 800672c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006730:	4770      	bx	lr
 8006732:	bf00      	nop
 8006734:	20000b00 	.word	0x20000b00
 8006738:	20000b10 	.word	0x20000b10
 800673c:	20000b28 	.word	0x20000b28
 8006740:	20000b20 	.word	0x20000b20
 8006744:	20000af8 	.word	0x20000af8
 8006748:	20000b08 	.word	0x20000b08
 800674c:	20000ac8 	.word	0x20000ac8
 8006750:	20000ad8 	.word	0x20000ad8
 8006754:	20000ad0 	.word	0x20000ad0
 8006758:	20000ae0 	.word	0x20000ae0
 800675c:	20000af0 	.word	0x20000af0
 8006760:	20000ae8 	.word	0x20000ae8

08006764 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8006764:	b480      	push	{r7}
 8006766:	b083      	sub	sp, #12
 8006768:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800676a:	2300      	movs	r3, #0
 800676c:	607b      	str	r3, [r7, #4]
 800676e:	4b10      	ldr	r3, [pc, #64]	; (80067b0 <HAL_MspInit+0x4c>)
 8006770:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006772:	4a0f      	ldr	r2, [pc, #60]	; (80067b0 <HAL_MspInit+0x4c>)
 8006774:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006778:	6453      	str	r3, [r2, #68]	; 0x44
 800677a:	4b0d      	ldr	r3, [pc, #52]	; (80067b0 <HAL_MspInit+0x4c>)
 800677c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800677e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006782:	607b      	str	r3, [r7, #4]
 8006784:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8006786:	2300      	movs	r3, #0
 8006788:	603b      	str	r3, [r7, #0]
 800678a:	4b09      	ldr	r3, [pc, #36]	; (80067b0 <HAL_MspInit+0x4c>)
 800678c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800678e:	4a08      	ldr	r2, [pc, #32]	; (80067b0 <HAL_MspInit+0x4c>)
 8006790:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006794:	6413      	str	r3, [r2, #64]	; 0x40
 8006796:	4b06      	ldr	r3, [pc, #24]	; (80067b0 <HAL_MspInit+0x4c>)
 8006798:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800679a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800679e:	603b      	str	r3, [r7, #0]
 80067a0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80067a2:	bf00      	nop
 80067a4:	370c      	adds	r7, #12
 80067a6:	46bd      	mov	sp, r7
 80067a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067ac:	4770      	bx	lr
 80067ae:	bf00      	nop
 80067b0:	40023800 	.word	0x40023800

080067b4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80067b4:	b580      	push	{r7, lr}
 80067b6:	b08a      	sub	sp, #40	; 0x28
 80067b8:	af00      	add	r7, sp, #0
 80067ba:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80067bc:	f107 0314 	add.w	r3, r7, #20
 80067c0:	2200      	movs	r2, #0
 80067c2:	601a      	str	r2, [r3, #0]
 80067c4:	605a      	str	r2, [r3, #4]
 80067c6:	609a      	str	r2, [r3, #8]
 80067c8:	60da      	str	r2, [r3, #12]
 80067ca:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	4a2f      	ldr	r2, [pc, #188]	; (8006890 <HAL_ADC_MspInit+0xdc>)
 80067d2:	4293      	cmp	r3, r2
 80067d4:	d157      	bne.n	8006886 <HAL_ADC_MspInit+0xd2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80067d6:	2300      	movs	r3, #0
 80067d8:	613b      	str	r3, [r7, #16]
 80067da:	4b2e      	ldr	r3, [pc, #184]	; (8006894 <HAL_ADC_MspInit+0xe0>)
 80067dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80067de:	4a2d      	ldr	r2, [pc, #180]	; (8006894 <HAL_ADC_MspInit+0xe0>)
 80067e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80067e4:	6453      	str	r3, [r2, #68]	; 0x44
 80067e6:	4b2b      	ldr	r3, [pc, #172]	; (8006894 <HAL_ADC_MspInit+0xe0>)
 80067e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80067ea:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80067ee:	613b      	str	r3, [r7, #16]
 80067f0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80067f2:	2300      	movs	r3, #0
 80067f4:	60fb      	str	r3, [r7, #12]
 80067f6:	4b27      	ldr	r3, [pc, #156]	; (8006894 <HAL_ADC_MspInit+0xe0>)
 80067f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80067fa:	4a26      	ldr	r2, [pc, #152]	; (8006894 <HAL_ADC_MspInit+0xe0>)
 80067fc:	f043 0302 	orr.w	r3, r3, #2
 8006800:	6313      	str	r3, [r2, #48]	; 0x30
 8006802:	4b24      	ldr	r3, [pc, #144]	; (8006894 <HAL_ADC_MspInit+0xe0>)
 8006804:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006806:	f003 0302 	and.w	r3, r3, #2
 800680a:	60fb      	str	r3, [r7, #12]
 800680c:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PB1     ------> ADC1_IN9
    */
    GPIO_InitStruct.Pin = BATARYA_VOLTAJ_GIRIS_Pin;
 800680e:	2302      	movs	r3, #2
 8006810:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8006812:	2303      	movs	r3, #3
 8006814:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006816:	2300      	movs	r3, #0
 8006818:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(BATARYA_VOLTAJ_GIRIS_GPIO_Port, &GPIO_InitStruct);
 800681a:	f107 0314 	add.w	r3, r7, #20
 800681e:	4619      	mov	r1, r3
 8006820:	481d      	ldr	r0, [pc, #116]	; (8006898 <HAL_ADC_MspInit+0xe4>)
 8006822:	f002 f961 	bl	8008ae8 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8006826:	4b1d      	ldr	r3, [pc, #116]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006828:	4a1d      	ldr	r2, [pc, #116]	; (80068a0 <HAL_ADC_MspInit+0xec>)
 800682a:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 800682c:	4b1b      	ldr	r3, [pc, #108]	; (800689c <HAL_ADC_MspInit+0xe8>)
 800682e:	2200      	movs	r2, #0
 8006830:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8006832:	4b1a      	ldr	r3, [pc, #104]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006834:	2200      	movs	r2, #0
 8006836:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8006838:	4b18      	ldr	r3, [pc, #96]	; (800689c <HAL_ADC_MspInit+0xe8>)
 800683a:	2200      	movs	r2, #0
 800683c:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 800683e:	4b17      	ldr	r3, [pc, #92]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006840:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006844:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8006846:	4b15      	ldr	r3, [pc, #84]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006848:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800684c:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800684e:	4b13      	ldr	r3, [pc, #76]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006850:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8006854:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8006856:	4b11      	ldr	r3, [pc, #68]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006858:	f44f 7280 	mov.w	r2, #256	; 0x100
 800685c:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 800685e:	4b0f      	ldr	r3, [pc, #60]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006860:	2200      	movs	r2, #0
 8006862:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8006864:	4b0d      	ldr	r3, [pc, #52]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006866:	2200      	movs	r2, #0
 8006868:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 800686a:	480c      	ldr	r0, [pc, #48]	; (800689c <HAL_ADC_MspInit+0xe8>)
 800686c:	f001 face 	bl	8007e0c <HAL_DMA_Init>
 8006870:	4603      	mov	r3, r0
 8006872:	2b00      	cmp	r3, #0
 8006874:	d001      	beq.n	800687a <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 8006876:	f7fd fa1d 	bl	8003cb4 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	4a07      	ldr	r2, [pc, #28]	; (800689c <HAL_ADC_MspInit+0xe8>)
 800687e:	639a      	str	r2, [r3, #56]	; 0x38
 8006880:	4a06      	ldr	r2, [pc, #24]	; (800689c <HAL_ADC_MspInit+0xe8>)
 8006882:	687b      	ldr	r3, [r7, #4]
 8006884:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8006886:	bf00      	nop
 8006888:	3728      	adds	r7, #40	; 0x28
 800688a:	46bd      	mov	sp, r7
 800688c:	bd80      	pop	{r7, pc}
 800688e:	bf00      	nop
 8006890:	40012000 	.word	0x40012000
 8006894:	40023800 	.word	0x40023800
 8006898:	40020400 	.word	0x40020400
 800689c:	20000290 	.word	0x20000290
 80068a0:	40026410 	.word	0x40026410

080068a4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80068a4:	b580      	push	{r7, lr}
 80068a6:	b08e      	sub	sp, #56	; 0x38
 80068a8:	af00      	add	r7, sp, #0
 80068aa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80068ac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80068b0:	2200      	movs	r2, #0
 80068b2:	601a      	str	r2, [r3, #0]
 80068b4:	605a      	str	r2, [r3, #4]
 80068b6:	609a      	str	r2, [r3, #8]
 80068b8:	60da      	str	r2, [r3, #12]
 80068ba:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	681b      	ldr	r3, [r3, #0]
 80068c0:	4a5b      	ldr	r2, [pc, #364]	; (8006a30 <HAL_I2C_MspInit+0x18c>)
 80068c2:	4293      	cmp	r3, r2
 80068c4:	d12d      	bne.n	8006922 <HAL_I2C_MspInit+0x7e>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80068c6:	2300      	movs	r3, #0
 80068c8:	623b      	str	r3, [r7, #32]
 80068ca:	4b5a      	ldr	r3, [pc, #360]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 80068cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80068ce:	4a59      	ldr	r2, [pc, #356]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 80068d0:	f043 0302 	orr.w	r3, r3, #2
 80068d4:	6313      	str	r3, [r2, #48]	; 0x30
 80068d6:	4b57      	ldr	r3, [pc, #348]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 80068d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80068da:	f003 0302 	and.w	r3, r3, #2
 80068de:	623b      	str	r3, [r7, #32]
 80068e0:	6a3b      	ldr	r3, [r7, #32]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = BARO_SCL_Pin|BARO_SDA_Pin;
 80068e2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80068e6:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80068e8:	2312      	movs	r3, #18
 80068ea:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80068ec:	2300      	movs	r3, #0
 80068ee:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80068f0:	2303      	movs	r3, #3
 80068f2:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80068f4:	2304      	movs	r3, #4
 80068f6:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80068f8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80068fc:	4619      	mov	r1, r3
 80068fe:	484e      	ldr	r0, [pc, #312]	; (8006a38 <HAL_I2C_MspInit+0x194>)
 8006900:	f002 f8f2 	bl	8008ae8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8006904:	2300      	movs	r3, #0
 8006906:	61fb      	str	r3, [r7, #28]
 8006908:	4b4a      	ldr	r3, [pc, #296]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 800690a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800690c:	4a49      	ldr	r2, [pc, #292]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 800690e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8006912:	6413      	str	r3, [r2, #64]	; 0x40
 8006914:	4b47      	ldr	r3, [pc, #284]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006916:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006918:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800691c:	61fb      	str	r3, [r7, #28]
 800691e:	69fb      	ldr	r3, [r7, #28]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8006920:	e082      	b.n	8006a28 <HAL_I2C_MspInit+0x184>
  else if(hi2c->Instance==I2C2)
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	4a45      	ldr	r2, [pc, #276]	; (8006a3c <HAL_I2C_MspInit+0x198>)
 8006928:	4293      	cmp	r3, r2
 800692a:	d12c      	bne.n	8006986 <HAL_I2C_MspInit+0xe2>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800692c:	2300      	movs	r3, #0
 800692e:	61bb      	str	r3, [r7, #24]
 8006930:	4b40      	ldr	r3, [pc, #256]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006932:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006934:	4a3f      	ldr	r2, [pc, #252]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006936:	f043 0320 	orr.w	r3, r3, #32
 800693a:	6313      	str	r3, [r2, #48]	; 0x30
 800693c:	4b3d      	ldr	r3, [pc, #244]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 800693e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006940:	f003 0320 	and.w	r3, r3, #32
 8006944:	61bb      	str	r3, [r7, #24]
 8006946:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = IMU_SDA_Pin|IMU_SCL_Pin;
 8006948:	2303      	movs	r3, #3
 800694a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800694c:	2312      	movs	r3, #18
 800694e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006950:	2300      	movs	r3, #0
 8006952:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006954:	2303      	movs	r3, #3
 8006956:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8006958:	2304      	movs	r3, #4
 800695a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800695c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006960:	4619      	mov	r1, r3
 8006962:	4837      	ldr	r0, [pc, #220]	; (8006a40 <HAL_I2C_MspInit+0x19c>)
 8006964:	f002 f8c0 	bl	8008ae8 <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 8006968:	2300      	movs	r3, #0
 800696a:	617b      	str	r3, [r7, #20]
 800696c:	4b31      	ldr	r3, [pc, #196]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 800696e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006970:	4a30      	ldr	r2, [pc, #192]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006972:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8006976:	6413      	str	r3, [r2, #64]	; 0x40
 8006978:	4b2e      	ldr	r3, [pc, #184]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 800697a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800697c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006980:	617b      	str	r3, [r7, #20]
 8006982:	697b      	ldr	r3, [r7, #20]
}
 8006984:	e050      	b.n	8006a28 <HAL_I2C_MspInit+0x184>
  else if(hi2c->Instance==I2C3)
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	681b      	ldr	r3, [r3, #0]
 800698a:	4a2e      	ldr	r2, [pc, #184]	; (8006a44 <HAL_I2C_MspInit+0x1a0>)
 800698c:	4293      	cmp	r3, r2
 800698e:	d14b      	bne.n	8006a28 <HAL_I2C_MspInit+0x184>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8006990:	2300      	movs	r3, #0
 8006992:	613b      	str	r3, [r7, #16]
 8006994:	4b27      	ldr	r3, [pc, #156]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006998:	4a26      	ldr	r2, [pc, #152]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 800699a:	f043 0304 	orr.w	r3, r3, #4
 800699e:	6313      	str	r3, [r2, #48]	; 0x30
 80069a0:	4b24      	ldr	r3, [pc, #144]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 80069a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069a4:	f003 0304 	and.w	r3, r3, #4
 80069a8:	613b      	str	r3, [r7, #16]
 80069aa:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80069ac:	2300      	movs	r3, #0
 80069ae:	60fb      	str	r3, [r7, #12]
 80069b0:	4b20      	ldr	r3, [pc, #128]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 80069b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069b4:	4a1f      	ldr	r2, [pc, #124]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 80069b6:	f043 0301 	orr.w	r3, r3, #1
 80069ba:	6313      	str	r3, [r2, #48]	; 0x30
 80069bc:	4b1d      	ldr	r3, [pc, #116]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 80069be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069c0:	f003 0301 	and.w	r3, r3, #1
 80069c4:	60fb      	str	r3, [r7, #12]
 80069c6:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = PUSULA_SDA_Pin;
 80069c8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80069cc:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80069ce:	2312      	movs	r3, #18
 80069d0:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80069d2:	2300      	movs	r3, #0
 80069d4:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80069d6:	2303      	movs	r3, #3
 80069d8:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80069da:	2304      	movs	r3, #4
 80069dc:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(PUSULA_SDA_GPIO_Port, &GPIO_InitStruct);
 80069de:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80069e2:	4619      	mov	r1, r3
 80069e4:	4818      	ldr	r0, [pc, #96]	; (8006a48 <HAL_I2C_MspInit+0x1a4>)
 80069e6:	f002 f87f 	bl	8008ae8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = PUSULA_SCL_Pin;
 80069ea:	f44f 7380 	mov.w	r3, #256	; 0x100
 80069ee:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80069f0:	2312      	movs	r3, #18
 80069f2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80069f4:	2300      	movs	r3, #0
 80069f6:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80069f8:	2303      	movs	r3, #3
 80069fa:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80069fc:	2304      	movs	r3, #4
 80069fe:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(PUSULA_SCL_GPIO_Port, &GPIO_InitStruct);
 8006a00:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006a04:	4619      	mov	r1, r3
 8006a06:	4811      	ldr	r0, [pc, #68]	; (8006a4c <HAL_I2C_MspInit+0x1a8>)
 8006a08:	f002 f86e 	bl	8008ae8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8006a0c:	2300      	movs	r3, #0
 8006a0e:	60bb      	str	r3, [r7, #8]
 8006a10:	4b08      	ldr	r3, [pc, #32]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006a12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a14:	4a07      	ldr	r2, [pc, #28]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006a16:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8006a1a:	6413      	str	r3, [r2, #64]	; 0x40
 8006a1c:	4b05      	ldr	r3, [pc, #20]	; (8006a34 <HAL_I2C_MspInit+0x190>)
 8006a1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a20:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8006a24:	60bb      	str	r3, [r7, #8]
 8006a26:	68bb      	ldr	r3, [r7, #8]
}
 8006a28:	bf00      	nop
 8006a2a:	3738      	adds	r7, #56	; 0x38
 8006a2c:	46bd      	mov	sp, r7
 8006a2e:	bd80      	pop	{r7, pc}
 8006a30:	40005400 	.word	0x40005400
 8006a34:	40023800 	.word	0x40023800
 8006a38:	40020400 	.word	0x40020400
 8006a3c:	40005800 	.word	0x40005800
 8006a40:	40021400 	.word	0x40021400
 8006a44:	40005c00 	.word	0x40005c00
 8006a48:	40020800 	.word	0x40020800
 8006a4c:	40020000 	.word	0x40020000

08006a50 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8006a50:	b580      	push	{r7, lr}
 8006a52:	b082      	sub	sp, #8
 8006a54:	af00      	add	r7, sp, #0
 8006a56:	6078      	str	r0, [r7, #4]
  if(hi2c->Instance==I2C1)
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	4a20      	ldr	r2, [pc, #128]	; (8006ae0 <HAL_I2C_MspDeInit+0x90>)
 8006a5e:	4293      	cmp	r3, r2
 8006a60:	d110      	bne.n	8006a84 <HAL_I2C_MspDeInit+0x34>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8006a62:	4b20      	ldr	r3, [pc, #128]	; (8006ae4 <HAL_I2C_MspDeInit+0x94>)
 8006a64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a66:	4a1f      	ldr	r2, [pc, #124]	; (8006ae4 <HAL_I2C_MspDeInit+0x94>)
 8006a68:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8006a6c:	6413      	str	r3, [r2, #64]	; 0x40

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(BARO_SCL_GPIO_Port, BARO_SCL_Pin);
 8006a6e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006a72:	481d      	ldr	r0, [pc, #116]	; (8006ae8 <HAL_I2C_MspDeInit+0x98>)
 8006a74:	f002 f9cc 	bl	8008e10 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(BARO_SDA_GPIO_Port, BARO_SDA_Pin);
 8006a78:	f44f 7100 	mov.w	r1, #512	; 0x200
 8006a7c:	481a      	ldr	r0, [pc, #104]	; (8006ae8 <HAL_I2C_MspDeInit+0x98>)
 8006a7e:	f002 f9c7 	bl	8008e10 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8006a82:	e028      	b.n	8006ad6 <HAL_I2C_MspDeInit+0x86>
  else if(hi2c->Instance==I2C2)
 8006a84:	687b      	ldr	r3, [r7, #4]
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	4a18      	ldr	r2, [pc, #96]	; (8006aec <HAL_I2C_MspDeInit+0x9c>)
 8006a8a:	4293      	cmp	r3, r2
 8006a8c:	d10e      	bne.n	8006aac <HAL_I2C_MspDeInit+0x5c>
    __HAL_RCC_I2C2_CLK_DISABLE();
 8006a8e:	4b15      	ldr	r3, [pc, #84]	; (8006ae4 <HAL_I2C_MspDeInit+0x94>)
 8006a90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a92:	4a14      	ldr	r2, [pc, #80]	; (8006ae4 <HAL_I2C_MspDeInit+0x94>)
 8006a94:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8006a98:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(IMU_SDA_GPIO_Port, IMU_SDA_Pin);
 8006a9a:	2101      	movs	r1, #1
 8006a9c:	4814      	ldr	r0, [pc, #80]	; (8006af0 <HAL_I2C_MspDeInit+0xa0>)
 8006a9e:	f002 f9b7 	bl	8008e10 <HAL_GPIO_DeInit>
    HAL_GPIO_DeInit(IMU_SCL_GPIO_Port, IMU_SCL_Pin);
 8006aa2:	2102      	movs	r1, #2
 8006aa4:	4812      	ldr	r0, [pc, #72]	; (8006af0 <HAL_I2C_MspDeInit+0xa0>)
 8006aa6:	f002 f9b3 	bl	8008e10 <HAL_GPIO_DeInit>
}
 8006aaa:	e014      	b.n	8006ad6 <HAL_I2C_MspDeInit+0x86>
  else if(hi2c->Instance==I2C3)
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	4a10      	ldr	r2, [pc, #64]	; (8006af4 <HAL_I2C_MspDeInit+0xa4>)
 8006ab2:	4293      	cmp	r3, r2
 8006ab4:	d10f      	bne.n	8006ad6 <HAL_I2C_MspDeInit+0x86>
    __HAL_RCC_I2C3_CLK_DISABLE();
 8006ab6:	4b0b      	ldr	r3, [pc, #44]	; (8006ae4 <HAL_I2C_MspDeInit+0x94>)
 8006ab8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006aba:	4a0a      	ldr	r2, [pc, #40]	; (8006ae4 <HAL_I2C_MspDeInit+0x94>)
 8006abc:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8006ac0:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(PUSULA_SDA_GPIO_Port, PUSULA_SDA_Pin);
 8006ac2:	f44f 7100 	mov.w	r1, #512	; 0x200
 8006ac6:	480c      	ldr	r0, [pc, #48]	; (8006af8 <HAL_I2C_MspDeInit+0xa8>)
 8006ac8:	f002 f9a2 	bl	8008e10 <HAL_GPIO_DeInit>
    HAL_GPIO_DeInit(PUSULA_SCL_GPIO_Port, PUSULA_SCL_Pin);
 8006acc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006ad0:	480a      	ldr	r0, [pc, #40]	; (8006afc <HAL_I2C_MspDeInit+0xac>)
 8006ad2:	f002 f99d 	bl	8008e10 <HAL_GPIO_DeInit>
}
 8006ad6:	bf00      	nop
 8006ad8:	3708      	adds	r7, #8
 8006ada:	46bd      	mov	sp, r7
 8006adc:	bd80      	pop	{r7, pc}
 8006ade:	bf00      	nop
 8006ae0:	40005400 	.word	0x40005400
 8006ae4:	40023800 	.word	0x40023800
 8006ae8:	40020400 	.word	0x40020400
 8006aec:	40005800 	.word	0x40005800
 8006af0:	40021400 	.word	0x40021400
 8006af4:	40005c00 	.word	0x40005c00
 8006af8:	40020800 	.word	0x40020800
 8006afc:	40020000 	.word	0x40020000

08006b00 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8006b00:	b480      	push	{r7}
 8006b02:	b085      	sub	sp, #20
 8006b04:	af00      	add	r7, sp, #0
 8006b06:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	4a0b      	ldr	r2, [pc, #44]	; (8006b3c <HAL_TIM_PWM_MspInit+0x3c>)
 8006b0e:	4293      	cmp	r3, r2
 8006b10:	d10d      	bne.n	8006b2e <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8006b12:	2300      	movs	r3, #0
 8006b14:	60fb      	str	r3, [r7, #12]
 8006b16:	4b0a      	ldr	r3, [pc, #40]	; (8006b40 <HAL_TIM_PWM_MspInit+0x40>)
 8006b18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b1a:	4a09      	ldr	r2, [pc, #36]	; (8006b40 <HAL_TIM_PWM_MspInit+0x40>)
 8006b1c:	f043 0301 	orr.w	r3, r3, #1
 8006b20:	6453      	str	r3, [r2, #68]	; 0x44
 8006b22:	4b07      	ldr	r3, [pc, #28]	; (8006b40 <HAL_TIM_PWM_MspInit+0x40>)
 8006b24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b26:	f003 0301 	and.w	r3, r3, #1
 8006b2a:	60fb      	str	r3, [r7, #12]
 8006b2c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 8006b2e:	bf00      	nop
 8006b30:	3714      	adds	r7, #20
 8006b32:	46bd      	mov	sp, r7
 8006b34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b38:	4770      	bx	lr
 8006b3a:	bf00      	nop
 8006b3c:	40010000 	.word	0x40010000
 8006b40:	40023800 	.word	0x40023800

08006b44 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8006b44:	b480      	push	{r7}
 8006b46:	b085      	sub	sp, #20
 8006b48:	af00      	add	r7, sp, #0
 8006b4a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	681b      	ldr	r3, [r3, #0]
 8006b50:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006b54:	d10e      	bne.n	8006b74 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8006b56:	2300      	movs	r3, #0
 8006b58:	60fb      	str	r3, [r7, #12]
 8006b5a:	4b13      	ldr	r3, [pc, #76]	; (8006ba8 <HAL_TIM_Base_MspInit+0x64>)
 8006b5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b5e:	4a12      	ldr	r2, [pc, #72]	; (8006ba8 <HAL_TIM_Base_MspInit+0x64>)
 8006b60:	f043 0301 	orr.w	r3, r3, #1
 8006b64:	6413      	str	r3, [r2, #64]	; 0x40
 8006b66:	4b10      	ldr	r3, [pc, #64]	; (8006ba8 <HAL_TIM_Base_MspInit+0x64>)
 8006b68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b6a:	f003 0301 	and.w	r3, r3, #1
 8006b6e:	60fb      	str	r3, [r7, #12]
 8006b70:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8006b72:	e012      	b.n	8006b9a <HAL_TIM_Base_MspInit+0x56>
  else if(htim_base->Instance==TIM3)
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	4a0c      	ldr	r2, [pc, #48]	; (8006bac <HAL_TIM_Base_MspInit+0x68>)
 8006b7a:	4293      	cmp	r3, r2
 8006b7c:	d10d      	bne.n	8006b9a <HAL_TIM_Base_MspInit+0x56>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8006b7e:	2300      	movs	r3, #0
 8006b80:	60bb      	str	r3, [r7, #8]
 8006b82:	4b09      	ldr	r3, [pc, #36]	; (8006ba8 <HAL_TIM_Base_MspInit+0x64>)
 8006b84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b86:	4a08      	ldr	r2, [pc, #32]	; (8006ba8 <HAL_TIM_Base_MspInit+0x64>)
 8006b88:	f043 0302 	orr.w	r3, r3, #2
 8006b8c:	6413      	str	r3, [r2, #64]	; 0x40
 8006b8e:	4b06      	ldr	r3, [pc, #24]	; (8006ba8 <HAL_TIM_Base_MspInit+0x64>)
 8006b90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b92:	f003 0302 	and.w	r3, r3, #2
 8006b96:	60bb      	str	r3, [r7, #8]
 8006b98:	68bb      	ldr	r3, [r7, #8]
}
 8006b9a:	bf00      	nop
 8006b9c:	3714      	adds	r7, #20
 8006b9e:	46bd      	mov	sp, r7
 8006ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ba4:	4770      	bx	lr
 8006ba6:	bf00      	nop
 8006ba8:	40023800 	.word	0x40023800
 8006bac:	40000400 	.word	0x40000400

08006bb0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8006bb0:	b580      	push	{r7, lr}
 8006bb2:	b088      	sub	sp, #32
 8006bb4:	af00      	add	r7, sp, #0
 8006bb6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006bb8:	f107 030c 	add.w	r3, r7, #12
 8006bbc:	2200      	movs	r2, #0
 8006bbe:	601a      	str	r2, [r3, #0]
 8006bc0:	605a      	str	r2, [r3, #4]
 8006bc2:	609a      	str	r2, [r3, #8]
 8006bc4:	60da      	str	r2, [r3, #12]
 8006bc6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	681b      	ldr	r3, [r3, #0]
 8006bcc:	4a12      	ldr	r2, [pc, #72]	; (8006c18 <HAL_TIM_MspPostInit+0x68>)
 8006bce:	4293      	cmp	r3, r2
 8006bd0:	d11e      	bne.n	8006c10 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8006bd2:	2300      	movs	r3, #0
 8006bd4:	60bb      	str	r3, [r7, #8]
 8006bd6:	4b11      	ldr	r3, [pc, #68]	; (8006c1c <HAL_TIM_MspPostInit+0x6c>)
 8006bd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006bda:	4a10      	ldr	r2, [pc, #64]	; (8006c1c <HAL_TIM_MspPostInit+0x6c>)
 8006bdc:	f043 0310 	orr.w	r3, r3, #16
 8006be0:	6313      	str	r3, [r2, #48]	; 0x30
 8006be2:	4b0e      	ldr	r3, [pc, #56]	; (8006c1c <HAL_TIM_MspPostInit+0x6c>)
 8006be4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006be6:	f003 0310 	and.w	r3, r3, #16
 8006bea:	60bb      	str	r3, [r7, #8]
 8006bec:	68bb      	ldr	r3, [r7, #8]
    PE9     ------> TIM1_CH1
    PE11     ------> TIM1_CH2
    PE13     ------> TIM1_CH3
    PE14     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = MOTOR1_Pin|MOTOR2_Pin|MOTOR3_Pin|MOTOR4_Pin;
 8006bee:	f44f 43d4 	mov.w	r3, #27136	; 0x6a00
 8006bf2:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006bf4:	2302      	movs	r3, #2
 8006bf6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006bf8:	2300      	movs	r3, #0
 8006bfa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006bfc:	2300      	movs	r3, #0
 8006bfe:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8006c00:	2301      	movs	r3, #1
 8006c02:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8006c04:	f107 030c 	add.w	r3, r7, #12
 8006c08:	4619      	mov	r1, r3
 8006c0a:	4805      	ldr	r0, [pc, #20]	; (8006c20 <HAL_TIM_MspPostInit+0x70>)
 8006c0c:	f001 ff6c 	bl	8008ae8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 8006c10:	bf00      	nop
 8006c12:	3720      	adds	r7, #32
 8006c14:	46bd      	mov	sp, r7
 8006c16:	bd80      	pop	{r7, pc}
 8006c18:	40010000 	.word	0x40010000
 8006c1c:	40023800 	.word	0x40023800
 8006c20:	40021000 	.word	0x40021000

08006c24 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8006c24:	b580      	push	{r7, lr}
 8006c26:	b090      	sub	sp, #64	; 0x40
 8006c28:	af00      	add	r7, sp, #0
 8006c2a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006c2c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006c30:	2200      	movs	r2, #0
 8006c32:	601a      	str	r2, [r3, #0]
 8006c34:	605a      	str	r2, [r3, #4]
 8006c36:	609a      	str	r2, [r3, #8]
 8006c38:	60da      	str	r2, [r3, #12]
 8006c3a:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART5)
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	4a7c      	ldr	r2, [pc, #496]	; (8006e34 <HAL_UART_MspInit+0x210>)
 8006c42:	4293      	cmp	r3, r2
 8006c44:	f040 8095 	bne.w	8006d72 <HAL_UART_MspInit+0x14e>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 8006c48:	2300      	movs	r3, #0
 8006c4a:	62bb      	str	r3, [r7, #40]	; 0x28
 8006c4c:	4b7a      	ldr	r3, [pc, #488]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006c4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c50:	4a79      	ldr	r2, [pc, #484]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006c52:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006c56:	6413      	str	r3, [r2, #64]	; 0x40
 8006c58:	4b77      	ldr	r3, [pc, #476]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006c5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c5c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006c60:	62bb      	str	r3, [r7, #40]	; 0x28
 8006c62:	6abb      	ldr	r3, [r7, #40]	; 0x28

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006c64:	2300      	movs	r3, #0
 8006c66:	627b      	str	r3, [r7, #36]	; 0x24
 8006c68:	4b73      	ldr	r3, [pc, #460]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006c6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c6c:	4a72      	ldr	r2, [pc, #456]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006c6e:	f043 0302 	orr.w	r3, r3, #2
 8006c72:	6313      	str	r3, [r2, #48]	; 0x30
 8006c74:	4b70      	ldr	r3, [pc, #448]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006c76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c78:	f003 0302 	and.w	r3, r3, #2
 8006c7c:	627b      	str	r3, [r7, #36]	; 0x24
 8006c7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    /**UART5 GPIO Configuration
    PB12     ------> UART5_RX
    PB13     ------> UART5_TX
    */
    GPIO_InitStruct.Pin = RF_RX_Pin|RF_TX_Pin;
 8006c80:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8006c84:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006c86:	2302      	movs	r3, #2
 8006c88:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006c8a:	2300      	movs	r3, #0
 8006c8c:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006c8e:	2303      	movs	r3, #3
 8006c90:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF11_UART5;
 8006c92:	230b      	movs	r3, #11
 8006c94:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006c96:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006c9a:	4619      	mov	r1, r3
 8006c9c:	4867      	ldr	r0, [pc, #412]	; (8006e3c <HAL_UART_MspInit+0x218>)
 8006c9e:	f001 ff23 	bl	8008ae8 <HAL_GPIO_Init>

    /* UART5 DMA Init */
    /* UART5_RX Init */
    hdma_uart5_rx.Instance = DMA1_Stream0;
 8006ca2:	4b67      	ldr	r3, [pc, #412]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006ca4:	4a67      	ldr	r2, [pc, #412]	; (8006e44 <HAL_UART_MspInit+0x220>)
 8006ca6:	601a      	str	r2, [r3, #0]
    hdma_uart5_rx.Init.Channel = DMA_CHANNEL_4;
 8006ca8:	4b65      	ldr	r3, [pc, #404]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006caa:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006cae:	605a      	str	r2, [r3, #4]
    hdma_uart5_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8006cb0:	4b63      	ldr	r3, [pc, #396]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cb2:	2200      	movs	r2, #0
 8006cb4:	609a      	str	r2, [r3, #8]
    hdma_uart5_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8006cb6:	4b62      	ldr	r3, [pc, #392]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cb8:	2200      	movs	r2, #0
 8006cba:	60da      	str	r2, [r3, #12]
    hdma_uart5_rx.Init.MemInc = DMA_MINC_ENABLE;
 8006cbc:	4b60      	ldr	r3, [pc, #384]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cbe:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006cc2:	611a      	str	r2, [r3, #16]
    hdma_uart5_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8006cc4:	4b5e      	ldr	r3, [pc, #376]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cc6:	2200      	movs	r2, #0
 8006cc8:	615a      	str	r2, [r3, #20]
    hdma_uart5_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8006cca:	4b5d      	ldr	r3, [pc, #372]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006ccc:	2200      	movs	r2, #0
 8006cce:	619a      	str	r2, [r3, #24]
    hdma_uart5_rx.Init.Mode = DMA_CIRCULAR;
 8006cd0:	4b5b      	ldr	r3, [pc, #364]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cd2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006cd6:	61da      	str	r2, [r3, #28]
    hdma_uart5_rx.Init.Priority = DMA_PRIORITY_HIGH;
 8006cd8:	4b59      	ldr	r3, [pc, #356]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cda:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8006cde:	621a      	str	r2, [r3, #32]
    hdma_uart5_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8006ce0:	4b57      	ldr	r3, [pc, #348]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006ce2:	2200      	movs	r2, #0
 8006ce4:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_uart5_rx) != HAL_OK)
 8006ce6:	4856      	ldr	r0, [pc, #344]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006ce8:	f001 f890 	bl	8007e0c <HAL_DMA_Init>
 8006cec:	4603      	mov	r3, r0
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d001      	beq.n	8006cf6 <HAL_UART_MspInit+0xd2>
    {
      Error_Handler();
 8006cf2:	f7fc ffdf 	bl	8003cb4 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_uart5_rx);
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	4a51      	ldr	r2, [pc, #324]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cfa:	639a      	str	r2, [r3, #56]	; 0x38
 8006cfc:	4a50      	ldr	r2, [pc, #320]	; (8006e40 <HAL_UART_MspInit+0x21c>)
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	6393      	str	r3, [r2, #56]	; 0x38

    /* UART5_TX Init */
    hdma_uart5_tx.Instance = DMA1_Stream7;
 8006d02:	4b51      	ldr	r3, [pc, #324]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d04:	4a51      	ldr	r2, [pc, #324]	; (8006e4c <HAL_UART_MspInit+0x228>)
 8006d06:	601a      	str	r2, [r3, #0]
    hdma_uart5_tx.Init.Channel = DMA_CHANNEL_8;
 8006d08:	4b4f      	ldr	r3, [pc, #316]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d0e:	605a      	str	r2, [r3, #4]
    hdma_uart5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8006d10:	4b4d      	ldr	r3, [pc, #308]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d12:	2240      	movs	r2, #64	; 0x40
 8006d14:	609a      	str	r2, [r3, #8]
    hdma_uart5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8006d16:	4b4c      	ldr	r3, [pc, #304]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d18:	2200      	movs	r2, #0
 8006d1a:	60da      	str	r2, [r3, #12]
    hdma_uart5_tx.Init.MemInc = DMA_MINC_ENABLE;
 8006d1c:	4b4a      	ldr	r3, [pc, #296]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d1e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006d22:	611a      	str	r2, [r3, #16]
    hdma_uart5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8006d24:	4b48      	ldr	r3, [pc, #288]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d26:	2200      	movs	r2, #0
 8006d28:	615a      	str	r2, [r3, #20]
    hdma_uart5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8006d2a:	4b47      	ldr	r3, [pc, #284]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d2c:	2200      	movs	r2, #0
 8006d2e:	619a      	str	r2, [r3, #24]
    hdma_uart5_tx.Init.Mode = DMA_NORMAL;
 8006d30:	4b45      	ldr	r3, [pc, #276]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d32:	2200      	movs	r2, #0
 8006d34:	61da      	str	r2, [r3, #28]
    hdma_uart5_tx.Init.Priority = DMA_PRIORITY_MEDIUM;
 8006d36:	4b44      	ldr	r3, [pc, #272]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d38:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8006d3c:	621a      	str	r2, [r3, #32]
    hdma_uart5_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8006d3e:	4b42      	ldr	r3, [pc, #264]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d40:	2200      	movs	r2, #0
 8006d42:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_uart5_tx) != HAL_OK)
 8006d44:	4840      	ldr	r0, [pc, #256]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d46:	f001 f861 	bl	8007e0c <HAL_DMA_Init>
 8006d4a:	4603      	mov	r3, r0
 8006d4c:	2b00      	cmp	r3, #0
 8006d4e:	d001      	beq.n	8006d54 <HAL_UART_MspInit+0x130>
    {
      Error_Handler();
 8006d50:	f7fc ffb0 	bl	8003cb4 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_uart5_tx);
 8006d54:	687b      	ldr	r3, [r7, #4]
 8006d56:	4a3c      	ldr	r2, [pc, #240]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d58:	635a      	str	r2, [r3, #52]	; 0x34
 8006d5a:	4a3b      	ldr	r2, [pc, #236]	; (8006e48 <HAL_UART_MspInit+0x224>)
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	6393      	str	r3, [r2, #56]	; 0x38

    /* UART5 interrupt Init */
    HAL_NVIC_SetPriority(UART5_IRQn, 0, 0);
 8006d60:	2200      	movs	r2, #0
 8006d62:	2100      	movs	r1, #0
 8006d64:	2035      	movs	r0, #53	; 0x35
 8006d66:	f001 f80c 	bl	8007d82 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART5_IRQn);
 8006d6a:	2035      	movs	r0, #53	; 0x35
 8006d6c:	f001 f825 	bl	8007dba <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART6_MspInit 1 */

  /* USER CODE END USART6_MspInit 1 */
  }

}
 8006d70:	e138      	b.n	8006fe4 <HAL_UART_MspInit+0x3c0>
  else if(huart->Instance==UART7)
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	681b      	ldr	r3, [r3, #0]
 8006d76:	4a36      	ldr	r2, [pc, #216]	; (8006e50 <HAL_UART_MspInit+0x22c>)
 8006d78:	4293      	cmp	r3, r2
 8006d7a:	d171      	bne.n	8006e60 <HAL_UART_MspInit+0x23c>
    __HAL_RCC_UART7_CLK_ENABLE();
 8006d7c:	2300      	movs	r3, #0
 8006d7e:	623b      	str	r3, [r7, #32]
 8006d80:	4b2d      	ldr	r3, [pc, #180]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006d82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d84:	4a2c      	ldr	r2, [pc, #176]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006d86:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8006d8a:	6413      	str	r3, [r2, #64]	; 0x40
 8006d8c:	4b2a      	ldr	r3, [pc, #168]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006d8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d90:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8006d94:	623b      	str	r3, [r7, #32]
 8006d96:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8006d98:	2300      	movs	r3, #0
 8006d9a:	61fb      	str	r3, [r7, #28]
 8006d9c:	4b26      	ldr	r3, [pc, #152]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006d9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006da0:	4a25      	ldr	r2, [pc, #148]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006da2:	f043 0320 	orr.w	r3, r3, #32
 8006da6:	6313      	str	r3, [r2, #48]	; 0x30
 8006da8:	4b23      	ldr	r3, [pc, #140]	; (8006e38 <HAL_UART_MspInit+0x214>)
 8006daa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006dac:	f003 0320 	and.w	r3, r3, #32
 8006db0:	61fb      	str	r3, [r7, #28]
 8006db2:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8006db4:	23c0      	movs	r3, #192	; 0xc0
 8006db6:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006db8:	2302      	movs	r3, #2
 8006dba:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006dbc:	2300      	movs	r3, #0
 8006dbe:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006dc0:	2303      	movs	r3, #3
 8006dc2:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 8006dc4:	2308      	movs	r3, #8
 8006dc6:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8006dc8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006dcc:	4619      	mov	r1, r3
 8006dce:	4821      	ldr	r0, [pc, #132]	; (8006e54 <HAL_UART_MspInit+0x230>)
 8006dd0:	f001 fe8a 	bl	8008ae8 <HAL_GPIO_Init>
    hdma_uart7_tx.Instance = DMA1_Stream1;
 8006dd4:	4b20      	ldr	r3, [pc, #128]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006dd6:	4a21      	ldr	r2, [pc, #132]	; (8006e5c <HAL_UART_MspInit+0x238>)
 8006dd8:	601a      	str	r2, [r3, #0]
    hdma_uart7_tx.Init.Channel = DMA_CHANNEL_5;
 8006dda:	4b1f      	ldr	r3, [pc, #124]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006ddc:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8006de0:	605a      	str	r2, [r3, #4]
    hdma_uart7_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8006de2:	4b1d      	ldr	r3, [pc, #116]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006de4:	2240      	movs	r2, #64	; 0x40
 8006de6:	609a      	str	r2, [r3, #8]
    hdma_uart7_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8006de8:	4b1b      	ldr	r3, [pc, #108]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006dea:	2200      	movs	r2, #0
 8006dec:	60da      	str	r2, [r3, #12]
    hdma_uart7_tx.Init.MemInc = DMA_MINC_ENABLE;
 8006dee:	4b1a      	ldr	r3, [pc, #104]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006df0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006df4:	611a      	str	r2, [r3, #16]
    hdma_uart7_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8006df6:	4b18      	ldr	r3, [pc, #96]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006df8:	2200      	movs	r2, #0
 8006dfa:	615a      	str	r2, [r3, #20]
    hdma_uart7_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8006dfc:	4b16      	ldr	r3, [pc, #88]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006dfe:	2200      	movs	r2, #0
 8006e00:	619a      	str	r2, [r3, #24]
    hdma_uart7_tx.Init.Mode = DMA_CIRCULAR;
 8006e02:	4b15      	ldr	r3, [pc, #84]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006e04:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006e08:	61da      	str	r2, [r3, #28]
    hdma_uart7_tx.Init.Priority = DMA_PRIORITY_LOW;
 8006e0a:	4b13      	ldr	r3, [pc, #76]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006e0c:	2200      	movs	r2, #0
 8006e0e:	621a      	str	r2, [r3, #32]
    hdma_uart7_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8006e10:	4b11      	ldr	r3, [pc, #68]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006e12:	2200      	movs	r2, #0
 8006e14:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_uart7_tx) != HAL_OK)
 8006e16:	4810      	ldr	r0, [pc, #64]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006e18:	f000 fff8 	bl	8007e0c <HAL_DMA_Init>
 8006e1c:	4603      	mov	r3, r0
 8006e1e:	2b00      	cmp	r3, #0
 8006e20:	d001      	beq.n	8006e26 <HAL_UART_MspInit+0x202>
      Error_Handler();
 8006e22:	f7fc ff47 	bl	8003cb4 <Error_Handler>
    __HAL_LINKDMA(huart,hdmatx,hdma_uart7_tx);
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	4a0b      	ldr	r2, [pc, #44]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006e2a:	635a      	str	r2, [r3, #52]	; 0x34
 8006e2c:	4a0a      	ldr	r2, [pc, #40]	; (8006e58 <HAL_UART_MspInit+0x234>)
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	6393      	str	r3, [r2, #56]	; 0x38
}
 8006e32:	e0d7      	b.n	8006fe4 <HAL_UART_MspInit+0x3c0>
 8006e34:	40005000 	.word	0x40005000
 8006e38:	40023800 	.word	0x40023800
 8006e3c:	40020400 	.word	0x40020400
 8006e40:	200005e0 	.word	0x200005e0
 8006e44:	40026010 	.word	0x40026010
 8006e48:	20000640 	.word	0x20000640
 8006e4c:	400260b8 	.word	0x400260b8
 8006e50:	40007800 	.word	0x40007800
 8006e54:	40021400 	.word	0x40021400
 8006e58:	200006a0 	.word	0x200006a0
 8006e5c:	40026028 	.word	0x40026028
  else if(huart->Instance==USART2)
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	4a61      	ldr	r2, [pc, #388]	; (8006fec <HAL_UART_MspInit+0x3c8>)
 8006e66:	4293      	cmp	r3, r2
 8006e68:	d15c      	bne.n	8006f24 <HAL_UART_MspInit+0x300>
    __HAL_RCC_USART2_CLK_ENABLE();
 8006e6a:	2300      	movs	r3, #0
 8006e6c:	61bb      	str	r3, [r7, #24]
 8006e6e:	4b60      	ldr	r3, [pc, #384]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006e70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e72:	4a5f      	ldr	r2, [pc, #380]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006e74:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006e78:	6413      	str	r3, [r2, #64]	; 0x40
 8006e7a:	4b5d      	ldr	r3, [pc, #372]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006e7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e7e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006e82:	61bb      	str	r3, [r7, #24]
 8006e84:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006e86:	2300      	movs	r3, #0
 8006e88:	617b      	str	r3, [r7, #20]
 8006e8a:	4b59      	ldr	r3, [pc, #356]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006e8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e8e:	4a58      	ldr	r2, [pc, #352]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006e90:	f043 0301 	orr.w	r3, r3, #1
 8006e94:	6313      	str	r3, [r2, #48]	; 0x30
 8006e96:	4b56      	ldr	r3, [pc, #344]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006e98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e9a:	f003 0301 	and.w	r3, r3, #1
 8006e9e:	617b      	str	r3, [r7, #20]
 8006ea0:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = KUMANDA_TX_Pin|KUMANDA_RX_Pin;
 8006ea2:	230c      	movs	r3, #12
 8006ea4:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006ea6:	2302      	movs	r3, #2
 8006ea8:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006eaa:	2300      	movs	r3, #0
 8006eac:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006eae:	2303      	movs	r3, #3
 8006eb0:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8006eb2:	2307      	movs	r3, #7
 8006eb4:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006eb6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006eba:	4619      	mov	r1, r3
 8006ebc:	484d      	ldr	r0, [pc, #308]	; (8006ff4 <HAL_UART_MspInit+0x3d0>)
 8006ebe:	f001 fe13 	bl	8008ae8 <HAL_GPIO_Init>
    hdma_usart2_rx.Instance = DMA1_Stream5;
 8006ec2:	4b4d      	ldr	r3, [pc, #308]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006ec4:	4a4d      	ldr	r2, [pc, #308]	; (8006ffc <HAL_UART_MspInit+0x3d8>)
 8006ec6:	601a      	str	r2, [r3, #0]
    hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 8006ec8:	4b4b      	ldr	r3, [pc, #300]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006eca:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006ece:	605a      	str	r2, [r3, #4]
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8006ed0:	4b49      	ldr	r3, [pc, #292]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006ed2:	2200      	movs	r2, #0
 8006ed4:	609a      	str	r2, [r3, #8]
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8006ed6:	4b48      	ldr	r3, [pc, #288]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006ed8:	2200      	movs	r2, #0
 8006eda:	60da      	str	r2, [r3, #12]
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8006edc:	4b46      	ldr	r3, [pc, #280]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006ede:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006ee2:	611a      	str	r2, [r3, #16]
    hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8006ee4:	4b44      	ldr	r3, [pc, #272]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006ee6:	2200      	movs	r2, #0
 8006ee8:	615a      	str	r2, [r3, #20]
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8006eea:	4b43      	ldr	r3, [pc, #268]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006eec:	2200      	movs	r2, #0
 8006eee:	619a      	str	r2, [r3, #24]
    hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 8006ef0:	4b41      	ldr	r3, [pc, #260]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006ef2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006ef6:	61da      	str	r2, [r3, #28]
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8006ef8:	4b3f      	ldr	r3, [pc, #252]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006efa:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8006efe:	621a      	str	r2, [r3, #32]
    hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8006f00:	4b3d      	ldr	r3, [pc, #244]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006f02:	2200      	movs	r2, #0
 8006f04:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 8006f06:	483c      	ldr	r0, [pc, #240]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006f08:	f000 ff80 	bl	8007e0c <HAL_DMA_Init>
 8006f0c:	4603      	mov	r3, r0
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d001      	beq.n	8006f16 <HAL_UART_MspInit+0x2f2>
      Error_Handler();
 8006f12:	f7fc fecf 	bl	8003cb4 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	4a37      	ldr	r2, [pc, #220]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006f1a:	639a      	str	r2, [r3, #56]	; 0x38
 8006f1c:	4a36      	ldr	r2, [pc, #216]	; (8006ff8 <HAL_UART_MspInit+0x3d4>)
 8006f1e:	687b      	ldr	r3, [r7, #4]
 8006f20:	6393      	str	r3, [r2, #56]	; 0x38
}
 8006f22:	e05f      	b.n	8006fe4 <HAL_UART_MspInit+0x3c0>
  else if(huart->Instance==USART6)
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	681b      	ldr	r3, [r3, #0]
 8006f28:	4a35      	ldr	r2, [pc, #212]	; (8007000 <HAL_UART_MspInit+0x3dc>)
 8006f2a:	4293      	cmp	r3, r2
 8006f2c:	d15a      	bne.n	8006fe4 <HAL_UART_MspInit+0x3c0>
    __HAL_RCC_USART6_CLK_ENABLE();
 8006f2e:	2300      	movs	r3, #0
 8006f30:	613b      	str	r3, [r7, #16]
 8006f32:	4b2f      	ldr	r3, [pc, #188]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006f34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006f36:	4a2e      	ldr	r2, [pc, #184]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006f38:	f043 0320 	orr.w	r3, r3, #32
 8006f3c:	6453      	str	r3, [r2, #68]	; 0x44
 8006f3e:	4b2c      	ldr	r3, [pc, #176]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006f40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006f42:	f003 0320 	and.w	r3, r3, #32
 8006f46:	613b      	str	r3, [r7, #16]
 8006f48:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8006f4a:	2300      	movs	r3, #0
 8006f4c:	60fb      	str	r3, [r7, #12]
 8006f4e:	4b28      	ldr	r3, [pc, #160]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006f50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f52:	4a27      	ldr	r2, [pc, #156]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006f54:	f043 0304 	orr.w	r3, r3, #4
 8006f58:	6313      	str	r3, [r2, #48]	; 0x30
 8006f5a:	4b25      	ldr	r3, [pc, #148]	; (8006ff0 <HAL_UART_MspInit+0x3cc>)
 8006f5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f5e:	f003 0304 	and.w	r3, r3, #4
 8006f62:	60fb      	str	r3, [r7, #12]
 8006f64:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPS_TX_Pin|GPS_RX_Pin;
 8006f66:	23c0      	movs	r3, #192	; 0xc0
 8006f68:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006f6a:	2302      	movs	r3, #2
 8006f6c:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006f6e:	2300      	movs	r3, #0
 8006f70:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006f72:	2303      	movs	r3, #3
 8006f74:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8006f76:	2308      	movs	r3, #8
 8006f78:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8006f7a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006f7e:	4619      	mov	r1, r3
 8006f80:	4820      	ldr	r0, [pc, #128]	; (8007004 <HAL_UART_MspInit+0x3e0>)
 8006f82:	f001 fdb1 	bl	8008ae8 <HAL_GPIO_Init>
    hdma_usart6_rx.Instance = DMA2_Stream2;
 8006f86:	4b20      	ldr	r3, [pc, #128]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006f88:	4a20      	ldr	r2, [pc, #128]	; (800700c <HAL_UART_MspInit+0x3e8>)
 8006f8a:	601a      	str	r2, [r3, #0]
    hdma_usart6_rx.Init.Channel = DMA_CHANNEL_5;
 8006f8c:	4b1e      	ldr	r3, [pc, #120]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006f8e:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8006f92:	605a      	str	r2, [r3, #4]
    hdma_usart6_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8006f94:	4b1c      	ldr	r3, [pc, #112]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006f96:	2200      	movs	r2, #0
 8006f98:	609a      	str	r2, [r3, #8]
    hdma_usart6_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8006f9a:	4b1b      	ldr	r3, [pc, #108]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006f9c:	2200      	movs	r2, #0
 8006f9e:	60da      	str	r2, [r3, #12]
    hdma_usart6_rx.Init.MemInc = DMA_MINC_ENABLE;
 8006fa0:	4b19      	ldr	r3, [pc, #100]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fa2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006fa6:	611a      	str	r2, [r3, #16]
    hdma_usart6_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8006fa8:	4b17      	ldr	r3, [pc, #92]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006faa:	2200      	movs	r2, #0
 8006fac:	615a      	str	r2, [r3, #20]
    hdma_usart6_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8006fae:	4b16      	ldr	r3, [pc, #88]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fb0:	2200      	movs	r2, #0
 8006fb2:	619a      	str	r2, [r3, #24]
    hdma_usart6_rx.Init.Mode = DMA_CIRCULAR;
 8006fb4:	4b14      	ldr	r3, [pc, #80]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fb6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006fba:	61da      	str	r2, [r3, #28]
    hdma_usart6_rx.Init.Priority = DMA_PRIORITY_LOW;
 8006fbc:	4b12      	ldr	r3, [pc, #72]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fbe:	2200      	movs	r2, #0
 8006fc0:	621a      	str	r2, [r3, #32]
    hdma_usart6_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8006fc2:	4b11      	ldr	r3, [pc, #68]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fc4:	2200      	movs	r2, #0
 8006fc6:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart6_rx) != HAL_OK)
 8006fc8:	480f      	ldr	r0, [pc, #60]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fca:	f000 ff1f 	bl	8007e0c <HAL_DMA_Init>
 8006fce:	4603      	mov	r3, r0
 8006fd0:	2b00      	cmp	r3, #0
 8006fd2:	d001      	beq.n	8006fd8 <HAL_UART_MspInit+0x3b4>
      Error_Handler();
 8006fd4:	f7fc fe6e 	bl	8003cb4 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart6_rx);
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	4a0b      	ldr	r2, [pc, #44]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fdc:	639a      	str	r2, [r3, #56]	; 0x38
 8006fde:	4a0a      	ldr	r2, [pc, #40]	; (8007008 <HAL_UART_MspInit+0x3e4>)
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	6393      	str	r3, [r2, #56]	; 0x38
}
 8006fe4:	bf00      	nop
 8006fe6:	3740      	adds	r7, #64	; 0x40
 8006fe8:	46bd      	mov	sp, r7
 8006fea:	bd80      	pop	{r7, pc}
 8006fec:	40004400 	.word	0x40004400
 8006ff0:	40023800 	.word	0x40023800
 8006ff4:	40020000 	.word	0x40020000
 8006ff8:	20000700 	.word	0x20000700
 8006ffc:	40026088 	.word	0x40026088
 8007000:	40011400 	.word	0x40011400
 8007004:	40020800 	.word	0x40020800
 8007008:	20000760 	.word	0x20000760
 800700c:	40026440 	.word	0x40026440

08007010 <HAL_UART_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
{
 8007010:	b580      	push	{r7, lr}
 8007012:	b082      	sub	sp, #8
 8007014:	af00      	add	r7, sp, #0
 8007016:	6078      	str	r0, [r7, #4]
  if(huart->Instance==UART5)
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	681b      	ldr	r3, [r3, #0]
 800701c:	4a2e      	ldr	r2, [pc, #184]	; (80070d8 <HAL_UART_MspDeInit+0xc8>)
 800701e:	4293      	cmp	r3, r2
 8007020:	d118      	bne.n	8007054 <HAL_UART_MspDeInit+0x44>
  {
  /* USER CODE BEGIN UART5_MspDeInit 0 */

  /* USER CODE END UART5_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_UART5_CLK_DISABLE();
 8007022:	4b2e      	ldr	r3, [pc, #184]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 8007024:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007026:	4a2d      	ldr	r2, [pc, #180]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 8007028:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800702c:	6413      	str	r3, [r2, #64]	; 0x40

    /**UART5 GPIO Configuration
    PB12     ------> UART5_RX
    PB13     ------> UART5_TX
    */
    HAL_GPIO_DeInit(GPIOB, RF_RX_Pin|RF_TX_Pin);
 800702e:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8007032:	482b      	ldr	r0, [pc, #172]	; (80070e0 <HAL_UART_MspDeInit+0xd0>)
 8007034:	f001 feec 	bl	8008e10 <HAL_GPIO_DeInit>

    /* UART5 DMA DeInit */
    HAL_DMA_DeInit(huart->hdmarx);
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800703c:	4618      	mov	r0, r3
 800703e:	f000 ff93 	bl	8007f68 <HAL_DMA_DeInit>
    HAL_DMA_DeInit(huart->hdmatx);
 8007042:	687b      	ldr	r3, [r7, #4]
 8007044:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007046:	4618      	mov	r0, r3
 8007048:	f000 ff8e 	bl	8007f68 <HAL_DMA_DeInit>

    /* UART5 interrupt DeInit */
    HAL_NVIC_DisableIRQ(UART5_IRQn);
 800704c:	2035      	movs	r0, #53	; 0x35
 800704e:	f000 fec2 	bl	8007dd6 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN USART6_MspDeInit 1 */

  /* USER CODE END USART6_MspDeInit 1 */
  }

}
 8007052:	e03d      	b.n	80070d0 <HAL_UART_MspDeInit+0xc0>
  else if(huart->Instance==UART7)
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	681b      	ldr	r3, [r3, #0]
 8007058:	4a22      	ldr	r2, [pc, #136]	; (80070e4 <HAL_UART_MspDeInit+0xd4>)
 800705a:	4293      	cmp	r3, r2
 800705c:	d10f      	bne.n	800707e <HAL_UART_MspDeInit+0x6e>
    __HAL_RCC_UART7_CLK_DISABLE();
 800705e:	4b1f      	ldr	r3, [pc, #124]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 8007060:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007062:	4a1e      	ldr	r2, [pc, #120]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 8007064:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8007068:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_6|GPIO_PIN_7);
 800706a:	21c0      	movs	r1, #192	; 0xc0
 800706c:	481e      	ldr	r0, [pc, #120]	; (80070e8 <HAL_UART_MspDeInit+0xd8>)
 800706e:	f001 fecf 	bl	8008e10 <HAL_GPIO_DeInit>
    HAL_DMA_DeInit(huart->hdmatx);
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007076:	4618      	mov	r0, r3
 8007078:	f000 ff76 	bl	8007f68 <HAL_DMA_DeInit>
}
 800707c:	e028      	b.n	80070d0 <HAL_UART_MspDeInit+0xc0>
  else if(huart->Instance==USART2)
 800707e:	687b      	ldr	r3, [r7, #4]
 8007080:	681b      	ldr	r3, [r3, #0]
 8007082:	4a1a      	ldr	r2, [pc, #104]	; (80070ec <HAL_UART_MspDeInit+0xdc>)
 8007084:	4293      	cmp	r3, r2
 8007086:	d10f      	bne.n	80070a8 <HAL_UART_MspDeInit+0x98>
    __HAL_RCC_USART2_CLK_DISABLE();
 8007088:	4b14      	ldr	r3, [pc, #80]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 800708a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800708c:	4a13      	ldr	r2, [pc, #76]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 800708e:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8007092:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOA, KUMANDA_TX_Pin|KUMANDA_RX_Pin);
 8007094:	210c      	movs	r1, #12
 8007096:	4816      	ldr	r0, [pc, #88]	; (80070f0 <HAL_UART_MspDeInit+0xe0>)
 8007098:	f001 feba 	bl	8008e10 <HAL_GPIO_DeInit>
    HAL_DMA_DeInit(huart->hdmarx);
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80070a0:	4618      	mov	r0, r3
 80070a2:	f000 ff61 	bl	8007f68 <HAL_DMA_DeInit>
}
 80070a6:	e013      	b.n	80070d0 <HAL_UART_MspDeInit+0xc0>
  else if(huart->Instance==USART6)
 80070a8:	687b      	ldr	r3, [r7, #4]
 80070aa:	681b      	ldr	r3, [r3, #0]
 80070ac:	4a11      	ldr	r2, [pc, #68]	; (80070f4 <HAL_UART_MspDeInit+0xe4>)
 80070ae:	4293      	cmp	r3, r2
 80070b0:	d10e      	bne.n	80070d0 <HAL_UART_MspDeInit+0xc0>
    __HAL_RCC_USART6_CLK_DISABLE();
 80070b2:	4b0a      	ldr	r3, [pc, #40]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 80070b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80070b6:	4a09      	ldr	r2, [pc, #36]	; (80070dc <HAL_UART_MspDeInit+0xcc>)
 80070b8:	f023 0320 	bic.w	r3, r3, #32
 80070bc:	6453      	str	r3, [r2, #68]	; 0x44
    HAL_GPIO_DeInit(GPIOC, GPS_TX_Pin|GPS_RX_Pin);
 80070be:	21c0      	movs	r1, #192	; 0xc0
 80070c0:	480d      	ldr	r0, [pc, #52]	; (80070f8 <HAL_UART_MspDeInit+0xe8>)
 80070c2:	f001 fea5 	bl	8008e10 <HAL_GPIO_DeInit>
    HAL_DMA_DeInit(huart->hdmarx);
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80070ca:	4618      	mov	r0, r3
 80070cc:	f000 ff4c 	bl	8007f68 <HAL_DMA_DeInit>
}
 80070d0:	bf00      	nop
 80070d2:	3708      	adds	r7, #8
 80070d4:	46bd      	mov	sp, r7
 80070d6:	bd80      	pop	{r7, pc}
 80070d8:	40005000 	.word	0x40005000
 80070dc:	40023800 	.word	0x40023800
 80070e0:	40020400 	.word	0x40020400
 80070e4:	40007800 	.word	0x40007800
 80070e8:	40021400 	.word	0x40021400
 80070ec:	40004400 	.word	0x40004400
 80070f0:	40020000 	.word	0x40020000
 80070f4:	40011400 	.word	0x40011400
 80070f8:	40020800 	.word	0x40020800

080070fc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80070fc:	b480      	push	{r7}
 80070fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8007100:	e7fe      	b.n	8007100 <NMI_Handler+0x4>

08007102 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8007102:	b480      	push	{r7}
 8007104:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8007106:	e7fe      	b.n	8007106 <HardFault_Handler+0x4>

08007108 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8007108:	b480      	push	{r7}
 800710a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800710c:	e7fe      	b.n	800710c <MemManage_Handler+0x4>

0800710e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800710e:	b480      	push	{r7}
 8007110:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8007112:	e7fe      	b.n	8007112 <BusFault_Handler+0x4>

08007114 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8007114:	b480      	push	{r7}
 8007116:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8007118:	e7fe      	b.n	8007118 <UsageFault_Handler+0x4>

0800711a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800711a:	b480      	push	{r7}
 800711c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800711e:	bf00      	nop
 8007120:	46bd      	mov	sp, r7
 8007122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007126:	4770      	bx	lr

08007128 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8007128:	b480      	push	{r7}
 800712a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800712c:	bf00      	nop
 800712e:	46bd      	mov	sp, r7
 8007130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007134:	4770      	bx	lr

08007136 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8007136:	b480      	push	{r7}
 8007138:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800713a:	bf00      	nop
 800713c:	46bd      	mov	sp, r7
 800713e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007142:	4770      	bx	lr

08007144 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8007144:	b580      	push	{r7, lr}
 8007146:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8007148:	f000 f8d6 	bl	80072f8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800714c:	bf00      	nop
 800714e:	bd80      	pop	{r7, pc}

08007150 <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 8007150:	b580      	push	{r7, lr}
 8007152:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart5_rx);
 8007154:	4802      	ldr	r0, [pc, #8]	; (8007160 <DMA1_Stream0_IRQHandler+0x10>)
 8007156:	f001 f84f 	bl	80081f8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 800715a:	bf00      	nop
 800715c:	bd80      	pop	{r7, pc}
 800715e:	bf00      	nop
 8007160:	200005e0 	.word	0x200005e0

08007164 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 8007164:	b580      	push	{r7, lr}
 8007166:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart7_tx);
 8007168:	4802      	ldr	r0, [pc, #8]	; (8007174 <DMA1_Stream1_IRQHandler+0x10>)
 800716a:	f001 f845 	bl	80081f8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 800716e:	bf00      	nop
 8007170:	bd80      	pop	{r7, pc}
 8007172:	bf00      	nop
 8007174:	200006a0 	.word	0x200006a0

08007178 <DMA1_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
 8007178:	b580      	push	{r7, lr}
 800717a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
 800717c:	4802      	ldr	r0, [pc, #8]	; (8007188 <DMA1_Stream5_IRQHandler+0x10>)
 800717e:	f001 f83b 	bl	80081f8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}
 8007182:	bf00      	nop
 8007184:	bd80      	pop	{r7, pc}
 8007186:	bf00      	nop
 8007188:	20000700 	.word	0x20000700

0800718c <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 800718c:	b580      	push	{r7, lr}
 800718e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart5_tx);
 8007190:	4802      	ldr	r0, [pc, #8]	; (800719c <DMA1_Stream7_IRQHandler+0x10>)
 8007192:	f001 f831 	bl	80081f8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 8007196:	bf00      	nop
 8007198:	bd80      	pop	{r7, pc}
 800719a:	bf00      	nop
 800719c:	20000640 	.word	0x20000640

080071a0 <UART5_IRQHandler>:

/**
  * @brief This function handles UART5 global interrupt.
  */
void UART5_IRQHandler(void)
{
 80071a0:	b580      	push	{r7, lr}
 80071a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART5_IRQn 0 */

  /* USER CODE END UART5_IRQn 0 */
  HAL_UART_IRQHandler(&huart5);
 80071a4:	4802      	ldr	r0, [pc, #8]	; (80071b0 <UART5_IRQHandler+0x10>)
 80071a6:	f005 fa01 	bl	800c5ac <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART5_IRQn 1 */

  /* USER CODE END UART5_IRQn 1 */
}
 80071aa:	bf00      	nop
 80071ac:	bd80      	pop	{r7, pc}
 80071ae:	bf00      	nop
 80071b0:	200004d0 	.word	0x200004d0

080071b4 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 80071b4:	b580      	push	{r7, lr}
 80071b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 80071b8:	4802      	ldr	r0, [pc, #8]	; (80071c4 <DMA2_Stream0_IRQHandler+0x10>)
 80071ba:	f001 f81d 	bl	80081f8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 80071be:	bf00      	nop
 80071c0:	bd80      	pop	{r7, pc}
 80071c2:	bf00      	nop
 80071c4:	20000290 	.word	0x20000290

080071c8 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 80071c8:	b580      	push	{r7, lr}
 80071ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart6_rx);
 80071cc:	4802      	ldr	r0, [pc, #8]	; (80071d8 <DMA2_Stream2_IRQHandler+0x10>)
 80071ce:	f001 f813 	bl	80081f8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 80071d2:	bf00      	nop
 80071d4:	bd80      	pop	{r7, pc}
 80071d6:	bf00      	nop
 80071d8:	20000760 	.word	0x20000760

080071dc <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80071dc:	b480      	push	{r7}
 80071de:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80071e0:	4b06      	ldr	r3, [pc, #24]	; (80071fc <SystemInit+0x20>)
 80071e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80071e6:	4a05      	ldr	r2, [pc, #20]	; (80071fc <SystemInit+0x20>)
 80071e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80071ec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80071f0:	bf00      	nop
 80071f2:	46bd      	mov	sp, r7
 80071f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071f8:	4770      	bx	lr
 80071fa:	bf00      	nop
 80071fc:	e000ed00 	.word	0xe000ed00

08007200 <Reset_Handler>:
 8007200:	f8df d034 	ldr.w	sp, [pc, #52]	; 8007238 <LoopFillZerobss+0x12>
 8007204:	480d      	ldr	r0, [pc, #52]	; (800723c <LoopFillZerobss+0x16>)
 8007206:	490e      	ldr	r1, [pc, #56]	; (8007240 <LoopFillZerobss+0x1a>)
 8007208:	4a0e      	ldr	r2, [pc, #56]	; (8007244 <LoopFillZerobss+0x1e>)
 800720a:	2300      	movs	r3, #0
 800720c:	e002      	b.n	8007214 <LoopCopyDataInit>

0800720e <CopyDataInit>:
 800720e:	58d4      	ldr	r4, [r2, r3]
 8007210:	50c4      	str	r4, [r0, r3]
 8007212:	3304      	adds	r3, #4

08007214 <LoopCopyDataInit>:
 8007214:	18c4      	adds	r4, r0, r3
 8007216:	428c      	cmp	r4, r1
 8007218:	d3f9      	bcc.n	800720e <CopyDataInit>
 800721a:	4a0b      	ldr	r2, [pc, #44]	; (8007248 <LoopFillZerobss+0x22>)
 800721c:	4c0b      	ldr	r4, [pc, #44]	; (800724c <LoopFillZerobss+0x26>)
 800721e:	2300      	movs	r3, #0
 8007220:	e001      	b.n	8007226 <LoopFillZerobss>

08007222 <FillZerobss>:
 8007222:	6013      	str	r3, [r2, #0]
 8007224:	3204      	adds	r2, #4

08007226 <LoopFillZerobss>:
 8007226:	42a2      	cmp	r2, r4
 8007228:	d3fb      	bcc.n	8007222 <FillZerobss>
 800722a:	f7ff ffd7 	bl	80071dc <SystemInit>
 800722e:	f006 fb2f 	bl	800d890 <__libc_init_array>
 8007232:	f7fb fb7d 	bl	8002930 <main>
 8007236:	4770      	bx	lr
 8007238:	20050000 	.word	0x20050000
 800723c:	20000000 	.word	0x20000000
 8007240:	20000198 	.word	0x20000198
 8007244:	08010b98 	.word	0x08010b98
 8007248:	20000198 	.word	0x20000198
 800724c:	20000b98 	.word	0x20000b98

08007250 <ADC_IRQHandler>:
 8007250:	e7fe      	b.n	8007250 <ADC_IRQHandler>
	...

08007254 <HAL_Init>:
 8007254:	b580      	push	{r7, lr}
 8007256:	af00      	add	r7, sp, #0
 8007258:	4b0e      	ldr	r3, [pc, #56]	; (8007294 <HAL_Init+0x40>)
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	4a0d      	ldr	r2, [pc, #52]	; (8007294 <HAL_Init+0x40>)
 800725e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007262:	6013      	str	r3, [r2, #0]
 8007264:	4b0b      	ldr	r3, [pc, #44]	; (8007294 <HAL_Init+0x40>)
 8007266:	681b      	ldr	r3, [r3, #0]
 8007268:	4a0a      	ldr	r2, [pc, #40]	; (8007294 <HAL_Init+0x40>)
 800726a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800726e:	6013      	str	r3, [r2, #0]
 8007270:	4b08      	ldr	r3, [pc, #32]	; (8007294 <HAL_Init+0x40>)
 8007272:	681b      	ldr	r3, [r3, #0]
 8007274:	4a07      	ldr	r2, [pc, #28]	; (8007294 <HAL_Init+0x40>)
 8007276:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800727a:	6013      	str	r3, [r2, #0]
 800727c:	2003      	movs	r0, #3
 800727e:	f000 fd75 	bl	8007d6c <HAL_NVIC_SetPriorityGrouping>
 8007282:	200f      	movs	r0, #15
 8007284:	f000 f808 	bl	8007298 <HAL_InitTick>
 8007288:	f7ff fa6c 	bl	8006764 <HAL_MspInit>
 800728c:	2300      	movs	r3, #0
 800728e:	4618      	mov	r0, r3
 8007290:	bd80      	pop	{r7, pc}
 8007292:	bf00      	nop
 8007294:	40023c00 	.word	0x40023c00

08007298 <HAL_InitTick>:
 8007298:	b580      	push	{r7, lr}
 800729a:	b082      	sub	sp, #8
 800729c:	af00      	add	r7, sp, #0
 800729e:	6078      	str	r0, [r7, #4]
 80072a0:	4b12      	ldr	r3, [pc, #72]	; (80072ec <HAL_InitTick+0x54>)
 80072a2:	681a      	ldr	r2, [r3, #0]
 80072a4:	4b12      	ldr	r3, [pc, #72]	; (80072f0 <HAL_InitTick+0x58>)
 80072a6:	781b      	ldrb	r3, [r3, #0]
 80072a8:	4619      	mov	r1, r3
 80072aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80072ae:	fbb3 f3f1 	udiv	r3, r3, r1
 80072b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80072b6:	4618      	mov	r0, r3
 80072b8:	f000 fd9b 	bl	8007df2 <HAL_SYSTICK_Config>
 80072bc:	4603      	mov	r3, r0
 80072be:	2b00      	cmp	r3, #0
 80072c0:	d001      	beq.n	80072c6 <HAL_InitTick+0x2e>
 80072c2:	2301      	movs	r3, #1
 80072c4:	e00e      	b.n	80072e4 <HAL_InitTick+0x4c>
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	2b0f      	cmp	r3, #15
 80072ca:	d80a      	bhi.n	80072e2 <HAL_InitTick+0x4a>
 80072cc:	2200      	movs	r2, #0
 80072ce:	6879      	ldr	r1, [r7, #4]
 80072d0:	f04f 30ff 	mov.w	r0, #4294967295
 80072d4:	f000 fd55 	bl	8007d82 <HAL_NVIC_SetPriority>
 80072d8:	4a06      	ldr	r2, [pc, #24]	; (80072f4 <HAL_InitTick+0x5c>)
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	6013      	str	r3, [r2, #0]
 80072de:	2300      	movs	r3, #0
 80072e0:	e000      	b.n	80072e4 <HAL_InitTick+0x4c>
 80072e2:	2301      	movs	r3, #1
 80072e4:	4618      	mov	r0, r3
 80072e6:	3708      	adds	r7, #8
 80072e8:	46bd      	mov	sp, r7
 80072ea:	bd80      	pop	{r7, pc}
 80072ec:	20000128 	.word	0x20000128
 80072f0:	20000130 	.word	0x20000130
 80072f4:	2000012c 	.word	0x2000012c

080072f8 <HAL_IncTick>:
 80072f8:	b480      	push	{r7}
 80072fa:	af00      	add	r7, sp, #0
 80072fc:	4b06      	ldr	r3, [pc, #24]	; (8007318 <HAL_IncTick+0x20>)
 80072fe:	781b      	ldrb	r3, [r3, #0]
 8007300:	461a      	mov	r2, r3
 8007302:	4b06      	ldr	r3, [pc, #24]	; (800731c <HAL_IncTick+0x24>)
 8007304:	681b      	ldr	r3, [r3, #0]
 8007306:	4413      	add	r3, r2
 8007308:	4a04      	ldr	r2, [pc, #16]	; (800731c <HAL_IncTick+0x24>)
 800730a:	6013      	str	r3, [r2, #0]
 800730c:	bf00      	nop
 800730e:	46bd      	mov	sp, r7
 8007310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007314:	4770      	bx	lr
 8007316:	bf00      	nop
 8007318:	20000130 	.word	0x20000130
 800731c:	20000b74 	.word	0x20000b74

08007320 <HAL_GetTick>:
 8007320:	b480      	push	{r7}
 8007322:	af00      	add	r7, sp, #0
 8007324:	4b03      	ldr	r3, [pc, #12]	; (8007334 <HAL_GetTick+0x14>)
 8007326:	681b      	ldr	r3, [r3, #0]
 8007328:	4618      	mov	r0, r3
 800732a:	46bd      	mov	sp, r7
 800732c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007330:	4770      	bx	lr
 8007332:	bf00      	nop
 8007334:	20000b74 	.word	0x20000b74

08007338 <HAL_Delay>:
 8007338:	b580      	push	{r7, lr}
 800733a:	b084      	sub	sp, #16
 800733c:	af00      	add	r7, sp, #0
 800733e:	6078      	str	r0, [r7, #4]
 8007340:	f7ff ffee 	bl	8007320 <HAL_GetTick>
 8007344:	60b8      	str	r0, [r7, #8]
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	60fb      	str	r3, [r7, #12]
 800734a:	68fb      	ldr	r3, [r7, #12]
 800734c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007350:	d005      	beq.n	800735e <HAL_Delay+0x26>
 8007352:	4b0a      	ldr	r3, [pc, #40]	; (800737c <HAL_Delay+0x44>)
 8007354:	781b      	ldrb	r3, [r3, #0]
 8007356:	461a      	mov	r2, r3
 8007358:	68fb      	ldr	r3, [r7, #12]
 800735a:	4413      	add	r3, r2
 800735c:	60fb      	str	r3, [r7, #12]
 800735e:	bf00      	nop
 8007360:	f7ff ffde 	bl	8007320 <HAL_GetTick>
 8007364:	4602      	mov	r2, r0
 8007366:	68bb      	ldr	r3, [r7, #8]
 8007368:	1ad3      	subs	r3, r2, r3
 800736a:	68fa      	ldr	r2, [r7, #12]
 800736c:	429a      	cmp	r2, r3
 800736e:	d8f7      	bhi.n	8007360 <HAL_Delay+0x28>
 8007370:	bf00      	nop
 8007372:	bf00      	nop
 8007374:	3710      	adds	r7, #16
 8007376:	46bd      	mov	sp, r7
 8007378:	bd80      	pop	{r7, pc}
 800737a:	bf00      	nop
 800737c:	20000130 	.word	0x20000130

08007380 <HAL_ADC_Init>:
 8007380:	b580      	push	{r7, lr}
 8007382:	b084      	sub	sp, #16
 8007384:	af00      	add	r7, sp, #0
 8007386:	6078      	str	r0, [r7, #4]
 8007388:	2300      	movs	r3, #0
 800738a:	73fb      	strb	r3, [r7, #15]
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	2b00      	cmp	r3, #0
 8007390:	d101      	bne.n	8007396 <HAL_ADC_Init+0x16>
 8007392:	2301      	movs	r3, #1
 8007394:	e033      	b.n	80073fe <HAL_ADC_Init+0x7e>
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800739a:	2b00      	cmp	r3, #0
 800739c:	d109      	bne.n	80073b2 <HAL_ADC_Init+0x32>
 800739e:	6878      	ldr	r0, [r7, #4]
 80073a0:	f7ff fa08 	bl	80067b4 <HAL_ADC_MspInit>
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	2200      	movs	r2, #0
 80073a8:	645a      	str	r2, [r3, #68]	; 0x44
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	2200      	movs	r2, #0
 80073ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073b2:	687b      	ldr	r3, [r7, #4]
 80073b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073b6:	f003 0310 	and.w	r3, r3, #16
 80073ba:	2b00      	cmp	r3, #0
 80073bc:	d118      	bne.n	80073f0 <HAL_ADC_Init+0x70>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073c2:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80073c6:	f023 0302 	bic.w	r3, r3, #2
 80073ca:	f043 0202 	orr.w	r2, r3, #2
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	641a      	str	r2, [r3, #64]	; 0x40
 80073d2:	6878      	ldr	r0, [r7, #4]
 80073d4:	f000 fa58 	bl	8007888 <ADC_Init>
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	2200      	movs	r2, #0
 80073dc:	645a      	str	r2, [r3, #68]	; 0x44
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073e2:	f023 0303 	bic.w	r3, r3, #3
 80073e6:	f043 0201 	orr.w	r2, r3, #1
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	641a      	str	r2, [r3, #64]	; 0x40
 80073ee:	e001      	b.n	80073f4 <HAL_ADC_Init+0x74>
 80073f0:	2301      	movs	r3, #1
 80073f2:	73fb      	strb	r3, [r7, #15]
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	2200      	movs	r2, #0
 80073f8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073fc:	7bfb      	ldrb	r3, [r7, #15]
 80073fe:	4618      	mov	r0, r3
 8007400:	3710      	adds	r7, #16
 8007402:	46bd      	mov	sp, r7
 8007404:	bd80      	pop	{r7, pc}
	...

08007408 <HAL_ADC_Start_DMA>:
 8007408:	b580      	push	{r7, lr}
 800740a:	b086      	sub	sp, #24
 800740c:	af00      	add	r7, sp, #0
 800740e:	60f8      	str	r0, [r7, #12]
 8007410:	60b9      	str	r1, [r7, #8]
 8007412:	607a      	str	r2, [r7, #4]
 8007414:	2300      	movs	r3, #0
 8007416:	613b      	str	r3, [r7, #16]
 8007418:	68fb      	ldr	r3, [r7, #12]
 800741a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800741e:	2b01      	cmp	r3, #1
 8007420:	d101      	bne.n	8007426 <HAL_ADC_Start_DMA+0x1e>
 8007422:	2302      	movs	r3, #2
 8007424:	e0ce      	b.n	80075c4 <HAL_ADC_Start_DMA+0x1bc>
 8007426:	68fb      	ldr	r3, [r7, #12]
 8007428:	2201      	movs	r2, #1
 800742a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800742e:	68fb      	ldr	r3, [r7, #12]
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	689b      	ldr	r3, [r3, #8]
 8007434:	f003 0301 	and.w	r3, r3, #1
 8007438:	2b01      	cmp	r3, #1
 800743a:	d018      	beq.n	800746e <HAL_ADC_Start_DMA+0x66>
 800743c:	68fb      	ldr	r3, [r7, #12]
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	689a      	ldr	r2, [r3, #8]
 8007442:	68fb      	ldr	r3, [r7, #12]
 8007444:	681b      	ldr	r3, [r3, #0]
 8007446:	f042 0201 	orr.w	r2, r2, #1
 800744a:	609a      	str	r2, [r3, #8]
 800744c:	4b5f      	ldr	r3, [pc, #380]	; (80075cc <HAL_ADC_Start_DMA+0x1c4>)
 800744e:	681b      	ldr	r3, [r3, #0]
 8007450:	4a5f      	ldr	r2, [pc, #380]	; (80075d0 <HAL_ADC_Start_DMA+0x1c8>)
 8007452:	fba2 2303 	umull	r2, r3, r2, r3
 8007456:	0c9a      	lsrs	r2, r3, #18
 8007458:	4613      	mov	r3, r2
 800745a:	005b      	lsls	r3, r3, #1
 800745c:	4413      	add	r3, r2
 800745e:	613b      	str	r3, [r7, #16]
 8007460:	e002      	b.n	8007468 <HAL_ADC_Start_DMA+0x60>
 8007462:	693b      	ldr	r3, [r7, #16]
 8007464:	3b01      	subs	r3, #1
 8007466:	613b      	str	r3, [r7, #16]
 8007468:	693b      	ldr	r3, [r7, #16]
 800746a:	2b00      	cmp	r3, #0
 800746c:	d1f9      	bne.n	8007462 <HAL_ADC_Start_DMA+0x5a>
 800746e:	68fb      	ldr	r3, [r7, #12]
 8007470:	681b      	ldr	r3, [r3, #0]
 8007472:	689b      	ldr	r3, [r3, #8]
 8007474:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007478:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800747c:	d107      	bne.n	800748e <HAL_ADC_Start_DMA+0x86>
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	681b      	ldr	r3, [r3, #0]
 8007482:	689a      	ldr	r2, [r3, #8]
 8007484:	68fb      	ldr	r3, [r7, #12]
 8007486:	681b      	ldr	r3, [r3, #0]
 8007488:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800748c:	609a      	str	r2, [r3, #8]
 800748e:	68fb      	ldr	r3, [r7, #12]
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	689b      	ldr	r3, [r3, #8]
 8007494:	f003 0301 	and.w	r3, r3, #1
 8007498:	2b01      	cmp	r3, #1
 800749a:	f040 8086 	bne.w	80075aa <HAL_ADC_Start_DMA+0x1a2>
 800749e:	68fb      	ldr	r3, [r7, #12]
 80074a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074a2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80074a6:	f023 0301 	bic.w	r3, r3, #1
 80074aa:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	641a      	str	r2, [r3, #64]	; 0x40
 80074b2:	68fb      	ldr	r3, [r7, #12]
 80074b4:	681b      	ldr	r3, [r3, #0]
 80074b6:	685b      	ldr	r3, [r3, #4]
 80074b8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80074bc:	2b00      	cmp	r3, #0
 80074be:	d007      	beq.n	80074d0 <HAL_ADC_Start_DMA+0xc8>
 80074c0:	68fb      	ldr	r3, [r7, #12]
 80074c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074c4:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80074c8:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80074cc:	68fb      	ldr	r3, [r7, #12]
 80074ce:	641a      	str	r2, [r3, #64]	; 0x40
 80074d0:	68fb      	ldr	r3, [r7, #12]
 80074d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074d4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80074d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80074dc:	d106      	bne.n	80074ec <HAL_ADC_Start_DMA+0xe4>
 80074de:	68fb      	ldr	r3, [r7, #12]
 80074e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80074e2:	f023 0206 	bic.w	r2, r3, #6
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	645a      	str	r2, [r3, #68]	; 0x44
 80074ea:	e002      	b.n	80074f2 <HAL_ADC_Start_DMA+0xea>
 80074ec:	68fb      	ldr	r3, [r7, #12]
 80074ee:	2200      	movs	r2, #0
 80074f0:	645a      	str	r2, [r3, #68]	; 0x44
 80074f2:	68fb      	ldr	r3, [r7, #12]
 80074f4:	2200      	movs	r2, #0
 80074f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80074fa:	4b36      	ldr	r3, [pc, #216]	; (80075d4 <HAL_ADC_Start_DMA+0x1cc>)
 80074fc:	617b      	str	r3, [r7, #20]
 80074fe:	68fb      	ldr	r3, [r7, #12]
 8007500:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007502:	4a35      	ldr	r2, [pc, #212]	; (80075d8 <HAL_ADC_Start_DMA+0x1d0>)
 8007504:	63da      	str	r2, [r3, #60]	; 0x3c
 8007506:	68fb      	ldr	r3, [r7, #12]
 8007508:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800750a:	4a34      	ldr	r2, [pc, #208]	; (80075dc <HAL_ADC_Start_DMA+0x1d4>)
 800750c:	641a      	str	r2, [r3, #64]	; 0x40
 800750e:	68fb      	ldr	r3, [r7, #12]
 8007510:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007512:	4a33      	ldr	r2, [pc, #204]	; (80075e0 <HAL_ADC_Start_DMA+0x1d8>)
 8007514:	64da      	str	r2, [r3, #76]	; 0x4c
 8007516:	68fb      	ldr	r3, [r7, #12]
 8007518:	681b      	ldr	r3, [r3, #0]
 800751a:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800751e:	601a      	str	r2, [r3, #0]
 8007520:	68fb      	ldr	r3, [r7, #12]
 8007522:	681b      	ldr	r3, [r3, #0]
 8007524:	685a      	ldr	r2, [r3, #4]
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	681b      	ldr	r3, [r3, #0]
 800752a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800752e:	605a      	str	r2, [r3, #4]
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	681b      	ldr	r3, [r3, #0]
 8007534:	689a      	ldr	r2, [r3, #8]
 8007536:	68fb      	ldr	r3, [r7, #12]
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800753e:	609a      	str	r2, [r3, #8]
 8007540:	68fb      	ldr	r3, [r7, #12]
 8007542:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8007544:	68fb      	ldr	r3, [r7, #12]
 8007546:	681b      	ldr	r3, [r3, #0]
 8007548:	334c      	adds	r3, #76	; 0x4c
 800754a:	4619      	mov	r1, r3
 800754c:	68ba      	ldr	r2, [r7, #8]
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	f000 fd68 	bl	8008024 <HAL_DMA_Start_IT>
 8007554:	697b      	ldr	r3, [r7, #20]
 8007556:	685b      	ldr	r3, [r3, #4]
 8007558:	f003 031f 	and.w	r3, r3, #31
 800755c:	2b00      	cmp	r3, #0
 800755e:	d10f      	bne.n	8007580 <HAL_ADC_Start_DMA+0x178>
 8007560:	68fb      	ldr	r3, [r7, #12]
 8007562:	681b      	ldr	r3, [r3, #0]
 8007564:	689b      	ldr	r3, [r3, #8]
 8007566:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800756a:	2b00      	cmp	r3, #0
 800756c:	d129      	bne.n	80075c2 <HAL_ADC_Start_DMA+0x1ba>
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	681b      	ldr	r3, [r3, #0]
 8007572:	689a      	ldr	r2, [r3, #8]
 8007574:	68fb      	ldr	r3, [r7, #12]
 8007576:	681b      	ldr	r3, [r3, #0]
 8007578:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800757c:	609a      	str	r2, [r3, #8]
 800757e:	e020      	b.n	80075c2 <HAL_ADC_Start_DMA+0x1ba>
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	681b      	ldr	r3, [r3, #0]
 8007584:	4a17      	ldr	r2, [pc, #92]	; (80075e4 <HAL_ADC_Start_DMA+0x1dc>)
 8007586:	4293      	cmp	r3, r2
 8007588:	d11b      	bne.n	80075c2 <HAL_ADC_Start_DMA+0x1ba>
 800758a:	68fb      	ldr	r3, [r7, #12]
 800758c:	681b      	ldr	r3, [r3, #0]
 800758e:	689b      	ldr	r3, [r3, #8]
 8007590:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007594:	2b00      	cmp	r3, #0
 8007596:	d114      	bne.n	80075c2 <HAL_ADC_Start_DMA+0x1ba>
 8007598:	68fb      	ldr	r3, [r7, #12]
 800759a:	681b      	ldr	r3, [r3, #0]
 800759c:	689a      	ldr	r2, [r3, #8]
 800759e:	68fb      	ldr	r3, [r7, #12]
 80075a0:	681b      	ldr	r3, [r3, #0]
 80075a2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80075a6:	609a      	str	r2, [r3, #8]
 80075a8:	e00b      	b.n	80075c2 <HAL_ADC_Start_DMA+0x1ba>
 80075aa:	68fb      	ldr	r3, [r7, #12]
 80075ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075ae:	f043 0210 	orr.w	r2, r3, #16
 80075b2:	68fb      	ldr	r3, [r7, #12]
 80075b4:	641a      	str	r2, [r3, #64]	; 0x40
 80075b6:	68fb      	ldr	r3, [r7, #12]
 80075b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80075ba:	f043 0201 	orr.w	r2, r3, #1
 80075be:	68fb      	ldr	r3, [r7, #12]
 80075c0:	645a      	str	r2, [r3, #68]	; 0x44
 80075c2:	2300      	movs	r3, #0
 80075c4:	4618      	mov	r0, r3
 80075c6:	3718      	adds	r7, #24
 80075c8:	46bd      	mov	sp, r7
 80075ca:	bd80      	pop	{r7, pc}
 80075cc:	20000128 	.word	0x20000128
 80075d0:	431bde83 	.word	0x431bde83
 80075d4:	40012300 	.word	0x40012300
 80075d8:	08007a81 	.word	0x08007a81
 80075dc:	08007b3b 	.word	0x08007b3b
 80075e0:	08007b57 	.word	0x08007b57
 80075e4:	40012000 	.word	0x40012000

080075e8 <HAL_ADC_ConvCpltCallback>:
 80075e8:	b480      	push	{r7}
 80075ea:	b083      	sub	sp, #12
 80075ec:	af00      	add	r7, sp, #0
 80075ee:	6078      	str	r0, [r7, #4]
 80075f0:	bf00      	nop
 80075f2:	370c      	adds	r7, #12
 80075f4:	46bd      	mov	sp, r7
 80075f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075fa:	4770      	bx	lr

080075fc <HAL_ADC_ConvHalfCpltCallback>:
 80075fc:	b480      	push	{r7}
 80075fe:	b083      	sub	sp, #12
 8007600:	af00      	add	r7, sp, #0
 8007602:	6078      	str	r0, [r7, #4]
 8007604:	bf00      	nop
 8007606:	370c      	adds	r7, #12
 8007608:	46bd      	mov	sp, r7
 800760a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800760e:	4770      	bx	lr

08007610 <HAL_ADC_ErrorCallback>:
 8007610:	b480      	push	{r7}
 8007612:	b083      	sub	sp, #12
 8007614:	af00      	add	r7, sp, #0
 8007616:	6078      	str	r0, [r7, #4]
 8007618:	bf00      	nop
 800761a:	370c      	adds	r7, #12
 800761c:	46bd      	mov	sp, r7
 800761e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007622:	4770      	bx	lr

08007624 <HAL_ADC_ConfigChannel>:
 8007624:	b480      	push	{r7}
 8007626:	b085      	sub	sp, #20
 8007628:	af00      	add	r7, sp, #0
 800762a:	6078      	str	r0, [r7, #4]
 800762c:	6039      	str	r1, [r7, #0]
 800762e:	2300      	movs	r3, #0
 8007630:	60bb      	str	r3, [r7, #8]
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007638:	2b01      	cmp	r3, #1
 800763a:	d101      	bne.n	8007640 <HAL_ADC_ConfigChannel+0x1c>
 800763c:	2302      	movs	r3, #2
 800763e:	e113      	b.n	8007868 <HAL_ADC_ConfigChannel+0x244>
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	2201      	movs	r2, #1
 8007644:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007648:	683b      	ldr	r3, [r7, #0]
 800764a:	681b      	ldr	r3, [r3, #0]
 800764c:	2b09      	cmp	r3, #9
 800764e:	d925      	bls.n	800769c <HAL_ADC_ConfigChannel+0x78>
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	68d9      	ldr	r1, [r3, #12]
 8007656:	683b      	ldr	r3, [r7, #0]
 8007658:	681b      	ldr	r3, [r3, #0]
 800765a:	b29b      	uxth	r3, r3
 800765c:	461a      	mov	r2, r3
 800765e:	4613      	mov	r3, r2
 8007660:	005b      	lsls	r3, r3, #1
 8007662:	4413      	add	r3, r2
 8007664:	3b1e      	subs	r3, #30
 8007666:	2207      	movs	r2, #7
 8007668:	fa02 f303 	lsl.w	r3, r2, r3
 800766c:	43da      	mvns	r2, r3
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	681b      	ldr	r3, [r3, #0]
 8007672:	400a      	ands	r2, r1
 8007674:	60da      	str	r2, [r3, #12]
 8007676:	687b      	ldr	r3, [r7, #4]
 8007678:	681b      	ldr	r3, [r3, #0]
 800767a:	68d9      	ldr	r1, [r3, #12]
 800767c:	683b      	ldr	r3, [r7, #0]
 800767e:	689a      	ldr	r2, [r3, #8]
 8007680:	683b      	ldr	r3, [r7, #0]
 8007682:	681b      	ldr	r3, [r3, #0]
 8007684:	b29b      	uxth	r3, r3
 8007686:	4618      	mov	r0, r3
 8007688:	4603      	mov	r3, r0
 800768a:	005b      	lsls	r3, r3, #1
 800768c:	4403      	add	r3, r0
 800768e:	3b1e      	subs	r3, #30
 8007690:	409a      	lsls	r2, r3
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	681b      	ldr	r3, [r3, #0]
 8007696:	430a      	orrs	r2, r1
 8007698:	60da      	str	r2, [r3, #12]
 800769a:	e022      	b.n	80076e2 <HAL_ADC_ConfigChannel+0xbe>
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	6919      	ldr	r1, [r3, #16]
 80076a2:	683b      	ldr	r3, [r7, #0]
 80076a4:	681b      	ldr	r3, [r3, #0]
 80076a6:	b29b      	uxth	r3, r3
 80076a8:	461a      	mov	r2, r3
 80076aa:	4613      	mov	r3, r2
 80076ac:	005b      	lsls	r3, r3, #1
 80076ae:	4413      	add	r3, r2
 80076b0:	2207      	movs	r2, #7
 80076b2:	fa02 f303 	lsl.w	r3, r2, r3
 80076b6:	43da      	mvns	r2, r3
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	681b      	ldr	r3, [r3, #0]
 80076bc:	400a      	ands	r2, r1
 80076be:	611a      	str	r2, [r3, #16]
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	681b      	ldr	r3, [r3, #0]
 80076c4:	6919      	ldr	r1, [r3, #16]
 80076c6:	683b      	ldr	r3, [r7, #0]
 80076c8:	689a      	ldr	r2, [r3, #8]
 80076ca:	683b      	ldr	r3, [r7, #0]
 80076cc:	681b      	ldr	r3, [r3, #0]
 80076ce:	b29b      	uxth	r3, r3
 80076d0:	4618      	mov	r0, r3
 80076d2:	4603      	mov	r3, r0
 80076d4:	005b      	lsls	r3, r3, #1
 80076d6:	4403      	add	r3, r0
 80076d8:	409a      	lsls	r2, r3
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	681b      	ldr	r3, [r3, #0]
 80076de:	430a      	orrs	r2, r1
 80076e0:	611a      	str	r2, [r3, #16]
 80076e2:	683b      	ldr	r3, [r7, #0]
 80076e4:	685b      	ldr	r3, [r3, #4]
 80076e6:	2b06      	cmp	r3, #6
 80076e8:	d824      	bhi.n	8007734 <HAL_ADC_ConfigChannel+0x110>
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	681b      	ldr	r3, [r3, #0]
 80076ee:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80076f0:	683b      	ldr	r3, [r7, #0]
 80076f2:	685a      	ldr	r2, [r3, #4]
 80076f4:	4613      	mov	r3, r2
 80076f6:	009b      	lsls	r3, r3, #2
 80076f8:	4413      	add	r3, r2
 80076fa:	3b05      	subs	r3, #5
 80076fc:	221f      	movs	r2, #31
 80076fe:	fa02 f303 	lsl.w	r3, r2, r3
 8007702:	43da      	mvns	r2, r3
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	400a      	ands	r2, r1
 800770a:	635a      	str	r2, [r3, #52]	; 0x34
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007712:	683b      	ldr	r3, [r7, #0]
 8007714:	681b      	ldr	r3, [r3, #0]
 8007716:	b29b      	uxth	r3, r3
 8007718:	4618      	mov	r0, r3
 800771a:	683b      	ldr	r3, [r7, #0]
 800771c:	685a      	ldr	r2, [r3, #4]
 800771e:	4613      	mov	r3, r2
 8007720:	009b      	lsls	r3, r3, #2
 8007722:	4413      	add	r3, r2
 8007724:	3b05      	subs	r3, #5
 8007726:	fa00 f203 	lsl.w	r2, r0, r3
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	430a      	orrs	r2, r1
 8007730:	635a      	str	r2, [r3, #52]	; 0x34
 8007732:	e04c      	b.n	80077ce <HAL_ADC_ConfigChannel+0x1aa>
 8007734:	683b      	ldr	r3, [r7, #0]
 8007736:	685b      	ldr	r3, [r3, #4]
 8007738:	2b0c      	cmp	r3, #12
 800773a:	d824      	bhi.n	8007786 <HAL_ADC_ConfigChannel+0x162>
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007742:	683b      	ldr	r3, [r7, #0]
 8007744:	685a      	ldr	r2, [r3, #4]
 8007746:	4613      	mov	r3, r2
 8007748:	009b      	lsls	r3, r3, #2
 800774a:	4413      	add	r3, r2
 800774c:	3b23      	subs	r3, #35	; 0x23
 800774e:	221f      	movs	r2, #31
 8007750:	fa02 f303 	lsl.w	r3, r2, r3
 8007754:	43da      	mvns	r2, r3
 8007756:	687b      	ldr	r3, [r7, #4]
 8007758:	681b      	ldr	r3, [r3, #0]
 800775a:	400a      	ands	r2, r1
 800775c:	631a      	str	r2, [r3, #48]	; 0x30
 800775e:	687b      	ldr	r3, [r7, #4]
 8007760:	681b      	ldr	r3, [r3, #0]
 8007762:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007764:	683b      	ldr	r3, [r7, #0]
 8007766:	681b      	ldr	r3, [r3, #0]
 8007768:	b29b      	uxth	r3, r3
 800776a:	4618      	mov	r0, r3
 800776c:	683b      	ldr	r3, [r7, #0]
 800776e:	685a      	ldr	r2, [r3, #4]
 8007770:	4613      	mov	r3, r2
 8007772:	009b      	lsls	r3, r3, #2
 8007774:	4413      	add	r3, r2
 8007776:	3b23      	subs	r3, #35	; 0x23
 8007778:	fa00 f203 	lsl.w	r2, r0, r3
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	430a      	orrs	r2, r1
 8007782:	631a      	str	r2, [r3, #48]	; 0x30
 8007784:	e023      	b.n	80077ce <HAL_ADC_ConfigChannel+0x1aa>
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	681b      	ldr	r3, [r3, #0]
 800778a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800778c:	683b      	ldr	r3, [r7, #0]
 800778e:	685a      	ldr	r2, [r3, #4]
 8007790:	4613      	mov	r3, r2
 8007792:	009b      	lsls	r3, r3, #2
 8007794:	4413      	add	r3, r2
 8007796:	3b41      	subs	r3, #65	; 0x41
 8007798:	221f      	movs	r2, #31
 800779a:	fa02 f303 	lsl.w	r3, r2, r3
 800779e:	43da      	mvns	r2, r3
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	681b      	ldr	r3, [r3, #0]
 80077a4:	400a      	ands	r2, r1
 80077a6:	62da      	str	r2, [r3, #44]	; 0x2c
 80077a8:	687b      	ldr	r3, [r7, #4]
 80077aa:	681b      	ldr	r3, [r3, #0]
 80077ac:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80077ae:	683b      	ldr	r3, [r7, #0]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	b29b      	uxth	r3, r3
 80077b4:	4618      	mov	r0, r3
 80077b6:	683b      	ldr	r3, [r7, #0]
 80077b8:	685a      	ldr	r2, [r3, #4]
 80077ba:	4613      	mov	r3, r2
 80077bc:	009b      	lsls	r3, r3, #2
 80077be:	4413      	add	r3, r2
 80077c0:	3b41      	subs	r3, #65	; 0x41
 80077c2:	fa00 f203 	lsl.w	r2, r0, r3
 80077c6:	687b      	ldr	r3, [r7, #4]
 80077c8:	681b      	ldr	r3, [r3, #0]
 80077ca:	430a      	orrs	r2, r1
 80077cc:	62da      	str	r2, [r3, #44]	; 0x2c
 80077ce:	4b29      	ldr	r3, [pc, #164]	; (8007874 <HAL_ADC_ConfigChannel+0x250>)
 80077d0:	60fb      	str	r3, [r7, #12]
 80077d2:	687b      	ldr	r3, [r7, #4]
 80077d4:	681b      	ldr	r3, [r3, #0]
 80077d6:	4a28      	ldr	r2, [pc, #160]	; (8007878 <HAL_ADC_ConfigChannel+0x254>)
 80077d8:	4293      	cmp	r3, r2
 80077da:	d10f      	bne.n	80077fc <HAL_ADC_ConfigChannel+0x1d8>
 80077dc:	683b      	ldr	r3, [r7, #0]
 80077de:	681b      	ldr	r3, [r3, #0]
 80077e0:	2b12      	cmp	r3, #18
 80077e2:	d10b      	bne.n	80077fc <HAL_ADC_ConfigChannel+0x1d8>
 80077e4:	68fb      	ldr	r3, [r7, #12]
 80077e6:	685b      	ldr	r3, [r3, #4]
 80077e8:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 80077ec:	68fb      	ldr	r3, [r7, #12]
 80077ee:	605a      	str	r2, [r3, #4]
 80077f0:	68fb      	ldr	r3, [r7, #12]
 80077f2:	685b      	ldr	r3, [r3, #4]
 80077f4:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80077f8:	68fb      	ldr	r3, [r7, #12]
 80077fa:	605a      	str	r2, [r3, #4]
 80077fc:	687b      	ldr	r3, [r7, #4]
 80077fe:	681b      	ldr	r3, [r3, #0]
 8007800:	4a1d      	ldr	r2, [pc, #116]	; (8007878 <HAL_ADC_ConfigChannel+0x254>)
 8007802:	4293      	cmp	r3, r2
 8007804:	d12b      	bne.n	800785e <HAL_ADC_ConfigChannel+0x23a>
 8007806:	683b      	ldr	r3, [r7, #0]
 8007808:	681b      	ldr	r3, [r3, #0]
 800780a:	4a1c      	ldr	r2, [pc, #112]	; (800787c <HAL_ADC_ConfigChannel+0x258>)
 800780c:	4293      	cmp	r3, r2
 800780e:	d003      	beq.n	8007818 <HAL_ADC_ConfigChannel+0x1f4>
 8007810:	683b      	ldr	r3, [r7, #0]
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	2b11      	cmp	r3, #17
 8007816:	d122      	bne.n	800785e <HAL_ADC_ConfigChannel+0x23a>
 8007818:	68fb      	ldr	r3, [r7, #12]
 800781a:	685b      	ldr	r3, [r3, #4]
 800781c:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8007820:	68fb      	ldr	r3, [r7, #12]
 8007822:	605a      	str	r2, [r3, #4]
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	685b      	ldr	r3, [r3, #4]
 8007828:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	605a      	str	r2, [r3, #4]
 8007830:	683b      	ldr	r3, [r7, #0]
 8007832:	681b      	ldr	r3, [r3, #0]
 8007834:	4a11      	ldr	r2, [pc, #68]	; (800787c <HAL_ADC_ConfigChannel+0x258>)
 8007836:	4293      	cmp	r3, r2
 8007838:	d111      	bne.n	800785e <HAL_ADC_ConfigChannel+0x23a>
 800783a:	4b11      	ldr	r3, [pc, #68]	; (8007880 <HAL_ADC_ConfigChannel+0x25c>)
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	4a11      	ldr	r2, [pc, #68]	; (8007884 <HAL_ADC_ConfigChannel+0x260>)
 8007840:	fba2 2303 	umull	r2, r3, r2, r3
 8007844:	0c9a      	lsrs	r2, r3, #18
 8007846:	4613      	mov	r3, r2
 8007848:	009b      	lsls	r3, r3, #2
 800784a:	4413      	add	r3, r2
 800784c:	005b      	lsls	r3, r3, #1
 800784e:	60bb      	str	r3, [r7, #8]
 8007850:	e002      	b.n	8007858 <HAL_ADC_ConfigChannel+0x234>
 8007852:	68bb      	ldr	r3, [r7, #8]
 8007854:	3b01      	subs	r3, #1
 8007856:	60bb      	str	r3, [r7, #8]
 8007858:	68bb      	ldr	r3, [r7, #8]
 800785a:	2b00      	cmp	r3, #0
 800785c:	d1f9      	bne.n	8007852 <HAL_ADC_ConfigChannel+0x22e>
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	2200      	movs	r2, #0
 8007862:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007866:	2300      	movs	r3, #0
 8007868:	4618      	mov	r0, r3
 800786a:	3714      	adds	r7, #20
 800786c:	46bd      	mov	sp, r7
 800786e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007872:	4770      	bx	lr
 8007874:	40012300 	.word	0x40012300
 8007878:	40012000 	.word	0x40012000
 800787c:	10000012 	.word	0x10000012
 8007880:	20000128 	.word	0x20000128
 8007884:	431bde83 	.word	0x431bde83

08007888 <ADC_Init>:
 8007888:	b480      	push	{r7}
 800788a:	b085      	sub	sp, #20
 800788c:	af00      	add	r7, sp, #0
 800788e:	6078      	str	r0, [r7, #4]
 8007890:	4b79      	ldr	r3, [pc, #484]	; (8007a78 <ADC_Init+0x1f0>)
 8007892:	60fb      	str	r3, [r7, #12]
 8007894:	68fb      	ldr	r3, [r7, #12]
 8007896:	685b      	ldr	r3, [r3, #4]
 8007898:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800789c:	68fb      	ldr	r3, [r7, #12]
 800789e:	605a      	str	r2, [r3, #4]
 80078a0:	68fb      	ldr	r3, [r7, #12]
 80078a2:	685a      	ldr	r2, [r3, #4]
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	685b      	ldr	r3, [r3, #4]
 80078a8:	431a      	orrs	r2, r3
 80078aa:	68fb      	ldr	r3, [r7, #12]
 80078ac:	605a      	str	r2, [r3, #4]
 80078ae:	687b      	ldr	r3, [r7, #4]
 80078b0:	681b      	ldr	r3, [r3, #0]
 80078b2:	685a      	ldr	r2, [r3, #4]
 80078b4:	687b      	ldr	r3, [r7, #4]
 80078b6:	681b      	ldr	r3, [r3, #0]
 80078b8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80078bc:	605a      	str	r2, [r3, #4]
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	6859      	ldr	r1, [r3, #4]
 80078c4:	687b      	ldr	r3, [r7, #4]
 80078c6:	691b      	ldr	r3, [r3, #16]
 80078c8:	021a      	lsls	r2, r3, #8
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	681b      	ldr	r3, [r3, #0]
 80078ce:	430a      	orrs	r2, r1
 80078d0:	605a      	str	r2, [r3, #4]
 80078d2:	687b      	ldr	r3, [r7, #4]
 80078d4:	681b      	ldr	r3, [r3, #0]
 80078d6:	685a      	ldr	r2, [r3, #4]
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	681b      	ldr	r3, [r3, #0]
 80078dc:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80078e0:	605a      	str	r2, [r3, #4]
 80078e2:	687b      	ldr	r3, [r7, #4]
 80078e4:	681b      	ldr	r3, [r3, #0]
 80078e6:	6859      	ldr	r1, [r3, #4]
 80078e8:	687b      	ldr	r3, [r7, #4]
 80078ea:	689a      	ldr	r2, [r3, #8]
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	430a      	orrs	r2, r1
 80078f2:	605a      	str	r2, [r3, #4]
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	681b      	ldr	r3, [r3, #0]
 80078f8:	689a      	ldr	r2, [r3, #8]
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007902:	609a      	str	r2, [r3, #8]
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	681b      	ldr	r3, [r3, #0]
 8007908:	6899      	ldr	r1, [r3, #8]
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	68da      	ldr	r2, [r3, #12]
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	430a      	orrs	r2, r1
 8007914:	609a      	str	r2, [r3, #8]
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800791a:	4a58      	ldr	r2, [pc, #352]	; (8007a7c <ADC_Init+0x1f4>)
 800791c:	4293      	cmp	r3, r2
 800791e:	d022      	beq.n	8007966 <ADC_Init+0xde>
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	681b      	ldr	r3, [r3, #0]
 8007924:	689a      	ldr	r2, [r3, #8]
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	681b      	ldr	r3, [r3, #0]
 800792a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800792e:	609a      	str	r2, [r3, #8]
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	6899      	ldr	r1, [r3, #8]
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	681b      	ldr	r3, [r3, #0]
 800793e:	430a      	orrs	r2, r1
 8007940:	609a      	str	r2, [r3, #8]
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	689a      	ldr	r2, [r3, #8]
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	681b      	ldr	r3, [r3, #0]
 800794c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007950:	609a      	str	r2, [r3, #8]
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	6899      	ldr	r1, [r3, #8]
 8007958:	687b      	ldr	r3, [r7, #4]
 800795a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	681b      	ldr	r3, [r3, #0]
 8007960:	430a      	orrs	r2, r1
 8007962:	609a      	str	r2, [r3, #8]
 8007964:	e00f      	b.n	8007986 <ADC_Init+0xfe>
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	681b      	ldr	r3, [r3, #0]
 800796a:	689a      	ldr	r2, [r3, #8]
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	681b      	ldr	r3, [r3, #0]
 8007970:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007974:	609a      	str	r2, [r3, #8]
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	681b      	ldr	r3, [r3, #0]
 800797a:	689a      	ldr	r2, [r3, #8]
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007984:	609a      	str	r2, [r3, #8]
 8007986:	687b      	ldr	r3, [r7, #4]
 8007988:	681b      	ldr	r3, [r3, #0]
 800798a:	689a      	ldr	r2, [r3, #8]
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	681b      	ldr	r3, [r3, #0]
 8007990:	f022 0202 	bic.w	r2, r2, #2
 8007994:	609a      	str	r2, [r3, #8]
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	681b      	ldr	r3, [r3, #0]
 800799a:	6899      	ldr	r1, [r3, #8]
 800799c:	687b      	ldr	r3, [r7, #4]
 800799e:	7e1b      	ldrb	r3, [r3, #24]
 80079a0:	005a      	lsls	r2, r3, #1
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	681b      	ldr	r3, [r3, #0]
 80079a6:	430a      	orrs	r2, r1
 80079a8:	609a      	str	r2, [r3, #8]
 80079aa:	687b      	ldr	r3, [r7, #4]
 80079ac:	f893 3020 	ldrb.w	r3, [r3, #32]
 80079b0:	2b00      	cmp	r3, #0
 80079b2:	d01b      	beq.n	80079ec <ADC_Init+0x164>
 80079b4:	687b      	ldr	r3, [r7, #4]
 80079b6:	681b      	ldr	r3, [r3, #0]
 80079b8:	685a      	ldr	r2, [r3, #4]
 80079ba:	687b      	ldr	r3, [r7, #4]
 80079bc:	681b      	ldr	r3, [r3, #0]
 80079be:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80079c2:	605a      	str	r2, [r3, #4]
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	681b      	ldr	r3, [r3, #0]
 80079c8:	685a      	ldr	r2, [r3, #4]
 80079ca:	687b      	ldr	r3, [r7, #4]
 80079cc:	681b      	ldr	r3, [r3, #0]
 80079ce:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80079d2:	605a      	str	r2, [r3, #4]
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	681b      	ldr	r3, [r3, #0]
 80079d8:	6859      	ldr	r1, [r3, #4]
 80079da:	687b      	ldr	r3, [r7, #4]
 80079dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80079de:	3b01      	subs	r3, #1
 80079e0:	035a      	lsls	r2, r3, #13
 80079e2:	687b      	ldr	r3, [r7, #4]
 80079e4:	681b      	ldr	r3, [r3, #0]
 80079e6:	430a      	orrs	r2, r1
 80079e8:	605a      	str	r2, [r3, #4]
 80079ea:	e007      	b.n	80079fc <ADC_Init+0x174>
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	681b      	ldr	r3, [r3, #0]
 80079f0:	685a      	ldr	r2, [r3, #4]
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	681b      	ldr	r3, [r3, #0]
 80079f6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80079fa:	605a      	str	r2, [r3, #4]
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	681b      	ldr	r3, [r3, #0]
 8007a06:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007a0a:	62da      	str	r2, [r3, #44]	; 0x2c
 8007a0c:	687b      	ldr	r3, [r7, #4]
 8007a0e:	681b      	ldr	r3, [r3, #0]
 8007a10:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	69db      	ldr	r3, [r3, #28]
 8007a16:	3b01      	subs	r3, #1
 8007a18:	051a      	lsls	r2, r3, #20
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	681b      	ldr	r3, [r3, #0]
 8007a1e:	430a      	orrs	r2, r1
 8007a20:	62da      	str	r2, [r3, #44]	; 0x2c
 8007a22:	687b      	ldr	r3, [r7, #4]
 8007a24:	681b      	ldr	r3, [r3, #0]
 8007a26:	689a      	ldr	r2, [r3, #8]
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007a30:	609a      	str	r2, [r3, #8]
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	681b      	ldr	r3, [r3, #0]
 8007a36:	6899      	ldr	r1, [r3, #8]
 8007a38:	687b      	ldr	r3, [r7, #4]
 8007a3a:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8007a3e:	025a      	lsls	r2, r3, #9
 8007a40:	687b      	ldr	r3, [r7, #4]
 8007a42:	681b      	ldr	r3, [r3, #0]
 8007a44:	430a      	orrs	r2, r1
 8007a46:	609a      	str	r2, [r3, #8]
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	681b      	ldr	r3, [r3, #0]
 8007a4c:	689a      	ldr	r2, [r3, #8]
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007a56:	609a      	str	r2, [r3, #8]
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	6899      	ldr	r1, [r3, #8]
 8007a5e:	687b      	ldr	r3, [r7, #4]
 8007a60:	695b      	ldr	r3, [r3, #20]
 8007a62:	029a      	lsls	r2, r3, #10
 8007a64:	687b      	ldr	r3, [r7, #4]
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	430a      	orrs	r2, r1
 8007a6a:	609a      	str	r2, [r3, #8]
 8007a6c:	bf00      	nop
 8007a6e:	3714      	adds	r7, #20
 8007a70:	46bd      	mov	sp, r7
 8007a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a76:	4770      	bx	lr
 8007a78:	40012300 	.word	0x40012300
 8007a7c:	0f000001 	.word	0x0f000001

08007a80 <ADC_DMAConvCplt>:
 8007a80:	b580      	push	{r7, lr}
 8007a82:	b084      	sub	sp, #16
 8007a84:	af00      	add	r7, sp, #0
 8007a86:	6078      	str	r0, [r7, #4]
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a8c:	60fb      	str	r3, [r7, #12]
 8007a8e:	68fb      	ldr	r3, [r7, #12]
 8007a90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a92:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007a96:	2b00      	cmp	r3, #0
 8007a98:	d13c      	bne.n	8007b14 <ADC_DMAConvCplt+0x94>
 8007a9a:	68fb      	ldr	r3, [r7, #12]
 8007a9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a9e:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8007aa2:	68fb      	ldr	r3, [r7, #12]
 8007aa4:	641a      	str	r2, [r3, #64]	; 0x40
 8007aa6:	68fb      	ldr	r3, [r7, #12]
 8007aa8:	681b      	ldr	r3, [r3, #0]
 8007aaa:	689b      	ldr	r3, [r3, #8]
 8007aac:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007ab0:	2b00      	cmp	r3, #0
 8007ab2:	d12b      	bne.n	8007b0c <ADC_DMAConvCplt+0x8c>
 8007ab4:	68fb      	ldr	r3, [r7, #12]
 8007ab6:	7e1b      	ldrb	r3, [r3, #24]
 8007ab8:	2b00      	cmp	r3, #0
 8007aba:	d127      	bne.n	8007b0c <ADC_DMAConvCplt+0x8c>
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	681b      	ldr	r3, [r3, #0]
 8007ac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ac2:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8007ac6:	2b00      	cmp	r3, #0
 8007ac8:	d006      	beq.n	8007ad8 <ADC_DMAConvCplt+0x58>
 8007aca:	68fb      	ldr	r3, [r7, #12]
 8007acc:	681b      	ldr	r3, [r3, #0]
 8007ace:	689b      	ldr	r3, [r3, #8]
 8007ad0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	d119      	bne.n	8007b0c <ADC_DMAConvCplt+0x8c>
 8007ad8:	68fb      	ldr	r3, [r7, #12]
 8007ada:	681b      	ldr	r3, [r3, #0]
 8007adc:	685a      	ldr	r2, [r3, #4]
 8007ade:	68fb      	ldr	r3, [r7, #12]
 8007ae0:	681b      	ldr	r3, [r3, #0]
 8007ae2:	f022 0220 	bic.w	r2, r2, #32
 8007ae6:	605a      	str	r2, [r3, #4]
 8007ae8:	68fb      	ldr	r3, [r7, #12]
 8007aea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007aec:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8007af0:	68fb      	ldr	r3, [r7, #12]
 8007af2:	641a      	str	r2, [r3, #64]	; 0x40
 8007af4:	68fb      	ldr	r3, [r7, #12]
 8007af6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007af8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007afc:	2b00      	cmp	r3, #0
 8007afe:	d105      	bne.n	8007b0c <ADC_DMAConvCplt+0x8c>
 8007b00:	68fb      	ldr	r3, [r7, #12]
 8007b02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b04:	f043 0201 	orr.w	r2, r3, #1
 8007b08:	68fb      	ldr	r3, [r7, #12]
 8007b0a:	641a      	str	r2, [r3, #64]	; 0x40
 8007b0c:	68f8      	ldr	r0, [r7, #12]
 8007b0e:	f7ff fd6b 	bl	80075e8 <HAL_ADC_ConvCpltCallback>
 8007b12:	e00e      	b.n	8007b32 <ADC_DMAConvCplt+0xb2>
 8007b14:	68fb      	ldr	r3, [r7, #12]
 8007b16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b18:	f003 0310 	and.w	r3, r3, #16
 8007b1c:	2b00      	cmp	r3, #0
 8007b1e:	d003      	beq.n	8007b28 <ADC_DMAConvCplt+0xa8>
 8007b20:	68f8      	ldr	r0, [r7, #12]
 8007b22:	f7ff fd75 	bl	8007610 <HAL_ADC_ErrorCallback>
 8007b26:	e004      	b.n	8007b32 <ADC_DMAConvCplt+0xb2>
 8007b28:	68fb      	ldr	r3, [r7, #12]
 8007b2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007b2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b2e:	6878      	ldr	r0, [r7, #4]
 8007b30:	4798      	blx	r3
 8007b32:	bf00      	nop
 8007b34:	3710      	adds	r7, #16
 8007b36:	46bd      	mov	sp, r7
 8007b38:	bd80      	pop	{r7, pc}

08007b3a <ADC_DMAHalfConvCplt>:
 8007b3a:	b580      	push	{r7, lr}
 8007b3c:	b084      	sub	sp, #16
 8007b3e:	af00      	add	r7, sp, #0
 8007b40:	6078      	str	r0, [r7, #4]
 8007b42:	687b      	ldr	r3, [r7, #4]
 8007b44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007b46:	60fb      	str	r3, [r7, #12]
 8007b48:	68f8      	ldr	r0, [r7, #12]
 8007b4a:	f7ff fd57 	bl	80075fc <HAL_ADC_ConvHalfCpltCallback>
 8007b4e:	bf00      	nop
 8007b50:	3710      	adds	r7, #16
 8007b52:	46bd      	mov	sp, r7
 8007b54:	bd80      	pop	{r7, pc}

08007b56 <ADC_DMAError>:
 8007b56:	b580      	push	{r7, lr}
 8007b58:	b084      	sub	sp, #16
 8007b5a:	af00      	add	r7, sp, #0
 8007b5c:	6078      	str	r0, [r7, #4]
 8007b5e:	687b      	ldr	r3, [r7, #4]
 8007b60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007b62:	60fb      	str	r3, [r7, #12]
 8007b64:	68fb      	ldr	r3, [r7, #12]
 8007b66:	2240      	movs	r2, #64	; 0x40
 8007b68:	641a      	str	r2, [r3, #64]	; 0x40
 8007b6a:	68fb      	ldr	r3, [r7, #12]
 8007b6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007b6e:	f043 0204 	orr.w	r2, r3, #4
 8007b72:	68fb      	ldr	r3, [r7, #12]
 8007b74:	645a      	str	r2, [r3, #68]	; 0x44
 8007b76:	68f8      	ldr	r0, [r7, #12]
 8007b78:	f7ff fd4a 	bl	8007610 <HAL_ADC_ErrorCallback>
 8007b7c:	bf00      	nop
 8007b7e:	3710      	adds	r7, #16
 8007b80:	46bd      	mov	sp, r7
 8007b82:	bd80      	pop	{r7, pc}

08007b84 <__NVIC_SetPriorityGrouping>:
 8007b84:	b480      	push	{r7}
 8007b86:	b085      	sub	sp, #20
 8007b88:	af00      	add	r7, sp, #0
 8007b8a:	6078      	str	r0, [r7, #4]
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	f003 0307 	and.w	r3, r3, #7
 8007b92:	60fb      	str	r3, [r7, #12]
 8007b94:	4b0c      	ldr	r3, [pc, #48]	; (8007bc8 <__NVIC_SetPriorityGrouping+0x44>)
 8007b96:	68db      	ldr	r3, [r3, #12]
 8007b98:	60bb      	str	r3, [r7, #8]
 8007b9a:	68ba      	ldr	r2, [r7, #8]
 8007b9c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8007ba0:	4013      	ands	r3, r2
 8007ba2:	60bb      	str	r3, [r7, #8]
 8007ba4:	68fb      	ldr	r3, [r7, #12]
 8007ba6:	021a      	lsls	r2, r3, #8
 8007ba8:	68bb      	ldr	r3, [r7, #8]
 8007baa:	4313      	orrs	r3, r2
 8007bac:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8007bb0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007bb4:	60bb      	str	r3, [r7, #8]
 8007bb6:	4a04      	ldr	r2, [pc, #16]	; (8007bc8 <__NVIC_SetPriorityGrouping+0x44>)
 8007bb8:	68bb      	ldr	r3, [r7, #8]
 8007bba:	60d3      	str	r3, [r2, #12]
 8007bbc:	bf00      	nop
 8007bbe:	3714      	adds	r7, #20
 8007bc0:	46bd      	mov	sp, r7
 8007bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bc6:	4770      	bx	lr
 8007bc8:	e000ed00 	.word	0xe000ed00

08007bcc <__NVIC_GetPriorityGrouping>:
 8007bcc:	b480      	push	{r7}
 8007bce:	af00      	add	r7, sp, #0
 8007bd0:	4b04      	ldr	r3, [pc, #16]	; (8007be4 <__NVIC_GetPriorityGrouping+0x18>)
 8007bd2:	68db      	ldr	r3, [r3, #12]
 8007bd4:	0a1b      	lsrs	r3, r3, #8
 8007bd6:	f003 0307 	and.w	r3, r3, #7
 8007bda:	4618      	mov	r0, r3
 8007bdc:	46bd      	mov	sp, r7
 8007bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007be2:	4770      	bx	lr
 8007be4:	e000ed00 	.word	0xe000ed00

08007be8 <__NVIC_EnableIRQ>:
 8007be8:	b480      	push	{r7}
 8007bea:	b083      	sub	sp, #12
 8007bec:	af00      	add	r7, sp, #0
 8007bee:	4603      	mov	r3, r0
 8007bf0:	71fb      	strb	r3, [r7, #7]
 8007bf2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007bf6:	2b00      	cmp	r3, #0
 8007bf8:	db0b      	blt.n	8007c12 <__NVIC_EnableIRQ+0x2a>
 8007bfa:	79fb      	ldrb	r3, [r7, #7]
 8007bfc:	f003 021f 	and.w	r2, r3, #31
 8007c00:	4907      	ldr	r1, [pc, #28]	; (8007c20 <__NVIC_EnableIRQ+0x38>)
 8007c02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007c06:	095b      	lsrs	r3, r3, #5
 8007c08:	2001      	movs	r0, #1
 8007c0a:	fa00 f202 	lsl.w	r2, r0, r2
 8007c0e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007c12:	bf00      	nop
 8007c14:	370c      	adds	r7, #12
 8007c16:	46bd      	mov	sp, r7
 8007c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c1c:	4770      	bx	lr
 8007c1e:	bf00      	nop
 8007c20:	e000e100 	.word	0xe000e100

08007c24 <__NVIC_DisableIRQ>:
 8007c24:	b480      	push	{r7}
 8007c26:	b083      	sub	sp, #12
 8007c28:	af00      	add	r7, sp, #0
 8007c2a:	4603      	mov	r3, r0
 8007c2c:	71fb      	strb	r3, [r7, #7]
 8007c2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007c32:	2b00      	cmp	r3, #0
 8007c34:	db12      	blt.n	8007c5c <__NVIC_DisableIRQ+0x38>
 8007c36:	79fb      	ldrb	r3, [r7, #7]
 8007c38:	f003 021f 	and.w	r2, r3, #31
 8007c3c:	490a      	ldr	r1, [pc, #40]	; (8007c68 <__NVIC_DisableIRQ+0x44>)
 8007c3e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007c42:	095b      	lsrs	r3, r3, #5
 8007c44:	2001      	movs	r0, #1
 8007c46:	fa00 f202 	lsl.w	r2, r0, r2
 8007c4a:	3320      	adds	r3, #32
 8007c4c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007c50:	f3bf 8f4f 	dsb	sy
 8007c54:	bf00      	nop
 8007c56:	f3bf 8f6f 	isb	sy
 8007c5a:	bf00      	nop
 8007c5c:	bf00      	nop
 8007c5e:	370c      	adds	r7, #12
 8007c60:	46bd      	mov	sp, r7
 8007c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c66:	4770      	bx	lr
 8007c68:	e000e100 	.word	0xe000e100

08007c6c <__NVIC_SetPriority>:
 8007c6c:	b480      	push	{r7}
 8007c6e:	b083      	sub	sp, #12
 8007c70:	af00      	add	r7, sp, #0
 8007c72:	4603      	mov	r3, r0
 8007c74:	6039      	str	r1, [r7, #0]
 8007c76:	71fb      	strb	r3, [r7, #7]
 8007c78:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007c7c:	2b00      	cmp	r3, #0
 8007c7e:	db0a      	blt.n	8007c96 <__NVIC_SetPriority+0x2a>
 8007c80:	683b      	ldr	r3, [r7, #0]
 8007c82:	b2da      	uxtb	r2, r3
 8007c84:	490c      	ldr	r1, [pc, #48]	; (8007cb8 <__NVIC_SetPriority+0x4c>)
 8007c86:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007c8a:	0112      	lsls	r2, r2, #4
 8007c8c:	b2d2      	uxtb	r2, r2
 8007c8e:	440b      	add	r3, r1
 8007c90:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8007c94:	e00a      	b.n	8007cac <__NVIC_SetPriority+0x40>
 8007c96:	683b      	ldr	r3, [r7, #0]
 8007c98:	b2da      	uxtb	r2, r3
 8007c9a:	4908      	ldr	r1, [pc, #32]	; (8007cbc <__NVIC_SetPriority+0x50>)
 8007c9c:	79fb      	ldrb	r3, [r7, #7]
 8007c9e:	f003 030f 	and.w	r3, r3, #15
 8007ca2:	3b04      	subs	r3, #4
 8007ca4:	0112      	lsls	r2, r2, #4
 8007ca6:	b2d2      	uxtb	r2, r2
 8007ca8:	440b      	add	r3, r1
 8007caa:	761a      	strb	r2, [r3, #24]
 8007cac:	bf00      	nop
 8007cae:	370c      	adds	r7, #12
 8007cb0:	46bd      	mov	sp, r7
 8007cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cb6:	4770      	bx	lr
 8007cb8:	e000e100 	.word	0xe000e100
 8007cbc:	e000ed00 	.word	0xe000ed00

08007cc0 <NVIC_EncodePriority>:
 8007cc0:	b480      	push	{r7}
 8007cc2:	b089      	sub	sp, #36	; 0x24
 8007cc4:	af00      	add	r7, sp, #0
 8007cc6:	60f8      	str	r0, [r7, #12]
 8007cc8:	60b9      	str	r1, [r7, #8]
 8007cca:	607a      	str	r2, [r7, #4]
 8007ccc:	68fb      	ldr	r3, [r7, #12]
 8007cce:	f003 0307 	and.w	r3, r3, #7
 8007cd2:	61fb      	str	r3, [r7, #28]
 8007cd4:	69fb      	ldr	r3, [r7, #28]
 8007cd6:	f1c3 0307 	rsb	r3, r3, #7
 8007cda:	2b04      	cmp	r3, #4
 8007cdc:	bf28      	it	cs
 8007cde:	2304      	movcs	r3, #4
 8007ce0:	61bb      	str	r3, [r7, #24]
 8007ce2:	69fb      	ldr	r3, [r7, #28]
 8007ce4:	3304      	adds	r3, #4
 8007ce6:	2b06      	cmp	r3, #6
 8007ce8:	d902      	bls.n	8007cf0 <NVIC_EncodePriority+0x30>
 8007cea:	69fb      	ldr	r3, [r7, #28]
 8007cec:	3b03      	subs	r3, #3
 8007cee:	e000      	b.n	8007cf2 <NVIC_EncodePriority+0x32>
 8007cf0:	2300      	movs	r3, #0
 8007cf2:	617b      	str	r3, [r7, #20]
 8007cf4:	f04f 32ff 	mov.w	r2, #4294967295
 8007cf8:	69bb      	ldr	r3, [r7, #24]
 8007cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8007cfe:	43da      	mvns	r2, r3
 8007d00:	68bb      	ldr	r3, [r7, #8]
 8007d02:	401a      	ands	r2, r3
 8007d04:	697b      	ldr	r3, [r7, #20]
 8007d06:	409a      	lsls	r2, r3
 8007d08:	f04f 31ff 	mov.w	r1, #4294967295
 8007d0c:	697b      	ldr	r3, [r7, #20]
 8007d0e:	fa01 f303 	lsl.w	r3, r1, r3
 8007d12:	43d9      	mvns	r1, r3
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	400b      	ands	r3, r1
 8007d18:	4313      	orrs	r3, r2
 8007d1a:	4618      	mov	r0, r3
 8007d1c:	3724      	adds	r7, #36	; 0x24
 8007d1e:	46bd      	mov	sp, r7
 8007d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d24:	4770      	bx	lr
	...

08007d28 <SysTick_Config>:
 8007d28:	b580      	push	{r7, lr}
 8007d2a:	b082      	sub	sp, #8
 8007d2c:	af00      	add	r7, sp, #0
 8007d2e:	6078      	str	r0, [r7, #4]
 8007d30:	687b      	ldr	r3, [r7, #4]
 8007d32:	3b01      	subs	r3, #1
 8007d34:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8007d38:	d301      	bcc.n	8007d3e <SysTick_Config+0x16>
 8007d3a:	2301      	movs	r3, #1
 8007d3c:	e00f      	b.n	8007d5e <SysTick_Config+0x36>
 8007d3e:	4a0a      	ldr	r2, [pc, #40]	; (8007d68 <SysTick_Config+0x40>)
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	3b01      	subs	r3, #1
 8007d44:	6053      	str	r3, [r2, #4]
 8007d46:	210f      	movs	r1, #15
 8007d48:	f04f 30ff 	mov.w	r0, #4294967295
 8007d4c:	f7ff ff8e 	bl	8007c6c <__NVIC_SetPriority>
 8007d50:	4b05      	ldr	r3, [pc, #20]	; (8007d68 <SysTick_Config+0x40>)
 8007d52:	2200      	movs	r2, #0
 8007d54:	609a      	str	r2, [r3, #8]
 8007d56:	4b04      	ldr	r3, [pc, #16]	; (8007d68 <SysTick_Config+0x40>)
 8007d58:	2207      	movs	r2, #7
 8007d5a:	601a      	str	r2, [r3, #0]
 8007d5c:	2300      	movs	r3, #0
 8007d5e:	4618      	mov	r0, r3
 8007d60:	3708      	adds	r7, #8
 8007d62:	46bd      	mov	sp, r7
 8007d64:	bd80      	pop	{r7, pc}
 8007d66:	bf00      	nop
 8007d68:	e000e010 	.word	0xe000e010

08007d6c <HAL_NVIC_SetPriorityGrouping>:
 8007d6c:	b580      	push	{r7, lr}
 8007d6e:	b082      	sub	sp, #8
 8007d70:	af00      	add	r7, sp, #0
 8007d72:	6078      	str	r0, [r7, #4]
 8007d74:	6878      	ldr	r0, [r7, #4]
 8007d76:	f7ff ff05 	bl	8007b84 <__NVIC_SetPriorityGrouping>
 8007d7a:	bf00      	nop
 8007d7c:	3708      	adds	r7, #8
 8007d7e:	46bd      	mov	sp, r7
 8007d80:	bd80      	pop	{r7, pc}

08007d82 <HAL_NVIC_SetPriority>:
 8007d82:	b580      	push	{r7, lr}
 8007d84:	b086      	sub	sp, #24
 8007d86:	af00      	add	r7, sp, #0
 8007d88:	4603      	mov	r3, r0
 8007d8a:	60b9      	str	r1, [r7, #8]
 8007d8c:	607a      	str	r2, [r7, #4]
 8007d8e:	73fb      	strb	r3, [r7, #15]
 8007d90:	2300      	movs	r3, #0
 8007d92:	617b      	str	r3, [r7, #20]
 8007d94:	f7ff ff1a 	bl	8007bcc <__NVIC_GetPriorityGrouping>
 8007d98:	6178      	str	r0, [r7, #20]
 8007d9a:	687a      	ldr	r2, [r7, #4]
 8007d9c:	68b9      	ldr	r1, [r7, #8]
 8007d9e:	6978      	ldr	r0, [r7, #20]
 8007da0:	f7ff ff8e 	bl	8007cc0 <NVIC_EncodePriority>
 8007da4:	4602      	mov	r2, r0
 8007da6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8007daa:	4611      	mov	r1, r2
 8007dac:	4618      	mov	r0, r3
 8007dae:	f7ff ff5d 	bl	8007c6c <__NVIC_SetPriority>
 8007db2:	bf00      	nop
 8007db4:	3718      	adds	r7, #24
 8007db6:	46bd      	mov	sp, r7
 8007db8:	bd80      	pop	{r7, pc}

08007dba <HAL_NVIC_EnableIRQ>:
 8007dba:	b580      	push	{r7, lr}
 8007dbc:	b082      	sub	sp, #8
 8007dbe:	af00      	add	r7, sp, #0
 8007dc0:	4603      	mov	r3, r0
 8007dc2:	71fb      	strb	r3, [r7, #7]
 8007dc4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007dc8:	4618      	mov	r0, r3
 8007dca:	f7ff ff0d 	bl	8007be8 <__NVIC_EnableIRQ>
 8007dce:	bf00      	nop
 8007dd0:	3708      	adds	r7, #8
 8007dd2:	46bd      	mov	sp, r7
 8007dd4:	bd80      	pop	{r7, pc}

08007dd6 <HAL_NVIC_DisableIRQ>:
 8007dd6:	b580      	push	{r7, lr}
 8007dd8:	b082      	sub	sp, #8
 8007dda:	af00      	add	r7, sp, #0
 8007ddc:	4603      	mov	r3, r0
 8007dde:	71fb      	strb	r3, [r7, #7]
 8007de0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007de4:	4618      	mov	r0, r3
 8007de6:	f7ff ff1d 	bl	8007c24 <__NVIC_DisableIRQ>
 8007dea:	bf00      	nop
 8007dec:	3708      	adds	r7, #8
 8007dee:	46bd      	mov	sp, r7
 8007df0:	bd80      	pop	{r7, pc}

08007df2 <HAL_SYSTICK_Config>:
 8007df2:	b580      	push	{r7, lr}
 8007df4:	b082      	sub	sp, #8
 8007df6:	af00      	add	r7, sp, #0
 8007df8:	6078      	str	r0, [r7, #4]
 8007dfa:	6878      	ldr	r0, [r7, #4]
 8007dfc:	f7ff ff94 	bl	8007d28 <SysTick_Config>
 8007e00:	4603      	mov	r3, r0
 8007e02:	4618      	mov	r0, r3
 8007e04:	3708      	adds	r7, #8
 8007e06:	46bd      	mov	sp, r7
 8007e08:	bd80      	pop	{r7, pc}
	...

08007e0c <HAL_DMA_Init>:
 8007e0c:	b580      	push	{r7, lr}
 8007e0e:	b086      	sub	sp, #24
 8007e10:	af00      	add	r7, sp, #0
 8007e12:	6078      	str	r0, [r7, #4]
 8007e14:	2300      	movs	r3, #0
 8007e16:	617b      	str	r3, [r7, #20]
 8007e18:	f7ff fa82 	bl	8007320 <HAL_GetTick>
 8007e1c:	6138      	str	r0, [r7, #16]
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	2b00      	cmp	r3, #0
 8007e22:	d101      	bne.n	8007e28 <HAL_DMA_Init+0x1c>
 8007e24:	2301      	movs	r3, #1
 8007e26:	e099      	b.n	8007f5c <HAL_DMA_Init+0x150>
 8007e28:	687b      	ldr	r3, [r7, #4]
 8007e2a:	2202      	movs	r2, #2
 8007e2c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007e30:	687b      	ldr	r3, [r7, #4]
 8007e32:	2200      	movs	r2, #0
 8007e34:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007e38:	687b      	ldr	r3, [r7, #4]
 8007e3a:	681b      	ldr	r3, [r3, #0]
 8007e3c:	681a      	ldr	r2, [r3, #0]
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	681b      	ldr	r3, [r3, #0]
 8007e42:	f022 0201 	bic.w	r2, r2, #1
 8007e46:	601a      	str	r2, [r3, #0]
 8007e48:	e00f      	b.n	8007e6a <HAL_DMA_Init+0x5e>
 8007e4a:	f7ff fa69 	bl	8007320 <HAL_GetTick>
 8007e4e:	4602      	mov	r2, r0
 8007e50:	693b      	ldr	r3, [r7, #16]
 8007e52:	1ad3      	subs	r3, r2, r3
 8007e54:	2b05      	cmp	r3, #5
 8007e56:	d908      	bls.n	8007e6a <HAL_DMA_Init+0x5e>
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	2220      	movs	r2, #32
 8007e5c:	655a      	str	r2, [r3, #84]	; 0x54
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	2203      	movs	r2, #3
 8007e62:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007e66:	2303      	movs	r3, #3
 8007e68:	e078      	b.n	8007f5c <HAL_DMA_Init+0x150>
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	f003 0301 	and.w	r3, r3, #1
 8007e74:	2b00      	cmp	r3, #0
 8007e76:	d1e8      	bne.n	8007e4a <HAL_DMA_Init+0x3e>
 8007e78:	687b      	ldr	r3, [r7, #4]
 8007e7a:	681b      	ldr	r3, [r3, #0]
 8007e7c:	681b      	ldr	r3, [r3, #0]
 8007e7e:	617b      	str	r3, [r7, #20]
 8007e80:	697a      	ldr	r2, [r7, #20]
 8007e82:	4b38      	ldr	r3, [pc, #224]	; (8007f64 <HAL_DMA_Init+0x158>)
 8007e84:	4013      	ands	r3, r2
 8007e86:	617b      	str	r3, [r7, #20]
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	685a      	ldr	r2, [r3, #4]
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	689b      	ldr	r3, [r3, #8]
 8007e90:	431a      	orrs	r2, r3
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	68db      	ldr	r3, [r3, #12]
 8007e96:	431a      	orrs	r2, r3
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	691b      	ldr	r3, [r3, #16]
 8007e9c:	431a      	orrs	r2, r3
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	695b      	ldr	r3, [r3, #20]
 8007ea2:	431a      	orrs	r2, r3
 8007ea4:	687b      	ldr	r3, [r7, #4]
 8007ea6:	699b      	ldr	r3, [r3, #24]
 8007ea8:	431a      	orrs	r2, r3
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	69db      	ldr	r3, [r3, #28]
 8007eae:	431a      	orrs	r2, r3
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	6a1b      	ldr	r3, [r3, #32]
 8007eb4:	4313      	orrs	r3, r2
 8007eb6:	697a      	ldr	r2, [r7, #20]
 8007eb8:	4313      	orrs	r3, r2
 8007eba:	617b      	str	r3, [r7, #20]
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007ec0:	2b04      	cmp	r3, #4
 8007ec2:	d107      	bne.n	8007ed4 <HAL_DMA_Init+0xc8>
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ecc:	4313      	orrs	r3, r2
 8007ece:	697a      	ldr	r2, [r7, #20]
 8007ed0:	4313      	orrs	r3, r2
 8007ed2:	617b      	str	r3, [r7, #20]
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	681b      	ldr	r3, [r3, #0]
 8007ed8:	697a      	ldr	r2, [r7, #20]
 8007eda:	601a      	str	r2, [r3, #0]
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	681b      	ldr	r3, [r3, #0]
 8007ee0:	695b      	ldr	r3, [r3, #20]
 8007ee2:	617b      	str	r3, [r7, #20]
 8007ee4:	697b      	ldr	r3, [r7, #20]
 8007ee6:	f023 0307 	bic.w	r3, r3, #7
 8007eea:	617b      	str	r3, [r7, #20]
 8007eec:	687b      	ldr	r3, [r7, #4]
 8007eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007ef0:	697a      	ldr	r2, [r7, #20]
 8007ef2:	4313      	orrs	r3, r2
 8007ef4:	617b      	str	r3, [r7, #20]
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007efa:	2b04      	cmp	r3, #4
 8007efc:	d117      	bne.n	8007f2e <HAL_DMA_Init+0x122>
 8007efe:	687b      	ldr	r3, [r7, #4]
 8007f00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007f02:	697a      	ldr	r2, [r7, #20]
 8007f04:	4313      	orrs	r3, r2
 8007f06:	617b      	str	r3, [r7, #20]
 8007f08:	687b      	ldr	r3, [r7, #4]
 8007f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f0c:	2b00      	cmp	r3, #0
 8007f0e:	d00e      	beq.n	8007f2e <HAL_DMA_Init+0x122>
 8007f10:	6878      	ldr	r0, [r7, #4]
 8007f12:	f000 fb5f 	bl	80085d4 <DMA_CheckFifoParam>
 8007f16:	4603      	mov	r3, r0
 8007f18:	2b00      	cmp	r3, #0
 8007f1a:	d008      	beq.n	8007f2e <HAL_DMA_Init+0x122>
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	2240      	movs	r2, #64	; 0x40
 8007f20:	655a      	str	r2, [r3, #84]	; 0x54
 8007f22:	687b      	ldr	r3, [r7, #4]
 8007f24:	2201      	movs	r2, #1
 8007f26:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007f2a:	2301      	movs	r3, #1
 8007f2c:	e016      	b.n	8007f5c <HAL_DMA_Init+0x150>
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	697a      	ldr	r2, [r7, #20]
 8007f34:	615a      	str	r2, [r3, #20]
 8007f36:	6878      	ldr	r0, [r7, #4]
 8007f38:	f000 fb16 	bl	8008568 <DMA_CalcBaseAndBitshift>
 8007f3c:	4603      	mov	r3, r0
 8007f3e:	60fb      	str	r3, [r7, #12]
 8007f40:	687b      	ldr	r3, [r7, #4]
 8007f42:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007f44:	223f      	movs	r2, #63	; 0x3f
 8007f46:	409a      	lsls	r2, r3
 8007f48:	68fb      	ldr	r3, [r7, #12]
 8007f4a:	609a      	str	r2, [r3, #8]
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	2200      	movs	r2, #0
 8007f50:	655a      	str	r2, [r3, #84]	; 0x54
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	2201      	movs	r2, #1
 8007f56:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007f5a:	2300      	movs	r3, #0
 8007f5c:	4618      	mov	r0, r3
 8007f5e:	3718      	adds	r7, #24
 8007f60:	46bd      	mov	sp, r7
 8007f62:	bd80      	pop	{r7, pc}
 8007f64:	e010803f 	.word	0xe010803f

08007f68 <HAL_DMA_DeInit>:
 8007f68:	b580      	push	{r7, lr}
 8007f6a:	b084      	sub	sp, #16
 8007f6c:	af00      	add	r7, sp, #0
 8007f6e:	6078      	str	r0, [r7, #4]
 8007f70:	687b      	ldr	r3, [r7, #4]
 8007f72:	2b00      	cmp	r3, #0
 8007f74:	d101      	bne.n	8007f7a <HAL_DMA_DeInit+0x12>
 8007f76:	2301      	movs	r3, #1
 8007f78:	e050      	b.n	800801c <HAL_DMA_DeInit+0xb4>
 8007f7a:	687b      	ldr	r3, [r7, #4]
 8007f7c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007f80:	b2db      	uxtb	r3, r3
 8007f82:	2b02      	cmp	r3, #2
 8007f84:	d101      	bne.n	8007f8a <HAL_DMA_DeInit+0x22>
 8007f86:	2302      	movs	r3, #2
 8007f88:	e048      	b.n	800801c <HAL_DMA_DeInit+0xb4>
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	681b      	ldr	r3, [r3, #0]
 8007f8e:	681a      	ldr	r2, [r3, #0]
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	f022 0201 	bic.w	r2, r2, #1
 8007f98:	601a      	str	r2, [r3, #0]
 8007f9a:	687b      	ldr	r3, [r7, #4]
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	2200      	movs	r2, #0
 8007fa0:	601a      	str	r2, [r3, #0]
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	2200      	movs	r2, #0
 8007fa8:	605a      	str	r2, [r3, #4]
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	681b      	ldr	r3, [r3, #0]
 8007fae:	2200      	movs	r2, #0
 8007fb0:	609a      	str	r2, [r3, #8]
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	2200      	movs	r2, #0
 8007fb8:	60da      	str	r2, [r3, #12]
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	681b      	ldr	r3, [r3, #0]
 8007fbe:	2200      	movs	r2, #0
 8007fc0:	611a      	str	r2, [r3, #16]
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	681b      	ldr	r3, [r3, #0]
 8007fc6:	2221      	movs	r2, #33	; 0x21
 8007fc8:	615a      	str	r2, [r3, #20]
 8007fca:	6878      	ldr	r0, [r7, #4]
 8007fcc:	f000 facc 	bl	8008568 <DMA_CalcBaseAndBitshift>
 8007fd0:	4603      	mov	r3, r0
 8007fd2:	60fb      	str	r3, [r7, #12]
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	2200      	movs	r2, #0
 8007fd8:	63da      	str	r2, [r3, #60]	; 0x3c
 8007fda:	687b      	ldr	r3, [r7, #4]
 8007fdc:	2200      	movs	r2, #0
 8007fde:	641a      	str	r2, [r3, #64]	; 0x40
 8007fe0:	687b      	ldr	r3, [r7, #4]
 8007fe2:	2200      	movs	r2, #0
 8007fe4:	645a      	str	r2, [r3, #68]	; 0x44
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	2200      	movs	r2, #0
 8007fea:	649a      	str	r2, [r3, #72]	; 0x48
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	2200      	movs	r2, #0
 8007ff0:	64da      	str	r2, [r3, #76]	; 0x4c
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	2200      	movs	r2, #0
 8007ff6:	651a      	str	r2, [r3, #80]	; 0x50
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007ffc:	223f      	movs	r2, #63	; 0x3f
 8007ffe:	409a      	lsls	r2, r3
 8008000:	68fb      	ldr	r3, [r7, #12]
 8008002:	609a      	str	r2, [r3, #8]
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	2200      	movs	r2, #0
 8008008:	655a      	str	r2, [r3, #84]	; 0x54
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	2200      	movs	r2, #0
 800800e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	2200      	movs	r2, #0
 8008016:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800801a:	2300      	movs	r3, #0
 800801c:	4618      	mov	r0, r3
 800801e:	3710      	adds	r7, #16
 8008020:	46bd      	mov	sp, r7
 8008022:	bd80      	pop	{r7, pc}

08008024 <HAL_DMA_Start_IT>:
 8008024:	b580      	push	{r7, lr}
 8008026:	b086      	sub	sp, #24
 8008028:	af00      	add	r7, sp, #0
 800802a:	60f8      	str	r0, [r7, #12]
 800802c:	60b9      	str	r1, [r7, #8]
 800802e:	607a      	str	r2, [r7, #4]
 8008030:	603b      	str	r3, [r7, #0]
 8008032:	2300      	movs	r3, #0
 8008034:	75fb      	strb	r3, [r7, #23]
 8008036:	68fb      	ldr	r3, [r7, #12]
 8008038:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800803a:	613b      	str	r3, [r7, #16]
 800803c:	68fb      	ldr	r3, [r7, #12]
 800803e:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8008042:	2b01      	cmp	r3, #1
 8008044:	d101      	bne.n	800804a <HAL_DMA_Start_IT+0x26>
 8008046:	2302      	movs	r3, #2
 8008048:	e040      	b.n	80080cc <HAL_DMA_Start_IT+0xa8>
 800804a:	68fb      	ldr	r3, [r7, #12]
 800804c:	2201      	movs	r2, #1
 800804e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008052:	68fb      	ldr	r3, [r7, #12]
 8008054:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008058:	b2db      	uxtb	r3, r3
 800805a:	2b01      	cmp	r3, #1
 800805c:	d12f      	bne.n	80080be <HAL_DMA_Start_IT+0x9a>
 800805e:	68fb      	ldr	r3, [r7, #12]
 8008060:	2202      	movs	r2, #2
 8008062:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008066:	68fb      	ldr	r3, [r7, #12]
 8008068:	2200      	movs	r2, #0
 800806a:	655a      	str	r2, [r3, #84]	; 0x54
 800806c:	683b      	ldr	r3, [r7, #0]
 800806e:	687a      	ldr	r2, [r7, #4]
 8008070:	68b9      	ldr	r1, [r7, #8]
 8008072:	68f8      	ldr	r0, [r7, #12]
 8008074:	f000 fa4a 	bl	800850c <DMA_SetConfig>
 8008078:	68fb      	ldr	r3, [r7, #12]
 800807a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800807c:	223f      	movs	r2, #63	; 0x3f
 800807e:	409a      	lsls	r2, r3
 8008080:	693b      	ldr	r3, [r7, #16]
 8008082:	609a      	str	r2, [r3, #8]
 8008084:	68fb      	ldr	r3, [r7, #12]
 8008086:	681b      	ldr	r3, [r3, #0]
 8008088:	681a      	ldr	r2, [r3, #0]
 800808a:	68fb      	ldr	r3, [r7, #12]
 800808c:	681b      	ldr	r3, [r3, #0]
 800808e:	f042 0216 	orr.w	r2, r2, #22
 8008092:	601a      	str	r2, [r3, #0]
 8008094:	68fb      	ldr	r3, [r7, #12]
 8008096:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008098:	2b00      	cmp	r3, #0
 800809a:	d007      	beq.n	80080ac <HAL_DMA_Start_IT+0x88>
 800809c:	68fb      	ldr	r3, [r7, #12]
 800809e:	681b      	ldr	r3, [r3, #0]
 80080a0:	681a      	ldr	r2, [r3, #0]
 80080a2:	68fb      	ldr	r3, [r7, #12]
 80080a4:	681b      	ldr	r3, [r3, #0]
 80080a6:	f042 0208 	orr.w	r2, r2, #8
 80080aa:	601a      	str	r2, [r3, #0]
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	681a      	ldr	r2, [r3, #0]
 80080b2:	68fb      	ldr	r3, [r7, #12]
 80080b4:	681b      	ldr	r3, [r3, #0]
 80080b6:	f042 0201 	orr.w	r2, r2, #1
 80080ba:	601a      	str	r2, [r3, #0]
 80080bc:	e005      	b.n	80080ca <HAL_DMA_Start_IT+0xa6>
 80080be:	68fb      	ldr	r3, [r7, #12]
 80080c0:	2200      	movs	r2, #0
 80080c2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80080c6:	2302      	movs	r3, #2
 80080c8:	75fb      	strb	r3, [r7, #23]
 80080ca:	7dfb      	ldrb	r3, [r7, #23]
 80080cc:	4618      	mov	r0, r3
 80080ce:	3718      	adds	r7, #24
 80080d0:	46bd      	mov	sp, r7
 80080d2:	bd80      	pop	{r7, pc}

080080d4 <HAL_DMA_Abort>:
 80080d4:	b580      	push	{r7, lr}
 80080d6:	b084      	sub	sp, #16
 80080d8:	af00      	add	r7, sp, #0
 80080da:	6078      	str	r0, [r7, #4]
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80080e0:	60fb      	str	r3, [r7, #12]
 80080e2:	f7ff f91d 	bl	8007320 <HAL_GetTick>
 80080e6:	60b8      	str	r0, [r7, #8]
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80080ee:	b2db      	uxtb	r3, r3
 80080f0:	2b02      	cmp	r3, #2
 80080f2:	d008      	beq.n	8008106 <HAL_DMA_Abort+0x32>
 80080f4:	687b      	ldr	r3, [r7, #4]
 80080f6:	2280      	movs	r2, #128	; 0x80
 80080f8:	655a      	str	r2, [r3, #84]	; 0x54
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	2200      	movs	r2, #0
 80080fe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008102:	2301      	movs	r3, #1
 8008104:	e052      	b.n	80081ac <HAL_DMA_Abort+0xd8>
 8008106:	687b      	ldr	r3, [r7, #4]
 8008108:	681b      	ldr	r3, [r3, #0]
 800810a:	681a      	ldr	r2, [r3, #0]
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	f022 0216 	bic.w	r2, r2, #22
 8008114:	601a      	str	r2, [r3, #0]
 8008116:	687b      	ldr	r3, [r7, #4]
 8008118:	681b      	ldr	r3, [r3, #0]
 800811a:	695a      	ldr	r2, [r3, #20]
 800811c:	687b      	ldr	r3, [r7, #4]
 800811e:	681b      	ldr	r3, [r3, #0]
 8008120:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008124:	615a      	str	r2, [r3, #20]
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800812a:	2b00      	cmp	r3, #0
 800812c:	d103      	bne.n	8008136 <HAL_DMA_Abort+0x62>
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008132:	2b00      	cmp	r3, #0
 8008134:	d007      	beq.n	8008146 <HAL_DMA_Abort+0x72>
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	681b      	ldr	r3, [r3, #0]
 800813a:	681a      	ldr	r2, [r3, #0]
 800813c:	687b      	ldr	r3, [r7, #4]
 800813e:	681b      	ldr	r3, [r3, #0]
 8008140:	f022 0208 	bic.w	r2, r2, #8
 8008144:	601a      	str	r2, [r3, #0]
 8008146:	687b      	ldr	r3, [r7, #4]
 8008148:	681b      	ldr	r3, [r3, #0]
 800814a:	681a      	ldr	r2, [r3, #0]
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	681b      	ldr	r3, [r3, #0]
 8008150:	f022 0201 	bic.w	r2, r2, #1
 8008154:	601a      	str	r2, [r3, #0]
 8008156:	e013      	b.n	8008180 <HAL_DMA_Abort+0xac>
 8008158:	f7ff f8e2 	bl	8007320 <HAL_GetTick>
 800815c:	4602      	mov	r2, r0
 800815e:	68bb      	ldr	r3, [r7, #8]
 8008160:	1ad3      	subs	r3, r2, r3
 8008162:	2b05      	cmp	r3, #5
 8008164:	d90c      	bls.n	8008180 <HAL_DMA_Abort+0xac>
 8008166:	687b      	ldr	r3, [r7, #4]
 8008168:	2220      	movs	r2, #32
 800816a:	655a      	str	r2, [r3, #84]	; 0x54
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	2203      	movs	r2, #3
 8008170:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008174:	687b      	ldr	r3, [r7, #4]
 8008176:	2200      	movs	r2, #0
 8008178:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800817c:	2303      	movs	r3, #3
 800817e:	e015      	b.n	80081ac <HAL_DMA_Abort+0xd8>
 8008180:	687b      	ldr	r3, [r7, #4]
 8008182:	681b      	ldr	r3, [r3, #0]
 8008184:	681b      	ldr	r3, [r3, #0]
 8008186:	f003 0301 	and.w	r3, r3, #1
 800818a:	2b00      	cmp	r3, #0
 800818c:	d1e4      	bne.n	8008158 <HAL_DMA_Abort+0x84>
 800818e:	687b      	ldr	r3, [r7, #4]
 8008190:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008192:	223f      	movs	r2, #63	; 0x3f
 8008194:	409a      	lsls	r2, r3
 8008196:	68fb      	ldr	r3, [r7, #12]
 8008198:	609a      	str	r2, [r3, #8]
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	2201      	movs	r2, #1
 800819e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80081a2:	687b      	ldr	r3, [r7, #4]
 80081a4:	2200      	movs	r2, #0
 80081a6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80081aa:	2300      	movs	r3, #0
 80081ac:	4618      	mov	r0, r3
 80081ae:	3710      	adds	r7, #16
 80081b0:	46bd      	mov	sp, r7
 80081b2:	bd80      	pop	{r7, pc}

080081b4 <HAL_DMA_Abort_IT>:
 80081b4:	b480      	push	{r7}
 80081b6:	b083      	sub	sp, #12
 80081b8:	af00      	add	r7, sp, #0
 80081ba:	6078      	str	r0, [r7, #4]
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80081c2:	b2db      	uxtb	r3, r3
 80081c4:	2b02      	cmp	r3, #2
 80081c6:	d004      	beq.n	80081d2 <HAL_DMA_Abort_IT+0x1e>
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	2280      	movs	r2, #128	; 0x80
 80081cc:	655a      	str	r2, [r3, #84]	; 0x54
 80081ce:	2301      	movs	r3, #1
 80081d0:	e00c      	b.n	80081ec <HAL_DMA_Abort_IT+0x38>
 80081d2:	687b      	ldr	r3, [r7, #4]
 80081d4:	2205      	movs	r2, #5
 80081d6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80081da:	687b      	ldr	r3, [r7, #4]
 80081dc:	681b      	ldr	r3, [r3, #0]
 80081de:	681a      	ldr	r2, [r3, #0]
 80081e0:	687b      	ldr	r3, [r7, #4]
 80081e2:	681b      	ldr	r3, [r3, #0]
 80081e4:	f022 0201 	bic.w	r2, r2, #1
 80081e8:	601a      	str	r2, [r3, #0]
 80081ea:	2300      	movs	r3, #0
 80081ec:	4618      	mov	r0, r3
 80081ee:	370c      	adds	r7, #12
 80081f0:	46bd      	mov	sp, r7
 80081f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081f6:	4770      	bx	lr

080081f8 <HAL_DMA_IRQHandler>:
 80081f8:	b580      	push	{r7, lr}
 80081fa:	b086      	sub	sp, #24
 80081fc:	af00      	add	r7, sp, #0
 80081fe:	6078      	str	r0, [r7, #4]
 8008200:	2300      	movs	r3, #0
 8008202:	60bb      	str	r3, [r7, #8]
 8008204:	4b8e      	ldr	r3, [pc, #568]	; (8008440 <HAL_DMA_IRQHandler+0x248>)
 8008206:	681b      	ldr	r3, [r3, #0]
 8008208:	4a8e      	ldr	r2, [pc, #568]	; (8008444 <HAL_DMA_IRQHandler+0x24c>)
 800820a:	fba2 2303 	umull	r2, r3, r2, r3
 800820e:	0a9b      	lsrs	r3, r3, #10
 8008210:	617b      	str	r3, [r7, #20]
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008216:	613b      	str	r3, [r7, #16]
 8008218:	693b      	ldr	r3, [r7, #16]
 800821a:	681b      	ldr	r3, [r3, #0]
 800821c:	60fb      	str	r3, [r7, #12]
 800821e:	687b      	ldr	r3, [r7, #4]
 8008220:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008222:	2208      	movs	r2, #8
 8008224:	409a      	lsls	r2, r3
 8008226:	68fb      	ldr	r3, [r7, #12]
 8008228:	4013      	ands	r3, r2
 800822a:	2b00      	cmp	r3, #0
 800822c:	d01a      	beq.n	8008264 <HAL_DMA_IRQHandler+0x6c>
 800822e:	687b      	ldr	r3, [r7, #4]
 8008230:	681b      	ldr	r3, [r3, #0]
 8008232:	681b      	ldr	r3, [r3, #0]
 8008234:	f003 0304 	and.w	r3, r3, #4
 8008238:	2b00      	cmp	r3, #0
 800823a:	d013      	beq.n	8008264 <HAL_DMA_IRQHandler+0x6c>
 800823c:	687b      	ldr	r3, [r7, #4]
 800823e:	681b      	ldr	r3, [r3, #0]
 8008240:	681a      	ldr	r2, [r3, #0]
 8008242:	687b      	ldr	r3, [r7, #4]
 8008244:	681b      	ldr	r3, [r3, #0]
 8008246:	f022 0204 	bic.w	r2, r2, #4
 800824a:	601a      	str	r2, [r3, #0]
 800824c:	687b      	ldr	r3, [r7, #4]
 800824e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008250:	2208      	movs	r2, #8
 8008252:	409a      	lsls	r2, r3
 8008254:	693b      	ldr	r3, [r7, #16]
 8008256:	609a      	str	r2, [r3, #8]
 8008258:	687b      	ldr	r3, [r7, #4]
 800825a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800825c:	f043 0201 	orr.w	r2, r3, #1
 8008260:	687b      	ldr	r3, [r7, #4]
 8008262:	655a      	str	r2, [r3, #84]	; 0x54
 8008264:	687b      	ldr	r3, [r7, #4]
 8008266:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008268:	2201      	movs	r2, #1
 800826a:	409a      	lsls	r2, r3
 800826c:	68fb      	ldr	r3, [r7, #12]
 800826e:	4013      	ands	r3, r2
 8008270:	2b00      	cmp	r3, #0
 8008272:	d012      	beq.n	800829a <HAL_DMA_IRQHandler+0xa2>
 8008274:	687b      	ldr	r3, [r7, #4]
 8008276:	681b      	ldr	r3, [r3, #0]
 8008278:	695b      	ldr	r3, [r3, #20]
 800827a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800827e:	2b00      	cmp	r3, #0
 8008280:	d00b      	beq.n	800829a <HAL_DMA_IRQHandler+0xa2>
 8008282:	687b      	ldr	r3, [r7, #4]
 8008284:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008286:	2201      	movs	r2, #1
 8008288:	409a      	lsls	r2, r3
 800828a:	693b      	ldr	r3, [r7, #16]
 800828c:	609a      	str	r2, [r3, #8]
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008292:	f043 0202 	orr.w	r2, r3, #2
 8008296:	687b      	ldr	r3, [r7, #4]
 8008298:	655a      	str	r2, [r3, #84]	; 0x54
 800829a:	687b      	ldr	r3, [r7, #4]
 800829c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800829e:	2204      	movs	r2, #4
 80082a0:	409a      	lsls	r2, r3
 80082a2:	68fb      	ldr	r3, [r7, #12]
 80082a4:	4013      	ands	r3, r2
 80082a6:	2b00      	cmp	r3, #0
 80082a8:	d012      	beq.n	80082d0 <HAL_DMA_IRQHandler+0xd8>
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	681b      	ldr	r3, [r3, #0]
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	f003 0302 	and.w	r3, r3, #2
 80082b4:	2b00      	cmp	r3, #0
 80082b6:	d00b      	beq.n	80082d0 <HAL_DMA_IRQHandler+0xd8>
 80082b8:	687b      	ldr	r3, [r7, #4]
 80082ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80082bc:	2204      	movs	r2, #4
 80082be:	409a      	lsls	r2, r3
 80082c0:	693b      	ldr	r3, [r7, #16]
 80082c2:	609a      	str	r2, [r3, #8]
 80082c4:	687b      	ldr	r3, [r7, #4]
 80082c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80082c8:	f043 0204 	orr.w	r2, r3, #4
 80082cc:	687b      	ldr	r3, [r7, #4]
 80082ce:	655a      	str	r2, [r3, #84]	; 0x54
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80082d4:	2210      	movs	r2, #16
 80082d6:	409a      	lsls	r2, r3
 80082d8:	68fb      	ldr	r3, [r7, #12]
 80082da:	4013      	ands	r3, r2
 80082dc:	2b00      	cmp	r3, #0
 80082de:	d043      	beq.n	8008368 <HAL_DMA_IRQHandler+0x170>
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	681b      	ldr	r3, [r3, #0]
 80082e4:	681b      	ldr	r3, [r3, #0]
 80082e6:	f003 0308 	and.w	r3, r3, #8
 80082ea:	2b00      	cmp	r3, #0
 80082ec:	d03c      	beq.n	8008368 <HAL_DMA_IRQHandler+0x170>
 80082ee:	687b      	ldr	r3, [r7, #4]
 80082f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80082f2:	2210      	movs	r2, #16
 80082f4:	409a      	lsls	r2, r3
 80082f6:	693b      	ldr	r3, [r7, #16]
 80082f8:	609a      	str	r2, [r3, #8]
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	681b      	ldr	r3, [r3, #0]
 8008300:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008304:	2b00      	cmp	r3, #0
 8008306:	d018      	beq.n	800833a <HAL_DMA_IRQHandler+0x142>
 8008308:	687b      	ldr	r3, [r7, #4]
 800830a:	681b      	ldr	r3, [r3, #0]
 800830c:	681b      	ldr	r3, [r3, #0]
 800830e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008312:	2b00      	cmp	r3, #0
 8008314:	d108      	bne.n	8008328 <HAL_DMA_IRQHandler+0x130>
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800831a:	2b00      	cmp	r3, #0
 800831c:	d024      	beq.n	8008368 <HAL_DMA_IRQHandler+0x170>
 800831e:	687b      	ldr	r3, [r7, #4]
 8008320:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008322:	6878      	ldr	r0, [r7, #4]
 8008324:	4798      	blx	r3
 8008326:	e01f      	b.n	8008368 <HAL_DMA_IRQHandler+0x170>
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800832c:	2b00      	cmp	r3, #0
 800832e:	d01b      	beq.n	8008368 <HAL_DMA_IRQHandler+0x170>
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008334:	6878      	ldr	r0, [r7, #4]
 8008336:	4798      	blx	r3
 8008338:	e016      	b.n	8008368 <HAL_DMA_IRQHandler+0x170>
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	681b      	ldr	r3, [r3, #0]
 800833e:	681b      	ldr	r3, [r3, #0]
 8008340:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008344:	2b00      	cmp	r3, #0
 8008346:	d107      	bne.n	8008358 <HAL_DMA_IRQHandler+0x160>
 8008348:	687b      	ldr	r3, [r7, #4]
 800834a:	681b      	ldr	r3, [r3, #0]
 800834c:	681a      	ldr	r2, [r3, #0]
 800834e:	687b      	ldr	r3, [r7, #4]
 8008350:	681b      	ldr	r3, [r3, #0]
 8008352:	f022 0208 	bic.w	r2, r2, #8
 8008356:	601a      	str	r2, [r3, #0]
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800835c:	2b00      	cmp	r3, #0
 800835e:	d003      	beq.n	8008368 <HAL_DMA_IRQHandler+0x170>
 8008360:	687b      	ldr	r3, [r7, #4]
 8008362:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008364:	6878      	ldr	r0, [r7, #4]
 8008366:	4798      	blx	r3
 8008368:	687b      	ldr	r3, [r7, #4]
 800836a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800836c:	2220      	movs	r2, #32
 800836e:	409a      	lsls	r2, r3
 8008370:	68fb      	ldr	r3, [r7, #12]
 8008372:	4013      	ands	r3, r2
 8008374:	2b00      	cmp	r3, #0
 8008376:	f000 808f 	beq.w	8008498 <HAL_DMA_IRQHandler+0x2a0>
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	681b      	ldr	r3, [r3, #0]
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	f003 0310 	and.w	r3, r3, #16
 8008384:	2b00      	cmp	r3, #0
 8008386:	f000 8087 	beq.w	8008498 <HAL_DMA_IRQHandler+0x2a0>
 800838a:	687b      	ldr	r3, [r7, #4]
 800838c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800838e:	2220      	movs	r2, #32
 8008390:	409a      	lsls	r2, r3
 8008392:	693b      	ldr	r3, [r7, #16]
 8008394:	609a      	str	r2, [r3, #8]
 8008396:	687b      	ldr	r3, [r7, #4]
 8008398:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800839c:	b2db      	uxtb	r3, r3
 800839e:	2b05      	cmp	r3, #5
 80083a0:	d136      	bne.n	8008410 <HAL_DMA_IRQHandler+0x218>
 80083a2:	687b      	ldr	r3, [r7, #4]
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	681a      	ldr	r2, [r3, #0]
 80083a8:	687b      	ldr	r3, [r7, #4]
 80083aa:	681b      	ldr	r3, [r3, #0]
 80083ac:	f022 0216 	bic.w	r2, r2, #22
 80083b0:	601a      	str	r2, [r3, #0]
 80083b2:	687b      	ldr	r3, [r7, #4]
 80083b4:	681b      	ldr	r3, [r3, #0]
 80083b6:	695a      	ldr	r2, [r3, #20]
 80083b8:	687b      	ldr	r3, [r7, #4]
 80083ba:	681b      	ldr	r3, [r3, #0]
 80083bc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80083c0:	615a      	str	r2, [r3, #20]
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80083c6:	2b00      	cmp	r3, #0
 80083c8:	d103      	bne.n	80083d2 <HAL_DMA_IRQHandler+0x1da>
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80083ce:	2b00      	cmp	r3, #0
 80083d0:	d007      	beq.n	80083e2 <HAL_DMA_IRQHandler+0x1ea>
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	681b      	ldr	r3, [r3, #0]
 80083d6:	681a      	ldr	r2, [r3, #0]
 80083d8:	687b      	ldr	r3, [r7, #4]
 80083da:	681b      	ldr	r3, [r3, #0]
 80083dc:	f022 0208 	bic.w	r2, r2, #8
 80083e0:	601a      	str	r2, [r3, #0]
 80083e2:	687b      	ldr	r3, [r7, #4]
 80083e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80083e6:	223f      	movs	r2, #63	; 0x3f
 80083e8:	409a      	lsls	r2, r3
 80083ea:	693b      	ldr	r3, [r7, #16]
 80083ec:	609a      	str	r2, [r3, #8]
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	2201      	movs	r2, #1
 80083f2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	2200      	movs	r2, #0
 80083fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008402:	2b00      	cmp	r3, #0
 8008404:	d07e      	beq.n	8008504 <HAL_DMA_IRQHandler+0x30c>
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800840a:	6878      	ldr	r0, [r7, #4]
 800840c:	4798      	blx	r3
 800840e:	e079      	b.n	8008504 <HAL_DMA_IRQHandler+0x30c>
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	681b      	ldr	r3, [r3, #0]
 8008414:	681b      	ldr	r3, [r3, #0]
 8008416:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800841a:	2b00      	cmp	r3, #0
 800841c:	d01d      	beq.n	800845a <HAL_DMA_IRQHandler+0x262>
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	681b      	ldr	r3, [r3, #0]
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008428:	2b00      	cmp	r3, #0
 800842a:	d10d      	bne.n	8008448 <HAL_DMA_IRQHandler+0x250>
 800842c:	687b      	ldr	r3, [r7, #4]
 800842e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008430:	2b00      	cmp	r3, #0
 8008432:	d031      	beq.n	8008498 <HAL_DMA_IRQHandler+0x2a0>
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008438:	6878      	ldr	r0, [r7, #4]
 800843a:	4798      	blx	r3
 800843c:	e02c      	b.n	8008498 <HAL_DMA_IRQHandler+0x2a0>
 800843e:	bf00      	nop
 8008440:	20000128 	.word	0x20000128
 8008444:	1b4e81b5 	.word	0x1b4e81b5
 8008448:	687b      	ldr	r3, [r7, #4]
 800844a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800844c:	2b00      	cmp	r3, #0
 800844e:	d023      	beq.n	8008498 <HAL_DMA_IRQHandler+0x2a0>
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008454:	6878      	ldr	r0, [r7, #4]
 8008456:	4798      	blx	r3
 8008458:	e01e      	b.n	8008498 <HAL_DMA_IRQHandler+0x2a0>
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	681b      	ldr	r3, [r3, #0]
 800845e:	681b      	ldr	r3, [r3, #0]
 8008460:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008464:	2b00      	cmp	r3, #0
 8008466:	d10f      	bne.n	8008488 <HAL_DMA_IRQHandler+0x290>
 8008468:	687b      	ldr	r3, [r7, #4]
 800846a:	681b      	ldr	r3, [r3, #0]
 800846c:	681a      	ldr	r2, [r3, #0]
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	681b      	ldr	r3, [r3, #0]
 8008472:	f022 0210 	bic.w	r2, r2, #16
 8008476:	601a      	str	r2, [r3, #0]
 8008478:	687b      	ldr	r3, [r7, #4]
 800847a:	2201      	movs	r2, #1
 800847c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008480:	687b      	ldr	r3, [r7, #4]
 8008482:	2200      	movs	r2, #0
 8008484:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800848c:	2b00      	cmp	r3, #0
 800848e:	d003      	beq.n	8008498 <HAL_DMA_IRQHandler+0x2a0>
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008494:	6878      	ldr	r0, [r7, #4]
 8008496:	4798      	blx	r3
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800849c:	2b00      	cmp	r3, #0
 800849e:	d032      	beq.n	8008506 <HAL_DMA_IRQHandler+0x30e>
 80084a0:	687b      	ldr	r3, [r7, #4]
 80084a2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80084a4:	f003 0301 	and.w	r3, r3, #1
 80084a8:	2b00      	cmp	r3, #0
 80084aa:	d022      	beq.n	80084f2 <HAL_DMA_IRQHandler+0x2fa>
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	2205      	movs	r2, #5
 80084b0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80084b4:	687b      	ldr	r3, [r7, #4]
 80084b6:	681b      	ldr	r3, [r3, #0]
 80084b8:	681a      	ldr	r2, [r3, #0]
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	681b      	ldr	r3, [r3, #0]
 80084be:	f022 0201 	bic.w	r2, r2, #1
 80084c2:	601a      	str	r2, [r3, #0]
 80084c4:	68bb      	ldr	r3, [r7, #8]
 80084c6:	3301      	adds	r3, #1
 80084c8:	60bb      	str	r3, [r7, #8]
 80084ca:	697a      	ldr	r2, [r7, #20]
 80084cc:	429a      	cmp	r2, r3
 80084ce:	d307      	bcc.n	80084e0 <HAL_DMA_IRQHandler+0x2e8>
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	681b      	ldr	r3, [r3, #0]
 80084d4:	681b      	ldr	r3, [r3, #0]
 80084d6:	f003 0301 	and.w	r3, r3, #1
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d1f2      	bne.n	80084c4 <HAL_DMA_IRQHandler+0x2cc>
 80084de:	e000      	b.n	80084e2 <HAL_DMA_IRQHandler+0x2ea>
 80084e0:	bf00      	nop
 80084e2:	687b      	ldr	r3, [r7, #4]
 80084e4:	2201      	movs	r2, #1
 80084e6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	2200      	movs	r2, #0
 80084ee:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80084f2:	687b      	ldr	r3, [r7, #4]
 80084f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80084f6:	2b00      	cmp	r3, #0
 80084f8:	d005      	beq.n	8008506 <HAL_DMA_IRQHandler+0x30e>
 80084fa:	687b      	ldr	r3, [r7, #4]
 80084fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80084fe:	6878      	ldr	r0, [r7, #4]
 8008500:	4798      	blx	r3
 8008502:	e000      	b.n	8008506 <HAL_DMA_IRQHandler+0x30e>
 8008504:	bf00      	nop
 8008506:	3718      	adds	r7, #24
 8008508:	46bd      	mov	sp, r7
 800850a:	bd80      	pop	{r7, pc}

0800850c <DMA_SetConfig>:
 800850c:	b480      	push	{r7}
 800850e:	b085      	sub	sp, #20
 8008510:	af00      	add	r7, sp, #0
 8008512:	60f8      	str	r0, [r7, #12]
 8008514:	60b9      	str	r1, [r7, #8]
 8008516:	607a      	str	r2, [r7, #4]
 8008518:	603b      	str	r3, [r7, #0]
 800851a:	68fb      	ldr	r3, [r7, #12]
 800851c:	681b      	ldr	r3, [r3, #0]
 800851e:	681a      	ldr	r2, [r3, #0]
 8008520:	68fb      	ldr	r3, [r7, #12]
 8008522:	681b      	ldr	r3, [r3, #0]
 8008524:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8008528:	601a      	str	r2, [r3, #0]
 800852a:	68fb      	ldr	r3, [r7, #12]
 800852c:	681b      	ldr	r3, [r3, #0]
 800852e:	683a      	ldr	r2, [r7, #0]
 8008530:	605a      	str	r2, [r3, #4]
 8008532:	68fb      	ldr	r3, [r7, #12]
 8008534:	689b      	ldr	r3, [r3, #8]
 8008536:	2b40      	cmp	r3, #64	; 0x40
 8008538:	d108      	bne.n	800854c <DMA_SetConfig+0x40>
 800853a:	68fb      	ldr	r3, [r7, #12]
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	687a      	ldr	r2, [r7, #4]
 8008540:	609a      	str	r2, [r3, #8]
 8008542:	68fb      	ldr	r3, [r7, #12]
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	68ba      	ldr	r2, [r7, #8]
 8008548:	60da      	str	r2, [r3, #12]
 800854a:	e007      	b.n	800855c <DMA_SetConfig+0x50>
 800854c:	68fb      	ldr	r3, [r7, #12]
 800854e:	681b      	ldr	r3, [r3, #0]
 8008550:	68ba      	ldr	r2, [r7, #8]
 8008552:	609a      	str	r2, [r3, #8]
 8008554:	68fb      	ldr	r3, [r7, #12]
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	687a      	ldr	r2, [r7, #4]
 800855a:	60da      	str	r2, [r3, #12]
 800855c:	bf00      	nop
 800855e:	3714      	adds	r7, #20
 8008560:	46bd      	mov	sp, r7
 8008562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008566:	4770      	bx	lr

08008568 <DMA_CalcBaseAndBitshift>:
 8008568:	b480      	push	{r7}
 800856a:	b085      	sub	sp, #20
 800856c:	af00      	add	r7, sp, #0
 800856e:	6078      	str	r0, [r7, #4]
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	681b      	ldr	r3, [r3, #0]
 8008574:	b2db      	uxtb	r3, r3
 8008576:	3b10      	subs	r3, #16
 8008578:	4a14      	ldr	r2, [pc, #80]	; (80085cc <DMA_CalcBaseAndBitshift+0x64>)
 800857a:	fba2 2303 	umull	r2, r3, r2, r3
 800857e:	091b      	lsrs	r3, r3, #4
 8008580:	60fb      	str	r3, [r7, #12]
 8008582:	4a13      	ldr	r2, [pc, #76]	; (80085d0 <DMA_CalcBaseAndBitshift+0x68>)
 8008584:	68fb      	ldr	r3, [r7, #12]
 8008586:	4413      	add	r3, r2
 8008588:	781b      	ldrb	r3, [r3, #0]
 800858a:	461a      	mov	r2, r3
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	65da      	str	r2, [r3, #92]	; 0x5c
 8008590:	68fb      	ldr	r3, [r7, #12]
 8008592:	2b03      	cmp	r3, #3
 8008594:	d909      	bls.n	80085aa <DMA_CalcBaseAndBitshift+0x42>
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	681b      	ldr	r3, [r3, #0]
 800859a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800859e:	f023 0303 	bic.w	r3, r3, #3
 80085a2:	1d1a      	adds	r2, r3, #4
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	659a      	str	r2, [r3, #88]	; 0x58
 80085a8:	e007      	b.n	80085ba <DMA_CalcBaseAndBitshift+0x52>
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	681b      	ldr	r3, [r3, #0]
 80085ae:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80085b2:	f023 0303 	bic.w	r3, r3, #3
 80085b6:	687a      	ldr	r2, [r7, #4]
 80085b8:	6593      	str	r3, [r2, #88]	; 0x58
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80085be:	4618      	mov	r0, r3
 80085c0:	3714      	adds	r7, #20
 80085c2:	46bd      	mov	sp, r7
 80085c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085c8:	4770      	bx	lr
 80085ca:	bf00      	nop
 80085cc:	aaaaaaab 	.word	0xaaaaaaab
 80085d0:	080108e8 	.word	0x080108e8

080085d4 <DMA_CheckFifoParam>:
 80085d4:	b480      	push	{r7}
 80085d6:	b085      	sub	sp, #20
 80085d8:	af00      	add	r7, sp, #0
 80085da:	6078      	str	r0, [r7, #4]
 80085dc:	2300      	movs	r3, #0
 80085de:	73fb      	strb	r3, [r7, #15]
 80085e0:	687b      	ldr	r3, [r7, #4]
 80085e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80085e4:	60bb      	str	r3, [r7, #8]
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	699b      	ldr	r3, [r3, #24]
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	d11f      	bne.n	800862e <DMA_CheckFifoParam+0x5a>
 80085ee:	68bb      	ldr	r3, [r7, #8]
 80085f0:	2b03      	cmp	r3, #3
 80085f2:	d856      	bhi.n	80086a2 <DMA_CheckFifoParam+0xce>
 80085f4:	a201      	add	r2, pc, #4	; (adr r2, 80085fc <DMA_CheckFifoParam+0x28>)
 80085f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80085fa:	bf00      	nop
 80085fc:	0800860d 	.word	0x0800860d
 8008600:	0800861f 	.word	0x0800861f
 8008604:	0800860d 	.word	0x0800860d
 8008608:	080086a3 	.word	0x080086a3
 800860c:	687b      	ldr	r3, [r7, #4]
 800860e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008610:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008614:	2b00      	cmp	r3, #0
 8008616:	d046      	beq.n	80086a6 <DMA_CheckFifoParam+0xd2>
 8008618:	2301      	movs	r3, #1
 800861a:	73fb      	strb	r3, [r7, #15]
 800861c:	e043      	b.n	80086a6 <DMA_CheckFifoParam+0xd2>
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008622:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008626:	d140      	bne.n	80086aa <DMA_CheckFifoParam+0xd6>
 8008628:	2301      	movs	r3, #1
 800862a:	73fb      	strb	r3, [r7, #15]
 800862c:	e03d      	b.n	80086aa <DMA_CheckFifoParam+0xd6>
 800862e:	687b      	ldr	r3, [r7, #4]
 8008630:	699b      	ldr	r3, [r3, #24]
 8008632:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008636:	d121      	bne.n	800867c <DMA_CheckFifoParam+0xa8>
 8008638:	68bb      	ldr	r3, [r7, #8]
 800863a:	2b03      	cmp	r3, #3
 800863c:	d837      	bhi.n	80086ae <DMA_CheckFifoParam+0xda>
 800863e:	a201      	add	r2, pc, #4	; (adr r2, 8008644 <DMA_CheckFifoParam+0x70>)
 8008640:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008644:	08008655 	.word	0x08008655
 8008648:	0800865b 	.word	0x0800865b
 800864c:	08008655 	.word	0x08008655
 8008650:	0800866d 	.word	0x0800866d
 8008654:	2301      	movs	r3, #1
 8008656:	73fb      	strb	r3, [r7, #15]
 8008658:	e030      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800865e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008662:	2b00      	cmp	r3, #0
 8008664:	d025      	beq.n	80086b2 <DMA_CheckFifoParam+0xde>
 8008666:	2301      	movs	r3, #1
 8008668:	73fb      	strb	r3, [r7, #15]
 800866a:	e022      	b.n	80086b2 <DMA_CheckFifoParam+0xde>
 800866c:	687b      	ldr	r3, [r7, #4]
 800866e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008670:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008674:	d11f      	bne.n	80086b6 <DMA_CheckFifoParam+0xe2>
 8008676:	2301      	movs	r3, #1
 8008678:	73fb      	strb	r3, [r7, #15]
 800867a:	e01c      	b.n	80086b6 <DMA_CheckFifoParam+0xe2>
 800867c:	68bb      	ldr	r3, [r7, #8]
 800867e:	2b02      	cmp	r3, #2
 8008680:	d903      	bls.n	800868a <DMA_CheckFifoParam+0xb6>
 8008682:	68bb      	ldr	r3, [r7, #8]
 8008684:	2b03      	cmp	r3, #3
 8008686:	d003      	beq.n	8008690 <DMA_CheckFifoParam+0xbc>
 8008688:	e018      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 800868a:	2301      	movs	r3, #1
 800868c:	73fb      	strb	r3, [r7, #15]
 800868e:	e015      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 8008690:	687b      	ldr	r3, [r7, #4]
 8008692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008694:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008698:	2b00      	cmp	r3, #0
 800869a:	d00e      	beq.n	80086ba <DMA_CheckFifoParam+0xe6>
 800869c:	2301      	movs	r3, #1
 800869e:	73fb      	strb	r3, [r7, #15]
 80086a0:	e00b      	b.n	80086ba <DMA_CheckFifoParam+0xe6>
 80086a2:	bf00      	nop
 80086a4:	e00a      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 80086a6:	bf00      	nop
 80086a8:	e008      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 80086aa:	bf00      	nop
 80086ac:	e006      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 80086ae:	bf00      	nop
 80086b0:	e004      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 80086b2:	bf00      	nop
 80086b4:	e002      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 80086b6:	bf00      	nop
 80086b8:	e000      	b.n	80086bc <DMA_CheckFifoParam+0xe8>
 80086ba:	bf00      	nop
 80086bc:	7bfb      	ldrb	r3, [r7, #15]
 80086be:	4618      	mov	r0, r3
 80086c0:	3714      	adds	r7, #20
 80086c2:	46bd      	mov	sp, r7
 80086c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086c8:	4770      	bx	lr
 80086ca:	bf00      	nop

080086cc <HAL_FLASH_Program>:
 80086cc:	b580      	push	{r7, lr}
 80086ce:	b086      	sub	sp, #24
 80086d0:	af00      	add	r7, sp, #0
 80086d2:	60f8      	str	r0, [r7, #12]
 80086d4:	60b9      	str	r1, [r7, #8]
 80086d6:	e9c7 2300 	strd	r2, r3, [r7]
 80086da:	2301      	movs	r3, #1
 80086dc:	75fb      	strb	r3, [r7, #23]
 80086de:	4b23      	ldr	r3, [pc, #140]	; (800876c <HAL_FLASH_Program+0xa0>)
 80086e0:	7e1b      	ldrb	r3, [r3, #24]
 80086e2:	2b01      	cmp	r3, #1
 80086e4:	d101      	bne.n	80086ea <HAL_FLASH_Program+0x1e>
 80086e6:	2302      	movs	r3, #2
 80086e8:	e03b      	b.n	8008762 <HAL_FLASH_Program+0x96>
 80086ea:	4b20      	ldr	r3, [pc, #128]	; (800876c <HAL_FLASH_Program+0xa0>)
 80086ec:	2201      	movs	r2, #1
 80086ee:	761a      	strb	r2, [r3, #24]
 80086f0:	f24c 3050 	movw	r0, #50000	; 0xc350
 80086f4:	f000 f870 	bl	80087d8 <FLASH_WaitForLastOperation>
 80086f8:	4603      	mov	r3, r0
 80086fa:	75fb      	strb	r3, [r7, #23]
 80086fc:	7dfb      	ldrb	r3, [r7, #23]
 80086fe:	2b00      	cmp	r3, #0
 8008700:	d12b      	bne.n	800875a <HAL_FLASH_Program+0x8e>
 8008702:	68fb      	ldr	r3, [r7, #12]
 8008704:	2b00      	cmp	r3, #0
 8008706:	d105      	bne.n	8008714 <HAL_FLASH_Program+0x48>
 8008708:	783b      	ldrb	r3, [r7, #0]
 800870a:	4619      	mov	r1, r3
 800870c:	68b8      	ldr	r0, [r7, #8]
 800870e:	f000 f91b 	bl	8008948 <FLASH_Program_Byte>
 8008712:	e016      	b.n	8008742 <HAL_FLASH_Program+0x76>
 8008714:	68fb      	ldr	r3, [r7, #12]
 8008716:	2b01      	cmp	r3, #1
 8008718:	d105      	bne.n	8008726 <HAL_FLASH_Program+0x5a>
 800871a:	883b      	ldrh	r3, [r7, #0]
 800871c:	4619      	mov	r1, r3
 800871e:	68b8      	ldr	r0, [r7, #8]
 8008720:	f000 f8ee 	bl	8008900 <FLASH_Program_HalfWord>
 8008724:	e00d      	b.n	8008742 <HAL_FLASH_Program+0x76>
 8008726:	68fb      	ldr	r3, [r7, #12]
 8008728:	2b02      	cmp	r3, #2
 800872a:	d105      	bne.n	8008738 <HAL_FLASH_Program+0x6c>
 800872c:	683b      	ldr	r3, [r7, #0]
 800872e:	4619      	mov	r1, r3
 8008730:	68b8      	ldr	r0, [r7, #8]
 8008732:	f000 f8c3 	bl	80088bc <FLASH_Program_Word>
 8008736:	e004      	b.n	8008742 <HAL_FLASH_Program+0x76>
 8008738:	e9d7 2300 	ldrd	r2, r3, [r7]
 800873c:	68b8      	ldr	r0, [r7, #8]
 800873e:	f000 f88b 	bl	8008858 <FLASH_Program_DoubleWord>
 8008742:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008746:	f000 f847 	bl	80087d8 <FLASH_WaitForLastOperation>
 800874a:	4603      	mov	r3, r0
 800874c:	75fb      	strb	r3, [r7, #23]
 800874e:	4b08      	ldr	r3, [pc, #32]	; (8008770 <HAL_FLASH_Program+0xa4>)
 8008750:	691b      	ldr	r3, [r3, #16]
 8008752:	4a07      	ldr	r2, [pc, #28]	; (8008770 <HAL_FLASH_Program+0xa4>)
 8008754:	f023 0301 	bic.w	r3, r3, #1
 8008758:	6113      	str	r3, [r2, #16]
 800875a:	4b04      	ldr	r3, [pc, #16]	; (800876c <HAL_FLASH_Program+0xa0>)
 800875c:	2200      	movs	r2, #0
 800875e:	761a      	strb	r2, [r3, #24]
 8008760:	7dfb      	ldrb	r3, [r7, #23]
 8008762:	4618      	mov	r0, r3
 8008764:	3718      	adds	r7, #24
 8008766:	46bd      	mov	sp, r7
 8008768:	bd80      	pop	{r7, pc}
 800876a:	bf00      	nop
 800876c:	20000b78 	.word	0x20000b78
 8008770:	40023c00 	.word	0x40023c00

08008774 <HAL_FLASH_Unlock>:
 8008774:	b480      	push	{r7}
 8008776:	b083      	sub	sp, #12
 8008778:	af00      	add	r7, sp, #0
 800877a:	2300      	movs	r3, #0
 800877c:	71fb      	strb	r3, [r7, #7]
 800877e:	4b0b      	ldr	r3, [pc, #44]	; (80087ac <HAL_FLASH_Unlock+0x38>)
 8008780:	691b      	ldr	r3, [r3, #16]
 8008782:	2b00      	cmp	r3, #0
 8008784:	da0b      	bge.n	800879e <HAL_FLASH_Unlock+0x2a>
 8008786:	4b09      	ldr	r3, [pc, #36]	; (80087ac <HAL_FLASH_Unlock+0x38>)
 8008788:	4a09      	ldr	r2, [pc, #36]	; (80087b0 <HAL_FLASH_Unlock+0x3c>)
 800878a:	605a      	str	r2, [r3, #4]
 800878c:	4b07      	ldr	r3, [pc, #28]	; (80087ac <HAL_FLASH_Unlock+0x38>)
 800878e:	4a09      	ldr	r2, [pc, #36]	; (80087b4 <HAL_FLASH_Unlock+0x40>)
 8008790:	605a      	str	r2, [r3, #4]
 8008792:	4b06      	ldr	r3, [pc, #24]	; (80087ac <HAL_FLASH_Unlock+0x38>)
 8008794:	691b      	ldr	r3, [r3, #16]
 8008796:	2b00      	cmp	r3, #0
 8008798:	da01      	bge.n	800879e <HAL_FLASH_Unlock+0x2a>
 800879a:	2301      	movs	r3, #1
 800879c:	71fb      	strb	r3, [r7, #7]
 800879e:	79fb      	ldrb	r3, [r7, #7]
 80087a0:	4618      	mov	r0, r3
 80087a2:	370c      	adds	r7, #12
 80087a4:	46bd      	mov	sp, r7
 80087a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087aa:	4770      	bx	lr
 80087ac:	40023c00 	.word	0x40023c00
 80087b0:	45670123 	.word	0x45670123
 80087b4:	cdef89ab 	.word	0xcdef89ab

080087b8 <HAL_FLASH_Lock>:
 80087b8:	b480      	push	{r7}
 80087ba:	af00      	add	r7, sp, #0
 80087bc:	4b05      	ldr	r3, [pc, #20]	; (80087d4 <HAL_FLASH_Lock+0x1c>)
 80087be:	691b      	ldr	r3, [r3, #16]
 80087c0:	4a04      	ldr	r2, [pc, #16]	; (80087d4 <HAL_FLASH_Lock+0x1c>)
 80087c2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80087c6:	6113      	str	r3, [r2, #16]
 80087c8:	2300      	movs	r3, #0
 80087ca:	4618      	mov	r0, r3
 80087cc:	46bd      	mov	sp, r7
 80087ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087d2:	4770      	bx	lr
 80087d4:	40023c00 	.word	0x40023c00

080087d8 <FLASH_WaitForLastOperation>:
 80087d8:	b580      	push	{r7, lr}
 80087da:	b084      	sub	sp, #16
 80087dc:	af00      	add	r7, sp, #0
 80087de:	6078      	str	r0, [r7, #4]
 80087e0:	2300      	movs	r3, #0
 80087e2:	60fb      	str	r3, [r7, #12]
 80087e4:	4b1a      	ldr	r3, [pc, #104]	; (8008850 <FLASH_WaitForLastOperation+0x78>)
 80087e6:	2200      	movs	r2, #0
 80087e8:	61da      	str	r2, [r3, #28]
 80087ea:	f7fe fd99 	bl	8007320 <HAL_GetTick>
 80087ee:	60f8      	str	r0, [r7, #12]
 80087f0:	e010      	b.n	8008814 <FLASH_WaitForLastOperation+0x3c>
 80087f2:	687b      	ldr	r3, [r7, #4]
 80087f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80087f8:	d00c      	beq.n	8008814 <FLASH_WaitForLastOperation+0x3c>
 80087fa:	687b      	ldr	r3, [r7, #4]
 80087fc:	2b00      	cmp	r3, #0
 80087fe:	d007      	beq.n	8008810 <FLASH_WaitForLastOperation+0x38>
 8008800:	f7fe fd8e 	bl	8007320 <HAL_GetTick>
 8008804:	4602      	mov	r2, r0
 8008806:	68fb      	ldr	r3, [r7, #12]
 8008808:	1ad3      	subs	r3, r2, r3
 800880a:	687a      	ldr	r2, [r7, #4]
 800880c:	429a      	cmp	r2, r3
 800880e:	d201      	bcs.n	8008814 <FLASH_WaitForLastOperation+0x3c>
 8008810:	2303      	movs	r3, #3
 8008812:	e019      	b.n	8008848 <FLASH_WaitForLastOperation+0x70>
 8008814:	4b0f      	ldr	r3, [pc, #60]	; (8008854 <FLASH_WaitForLastOperation+0x7c>)
 8008816:	68db      	ldr	r3, [r3, #12]
 8008818:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800881c:	2b00      	cmp	r3, #0
 800881e:	d1e8      	bne.n	80087f2 <FLASH_WaitForLastOperation+0x1a>
 8008820:	4b0c      	ldr	r3, [pc, #48]	; (8008854 <FLASH_WaitForLastOperation+0x7c>)
 8008822:	68db      	ldr	r3, [r3, #12]
 8008824:	f003 0301 	and.w	r3, r3, #1
 8008828:	2b00      	cmp	r3, #0
 800882a:	d002      	beq.n	8008832 <FLASH_WaitForLastOperation+0x5a>
 800882c:	4b09      	ldr	r3, [pc, #36]	; (8008854 <FLASH_WaitForLastOperation+0x7c>)
 800882e:	2201      	movs	r2, #1
 8008830:	60da      	str	r2, [r3, #12]
 8008832:	4b08      	ldr	r3, [pc, #32]	; (8008854 <FLASH_WaitForLastOperation+0x7c>)
 8008834:	68db      	ldr	r3, [r3, #12]
 8008836:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 800883a:	2b00      	cmp	r3, #0
 800883c:	d003      	beq.n	8008846 <FLASH_WaitForLastOperation+0x6e>
 800883e:	f000 f8a5 	bl	800898c <FLASH_SetErrorCode>
 8008842:	2301      	movs	r3, #1
 8008844:	e000      	b.n	8008848 <FLASH_WaitForLastOperation+0x70>
 8008846:	2300      	movs	r3, #0
 8008848:	4618      	mov	r0, r3
 800884a:	3710      	adds	r7, #16
 800884c:	46bd      	mov	sp, r7
 800884e:	bd80      	pop	{r7, pc}
 8008850:	20000b78 	.word	0x20000b78
 8008854:	40023c00 	.word	0x40023c00

08008858 <FLASH_Program_DoubleWord>:
 8008858:	b480      	push	{r7}
 800885a:	b085      	sub	sp, #20
 800885c:	af00      	add	r7, sp, #0
 800885e:	60f8      	str	r0, [r7, #12]
 8008860:	e9c7 2300 	strd	r2, r3, [r7]
 8008864:	4b14      	ldr	r3, [pc, #80]	; (80088b8 <FLASH_Program_DoubleWord+0x60>)
 8008866:	691b      	ldr	r3, [r3, #16]
 8008868:	4a13      	ldr	r2, [pc, #76]	; (80088b8 <FLASH_Program_DoubleWord+0x60>)
 800886a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800886e:	6113      	str	r3, [r2, #16]
 8008870:	4b11      	ldr	r3, [pc, #68]	; (80088b8 <FLASH_Program_DoubleWord+0x60>)
 8008872:	691b      	ldr	r3, [r3, #16]
 8008874:	4a10      	ldr	r2, [pc, #64]	; (80088b8 <FLASH_Program_DoubleWord+0x60>)
 8008876:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 800887a:	6113      	str	r3, [r2, #16]
 800887c:	4b0e      	ldr	r3, [pc, #56]	; (80088b8 <FLASH_Program_DoubleWord+0x60>)
 800887e:	691b      	ldr	r3, [r3, #16]
 8008880:	4a0d      	ldr	r2, [pc, #52]	; (80088b8 <FLASH_Program_DoubleWord+0x60>)
 8008882:	f043 0301 	orr.w	r3, r3, #1
 8008886:	6113      	str	r3, [r2, #16]
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	683a      	ldr	r2, [r7, #0]
 800888c:	601a      	str	r2, [r3, #0]
 800888e:	f3bf 8f6f 	isb	sy
 8008892:	bf00      	nop
 8008894:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008898:	f04f 0200 	mov.w	r2, #0
 800889c:	f04f 0300 	mov.w	r3, #0
 80088a0:	000a      	movs	r2, r1
 80088a2:	2300      	movs	r3, #0
 80088a4:	68f9      	ldr	r1, [r7, #12]
 80088a6:	3104      	adds	r1, #4
 80088a8:	4613      	mov	r3, r2
 80088aa:	600b      	str	r3, [r1, #0]
 80088ac:	bf00      	nop
 80088ae:	3714      	adds	r7, #20
 80088b0:	46bd      	mov	sp, r7
 80088b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b6:	4770      	bx	lr
 80088b8:	40023c00 	.word	0x40023c00

080088bc <FLASH_Program_Word>:
 80088bc:	b480      	push	{r7}
 80088be:	b083      	sub	sp, #12
 80088c0:	af00      	add	r7, sp, #0
 80088c2:	6078      	str	r0, [r7, #4]
 80088c4:	6039      	str	r1, [r7, #0]
 80088c6:	4b0d      	ldr	r3, [pc, #52]	; (80088fc <FLASH_Program_Word+0x40>)
 80088c8:	691b      	ldr	r3, [r3, #16]
 80088ca:	4a0c      	ldr	r2, [pc, #48]	; (80088fc <FLASH_Program_Word+0x40>)
 80088cc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80088d0:	6113      	str	r3, [r2, #16]
 80088d2:	4b0a      	ldr	r3, [pc, #40]	; (80088fc <FLASH_Program_Word+0x40>)
 80088d4:	691b      	ldr	r3, [r3, #16]
 80088d6:	4a09      	ldr	r2, [pc, #36]	; (80088fc <FLASH_Program_Word+0x40>)
 80088d8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80088dc:	6113      	str	r3, [r2, #16]
 80088de:	4b07      	ldr	r3, [pc, #28]	; (80088fc <FLASH_Program_Word+0x40>)
 80088e0:	691b      	ldr	r3, [r3, #16]
 80088e2:	4a06      	ldr	r2, [pc, #24]	; (80088fc <FLASH_Program_Word+0x40>)
 80088e4:	f043 0301 	orr.w	r3, r3, #1
 80088e8:	6113      	str	r3, [r2, #16]
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	683a      	ldr	r2, [r7, #0]
 80088ee:	601a      	str	r2, [r3, #0]
 80088f0:	bf00      	nop
 80088f2:	370c      	adds	r7, #12
 80088f4:	46bd      	mov	sp, r7
 80088f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088fa:	4770      	bx	lr
 80088fc:	40023c00 	.word	0x40023c00

08008900 <FLASH_Program_HalfWord>:
 8008900:	b480      	push	{r7}
 8008902:	b083      	sub	sp, #12
 8008904:	af00      	add	r7, sp, #0
 8008906:	6078      	str	r0, [r7, #4]
 8008908:	460b      	mov	r3, r1
 800890a:	807b      	strh	r3, [r7, #2]
 800890c:	4b0d      	ldr	r3, [pc, #52]	; (8008944 <FLASH_Program_HalfWord+0x44>)
 800890e:	691b      	ldr	r3, [r3, #16]
 8008910:	4a0c      	ldr	r2, [pc, #48]	; (8008944 <FLASH_Program_HalfWord+0x44>)
 8008912:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008916:	6113      	str	r3, [r2, #16]
 8008918:	4b0a      	ldr	r3, [pc, #40]	; (8008944 <FLASH_Program_HalfWord+0x44>)
 800891a:	691b      	ldr	r3, [r3, #16]
 800891c:	4a09      	ldr	r2, [pc, #36]	; (8008944 <FLASH_Program_HalfWord+0x44>)
 800891e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008922:	6113      	str	r3, [r2, #16]
 8008924:	4b07      	ldr	r3, [pc, #28]	; (8008944 <FLASH_Program_HalfWord+0x44>)
 8008926:	691b      	ldr	r3, [r3, #16]
 8008928:	4a06      	ldr	r2, [pc, #24]	; (8008944 <FLASH_Program_HalfWord+0x44>)
 800892a:	f043 0301 	orr.w	r3, r3, #1
 800892e:	6113      	str	r3, [r2, #16]
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	887a      	ldrh	r2, [r7, #2]
 8008934:	801a      	strh	r2, [r3, #0]
 8008936:	bf00      	nop
 8008938:	370c      	adds	r7, #12
 800893a:	46bd      	mov	sp, r7
 800893c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008940:	4770      	bx	lr
 8008942:	bf00      	nop
 8008944:	40023c00 	.word	0x40023c00

08008948 <FLASH_Program_Byte>:
 8008948:	b480      	push	{r7}
 800894a:	b083      	sub	sp, #12
 800894c:	af00      	add	r7, sp, #0
 800894e:	6078      	str	r0, [r7, #4]
 8008950:	460b      	mov	r3, r1
 8008952:	70fb      	strb	r3, [r7, #3]
 8008954:	4b0c      	ldr	r3, [pc, #48]	; (8008988 <FLASH_Program_Byte+0x40>)
 8008956:	691b      	ldr	r3, [r3, #16]
 8008958:	4a0b      	ldr	r2, [pc, #44]	; (8008988 <FLASH_Program_Byte+0x40>)
 800895a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800895e:	6113      	str	r3, [r2, #16]
 8008960:	4b09      	ldr	r3, [pc, #36]	; (8008988 <FLASH_Program_Byte+0x40>)
 8008962:	4a09      	ldr	r2, [pc, #36]	; (8008988 <FLASH_Program_Byte+0x40>)
 8008964:	691b      	ldr	r3, [r3, #16]
 8008966:	6113      	str	r3, [r2, #16]
 8008968:	4b07      	ldr	r3, [pc, #28]	; (8008988 <FLASH_Program_Byte+0x40>)
 800896a:	691b      	ldr	r3, [r3, #16]
 800896c:	4a06      	ldr	r2, [pc, #24]	; (8008988 <FLASH_Program_Byte+0x40>)
 800896e:	f043 0301 	orr.w	r3, r3, #1
 8008972:	6113      	str	r3, [r2, #16]
 8008974:	687b      	ldr	r3, [r7, #4]
 8008976:	78fa      	ldrb	r2, [r7, #3]
 8008978:	701a      	strb	r2, [r3, #0]
 800897a:	bf00      	nop
 800897c:	370c      	adds	r7, #12
 800897e:	46bd      	mov	sp, r7
 8008980:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008984:	4770      	bx	lr
 8008986:	bf00      	nop
 8008988:	40023c00 	.word	0x40023c00

0800898c <FLASH_SetErrorCode>:
 800898c:	b480      	push	{r7}
 800898e:	af00      	add	r7, sp, #0
 8008990:	4b2f      	ldr	r3, [pc, #188]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 8008992:	68db      	ldr	r3, [r3, #12]
 8008994:	f003 0310 	and.w	r3, r3, #16
 8008998:	2b00      	cmp	r3, #0
 800899a:	d008      	beq.n	80089ae <FLASH_SetErrorCode+0x22>
 800899c:	4b2d      	ldr	r3, [pc, #180]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 800899e:	69db      	ldr	r3, [r3, #28]
 80089a0:	f043 0310 	orr.w	r3, r3, #16
 80089a4:	4a2b      	ldr	r2, [pc, #172]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 80089a6:	61d3      	str	r3, [r2, #28]
 80089a8:	4b29      	ldr	r3, [pc, #164]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 80089aa:	2210      	movs	r2, #16
 80089ac:	60da      	str	r2, [r3, #12]
 80089ae:	4b28      	ldr	r3, [pc, #160]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 80089b0:	68db      	ldr	r3, [r3, #12]
 80089b2:	f003 0320 	and.w	r3, r3, #32
 80089b6:	2b00      	cmp	r3, #0
 80089b8:	d008      	beq.n	80089cc <FLASH_SetErrorCode+0x40>
 80089ba:	4b26      	ldr	r3, [pc, #152]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 80089bc:	69db      	ldr	r3, [r3, #28]
 80089be:	f043 0308 	orr.w	r3, r3, #8
 80089c2:	4a24      	ldr	r2, [pc, #144]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 80089c4:	61d3      	str	r3, [r2, #28]
 80089c6:	4b22      	ldr	r3, [pc, #136]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 80089c8:	2220      	movs	r2, #32
 80089ca:	60da      	str	r2, [r3, #12]
 80089cc:	4b20      	ldr	r3, [pc, #128]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 80089ce:	68db      	ldr	r3, [r3, #12]
 80089d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80089d4:	2b00      	cmp	r3, #0
 80089d6:	d008      	beq.n	80089ea <FLASH_SetErrorCode+0x5e>
 80089d8:	4b1e      	ldr	r3, [pc, #120]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 80089da:	69db      	ldr	r3, [r3, #28]
 80089dc:	f043 0304 	orr.w	r3, r3, #4
 80089e0:	4a1c      	ldr	r2, [pc, #112]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 80089e2:	61d3      	str	r3, [r2, #28]
 80089e4:	4b1a      	ldr	r3, [pc, #104]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 80089e6:	2240      	movs	r2, #64	; 0x40
 80089e8:	60da      	str	r2, [r3, #12]
 80089ea:	4b19      	ldr	r3, [pc, #100]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 80089ec:	68db      	ldr	r3, [r3, #12]
 80089ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80089f2:	2b00      	cmp	r3, #0
 80089f4:	d008      	beq.n	8008a08 <FLASH_SetErrorCode+0x7c>
 80089f6:	4b17      	ldr	r3, [pc, #92]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 80089f8:	69db      	ldr	r3, [r3, #28]
 80089fa:	f043 0302 	orr.w	r3, r3, #2
 80089fe:	4a15      	ldr	r2, [pc, #84]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 8008a00:	61d3      	str	r3, [r2, #28]
 8008a02:	4b13      	ldr	r3, [pc, #76]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 8008a04:	2280      	movs	r2, #128	; 0x80
 8008a06:	60da      	str	r2, [r3, #12]
 8008a08:	4b11      	ldr	r3, [pc, #68]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 8008a0a:	68db      	ldr	r3, [r3, #12]
 8008a0c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008a10:	2b00      	cmp	r3, #0
 8008a12:	d009      	beq.n	8008a28 <FLASH_SetErrorCode+0x9c>
 8008a14:	4b0f      	ldr	r3, [pc, #60]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 8008a16:	69db      	ldr	r3, [r3, #28]
 8008a18:	f043 0301 	orr.w	r3, r3, #1
 8008a1c:	4a0d      	ldr	r2, [pc, #52]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 8008a1e:	61d3      	str	r3, [r2, #28]
 8008a20:	4b0b      	ldr	r3, [pc, #44]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 8008a22:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008a26:	60da      	str	r2, [r3, #12]
 8008a28:	4b09      	ldr	r3, [pc, #36]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 8008a2a:	68db      	ldr	r3, [r3, #12]
 8008a2c:	f003 0302 	and.w	r3, r3, #2
 8008a30:	2b00      	cmp	r3, #0
 8008a32:	d008      	beq.n	8008a46 <FLASH_SetErrorCode+0xba>
 8008a34:	4b07      	ldr	r3, [pc, #28]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 8008a36:	69db      	ldr	r3, [r3, #28]
 8008a38:	f043 0320 	orr.w	r3, r3, #32
 8008a3c:	4a05      	ldr	r2, [pc, #20]	; (8008a54 <FLASH_SetErrorCode+0xc8>)
 8008a3e:	61d3      	str	r3, [r2, #28]
 8008a40:	4b03      	ldr	r3, [pc, #12]	; (8008a50 <FLASH_SetErrorCode+0xc4>)
 8008a42:	2202      	movs	r2, #2
 8008a44:	60da      	str	r2, [r3, #12]
 8008a46:	bf00      	nop
 8008a48:	46bd      	mov	sp, r7
 8008a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a4e:	4770      	bx	lr
 8008a50:	40023c00 	.word	0x40023c00
 8008a54:	20000b78 	.word	0x20000b78

08008a58 <FLASH_Erase_Sector>:
 8008a58:	b480      	push	{r7}
 8008a5a:	b085      	sub	sp, #20
 8008a5c:	af00      	add	r7, sp, #0
 8008a5e:	6078      	str	r0, [r7, #4]
 8008a60:	460b      	mov	r3, r1
 8008a62:	70fb      	strb	r3, [r7, #3]
 8008a64:	2300      	movs	r3, #0
 8008a66:	60fb      	str	r3, [r7, #12]
 8008a68:	78fb      	ldrb	r3, [r7, #3]
 8008a6a:	2b00      	cmp	r3, #0
 8008a6c:	d102      	bne.n	8008a74 <FLASH_Erase_Sector+0x1c>
 8008a6e:	2300      	movs	r3, #0
 8008a70:	60fb      	str	r3, [r7, #12]
 8008a72:	e010      	b.n	8008a96 <FLASH_Erase_Sector+0x3e>
 8008a74:	78fb      	ldrb	r3, [r7, #3]
 8008a76:	2b01      	cmp	r3, #1
 8008a78:	d103      	bne.n	8008a82 <FLASH_Erase_Sector+0x2a>
 8008a7a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008a7e:	60fb      	str	r3, [r7, #12]
 8008a80:	e009      	b.n	8008a96 <FLASH_Erase_Sector+0x3e>
 8008a82:	78fb      	ldrb	r3, [r7, #3]
 8008a84:	2b02      	cmp	r3, #2
 8008a86:	d103      	bne.n	8008a90 <FLASH_Erase_Sector+0x38>
 8008a88:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008a8c:	60fb      	str	r3, [r7, #12]
 8008a8e:	e002      	b.n	8008a96 <FLASH_Erase_Sector+0x3e>
 8008a90:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008a94:	60fb      	str	r3, [r7, #12]
 8008a96:	4b13      	ldr	r3, [pc, #76]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008a98:	691b      	ldr	r3, [r3, #16]
 8008a9a:	4a12      	ldr	r2, [pc, #72]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008a9c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008aa0:	6113      	str	r3, [r2, #16]
 8008aa2:	4b10      	ldr	r3, [pc, #64]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008aa4:	691a      	ldr	r2, [r3, #16]
 8008aa6:	490f      	ldr	r1, [pc, #60]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008aa8:	68fb      	ldr	r3, [r7, #12]
 8008aaa:	4313      	orrs	r3, r2
 8008aac:	610b      	str	r3, [r1, #16]
 8008aae:	4b0d      	ldr	r3, [pc, #52]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008ab0:	691b      	ldr	r3, [r3, #16]
 8008ab2:	4a0c      	ldr	r2, [pc, #48]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008ab4:	f023 0378 	bic.w	r3, r3, #120	; 0x78
 8008ab8:	6113      	str	r3, [r2, #16]
 8008aba:	4b0a      	ldr	r3, [pc, #40]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008abc:	691a      	ldr	r2, [r3, #16]
 8008abe:	687b      	ldr	r3, [r7, #4]
 8008ac0:	00db      	lsls	r3, r3, #3
 8008ac2:	4313      	orrs	r3, r2
 8008ac4:	4a07      	ldr	r2, [pc, #28]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008ac6:	f043 0302 	orr.w	r3, r3, #2
 8008aca:	6113      	str	r3, [r2, #16]
 8008acc:	4b05      	ldr	r3, [pc, #20]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008ace:	691b      	ldr	r3, [r3, #16]
 8008ad0:	4a04      	ldr	r2, [pc, #16]	; (8008ae4 <FLASH_Erase_Sector+0x8c>)
 8008ad2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008ad6:	6113      	str	r3, [r2, #16]
 8008ad8:	bf00      	nop
 8008ada:	3714      	adds	r7, #20
 8008adc:	46bd      	mov	sp, r7
 8008ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ae2:	4770      	bx	lr
 8008ae4:	40023c00 	.word	0x40023c00

08008ae8 <HAL_GPIO_Init>:
 8008ae8:	b480      	push	{r7}
 8008aea:	b089      	sub	sp, #36	; 0x24
 8008aec:	af00      	add	r7, sp, #0
 8008aee:	6078      	str	r0, [r7, #4]
 8008af0:	6039      	str	r1, [r7, #0]
 8008af2:	2300      	movs	r3, #0
 8008af4:	617b      	str	r3, [r7, #20]
 8008af6:	2300      	movs	r3, #0
 8008af8:	613b      	str	r3, [r7, #16]
 8008afa:	2300      	movs	r3, #0
 8008afc:	61bb      	str	r3, [r7, #24]
 8008afe:	2300      	movs	r3, #0
 8008b00:	61fb      	str	r3, [r7, #28]
 8008b02:	e165      	b.n	8008dd0 <HAL_GPIO_Init+0x2e8>
 8008b04:	2201      	movs	r2, #1
 8008b06:	69fb      	ldr	r3, [r7, #28]
 8008b08:	fa02 f303 	lsl.w	r3, r2, r3
 8008b0c:	617b      	str	r3, [r7, #20]
 8008b0e:	683b      	ldr	r3, [r7, #0]
 8008b10:	681b      	ldr	r3, [r3, #0]
 8008b12:	697a      	ldr	r2, [r7, #20]
 8008b14:	4013      	ands	r3, r2
 8008b16:	613b      	str	r3, [r7, #16]
 8008b18:	693a      	ldr	r2, [r7, #16]
 8008b1a:	697b      	ldr	r3, [r7, #20]
 8008b1c:	429a      	cmp	r2, r3
 8008b1e:	f040 8154 	bne.w	8008dca <HAL_GPIO_Init+0x2e2>
 8008b22:	683b      	ldr	r3, [r7, #0]
 8008b24:	685b      	ldr	r3, [r3, #4]
 8008b26:	f003 0303 	and.w	r3, r3, #3
 8008b2a:	2b01      	cmp	r3, #1
 8008b2c:	d005      	beq.n	8008b3a <HAL_GPIO_Init+0x52>
 8008b2e:	683b      	ldr	r3, [r7, #0]
 8008b30:	685b      	ldr	r3, [r3, #4]
 8008b32:	f003 0303 	and.w	r3, r3, #3
 8008b36:	2b02      	cmp	r3, #2
 8008b38:	d130      	bne.n	8008b9c <HAL_GPIO_Init+0xb4>
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	689b      	ldr	r3, [r3, #8]
 8008b3e:	61bb      	str	r3, [r7, #24]
 8008b40:	69fb      	ldr	r3, [r7, #28]
 8008b42:	005b      	lsls	r3, r3, #1
 8008b44:	2203      	movs	r2, #3
 8008b46:	fa02 f303 	lsl.w	r3, r2, r3
 8008b4a:	43db      	mvns	r3, r3
 8008b4c:	69ba      	ldr	r2, [r7, #24]
 8008b4e:	4013      	ands	r3, r2
 8008b50:	61bb      	str	r3, [r7, #24]
 8008b52:	683b      	ldr	r3, [r7, #0]
 8008b54:	68da      	ldr	r2, [r3, #12]
 8008b56:	69fb      	ldr	r3, [r7, #28]
 8008b58:	005b      	lsls	r3, r3, #1
 8008b5a:	fa02 f303 	lsl.w	r3, r2, r3
 8008b5e:	69ba      	ldr	r2, [r7, #24]
 8008b60:	4313      	orrs	r3, r2
 8008b62:	61bb      	str	r3, [r7, #24]
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	69ba      	ldr	r2, [r7, #24]
 8008b68:	609a      	str	r2, [r3, #8]
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	685b      	ldr	r3, [r3, #4]
 8008b6e:	61bb      	str	r3, [r7, #24]
 8008b70:	2201      	movs	r2, #1
 8008b72:	69fb      	ldr	r3, [r7, #28]
 8008b74:	fa02 f303 	lsl.w	r3, r2, r3
 8008b78:	43db      	mvns	r3, r3
 8008b7a:	69ba      	ldr	r2, [r7, #24]
 8008b7c:	4013      	ands	r3, r2
 8008b7e:	61bb      	str	r3, [r7, #24]
 8008b80:	683b      	ldr	r3, [r7, #0]
 8008b82:	685b      	ldr	r3, [r3, #4]
 8008b84:	091b      	lsrs	r3, r3, #4
 8008b86:	f003 0201 	and.w	r2, r3, #1
 8008b8a:	69fb      	ldr	r3, [r7, #28]
 8008b8c:	fa02 f303 	lsl.w	r3, r2, r3
 8008b90:	69ba      	ldr	r2, [r7, #24]
 8008b92:	4313      	orrs	r3, r2
 8008b94:	61bb      	str	r3, [r7, #24]
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	69ba      	ldr	r2, [r7, #24]
 8008b9a:	605a      	str	r2, [r3, #4]
 8008b9c:	683b      	ldr	r3, [r7, #0]
 8008b9e:	685b      	ldr	r3, [r3, #4]
 8008ba0:	f003 0303 	and.w	r3, r3, #3
 8008ba4:	2b03      	cmp	r3, #3
 8008ba6:	d017      	beq.n	8008bd8 <HAL_GPIO_Init+0xf0>
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	68db      	ldr	r3, [r3, #12]
 8008bac:	61bb      	str	r3, [r7, #24]
 8008bae:	69fb      	ldr	r3, [r7, #28]
 8008bb0:	005b      	lsls	r3, r3, #1
 8008bb2:	2203      	movs	r2, #3
 8008bb4:	fa02 f303 	lsl.w	r3, r2, r3
 8008bb8:	43db      	mvns	r3, r3
 8008bba:	69ba      	ldr	r2, [r7, #24]
 8008bbc:	4013      	ands	r3, r2
 8008bbe:	61bb      	str	r3, [r7, #24]
 8008bc0:	683b      	ldr	r3, [r7, #0]
 8008bc2:	689a      	ldr	r2, [r3, #8]
 8008bc4:	69fb      	ldr	r3, [r7, #28]
 8008bc6:	005b      	lsls	r3, r3, #1
 8008bc8:	fa02 f303 	lsl.w	r3, r2, r3
 8008bcc:	69ba      	ldr	r2, [r7, #24]
 8008bce:	4313      	orrs	r3, r2
 8008bd0:	61bb      	str	r3, [r7, #24]
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	69ba      	ldr	r2, [r7, #24]
 8008bd6:	60da      	str	r2, [r3, #12]
 8008bd8:	683b      	ldr	r3, [r7, #0]
 8008bda:	685b      	ldr	r3, [r3, #4]
 8008bdc:	f003 0303 	and.w	r3, r3, #3
 8008be0:	2b02      	cmp	r3, #2
 8008be2:	d123      	bne.n	8008c2c <HAL_GPIO_Init+0x144>
 8008be4:	69fb      	ldr	r3, [r7, #28]
 8008be6:	08da      	lsrs	r2, r3, #3
 8008be8:	687b      	ldr	r3, [r7, #4]
 8008bea:	3208      	adds	r2, #8
 8008bec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008bf0:	61bb      	str	r3, [r7, #24]
 8008bf2:	69fb      	ldr	r3, [r7, #28]
 8008bf4:	f003 0307 	and.w	r3, r3, #7
 8008bf8:	009b      	lsls	r3, r3, #2
 8008bfa:	220f      	movs	r2, #15
 8008bfc:	fa02 f303 	lsl.w	r3, r2, r3
 8008c00:	43db      	mvns	r3, r3
 8008c02:	69ba      	ldr	r2, [r7, #24]
 8008c04:	4013      	ands	r3, r2
 8008c06:	61bb      	str	r3, [r7, #24]
 8008c08:	683b      	ldr	r3, [r7, #0]
 8008c0a:	691a      	ldr	r2, [r3, #16]
 8008c0c:	69fb      	ldr	r3, [r7, #28]
 8008c0e:	f003 0307 	and.w	r3, r3, #7
 8008c12:	009b      	lsls	r3, r3, #2
 8008c14:	fa02 f303 	lsl.w	r3, r2, r3
 8008c18:	69ba      	ldr	r2, [r7, #24]
 8008c1a:	4313      	orrs	r3, r2
 8008c1c:	61bb      	str	r3, [r7, #24]
 8008c1e:	69fb      	ldr	r3, [r7, #28]
 8008c20:	08da      	lsrs	r2, r3, #3
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	3208      	adds	r2, #8
 8008c26:	69b9      	ldr	r1, [r7, #24]
 8008c28:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8008c2c:	687b      	ldr	r3, [r7, #4]
 8008c2e:	681b      	ldr	r3, [r3, #0]
 8008c30:	61bb      	str	r3, [r7, #24]
 8008c32:	69fb      	ldr	r3, [r7, #28]
 8008c34:	005b      	lsls	r3, r3, #1
 8008c36:	2203      	movs	r2, #3
 8008c38:	fa02 f303 	lsl.w	r3, r2, r3
 8008c3c:	43db      	mvns	r3, r3
 8008c3e:	69ba      	ldr	r2, [r7, #24]
 8008c40:	4013      	ands	r3, r2
 8008c42:	61bb      	str	r3, [r7, #24]
 8008c44:	683b      	ldr	r3, [r7, #0]
 8008c46:	685b      	ldr	r3, [r3, #4]
 8008c48:	f003 0203 	and.w	r2, r3, #3
 8008c4c:	69fb      	ldr	r3, [r7, #28]
 8008c4e:	005b      	lsls	r3, r3, #1
 8008c50:	fa02 f303 	lsl.w	r3, r2, r3
 8008c54:	69ba      	ldr	r2, [r7, #24]
 8008c56:	4313      	orrs	r3, r2
 8008c58:	61bb      	str	r3, [r7, #24]
 8008c5a:	687b      	ldr	r3, [r7, #4]
 8008c5c:	69ba      	ldr	r2, [r7, #24]
 8008c5e:	601a      	str	r2, [r3, #0]
 8008c60:	683b      	ldr	r3, [r7, #0]
 8008c62:	685b      	ldr	r3, [r3, #4]
 8008c64:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8008c68:	2b00      	cmp	r3, #0
 8008c6a:	f000 80ae 	beq.w	8008dca <HAL_GPIO_Init+0x2e2>
 8008c6e:	2300      	movs	r3, #0
 8008c70:	60fb      	str	r3, [r7, #12]
 8008c72:	4b5d      	ldr	r3, [pc, #372]	; (8008de8 <HAL_GPIO_Init+0x300>)
 8008c74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008c76:	4a5c      	ldr	r2, [pc, #368]	; (8008de8 <HAL_GPIO_Init+0x300>)
 8008c78:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008c7c:	6453      	str	r3, [r2, #68]	; 0x44
 8008c7e:	4b5a      	ldr	r3, [pc, #360]	; (8008de8 <HAL_GPIO_Init+0x300>)
 8008c80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008c82:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008c86:	60fb      	str	r3, [r7, #12]
 8008c88:	68fb      	ldr	r3, [r7, #12]
 8008c8a:	4a58      	ldr	r2, [pc, #352]	; (8008dec <HAL_GPIO_Init+0x304>)
 8008c8c:	69fb      	ldr	r3, [r7, #28]
 8008c8e:	089b      	lsrs	r3, r3, #2
 8008c90:	3302      	adds	r3, #2
 8008c92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008c96:	61bb      	str	r3, [r7, #24]
 8008c98:	69fb      	ldr	r3, [r7, #28]
 8008c9a:	f003 0303 	and.w	r3, r3, #3
 8008c9e:	009b      	lsls	r3, r3, #2
 8008ca0:	220f      	movs	r2, #15
 8008ca2:	fa02 f303 	lsl.w	r3, r2, r3
 8008ca6:	43db      	mvns	r3, r3
 8008ca8:	69ba      	ldr	r2, [r7, #24]
 8008caa:	4013      	ands	r3, r2
 8008cac:	61bb      	str	r3, [r7, #24]
 8008cae:	687b      	ldr	r3, [r7, #4]
 8008cb0:	4a4f      	ldr	r2, [pc, #316]	; (8008df0 <HAL_GPIO_Init+0x308>)
 8008cb2:	4293      	cmp	r3, r2
 8008cb4:	d025      	beq.n	8008d02 <HAL_GPIO_Init+0x21a>
 8008cb6:	687b      	ldr	r3, [r7, #4]
 8008cb8:	4a4e      	ldr	r2, [pc, #312]	; (8008df4 <HAL_GPIO_Init+0x30c>)
 8008cba:	4293      	cmp	r3, r2
 8008cbc:	d01f      	beq.n	8008cfe <HAL_GPIO_Init+0x216>
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	4a4d      	ldr	r2, [pc, #308]	; (8008df8 <HAL_GPIO_Init+0x310>)
 8008cc2:	4293      	cmp	r3, r2
 8008cc4:	d019      	beq.n	8008cfa <HAL_GPIO_Init+0x212>
 8008cc6:	687b      	ldr	r3, [r7, #4]
 8008cc8:	4a4c      	ldr	r2, [pc, #304]	; (8008dfc <HAL_GPIO_Init+0x314>)
 8008cca:	4293      	cmp	r3, r2
 8008ccc:	d013      	beq.n	8008cf6 <HAL_GPIO_Init+0x20e>
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	4a4b      	ldr	r2, [pc, #300]	; (8008e00 <HAL_GPIO_Init+0x318>)
 8008cd2:	4293      	cmp	r3, r2
 8008cd4:	d00d      	beq.n	8008cf2 <HAL_GPIO_Init+0x20a>
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	4a4a      	ldr	r2, [pc, #296]	; (8008e04 <HAL_GPIO_Init+0x31c>)
 8008cda:	4293      	cmp	r3, r2
 8008cdc:	d007      	beq.n	8008cee <HAL_GPIO_Init+0x206>
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	4a49      	ldr	r2, [pc, #292]	; (8008e08 <HAL_GPIO_Init+0x320>)
 8008ce2:	4293      	cmp	r3, r2
 8008ce4:	d101      	bne.n	8008cea <HAL_GPIO_Init+0x202>
 8008ce6:	2306      	movs	r3, #6
 8008ce8:	e00c      	b.n	8008d04 <HAL_GPIO_Init+0x21c>
 8008cea:	2307      	movs	r3, #7
 8008cec:	e00a      	b.n	8008d04 <HAL_GPIO_Init+0x21c>
 8008cee:	2305      	movs	r3, #5
 8008cf0:	e008      	b.n	8008d04 <HAL_GPIO_Init+0x21c>
 8008cf2:	2304      	movs	r3, #4
 8008cf4:	e006      	b.n	8008d04 <HAL_GPIO_Init+0x21c>
 8008cf6:	2303      	movs	r3, #3
 8008cf8:	e004      	b.n	8008d04 <HAL_GPIO_Init+0x21c>
 8008cfa:	2302      	movs	r3, #2
 8008cfc:	e002      	b.n	8008d04 <HAL_GPIO_Init+0x21c>
 8008cfe:	2301      	movs	r3, #1
 8008d00:	e000      	b.n	8008d04 <HAL_GPIO_Init+0x21c>
 8008d02:	2300      	movs	r3, #0
 8008d04:	69fa      	ldr	r2, [r7, #28]
 8008d06:	f002 0203 	and.w	r2, r2, #3
 8008d0a:	0092      	lsls	r2, r2, #2
 8008d0c:	4093      	lsls	r3, r2
 8008d0e:	69ba      	ldr	r2, [r7, #24]
 8008d10:	4313      	orrs	r3, r2
 8008d12:	61bb      	str	r3, [r7, #24]
 8008d14:	4935      	ldr	r1, [pc, #212]	; (8008dec <HAL_GPIO_Init+0x304>)
 8008d16:	69fb      	ldr	r3, [r7, #28]
 8008d18:	089b      	lsrs	r3, r3, #2
 8008d1a:	3302      	adds	r3, #2
 8008d1c:	69ba      	ldr	r2, [r7, #24]
 8008d1e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008d22:	4b3a      	ldr	r3, [pc, #232]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008d24:	689b      	ldr	r3, [r3, #8]
 8008d26:	61bb      	str	r3, [r7, #24]
 8008d28:	693b      	ldr	r3, [r7, #16]
 8008d2a:	43db      	mvns	r3, r3
 8008d2c:	69ba      	ldr	r2, [r7, #24]
 8008d2e:	4013      	ands	r3, r2
 8008d30:	61bb      	str	r3, [r7, #24]
 8008d32:	683b      	ldr	r3, [r7, #0]
 8008d34:	685b      	ldr	r3, [r3, #4]
 8008d36:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	d003      	beq.n	8008d46 <HAL_GPIO_Init+0x25e>
 8008d3e:	69ba      	ldr	r2, [r7, #24]
 8008d40:	693b      	ldr	r3, [r7, #16]
 8008d42:	4313      	orrs	r3, r2
 8008d44:	61bb      	str	r3, [r7, #24]
 8008d46:	4a31      	ldr	r2, [pc, #196]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008d48:	69bb      	ldr	r3, [r7, #24]
 8008d4a:	6093      	str	r3, [r2, #8]
 8008d4c:	4b2f      	ldr	r3, [pc, #188]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008d4e:	68db      	ldr	r3, [r3, #12]
 8008d50:	61bb      	str	r3, [r7, #24]
 8008d52:	693b      	ldr	r3, [r7, #16]
 8008d54:	43db      	mvns	r3, r3
 8008d56:	69ba      	ldr	r2, [r7, #24]
 8008d58:	4013      	ands	r3, r2
 8008d5a:	61bb      	str	r3, [r7, #24]
 8008d5c:	683b      	ldr	r3, [r7, #0]
 8008d5e:	685b      	ldr	r3, [r3, #4]
 8008d60:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8008d64:	2b00      	cmp	r3, #0
 8008d66:	d003      	beq.n	8008d70 <HAL_GPIO_Init+0x288>
 8008d68:	69ba      	ldr	r2, [r7, #24]
 8008d6a:	693b      	ldr	r3, [r7, #16]
 8008d6c:	4313      	orrs	r3, r2
 8008d6e:	61bb      	str	r3, [r7, #24]
 8008d70:	4a26      	ldr	r2, [pc, #152]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008d72:	69bb      	ldr	r3, [r7, #24]
 8008d74:	60d3      	str	r3, [r2, #12]
 8008d76:	4b25      	ldr	r3, [pc, #148]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008d78:	685b      	ldr	r3, [r3, #4]
 8008d7a:	61bb      	str	r3, [r7, #24]
 8008d7c:	693b      	ldr	r3, [r7, #16]
 8008d7e:	43db      	mvns	r3, r3
 8008d80:	69ba      	ldr	r2, [r7, #24]
 8008d82:	4013      	ands	r3, r2
 8008d84:	61bb      	str	r3, [r7, #24]
 8008d86:	683b      	ldr	r3, [r7, #0]
 8008d88:	685b      	ldr	r3, [r3, #4]
 8008d8a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008d8e:	2b00      	cmp	r3, #0
 8008d90:	d003      	beq.n	8008d9a <HAL_GPIO_Init+0x2b2>
 8008d92:	69ba      	ldr	r2, [r7, #24]
 8008d94:	693b      	ldr	r3, [r7, #16]
 8008d96:	4313      	orrs	r3, r2
 8008d98:	61bb      	str	r3, [r7, #24]
 8008d9a:	4a1c      	ldr	r2, [pc, #112]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008d9c:	69bb      	ldr	r3, [r7, #24]
 8008d9e:	6053      	str	r3, [r2, #4]
 8008da0:	4b1a      	ldr	r3, [pc, #104]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008da2:	681b      	ldr	r3, [r3, #0]
 8008da4:	61bb      	str	r3, [r7, #24]
 8008da6:	693b      	ldr	r3, [r7, #16]
 8008da8:	43db      	mvns	r3, r3
 8008daa:	69ba      	ldr	r2, [r7, #24]
 8008dac:	4013      	ands	r3, r2
 8008dae:	61bb      	str	r3, [r7, #24]
 8008db0:	683b      	ldr	r3, [r7, #0]
 8008db2:	685b      	ldr	r3, [r3, #4]
 8008db4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008db8:	2b00      	cmp	r3, #0
 8008dba:	d003      	beq.n	8008dc4 <HAL_GPIO_Init+0x2dc>
 8008dbc:	69ba      	ldr	r2, [r7, #24]
 8008dbe:	693b      	ldr	r3, [r7, #16]
 8008dc0:	4313      	orrs	r3, r2
 8008dc2:	61bb      	str	r3, [r7, #24]
 8008dc4:	4a11      	ldr	r2, [pc, #68]	; (8008e0c <HAL_GPIO_Init+0x324>)
 8008dc6:	69bb      	ldr	r3, [r7, #24]
 8008dc8:	6013      	str	r3, [r2, #0]
 8008dca:	69fb      	ldr	r3, [r7, #28]
 8008dcc:	3301      	adds	r3, #1
 8008dce:	61fb      	str	r3, [r7, #28]
 8008dd0:	69fb      	ldr	r3, [r7, #28]
 8008dd2:	2b0f      	cmp	r3, #15
 8008dd4:	f67f ae96 	bls.w	8008b04 <HAL_GPIO_Init+0x1c>
 8008dd8:	bf00      	nop
 8008dda:	bf00      	nop
 8008ddc:	3724      	adds	r7, #36	; 0x24
 8008dde:	46bd      	mov	sp, r7
 8008de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008de4:	4770      	bx	lr
 8008de6:	bf00      	nop
 8008de8:	40023800 	.word	0x40023800
 8008dec:	40013800 	.word	0x40013800
 8008df0:	40020000 	.word	0x40020000
 8008df4:	40020400 	.word	0x40020400
 8008df8:	40020800 	.word	0x40020800
 8008dfc:	40020c00 	.word	0x40020c00
 8008e00:	40021000 	.word	0x40021000
 8008e04:	40021400 	.word	0x40021400
 8008e08:	40021800 	.word	0x40021800
 8008e0c:	40013c00 	.word	0x40013c00

08008e10 <HAL_GPIO_DeInit>:
 8008e10:	b480      	push	{r7}
 8008e12:	b087      	sub	sp, #28
 8008e14:	af00      	add	r7, sp, #0
 8008e16:	6078      	str	r0, [r7, #4]
 8008e18:	6039      	str	r1, [r7, #0]
 8008e1a:	2300      	movs	r3, #0
 8008e1c:	613b      	str	r3, [r7, #16]
 8008e1e:	2300      	movs	r3, #0
 8008e20:	60fb      	str	r3, [r7, #12]
 8008e22:	2300      	movs	r3, #0
 8008e24:	60bb      	str	r3, [r7, #8]
 8008e26:	2300      	movs	r3, #0
 8008e28:	617b      	str	r3, [r7, #20]
 8008e2a:	e0c7      	b.n	8008fbc <HAL_GPIO_DeInit+0x1ac>
 8008e2c:	2201      	movs	r2, #1
 8008e2e:	697b      	ldr	r3, [r7, #20]
 8008e30:	fa02 f303 	lsl.w	r3, r2, r3
 8008e34:	613b      	str	r3, [r7, #16]
 8008e36:	683a      	ldr	r2, [r7, #0]
 8008e38:	693b      	ldr	r3, [r7, #16]
 8008e3a:	4013      	ands	r3, r2
 8008e3c:	60fb      	str	r3, [r7, #12]
 8008e3e:	68fa      	ldr	r2, [r7, #12]
 8008e40:	693b      	ldr	r3, [r7, #16]
 8008e42:	429a      	cmp	r2, r3
 8008e44:	f040 80b7 	bne.w	8008fb6 <HAL_GPIO_DeInit+0x1a6>
 8008e48:	4a62      	ldr	r2, [pc, #392]	; (8008fd4 <HAL_GPIO_DeInit+0x1c4>)
 8008e4a:	697b      	ldr	r3, [r7, #20]
 8008e4c:	089b      	lsrs	r3, r3, #2
 8008e4e:	3302      	adds	r3, #2
 8008e50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008e54:	60bb      	str	r3, [r7, #8]
 8008e56:	697b      	ldr	r3, [r7, #20]
 8008e58:	f003 0303 	and.w	r3, r3, #3
 8008e5c:	009b      	lsls	r3, r3, #2
 8008e5e:	220f      	movs	r2, #15
 8008e60:	fa02 f303 	lsl.w	r3, r2, r3
 8008e64:	68ba      	ldr	r2, [r7, #8]
 8008e66:	4013      	ands	r3, r2
 8008e68:	60bb      	str	r3, [r7, #8]
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	4a5a      	ldr	r2, [pc, #360]	; (8008fd8 <HAL_GPIO_DeInit+0x1c8>)
 8008e6e:	4293      	cmp	r3, r2
 8008e70:	d025      	beq.n	8008ebe <HAL_GPIO_DeInit+0xae>
 8008e72:	687b      	ldr	r3, [r7, #4]
 8008e74:	4a59      	ldr	r2, [pc, #356]	; (8008fdc <HAL_GPIO_DeInit+0x1cc>)
 8008e76:	4293      	cmp	r3, r2
 8008e78:	d01f      	beq.n	8008eba <HAL_GPIO_DeInit+0xaa>
 8008e7a:	687b      	ldr	r3, [r7, #4]
 8008e7c:	4a58      	ldr	r2, [pc, #352]	; (8008fe0 <HAL_GPIO_DeInit+0x1d0>)
 8008e7e:	4293      	cmp	r3, r2
 8008e80:	d019      	beq.n	8008eb6 <HAL_GPIO_DeInit+0xa6>
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	4a57      	ldr	r2, [pc, #348]	; (8008fe4 <HAL_GPIO_DeInit+0x1d4>)
 8008e86:	4293      	cmp	r3, r2
 8008e88:	d013      	beq.n	8008eb2 <HAL_GPIO_DeInit+0xa2>
 8008e8a:	687b      	ldr	r3, [r7, #4]
 8008e8c:	4a56      	ldr	r2, [pc, #344]	; (8008fe8 <HAL_GPIO_DeInit+0x1d8>)
 8008e8e:	4293      	cmp	r3, r2
 8008e90:	d00d      	beq.n	8008eae <HAL_GPIO_DeInit+0x9e>
 8008e92:	687b      	ldr	r3, [r7, #4]
 8008e94:	4a55      	ldr	r2, [pc, #340]	; (8008fec <HAL_GPIO_DeInit+0x1dc>)
 8008e96:	4293      	cmp	r3, r2
 8008e98:	d007      	beq.n	8008eaa <HAL_GPIO_DeInit+0x9a>
 8008e9a:	687b      	ldr	r3, [r7, #4]
 8008e9c:	4a54      	ldr	r2, [pc, #336]	; (8008ff0 <HAL_GPIO_DeInit+0x1e0>)
 8008e9e:	4293      	cmp	r3, r2
 8008ea0:	d101      	bne.n	8008ea6 <HAL_GPIO_DeInit+0x96>
 8008ea2:	2306      	movs	r3, #6
 8008ea4:	e00c      	b.n	8008ec0 <HAL_GPIO_DeInit+0xb0>
 8008ea6:	2307      	movs	r3, #7
 8008ea8:	e00a      	b.n	8008ec0 <HAL_GPIO_DeInit+0xb0>
 8008eaa:	2305      	movs	r3, #5
 8008eac:	e008      	b.n	8008ec0 <HAL_GPIO_DeInit+0xb0>
 8008eae:	2304      	movs	r3, #4
 8008eb0:	e006      	b.n	8008ec0 <HAL_GPIO_DeInit+0xb0>
 8008eb2:	2303      	movs	r3, #3
 8008eb4:	e004      	b.n	8008ec0 <HAL_GPIO_DeInit+0xb0>
 8008eb6:	2302      	movs	r3, #2
 8008eb8:	e002      	b.n	8008ec0 <HAL_GPIO_DeInit+0xb0>
 8008eba:	2301      	movs	r3, #1
 8008ebc:	e000      	b.n	8008ec0 <HAL_GPIO_DeInit+0xb0>
 8008ebe:	2300      	movs	r3, #0
 8008ec0:	697a      	ldr	r2, [r7, #20]
 8008ec2:	f002 0203 	and.w	r2, r2, #3
 8008ec6:	0092      	lsls	r2, r2, #2
 8008ec8:	4093      	lsls	r3, r2
 8008eca:	68ba      	ldr	r2, [r7, #8]
 8008ecc:	429a      	cmp	r2, r3
 8008ece:	d132      	bne.n	8008f36 <HAL_GPIO_DeInit+0x126>
 8008ed0:	4b48      	ldr	r3, [pc, #288]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008ed2:	681a      	ldr	r2, [r3, #0]
 8008ed4:	68fb      	ldr	r3, [r7, #12]
 8008ed6:	43db      	mvns	r3, r3
 8008ed8:	4946      	ldr	r1, [pc, #280]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008eda:	4013      	ands	r3, r2
 8008edc:	600b      	str	r3, [r1, #0]
 8008ede:	4b45      	ldr	r3, [pc, #276]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008ee0:	685a      	ldr	r2, [r3, #4]
 8008ee2:	68fb      	ldr	r3, [r7, #12]
 8008ee4:	43db      	mvns	r3, r3
 8008ee6:	4943      	ldr	r1, [pc, #268]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008ee8:	4013      	ands	r3, r2
 8008eea:	604b      	str	r3, [r1, #4]
 8008eec:	4b41      	ldr	r3, [pc, #260]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008eee:	68da      	ldr	r2, [r3, #12]
 8008ef0:	68fb      	ldr	r3, [r7, #12]
 8008ef2:	43db      	mvns	r3, r3
 8008ef4:	493f      	ldr	r1, [pc, #252]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008ef6:	4013      	ands	r3, r2
 8008ef8:	60cb      	str	r3, [r1, #12]
 8008efa:	4b3e      	ldr	r3, [pc, #248]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008efc:	689a      	ldr	r2, [r3, #8]
 8008efe:	68fb      	ldr	r3, [r7, #12]
 8008f00:	43db      	mvns	r3, r3
 8008f02:	493c      	ldr	r1, [pc, #240]	; (8008ff4 <HAL_GPIO_DeInit+0x1e4>)
 8008f04:	4013      	ands	r3, r2
 8008f06:	608b      	str	r3, [r1, #8]
 8008f08:	697b      	ldr	r3, [r7, #20]
 8008f0a:	f003 0303 	and.w	r3, r3, #3
 8008f0e:	009b      	lsls	r3, r3, #2
 8008f10:	220f      	movs	r2, #15
 8008f12:	fa02 f303 	lsl.w	r3, r2, r3
 8008f16:	60bb      	str	r3, [r7, #8]
 8008f18:	4a2e      	ldr	r2, [pc, #184]	; (8008fd4 <HAL_GPIO_DeInit+0x1c4>)
 8008f1a:	697b      	ldr	r3, [r7, #20]
 8008f1c:	089b      	lsrs	r3, r3, #2
 8008f1e:	3302      	adds	r3, #2
 8008f20:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8008f24:	68bb      	ldr	r3, [r7, #8]
 8008f26:	43da      	mvns	r2, r3
 8008f28:	482a      	ldr	r0, [pc, #168]	; (8008fd4 <HAL_GPIO_DeInit+0x1c4>)
 8008f2a:	697b      	ldr	r3, [r7, #20]
 8008f2c:	089b      	lsrs	r3, r3, #2
 8008f2e:	400a      	ands	r2, r1
 8008f30:	3302      	adds	r3, #2
 8008f32:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	681a      	ldr	r2, [r3, #0]
 8008f3a:	697b      	ldr	r3, [r7, #20]
 8008f3c:	005b      	lsls	r3, r3, #1
 8008f3e:	2103      	movs	r1, #3
 8008f40:	fa01 f303 	lsl.w	r3, r1, r3
 8008f44:	43db      	mvns	r3, r3
 8008f46:	401a      	ands	r2, r3
 8008f48:	687b      	ldr	r3, [r7, #4]
 8008f4a:	601a      	str	r2, [r3, #0]
 8008f4c:	697b      	ldr	r3, [r7, #20]
 8008f4e:	08da      	lsrs	r2, r3, #3
 8008f50:	687b      	ldr	r3, [r7, #4]
 8008f52:	3208      	adds	r2, #8
 8008f54:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8008f58:	697b      	ldr	r3, [r7, #20]
 8008f5a:	f003 0307 	and.w	r3, r3, #7
 8008f5e:	009b      	lsls	r3, r3, #2
 8008f60:	220f      	movs	r2, #15
 8008f62:	fa02 f303 	lsl.w	r3, r2, r3
 8008f66:	43db      	mvns	r3, r3
 8008f68:	697a      	ldr	r2, [r7, #20]
 8008f6a:	08d2      	lsrs	r2, r2, #3
 8008f6c:	4019      	ands	r1, r3
 8008f6e:	687b      	ldr	r3, [r7, #4]
 8008f70:	3208      	adds	r2, #8
 8008f72:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8008f76:	687b      	ldr	r3, [r7, #4]
 8008f78:	68da      	ldr	r2, [r3, #12]
 8008f7a:	697b      	ldr	r3, [r7, #20]
 8008f7c:	005b      	lsls	r3, r3, #1
 8008f7e:	2103      	movs	r1, #3
 8008f80:	fa01 f303 	lsl.w	r3, r1, r3
 8008f84:	43db      	mvns	r3, r3
 8008f86:	401a      	ands	r2, r3
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	60da      	str	r2, [r3, #12]
 8008f8c:	687b      	ldr	r3, [r7, #4]
 8008f8e:	685a      	ldr	r2, [r3, #4]
 8008f90:	2101      	movs	r1, #1
 8008f92:	697b      	ldr	r3, [r7, #20]
 8008f94:	fa01 f303 	lsl.w	r3, r1, r3
 8008f98:	43db      	mvns	r3, r3
 8008f9a:	401a      	ands	r2, r3
 8008f9c:	687b      	ldr	r3, [r7, #4]
 8008f9e:	605a      	str	r2, [r3, #4]
 8008fa0:	687b      	ldr	r3, [r7, #4]
 8008fa2:	689a      	ldr	r2, [r3, #8]
 8008fa4:	697b      	ldr	r3, [r7, #20]
 8008fa6:	005b      	lsls	r3, r3, #1
 8008fa8:	2103      	movs	r1, #3
 8008faa:	fa01 f303 	lsl.w	r3, r1, r3
 8008fae:	43db      	mvns	r3, r3
 8008fb0:	401a      	ands	r2, r3
 8008fb2:	687b      	ldr	r3, [r7, #4]
 8008fb4:	609a      	str	r2, [r3, #8]
 8008fb6:	697b      	ldr	r3, [r7, #20]
 8008fb8:	3301      	adds	r3, #1
 8008fba:	617b      	str	r3, [r7, #20]
 8008fbc:	697b      	ldr	r3, [r7, #20]
 8008fbe:	2b0f      	cmp	r3, #15
 8008fc0:	f67f af34 	bls.w	8008e2c <HAL_GPIO_DeInit+0x1c>
 8008fc4:	bf00      	nop
 8008fc6:	bf00      	nop
 8008fc8:	371c      	adds	r7, #28
 8008fca:	46bd      	mov	sp, r7
 8008fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fd0:	4770      	bx	lr
 8008fd2:	bf00      	nop
 8008fd4:	40013800 	.word	0x40013800
 8008fd8:	40020000 	.word	0x40020000
 8008fdc:	40020400 	.word	0x40020400
 8008fe0:	40020800 	.word	0x40020800
 8008fe4:	40020c00 	.word	0x40020c00
 8008fe8:	40021000 	.word	0x40021000
 8008fec:	40021400 	.word	0x40021400
 8008ff0:	40021800 	.word	0x40021800
 8008ff4:	40013c00 	.word	0x40013c00

08008ff8 <HAL_GPIO_ReadPin>:
 8008ff8:	b480      	push	{r7}
 8008ffa:	b085      	sub	sp, #20
 8008ffc:	af00      	add	r7, sp, #0
 8008ffe:	6078      	str	r0, [r7, #4]
 8009000:	460b      	mov	r3, r1
 8009002:	807b      	strh	r3, [r7, #2]
 8009004:	687b      	ldr	r3, [r7, #4]
 8009006:	691a      	ldr	r2, [r3, #16]
 8009008:	887b      	ldrh	r3, [r7, #2]
 800900a:	4013      	ands	r3, r2
 800900c:	2b00      	cmp	r3, #0
 800900e:	d002      	beq.n	8009016 <HAL_GPIO_ReadPin+0x1e>
 8009010:	2301      	movs	r3, #1
 8009012:	73fb      	strb	r3, [r7, #15]
 8009014:	e001      	b.n	800901a <HAL_GPIO_ReadPin+0x22>
 8009016:	2300      	movs	r3, #0
 8009018:	73fb      	strb	r3, [r7, #15]
 800901a:	7bfb      	ldrb	r3, [r7, #15]
 800901c:	4618      	mov	r0, r3
 800901e:	3714      	adds	r7, #20
 8009020:	46bd      	mov	sp, r7
 8009022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009026:	4770      	bx	lr

08009028 <HAL_GPIO_WritePin>:
 8009028:	b480      	push	{r7}
 800902a:	b083      	sub	sp, #12
 800902c:	af00      	add	r7, sp, #0
 800902e:	6078      	str	r0, [r7, #4]
 8009030:	460b      	mov	r3, r1
 8009032:	807b      	strh	r3, [r7, #2]
 8009034:	4613      	mov	r3, r2
 8009036:	707b      	strb	r3, [r7, #1]
 8009038:	787b      	ldrb	r3, [r7, #1]
 800903a:	2b00      	cmp	r3, #0
 800903c:	d003      	beq.n	8009046 <HAL_GPIO_WritePin+0x1e>
 800903e:	887a      	ldrh	r2, [r7, #2]
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	619a      	str	r2, [r3, #24]
 8009044:	e003      	b.n	800904e <HAL_GPIO_WritePin+0x26>
 8009046:	887b      	ldrh	r3, [r7, #2]
 8009048:	041a      	lsls	r2, r3, #16
 800904a:	687b      	ldr	r3, [r7, #4]
 800904c:	619a      	str	r2, [r3, #24]
 800904e:	bf00      	nop
 8009050:	370c      	adds	r7, #12
 8009052:	46bd      	mov	sp, r7
 8009054:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009058:	4770      	bx	lr

0800905a <HAL_GPIO_TogglePin>:
 800905a:	b480      	push	{r7}
 800905c:	b085      	sub	sp, #20
 800905e:	af00      	add	r7, sp, #0
 8009060:	6078      	str	r0, [r7, #4]
 8009062:	460b      	mov	r3, r1
 8009064:	807b      	strh	r3, [r7, #2]
 8009066:	687b      	ldr	r3, [r7, #4]
 8009068:	695b      	ldr	r3, [r3, #20]
 800906a:	60fb      	str	r3, [r7, #12]
 800906c:	887a      	ldrh	r2, [r7, #2]
 800906e:	68fb      	ldr	r3, [r7, #12]
 8009070:	4013      	ands	r3, r2
 8009072:	041a      	lsls	r2, r3, #16
 8009074:	68fb      	ldr	r3, [r7, #12]
 8009076:	43d9      	mvns	r1, r3
 8009078:	887b      	ldrh	r3, [r7, #2]
 800907a:	400b      	ands	r3, r1
 800907c:	431a      	orrs	r2, r3
 800907e:	687b      	ldr	r3, [r7, #4]
 8009080:	619a      	str	r2, [r3, #24]
 8009082:	bf00      	nop
 8009084:	3714      	adds	r7, #20
 8009086:	46bd      	mov	sp, r7
 8009088:	f85d 7b04 	ldr.w	r7, [sp], #4
 800908c:	4770      	bx	lr
	...

08009090 <HAL_I2C_Init>:
 8009090:	b580      	push	{r7, lr}
 8009092:	b084      	sub	sp, #16
 8009094:	af00      	add	r7, sp, #0
 8009096:	6078      	str	r0, [r7, #4]
 8009098:	687b      	ldr	r3, [r7, #4]
 800909a:	2b00      	cmp	r3, #0
 800909c:	d101      	bne.n	80090a2 <HAL_I2C_Init+0x12>
 800909e:	2301      	movs	r3, #1
 80090a0:	e12b      	b.n	80092fa <HAL_I2C_Init+0x26a>
 80090a2:	687b      	ldr	r3, [r7, #4]
 80090a4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80090a8:	b2db      	uxtb	r3, r3
 80090aa:	2b00      	cmp	r3, #0
 80090ac:	d106      	bne.n	80090bc <HAL_I2C_Init+0x2c>
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	2200      	movs	r2, #0
 80090b2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80090b6:	6878      	ldr	r0, [r7, #4]
 80090b8:	f7fd fbf4 	bl	80068a4 <HAL_I2C_MspInit>
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	2224      	movs	r2, #36	; 0x24
 80090c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80090c4:	687b      	ldr	r3, [r7, #4]
 80090c6:	681b      	ldr	r3, [r3, #0]
 80090c8:	681a      	ldr	r2, [r3, #0]
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	f022 0201 	bic.w	r2, r2, #1
 80090d2:	601a      	str	r2, [r3, #0]
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	681b      	ldr	r3, [r3, #0]
 80090d8:	681a      	ldr	r2, [r3, #0]
 80090da:	687b      	ldr	r3, [r7, #4]
 80090dc:	681b      	ldr	r3, [r3, #0]
 80090de:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80090e2:	601a      	str	r2, [r3, #0]
 80090e4:	687b      	ldr	r3, [r7, #4]
 80090e6:	681b      	ldr	r3, [r3, #0]
 80090e8:	681a      	ldr	r2, [r3, #0]
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80090f2:	601a      	str	r2, [r3, #0]
 80090f4:	f001 fe3a 	bl	800ad6c <HAL_RCC_GetPCLK1Freq>
 80090f8:	60f8      	str	r0, [r7, #12]
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	685b      	ldr	r3, [r3, #4]
 80090fe:	4a81      	ldr	r2, [pc, #516]	; (8009304 <HAL_I2C_Init+0x274>)
 8009100:	4293      	cmp	r3, r2
 8009102:	d807      	bhi.n	8009114 <HAL_I2C_Init+0x84>
 8009104:	68fb      	ldr	r3, [r7, #12]
 8009106:	4a80      	ldr	r2, [pc, #512]	; (8009308 <HAL_I2C_Init+0x278>)
 8009108:	4293      	cmp	r3, r2
 800910a:	bf94      	ite	ls
 800910c:	2301      	movls	r3, #1
 800910e:	2300      	movhi	r3, #0
 8009110:	b2db      	uxtb	r3, r3
 8009112:	e006      	b.n	8009122 <HAL_I2C_Init+0x92>
 8009114:	68fb      	ldr	r3, [r7, #12]
 8009116:	4a7d      	ldr	r2, [pc, #500]	; (800930c <HAL_I2C_Init+0x27c>)
 8009118:	4293      	cmp	r3, r2
 800911a:	bf94      	ite	ls
 800911c:	2301      	movls	r3, #1
 800911e:	2300      	movhi	r3, #0
 8009120:	b2db      	uxtb	r3, r3
 8009122:	2b00      	cmp	r3, #0
 8009124:	d001      	beq.n	800912a <HAL_I2C_Init+0x9a>
 8009126:	2301      	movs	r3, #1
 8009128:	e0e7      	b.n	80092fa <HAL_I2C_Init+0x26a>
 800912a:	68fb      	ldr	r3, [r7, #12]
 800912c:	4a78      	ldr	r2, [pc, #480]	; (8009310 <HAL_I2C_Init+0x280>)
 800912e:	fba2 2303 	umull	r2, r3, r2, r3
 8009132:	0c9b      	lsrs	r3, r3, #18
 8009134:	60bb      	str	r3, [r7, #8]
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	681b      	ldr	r3, [r3, #0]
 800913a:	685b      	ldr	r3, [r3, #4]
 800913c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8009140:	687b      	ldr	r3, [r7, #4]
 8009142:	681b      	ldr	r3, [r3, #0]
 8009144:	68ba      	ldr	r2, [r7, #8]
 8009146:	430a      	orrs	r2, r1
 8009148:	605a      	str	r2, [r3, #4]
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	681b      	ldr	r3, [r3, #0]
 800914e:	6a1b      	ldr	r3, [r3, #32]
 8009150:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8009154:	687b      	ldr	r3, [r7, #4]
 8009156:	685b      	ldr	r3, [r3, #4]
 8009158:	4a6a      	ldr	r2, [pc, #424]	; (8009304 <HAL_I2C_Init+0x274>)
 800915a:	4293      	cmp	r3, r2
 800915c:	d802      	bhi.n	8009164 <HAL_I2C_Init+0xd4>
 800915e:	68bb      	ldr	r3, [r7, #8]
 8009160:	3301      	adds	r3, #1
 8009162:	e009      	b.n	8009178 <HAL_I2C_Init+0xe8>
 8009164:	68bb      	ldr	r3, [r7, #8]
 8009166:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800916a:	fb02 f303 	mul.w	r3, r2, r3
 800916e:	4a69      	ldr	r2, [pc, #420]	; (8009314 <HAL_I2C_Init+0x284>)
 8009170:	fba2 2303 	umull	r2, r3, r2, r3
 8009174:	099b      	lsrs	r3, r3, #6
 8009176:	3301      	adds	r3, #1
 8009178:	687a      	ldr	r2, [r7, #4]
 800917a:	6812      	ldr	r2, [r2, #0]
 800917c:	430b      	orrs	r3, r1
 800917e:	6213      	str	r3, [r2, #32]
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	681b      	ldr	r3, [r3, #0]
 8009184:	69db      	ldr	r3, [r3, #28]
 8009186:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 800918a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	685b      	ldr	r3, [r3, #4]
 8009192:	495c      	ldr	r1, [pc, #368]	; (8009304 <HAL_I2C_Init+0x274>)
 8009194:	428b      	cmp	r3, r1
 8009196:	d819      	bhi.n	80091cc <HAL_I2C_Init+0x13c>
 8009198:	68fb      	ldr	r3, [r7, #12]
 800919a:	1e59      	subs	r1, r3, #1
 800919c:	687b      	ldr	r3, [r7, #4]
 800919e:	685b      	ldr	r3, [r3, #4]
 80091a0:	005b      	lsls	r3, r3, #1
 80091a2:	fbb1 f3f3 	udiv	r3, r1, r3
 80091a6:	1c59      	adds	r1, r3, #1
 80091a8:	f640 73fc 	movw	r3, #4092	; 0xffc
 80091ac:	400b      	ands	r3, r1
 80091ae:	2b00      	cmp	r3, #0
 80091b0:	d00a      	beq.n	80091c8 <HAL_I2C_Init+0x138>
 80091b2:	68fb      	ldr	r3, [r7, #12]
 80091b4:	1e59      	subs	r1, r3, #1
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	685b      	ldr	r3, [r3, #4]
 80091ba:	005b      	lsls	r3, r3, #1
 80091bc:	fbb1 f3f3 	udiv	r3, r1, r3
 80091c0:	3301      	adds	r3, #1
 80091c2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80091c6:	e051      	b.n	800926c <HAL_I2C_Init+0x1dc>
 80091c8:	2304      	movs	r3, #4
 80091ca:	e04f      	b.n	800926c <HAL_I2C_Init+0x1dc>
 80091cc:	687b      	ldr	r3, [r7, #4]
 80091ce:	689b      	ldr	r3, [r3, #8]
 80091d0:	2b00      	cmp	r3, #0
 80091d2:	d111      	bne.n	80091f8 <HAL_I2C_Init+0x168>
 80091d4:	68fb      	ldr	r3, [r7, #12]
 80091d6:	1e58      	subs	r0, r3, #1
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	6859      	ldr	r1, [r3, #4]
 80091dc:	460b      	mov	r3, r1
 80091de:	005b      	lsls	r3, r3, #1
 80091e0:	440b      	add	r3, r1
 80091e2:	fbb0 f3f3 	udiv	r3, r0, r3
 80091e6:	3301      	adds	r3, #1
 80091e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80091ec:	2b00      	cmp	r3, #0
 80091ee:	bf0c      	ite	eq
 80091f0:	2301      	moveq	r3, #1
 80091f2:	2300      	movne	r3, #0
 80091f4:	b2db      	uxtb	r3, r3
 80091f6:	e012      	b.n	800921e <HAL_I2C_Init+0x18e>
 80091f8:	68fb      	ldr	r3, [r7, #12]
 80091fa:	1e58      	subs	r0, r3, #1
 80091fc:	687b      	ldr	r3, [r7, #4]
 80091fe:	6859      	ldr	r1, [r3, #4]
 8009200:	460b      	mov	r3, r1
 8009202:	009b      	lsls	r3, r3, #2
 8009204:	440b      	add	r3, r1
 8009206:	0099      	lsls	r1, r3, #2
 8009208:	440b      	add	r3, r1
 800920a:	fbb0 f3f3 	udiv	r3, r0, r3
 800920e:	3301      	adds	r3, #1
 8009210:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009214:	2b00      	cmp	r3, #0
 8009216:	bf0c      	ite	eq
 8009218:	2301      	moveq	r3, #1
 800921a:	2300      	movne	r3, #0
 800921c:	b2db      	uxtb	r3, r3
 800921e:	2b00      	cmp	r3, #0
 8009220:	d001      	beq.n	8009226 <HAL_I2C_Init+0x196>
 8009222:	2301      	movs	r3, #1
 8009224:	e022      	b.n	800926c <HAL_I2C_Init+0x1dc>
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	689b      	ldr	r3, [r3, #8]
 800922a:	2b00      	cmp	r3, #0
 800922c:	d10e      	bne.n	800924c <HAL_I2C_Init+0x1bc>
 800922e:	68fb      	ldr	r3, [r7, #12]
 8009230:	1e58      	subs	r0, r3, #1
 8009232:	687b      	ldr	r3, [r7, #4]
 8009234:	6859      	ldr	r1, [r3, #4]
 8009236:	460b      	mov	r3, r1
 8009238:	005b      	lsls	r3, r3, #1
 800923a:	440b      	add	r3, r1
 800923c:	fbb0 f3f3 	udiv	r3, r0, r3
 8009240:	3301      	adds	r3, #1
 8009242:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009246:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800924a:	e00f      	b.n	800926c <HAL_I2C_Init+0x1dc>
 800924c:	68fb      	ldr	r3, [r7, #12]
 800924e:	1e58      	subs	r0, r3, #1
 8009250:	687b      	ldr	r3, [r7, #4]
 8009252:	6859      	ldr	r1, [r3, #4]
 8009254:	460b      	mov	r3, r1
 8009256:	009b      	lsls	r3, r3, #2
 8009258:	440b      	add	r3, r1
 800925a:	0099      	lsls	r1, r3, #2
 800925c:	440b      	add	r3, r1
 800925e:	fbb0 f3f3 	udiv	r3, r0, r3
 8009262:	3301      	adds	r3, #1
 8009264:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009268:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800926c:	6879      	ldr	r1, [r7, #4]
 800926e:	6809      	ldr	r1, [r1, #0]
 8009270:	4313      	orrs	r3, r2
 8009272:	61cb      	str	r3, [r1, #28]
 8009274:	687b      	ldr	r3, [r7, #4]
 8009276:	681b      	ldr	r3, [r3, #0]
 8009278:	681b      	ldr	r3, [r3, #0]
 800927a:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	69da      	ldr	r2, [r3, #28]
 8009282:	687b      	ldr	r3, [r7, #4]
 8009284:	6a1b      	ldr	r3, [r3, #32]
 8009286:	431a      	orrs	r2, r3
 8009288:	687b      	ldr	r3, [r7, #4]
 800928a:	681b      	ldr	r3, [r3, #0]
 800928c:	430a      	orrs	r2, r1
 800928e:	601a      	str	r2, [r3, #0]
 8009290:	687b      	ldr	r3, [r7, #4]
 8009292:	681b      	ldr	r3, [r3, #0]
 8009294:	689b      	ldr	r3, [r3, #8]
 8009296:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 800929a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800929e:	687a      	ldr	r2, [r7, #4]
 80092a0:	6911      	ldr	r1, [r2, #16]
 80092a2:	687a      	ldr	r2, [r7, #4]
 80092a4:	68d2      	ldr	r2, [r2, #12]
 80092a6:	4311      	orrs	r1, r2
 80092a8:	687a      	ldr	r2, [r7, #4]
 80092aa:	6812      	ldr	r2, [r2, #0]
 80092ac:	430b      	orrs	r3, r1
 80092ae:	6093      	str	r3, [r2, #8]
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	681b      	ldr	r3, [r3, #0]
 80092b4:	68db      	ldr	r3, [r3, #12]
 80092b6:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	695a      	ldr	r2, [r3, #20]
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	699b      	ldr	r3, [r3, #24]
 80092c2:	431a      	orrs	r2, r3
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	681b      	ldr	r3, [r3, #0]
 80092c8:	430a      	orrs	r2, r1
 80092ca:	60da      	str	r2, [r3, #12]
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	681b      	ldr	r3, [r3, #0]
 80092d0:	681a      	ldr	r2, [r3, #0]
 80092d2:	687b      	ldr	r3, [r7, #4]
 80092d4:	681b      	ldr	r3, [r3, #0]
 80092d6:	f042 0201 	orr.w	r2, r2, #1
 80092da:	601a      	str	r2, [r3, #0]
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	2200      	movs	r2, #0
 80092e0:	641a      	str	r2, [r3, #64]	; 0x40
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	2220      	movs	r2, #32
 80092e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80092ea:	687b      	ldr	r3, [r7, #4]
 80092ec:	2200      	movs	r2, #0
 80092ee:	631a      	str	r2, [r3, #48]	; 0x30
 80092f0:	687b      	ldr	r3, [r7, #4]
 80092f2:	2200      	movs	r2, #0
 80092f4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80092f8:	2300      	movs	r3, #0
 80092fa:	4618      	mov	r0, r3
 80092fc:	3710      	adds	r7, #16
 80092fe:	46bd      	mov	sp, r7
 8009300:	bd80      	pop	{r7, pc}
 8009302:	bf00      	nop
 8009304:	000186a0 	.word	0x000186a0
 8009308:	001e847f 	.word	0x001e847f
 800930c:	003d08ff 	.word	0x003d08ff
 8009310:	431bde83 	.word	0x431bde83
 8009314:	10624dd3 	.word	0x10624dd3

08009318 <HAL_I2C_DeInit>:
 8009318:	b580      	push	{r7, lr}
 800931a:	b082      	sub	sp, #8
 800931c:	af00      	add	r7, sp, #0
 800931e:	6078      	str	r0, [r7, #4]
 8009320:	687b      	ldr	r3, [r7, #4]
 8009322:	2b00      	cmp	r3, #0
 8009324:	d101      	bne.n	800932a <HAL_I2C_DeInit+0x12>
 8009326:	2301      	movs	r3, #1
 8009328:	e021      	b.n	800936e <HAL_I2C_DeInit+0x56>
 800932a:	687b      	ldr	r3, [r7, #4]
 800932c:	2224      	movs	r2, #36	; 0x24
 800932e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009332:	687b      	ldr	r3, [r7, #4]
 8009334:	681b      	ldr	r3, [r3, #0]
 8009336:	681a      	ldr	r2, [r3, #0]
 8009338:	687b      	ldr	r3, [r7, #4]
 800933a:	681b      	ldr	r3, [r3, #0]
 800933c:	f022 0201 	bic.w	r2, r2, #1
 8009340:	601a      	str	r2, [r3, #0]
 8009342:	6878      	ldr	r0, [r7, #4]
 8009344:	f7fd fb84 	bl	8006a50 <HAL_I2C_MspDeInit>
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	2200      	movs	r2, #0
 800934c:	641a      	str	r2, [r3, #64]	; 0x40
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	2200      	movs	r2, #0
 8009352:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009356:	687b      	ldr	r3, [r7, #4]
 8009358:	2200      	movs	r2, #0
 800935a:	631a      	str	r2, [r3, #48]	; 0x30
 800935c:	687b      	ldr	r3, [r7, #4]
 800935e:	2200      	movs	r2, #0
 8009360:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009364:	687b      	ldr	r3, [r7, #4]
 8009366:	2200      	movs	r2, #0
 8009368:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800936c:	2300      	movs	r3, #0
 800936e:	4618      	mov	r0, r3
 8009370:	3708      	adds	r7, #8
 8009372:	46bd      	mov	sp, r7
 8009374:	bd80      	pop	{r7, pc}
	...

08009378 <HAL_I2C_Master_Transmit>:
 8009378:	b580      	push	{r7, lr}
 800937a:	b088      	sub	sp, #32
 800937c:	af02      	add	r7, sp, #8
 800937e:	60f8      	str	r0, [r7, #12]
 8009380:	607a      	str	r2, [r7, #4]
 8009382:	461a      	mov	r2, r3
 8009384:	460b      	mov	r3, r1
 8009386:	817b      	strh	r3, [r7, #10]
 8009388:	4613      	mov	r3, r2
 800938a:	813b      	strh	r3, [r7, #8]
 800938c:	f7fd ffc8 	bl	8007320 <HAL_GetTick>
 8009390:	6178      	str	r0, [r7, #20]
 8009392:	68fb      	ldr	r3, [r7, #12]
 8009394:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009398:	b2db      	uxtb	r3, r3
 800939a:	2b20      	cmp	r3, #32
 800939c:	f040 80e0 	bne.w	8009560 <HAL_I2C_Master_Transmit+0x1e8>
 80093a0:	697b      	ldr	r3, [r7, #20]
 80093a2:	9300      	str	r3, [sp, #0]
 80093a4:	2319      	movs	r3, #25
 80093a6:	2201      	movs	r2, #1
 80093a8:	4970      	ldr	r1, [pc, #448]	; (800956c <HAL_I2C_Master_Transmit+0x1f4>)
 80093aa:	68f8      	ldr	r0, [r7, #12]
 80093ac:	f001 f8f6 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 80093b0:	4603      	mov	r3, r0
 80093b2:	2b00      	cmp	r3, #0
 80093b4:	d001      	beq.n	80093ba <HAL_I2C_Master_Transmit+0x42>
 80093b6:	2302      	movs	r3, #2
 80093b8:	e0d3      	b.n	8009562 <HAL_I2C_Master_Transmit+0x1ea>
 80093ba:	68fb      	ldr	r3, [r7, #12]
 80093bc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80093c0:	2b01      	cmp	r3, #1
 80093c2:	d101      	bne.n	80093c8 <HAL_I2C_Master_Transmit+0x50>
 80093c4:	2302      	movs	r3, #2
 80093c6:	e0cc      	b.n	8009562 <HAL_I2C_Master_Transmit+0x1ea>
 80093c8:	68fb      	ldr	r3, [r7, #12]
 80093ca:	2201      	movs	r2, #1
 80093cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80093d0:	68fb      	ldr	r3, [r7, #12]
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	f003 0301 	and.w	r3, r3, #1
 80093da:	2b01      	cmp	r3, #1
 80093dc:	d007      	beq.n	80093ee <HAL_I2C_Master_Transmit+0x76>
 80093de:	68fb      	ldr	r3, [r7, #12]
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	681a      	ldr	r2, [r3, #0]
 80093e4:	68fb      	ldr	r3, [r7, #12]
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	f042 0201 	orr.w	r2, r2, #1
 80093ec:	601a      	str	r2, [r3, #0]
 80093ee:	68fb      	ldr	r3, [r7, #12]
 80093f0:	681b      	ldr	r3, [r3, #0]
 80093f2:	681a      	ldr	r2, [r3, #0]
 80093f4:	68fb      	ldr	r3, [r7, #12]
 80093f6:	681b      	ldr	r3, [r3, #0]
 80093f8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80093fc:	601a      	str	r2, [r3, #0]
 80093fe:	68fb      	ldr	r3, [r7, #12]
 8009400:	2221      	movs	r2, #33	; 0x21
 8009402:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009406:	68fb      	ldr	r3, [r7, #12]
 8009408:	2210      	movs	r2, #16
 800940a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800940e:	68fb      	ldr	r3, [r7, #12]
 8009410:	2200      	movs	r2, #0
 8009412:	641a      	str	r2, [r3, #64]	; 0x40
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	687a      	ldr	r2, [r7, #4]
 8009418:	625a      	str	r2, [r3, #36]	; 0x24
 800941a:	68fb      	ldr	r3, [r7, #12]
 800941c:	893a      	ldrh	r2, [r7, #8]
 800941e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009420:	68fb      	ldr	r3, [r7, #12]
 8009422:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009424:	b29a      	uxth	r2, r3
 8009426:	68fb      	ldr	r3, [r7, #12]
 8009428:	851a      	strh	r2, [r3, #40]	; 0x28
 800942a:	68fb      	ldr	r3, [r7, #12]
 800942c:	4a50      	ldr	r2, [pc, #320]	; (8009570 <HAL_I2C_Master_Transmit+0x1f8>)
 800942e:	62da      	str	r2, [r3, #44]	; 0x2c
 8009430:	8979      	ldrh	r1, [r7, #10]
 8009432:	697b      	ldr	r3, [r7, #20]
 8009434:	6a3a      	ldr	r2, [r7, #32]
 8009436:	68f8      	ldr	r0, [r7, #12]
 8009438:	f000 fde2 	bl	800a000 <I2C_MasterRequestWrite>
 800943c:	4603      	mov	r3, r0
 800943e:	2b00      	cmp	r3, #0
 8009440:	d001      	beq.n	8009446 <HAL_I2C_Master_Transmit+0xce>
 8009442:	2301      	movs	r3, #1
 8009444:	e08d      	b.n	8009562 <HAL_I2C_Master_Transmit+0x1ea>
 8009446:	2300      	movs	r3, #0
 8009448:	613b      	str	r3, [r7, #16]
 800944a:	68fb      	ldr	r3, [r7, #12]
 800944c:	681b      	ldr	r3, [r3, #0]
 800944e:	695b      	ldr	r3, [r3, #20]
 8009450:	613b      	str	r3, [r7, #16]
 8009452:	68fb      	ldr	r3, [r7, #12]
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	699b      	ldr	r3, [r3, #24]
 8009458:	613b      	str	r3, [r7, #16]
 800945a:	693b      	ldr	r3, [r7, #16]
 800945c:	e066      	b.n	800952c <HAL_I2C_Master_Transmit+0x1b4>
 800945e:	697a      	ldr	r2, [r7, #20]
 8009460:	6a39      	ldr	r1, [r7, #32]
 8009462:	68f8      	ldr	r0, [r7, #12]
 8009464:	f001 f970 	bl	800a748 <I2C_WaitOnTXEFlagUntilTimeout>
 8009468:	4603      	mov	r3, r0
 800946a:	2b00      	cmp	r3, #0
 800946c:	d00d      	beq.n	800948a <HAL_I2C_Master_Transmit+0x112>
 800946e:	68fb      	ldr	r3, [r7, #12]
 8009470:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009472:	2b04      	cmp	r3, #4
 8009474:	d107      	bne.n	8009486 <HAL_I2C_Master_Transmit+0x10e>
 8009476:	68fb      	ldr	r3, [r7, #12]
 8009478:	681b      	ldr	r3, [r3, #0]
 800947a:	681a      	ldr	r2, [r3, #0]
 800947c:	68fb      	ldr	r3, [r7, #12]
 800947e:	681b      	ldr	r3, [r3, #0]
 8009480:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009484:	601a      	str	r2, [r3, #0]
 8009486:	2301      	movs	r3, #1
 8009488:	e06b      	b.n	8009562 <HAL_I2C_Master_Transmit+0x1ea>
 800948a:	68fb      	ldr	r3, [r7, #12]
 800948c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800948e:	781a      	ldrb	r2, [r3, #0]
 8009490:	68fb      	ldr	r3, [r7, #12]
 8009492:	681b      	ldr	r3, [r3, #0]
 8009494:	611a      	str	r2, [r3, #16]
 8009496:	68fb      	ldr	r3, [r7, #12]
 8009498:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800949a:	1c5a      	adds	r2, r3, #1
 800949c:	68fb      	ldr	r3, [r7, #12]
 800949e:	625a      	str	r2, [r3, #36]	; 0x24
 80094a0:	68fb      	ldr	r3, [r7, #12]
 80094a2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80094a4:	b29b      	uxth	r3, r3
 80094a6:	3b01      	subs	r3, #1
 80094a8:	b29a      	uxth	r2, r3
 80094aa:	68fb      	ldr	r3, [r7, #12]
 80094ac:	855a      	strh	r2, [r3, #42]	; 0x2a
 80094ae:	68fb      	ldr	r3, [r7, #12]
 80094b0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80094b2:	3b01      	subs	r3, #1
 80094b4:	b29a      	uxth	r2, r3
 80094b6:	68fb      	ldr	r3, [r7, #12]
 80094b8:	851a      	strh	r2, [r3, #40]	; 0x28
 80094ba:	68fb      	ldr	r3, [r7, #12]
 80094bc:	681b      	ldr	r3, [r3, #0]
 80094be:	695b      	ldr	r3, [r3, #20]
 80094c0:	f003 0304 	and.w	r3, r3, #4
 80094c4:	2b04      	cmp	r3, #4
 80094c6:	d11b      	bne.n	8009500 <HAL_I2C_Master_Transmit+0x188>
 80094c8:	68fb      	ldr	r3, [r7, #12]
 80094ca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80094cc:	2b00      	cmp	r3, #0
 80094ce:	d017      	beq.n	8009500 <HAL_I2C_Master_Transmit+0x188>
 80094d0:	68fb      	ldr	r3, [r7, #12]
 80094d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094d4:	781a      	ldrb	r2, [r3, #0]
 80094d6:	68fb      	ldr	r3, [r7, #12]
 80094d8:	681b      	ldr	r3, [r3, #0]
 80094da:	611a      	str	r2, [r3, #16]
 80094dc:	68fb      	ldr	r3, [r7, #12]
 80094de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094e0:	1c5a      	adds	r2, r3, #1
 80094e2:	68fb      	ldr	r3, [r7, #12]
 80094e4:	625a      	str	r2, [r3, #36]	; 0x24
 80094e6:	68fb      	ldr	r3, [r7, #12]
 80094e8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80094ea:	b29b      	uxth	r3, r3
 80094ec:	3b01      	subs	r3, #1
 80094ee:	b29a      	uxth	r2, r3
 80094f0:	68fb      	ldr	r3, [r7, #12]
 80094f2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80094f4:	68fb      	ldr	r3, [r7, #12]
 80094f6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80094f8:	3b01      	subs	r3, #1
 80094fa:	b29a      	uxth	r2, r3
 80094fc:	68fb      	ldr	r3, [r7, #12]
 80094fe:	851a      	strh	r2, [r3, #40]	; 0x28
 8009500:	697a      	ldr	r2, [r7, #20]
 8009502:	6a39      	ldr	r1, [r7, #32]
 8009504:	68f8      	ldr	r0, [r7, #12]
 8009506:	f001 f960 	bl	800a7ca <I2C_WaitOnBTFFlagUntilTimeout>
 800950a:	4603      	mov	r3, r0
 800950c:	2b00      	cmp	r3, #0
 800950e:	d00d      	beq.n	800952c <HAL_I2C_Master_Transmit+0x1b4>
 8009510:	68fb      	ldr	r3, [r7, #12]
 8009512:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009514:	2b04      	cmp	r3, #4
 8009516:	d107      	bne.n	8009528 <HAL_I2C_Master_Transmit+0x1b0>
 8009518:	68fb      	ldr	r3, [r7, #12]
 800951a:	681b      	ldr	r3, [r3, #0]
 800951c:	681a      	ldr	r2, [r3, #0]
 800951e:	68fb      	ldr	r3, [r7, #12]
 8009520:	681b      	ldr	r3, [r3, #0]
 8009522:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009526:	601a      	str	r2, [r3, #0]
 8009528:	2301      	movs	r3, #1
 800952a:	e01a      	b.n	8009562 <HAL_I2C_Master_Transmit+0x1ea>
 800952c:	68fb      	ldr	r3, [r7, #12]
 800952e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009530:	2b00      	cmp	r3, #0
 8009532:	d194      	bne.n	800945e <HAL_I2C_Master_Transmit+0xe6>
 8009534:	68fb      	ldr	r3, [r7, #12]
 8009536:	681b      	ldr	r3, [r3, #0]
 8009538:	681a      	ldr	r2, [r3, #0]
 800953a:	68fb      	ldr	r3, [r7, #12]
 800953c:	681b      	ldr	r3, [r3, #0]
 800953e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009542:	601a      	str	r2, [r3, #0]
 8009544:	68fb      	ldr	r3, [r7, #12]
 8009546:	2220      	movs	r2, #32
 8009548:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800954c:	68fb      	ldr	r3, [r7, #12]
 800954e:	2200      	movs	r2, #0
 8009550:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009554:	68fb      	ldr	r3, [r7, #12]
 8009556:	2200      	movs	r2, #0
 8009558:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800955c:	2300      	movs	r3, #0
 800955e:	e000      	b.n	8009562 <HAL_I2C_Master_Transmit+0x1ea>
 8009560:	2302      	movs	r3, #2
 8009562:	4618      	mov	r0, r3
 8009564:	3718      	adds	r7, #24
 8009566:	46bd      	mov	sp, r7
 8009568:	bd80      	pop	{r7, pc}
 800956a:	bf00      	nop
 800956c:	00100002 	.word	0x00100002
 8009570:	ffff0000 	.word	0xffff0000

08009574 <HAL_I2C_Master_Receive>:
 8009574:	b580      	push	{r7, lr}
 8009576:	b08c      	sub	sp, #48	; 0x30
 8009578:	af02      	add	r7, sp, #8
 800957a:	60f8      	str	r0, [r7, #12]
 800957c:	607a      	str	r2, [r7, #4]
 800957e:	461a      	mov	r2, r3
 8009580:	460b      	mov	r3, r1
 8009582:	817b      	strh	r3, [r7, #10]
 8009584:	4613      	mov	r3, r2
 8009586:	813b      	strh	r3, [r7, #8]
 8009588:	f7fd feca 	bl	8007320 <HAL_GetTick>
 800958c:	6278      	str	r0, [r7, #36]	; 0x24
 800958e:	68fb      	ldr	r3, [r7, #12]
 8009590:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009594:	b2db      	uxtb	r3, r3
 8009596:	2b20      	cmp	r3, #32
 8009598:	f040 820b 	bne.w	80099b2 <HAL_I2C_Master_Receive+0x43e>
 800959c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800959e:	9300      	str	r3, [sp, #0]
 80095a0:	2319      	movs	r3, #25
 80095a2:	2201      	movs	r2, #1
 80095a4:	497c      	ldr	r1, [pc, #496]	; (8009798 <HAL_I2C_Master_Receive+0x224>)
 80095a6:	68f8      	ldr	r0, [r7, #12]
 80095a8:	f000 fff8 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 80095ac:	4603      	mov	r3, r0
 80095ae:	2b00      	cmp	r3, #0
 80095b0:	d001      	beq.n	80095b6 <HAL_I2C_Master_Receive+0x42>
 80095b2:	2302      	movs	r3, #2
 80095b4:	e1fe      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 80095b6:	68fb      	ldr	r3, [r7, #12]
 80095b8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80095bc:	2b01      	cmp	r3, #1
 80095be:	d101      	bne.n	80095c4 <HAL_I2C_Master_Receive+0x50>
 80095c0:	2302      	movs	r3, #2
 80095c2:	e1f7      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 80095c4:	68fb      	ldr	r3, [r7, #12]
 80095c6:	2201      	movs	r2, #1
 80095c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80095cc:	68fb      	ldr	r3, [r7, #12]
 80095ce:	681b      	ldr	r3, [r3, #0]
 80095d0:	681b      	ldr	r3, [r3, #0]
 80095d2:	f003 0301 	and.w	r3, r3, #1
 80095d6:	2b01      	cmp	r3, #1
 80095d8:	d007      	beq.n	80095ea <HAL_I2C_Master_Receive+0x76>
 80095da:	68fb      	ldr	r3, [r7, #12]
 80095dc:	681b      	ldr	r3, [r3, #0]
 80095de:	681a      	ldr	r2, [r3, #0]
 80095e0:	68fb      	ldr	r3, [r7, #12]
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	f042 0201 	orr.w	r2, r2, #1
 80095e8:	601a      	str	r2, [r3, #0]
 80095ea:	68fb      	ldr	r3, [r7, #12]
 80095ec:	681b      	ldr	r3, [r3, #0]
 80095ee:	681a      	ldr	r2, [r3, #0]
 80095f0:	68fb      	ldr	r3, [r7, #12]
 80095f2:	681b      	ldr	r3, [r3, #0]
 80095f4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80095f8:	601a      	str	r2, [r3, #0]
 80095fa:	68fb      	ldr	r3, [r7, #12]
 80095fc:	2222      	movs	r2, #34	; 0x22
 80095fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009602:	68fb      	ldr	r3, [r7, #12]
 8009604:	2210      	movs	r2, #16
 8009606:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800960a:	68fb      	ldr	r3, [r7, #12]
 800960c:	2200      	movs	r2, #0
 800960e:	641a      	str	r2, [r3, #64]	; 0x40
 8009610:	68fb      	ldr	r3, [r7, #12]
 8009612:	687a      	ldr	r2, [r7, #4]
 8009614:	625a      	str	r2, [r3, #36]	; 0x24
 8009616:	68fb      	ldr	r3, [r7, #12]
 8009618:	893a      	ldrh	r2, [r7, #8]
 800961a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800961c:	68fb      	ldr	r3, [r7, #12]
 800961e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009620:	b29a      	uxth	r2, r3
 8009622:	68fb      	ldr	r3, [r7, #12]
 8009624:	851a      	strh	r2, [r3, #40]	; 0x28
 8009626:	68fb      	ldr	r3, [r7, #12]
 8009628:	4a5c      	ldr	r2, [pc, #368]	; (800979c <HAL_I2C_Master_Receive+0x228>)
 800962a:	62da      	str	r2, [r3, #44]	; 0x2c
 800962c:	8979      	ldrh	r1, [r7, #10]
 800962e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009630:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009632:	68f8      	ldr	r0, [r7, #12]
 8009634:	f000 fd66 	bl	800a104 <I2C_MasterRequestRead>
 8009638:	4603      	mov	r3, r0
 800963a:	2b00      	cmp	r3, #0
 800963c:	d001      	beq.n	8009642 <HAL_I2C_Master_Receive+0xce>
 800963e:	2301      	movs	r3, #1
 8009640:	e1b8      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 8009642:	68fb      	ldr	r3, [r7, #12]
 8009644:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009646:	2b00      	cmp	r3, #0
 8009648:	d113      	bne.n	8009672 <HAL_I2C_Master_Receive+0xfe>
 800964a:	2300      	movs	r3, #0
 800964c:	623b      	str	r3, [r7, #32]
 800964e:	68fb      	ldr	r3, [r7, #12]
 8009650:	681b      	ldr	r3, [r3, #0]
 8009652:	695b      	ldr	r3, [r3, #20]
 8009654:	623b      	str	r3, [r7, #32]
 8009656:	68fb      	ldr	r3, [r7, #12]
 8009658:	681b      	ldr	r3, [r3, #0]
 800965a:	699b      	ldr	r3, [r3, #24]
 800965c:	623b      	str	r3, [r7, #32]
 800965e:	6a3b      	ldr	r3, [r7, #32]
 8009660:	68fb      	ldr	r3, [r7, #12]
 8009662:	681b      	ldr	r3, [r3, #0]
 8009664:	681a      	ldr	r2, [r3, #0]
 8009666:	68fb      	ldr	r3, [r7, #12]
 8009668:	681b      	ldr	r3, [r3, #0]
 800966a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800966e:	601a      	str	r2, [r3, #0]
 8009670:	e18c      	b.n	800998c <HAL_I2C_Master_Receive+0x418>
 8009672:	68fb      	ldr	r3, [r7, #12]
 8009674:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009676:	2b01      	cmp	r3, #1
 8009678:	d11b      	bne.n	80096b2 <HAL_I2C_Master_Receive+0x13e>
 800967a:	68fb      	ldr	r3, [r7, #12]
 800967c:	681b      	ldr	r3, [r3, #0]
 800967e:	681a      	ldr	r2, [r3, #0]
 8009680:	68fb      	ldr	r3, [r7, #12]
 8009682:	681b      	ldr	r3, [r3, #0]
 8009684:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009688:	601a      	str	r2, [r3, #0]
 800968a:	2300      	movs	r3, #0
 800968c:	61fb      	str	r3, [r7, #28]
 800968e:	68fb      	ldr	r3, [r7, #12]
 8009690:	681b      	ldr	r3, [r3, #0]
 8009692:	695b      	ldr	r3, [r3, #20]
 8009694:	61fb      	str	r3, [r7, #28]
 8009696:	68fb      	ldr	r3, [r7, #12]
 8009698:	681b      	ldr	r3, [r3, #0]
 800969a:	699b      	ldr	r3, [r3, #24]
 800969c:	61fb      	str	r3, [r7, #28]
 800969e:	69fb      	ldr	r3, [r7, #28]
 80096a0:	68fb      	ldr	r3, [r7, #12]
 80096a2:	681b      	ldr	r3, [r3, #0]
 80096a4:	681a      	ldr	r2, [r3, #0]
 80096a6:	68fb      	ldr	r3, [r7, #12]
 80096a8:	681b      	ldr	r3, [r3, #0]
 80096aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80096ae:	601a      	str	r2, [r3, #0]
 80096b0:	e16c      	b.n	800998c <HAL_I2C_Master_Receive+0x418>
 80096b2:	68fb      	ldr	r3, [r7, #12]
 80096b4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80096b6:	2b02      	cmp	r3, #2
 80096b8:	d11b      	bne.n	80096f2 <HAL_I2C_Master_Receive+0x17e>
 80096ba:	68fb      	ldr	r3, [r7, #12]
 80096bc:	681b      	ldr	r3, [r3, #0]
 80096be:	681a      	ldr	r2, [r3, #0]
 80096c0:	68fb      	ldr	r3, [r7, #12]
 80096c2:	681b      	ldr	r3, [r3, #0]
 80096c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80096c8:	601a      	str	r2, [r3, #0]
 80096ca:	68fb      	ldr	r3, [r7, #12]
 80096cc:	681b      	ldr	r3, [r3, #0]
 80096ce:	681a      	ldr	r2, [r3, #0]
 80096d0:	68fb      	ldr	r3, [r7, #12]
 80096d2:	681b      	ldr	r3, [r3, #0]
 80096d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80096d8:	601a      	str	r2, [r3, #0]
 80096da:	2300      	movs	r3, #0
 80096dc:	61bb      	str	r3, [r7, #24]
 80096de:	68fb      	ldr	r3, [r7, #12]
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	695b      	ldr	r3, [r3, #20]
 80096e4:	61bb      	str	r3, [r7, #24]
 80096e6:	68fb      	ldr	r3, [r7, #12]
 80096e8:	681b      	ldr	r3, [r3, #0]
 80096ea:	699b      	ldr	r3, [r3, #24]
 80096ec:	61bb      	str	r3, [r7, #24]
 80096ee:	69bb      	ldr	r3, [r7, #24]
 80096f0:	e14c      	b.n	800998c <HAL_I2C_Master_Receive+0x418>
 80096f2:	68fb      	ldr	r3, [r7, #12]
 80096f4:	681b      	ldr	r3, [r3, #0]
 80096f6:	681a      	ldr	r2, [r3, #0]
 80096f8:	68fb      	ldr	r3, [r7, #12]
 80096fa:	681b      	ldr	r3, [r3, #0]
 80096fc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009700:	601a      	str	r2, [r3, #0]
 8009702:	2300      	movs	r3, #0
 8009704:	617b      	str	r3, [r7, #20]
 8009706:	68fb      	ldr	r3, [r7, #12]
 8009708:	681b      	ldr	r3, [r3, #0]
 800970a:	695b      	ldr	r3, [r3, #20]
 800970c:	617b      	str	r3, [r7, #20]
 800970e:	68fb      	ldr	r3, [r7, #12]
 8009710:	681b      	ldr	r3, [r3, #0]
 8009712:	699b      	ldr	r3, [r3, #24]
 8009714:	617b      	str	r3, [r7, #20]
 8009716:	697b      	ldr	r3, [r7, #20]
 8009718:	e138      	b.n	800998c <HAL_I2C_Master_Receive+0x418>
 800971a:	68fb      	ldr	r3, [r7, #12]
 800971c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800971e:	2b03      	cmp	r3, #3
 8009720:	f200 80f1 	bhi.w	8009906 <HAL_I2C_Master_Receive+0x392>
 8009724:	68fb      	ldr	r3, [r7, #12]
 8009726:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009728:	2b01      	cmp	r3, #1
 800972a:	d123      	bne.n	8009774 <HAL_I2C_Master_Receive+0x200>
 800972c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800972e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8009730:	68f8      	ldr	r0, [r7, #12]
 8009732:	f001 f88b 	bl	800a84c <I2C_WaitOnRXNEFlagUntilTimeout>
 8009736:	4603      	mov	r3, r0
 8009738:	2b00      	cmp	r3, #0
 800973a:	d001      	beq.n	8009740 <HAL_I2C_Master_Receive+0x1cc>
 800973c:	2301      	movs	r3, #1
 800973e:	e139      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 8009740:	68fb      	ldr	r3, [r7, #12]
 8009742:	681b      	ldr	r3, [r3, #0]
 8009744:	691a      	ldr	r2, [r3, #16]
 8009746:	68fb      	ldr	r3, [r7, #12]
 8009748:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800974a:	b2d2      	uxtb	r2, r2
 800974c:	701a      	strb	r2, [r3, #0]
 800974e:	68fb      	ldr	r3, [r7, #12]
 8009750:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009752:	1c5a      	adds	r2, r3, #1
 8009754:	68fb      	ldr	r3, [r7, #12]
 8009756:	625a      	str	r2, [r3, #36]	; 0x24
 8009758:	68fb      	ldr	r3, [r7, #12]
 800975a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800975c:	3b01      	subs	r3, #1
 800975e:	b29a      	uxth	r2, r3
 8009760:	68fb      	ldr	r3, [r7, #12]
 8009762:	851a      	strh	r2, [r3, #40]	; 0x28
 8009764:	68fb      	ldr	r3, [r7, #12]
 8009766:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009768:	b29b      	uxth	r3, r3
 800976a:	3b01      	subs	r3, #1
 800976c:	b29a      	uxth	r2, r3
 800976e:	68fb      	ldr	r3, [r7, #12]
 8009770:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009772:	e10b      	b.n	800998c <HAL_I2C_Master_Receive+0x418>
 8009774:	68fb      	ldr	r3, [r7, #12]
 8009776:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009778:	2b02      	cmp	r3, #2
 800977a:	d14e      	bne.n	800981a <HAL_I2C_Master_Receive+0x2a6>
 800977c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800977e:	9300      	str	r3, [sp, #0]
 8009780:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009782:	2200      	movs	r2, #0
 8009784:	4906      	ldr	r1, [pc, #24]	; (80097a0 <HAL_I2C_Master_Receive+0x22c>)
 8009786:	68f8      	ldr	r0, [r7, #12]
 8009788:	f000 ff08 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800978c:	4603      	mov	r3, r0
 800978e:	2b00      	cmp	r3, #0
 8009790:	d008      	beq.n	80097a4 <HAL_I2C_Master_Receive+0x230>
 8009792:	2301      	movs	r3, #1
 8009794:	e10e      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 8009796:	bf00      	nop
 8009798:	00100002 	.word	0x00100002
 800979c:	ffff0000 	.word	0xffff0000
 80097a0:	00010004 	.word	0x00010004
 80097a4:	68fb      	ldr	r3, [r7, #12]
 80097a6:	681b      	ldr	r3, [r3, #0]
 80097a8:	681a      	ldr	r2, [r3, #0]
 80097aa:	68fb      	ldr	r3, [r7, #12]
 80097ac:	681b      	ldr	r3, [r3, #0]
 80097ae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80097b2:	601a      	str	r2, [r3, #0]
 80097b4:	68fb      	ldr	r3, [r7, #12]
 80097b6:	681b      	ldr	r3, [r3, #0]
 80097b8:	691a      	ldr	r2, [r3, #16]
 80097ba:	68fb      	ldr	r3, [r7, #12]
 80097bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80097be:	b2d2      	uxtb	r2, r2
 80097c0:	701a      	strb	r2, [r3, #0]
 80097c2:	68fb      	ldr	r3, [r7, #12]
 80097c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80097c6:	1c5a      	adds	r2, r3, #1
 80097c8:	68fb      	ldr	r3, [r7, #12]
 80097ca:	625a      	str	r2, [r3, #36]	; 0x24
 80097cc:	68fb      	ldr	r3, [r7, #12]
 80097ce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80097d0:	3b01      	subs	r3, #1
 80097d2:	b29a      	uxth	r2, r3
 80097d4:	68fb      	ldr	r3, [r7, #12]
 80097d6:	851a      	strh	r2, [r3, #40]	; 0x28
 80097d8:	68fb      	ldr	r3, [r7, #12]
 80097da:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80097dc:	b29b      	uxth	r3, r3
 80097de:	3b01      	subs	r3, #1
 80097e0:	b29a      	uxth	r2, r3
 80097e2:	68fb      	ldr	r3, [r7, #12]
 80097e4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80097e6:	68fb      	ldr	r3, [r7, #12]
 80097e8:	681b      	ldr	r3, [r3, #0]
 80097ea:	691a      	ldr	r2, [r3, #16]
 80097ec:	68fb      	ldr	r3, [r7, #12]
 80097ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80097f0:	b2d2      	uxtb	r2, r2
 80097f2:	701a      	strb	r2, [r3, #0]
 80097f4:	68fb      	ldr	r3, [r7, #12]
 80097f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80097f8:	1c5a      	adds	r2, r3, #1
 80097fa:	68fb      	ldr	r3, [r7, #12]
 80097fc:	625a      	str	r2, [r3, #36]	; 0x24
 80097fe:	68fb      	ldr	r3, [r7, #12]
 8009800:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009802:	3b01      	subs	r3, #1
 8009804:	b29a      	uxth	r2, r3
 8009806:	68fb      	ldr	r3, [r7, #12]
 8009808:	851a      	strh	r2, [r3, #40]	; 0x28
 800980a:	68fb      	ldr	r3, [r7, #12]
 800980c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800980e:	b29b      	uxth	r3, r3
 8009810:	3b01      	subs	r3, #1
 8009812:	b29a      	uxth	r2, r3
 8009814:	68fb      	ldr	r3, [r7, #12]
 8009816:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009818:	e0b8      	b.n	800998c <HAL_I2C_Master_Receive+0x418>
 800981a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800981c:	9300      	str	r3, [sp, #0]
 800981e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009820:	2200      	movs	r2, #0
 8009822:	4966      	ldr	r1, [pc, #408]	; (80099bc <HAL_I2C_Master_Receive+0x448>)
 8009824:	68f8      	ldr	r0, [r7, #12]
 8009826:	f000 feb9 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800982a:	4603      	mov	r3, r0
 800982c:	2b00      	cmp	r3, #0
 800982e:	d001      	beq.n	8009834 <HAL_I2C_Master_Receive+0x2c0>
 8009830:	2301      	movs	r3, #1
 8009832:	e0bf      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 8009834:	68fb      	ldr	r3, [r7, #12]
 8009836:	681b      	ldr	r3, [r3, #0]
 8009838:	681a      	ldr	r2, [r3, #0]
 800983a:	68fb      	ldr	r3, [r7, #12]
 800983c:	681b      	ldr	r3, [r3, #0]
 800983e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009842:	601a      	str	r2, [r3, #0]
 8009844:	68fb      	ldr	r3, [r7, #12]
 8009846:	681b      	ldr	r3, [r3, #0]
 8009848:	691a      	ldr	r2, [r3, #16]
 800984a:	68fb      	ldr	r3, [r7, #12]
 800984c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800984e:	b2d2      	uxtb	r2, r2
 8009850:	701a      	strb	r2, [r3, #0]
 8009852:	68fb      	ldr	r3, [r7, #12]
 8009854:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009856:	1c5a      	adds	r2, r3, #1
 8009858:	68fb      	ldr	r3, [r7, #12]
 800985a:	625a      	str	r2, [r3, #36]	; 0x24
 800985c:	68fb      	ldr	r3, [r7, #12]
 800985e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009860:	3b01      	subs	r3, #1
 8009862:	b29a      	uxth	r2, r3
 8009864:	68fb      	ldr	r3, [r7, #12]
 8009866:	851a      	strh	r2, [r3, #40]	; 0x28
 8009868:	68fb      	ldr	r3, [r7, #12]
 800986a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800986c:	b29b      	uxth	r3, r3
 800986e:	3b01      	subs	r3, #1
 8009870:	b29a      	uxth	r2, r3
 8009872:	68fb      	ldr	r3, [r7, #12]
 8009874:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009876:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009878:	9300      	str	r3, [sp, #0]
 800987a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800987c:	2200      	movs	r2, #0
 800987e:	494f      	ldr	r1, [pc, #316]	; (80099bc <HAL_I2C_Master_Receive+0x448>)
 8009880:	68f8      	ldr	r0, [r7, #12]
 8009882:	f000 fe8b 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 8009886:	4603      	mov	r3, r0
 8009888:	2b00      	cmp	r3, #0
 800988a:	d001      	beq.n	8009890 <HAL_I2C_Master_Receive+0x31c>
 800988c:	2301      	movs	r3, #1
 800988e:	e091      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 8009890:	68fb      	ldr	r3, [r7, #12]
 8009892:	681b      	ldr	r3, [r3, #0]
 8009894:	681a      	ldr	r2, [r3, #0]
 8009896:	68fb      	ldr	r3, [r7, #12]
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800989e:	601a      	str	r2, [r3, #0]
 80098a0:	68fb      	ldr	r3, [r7, #12]
 80098a2:	681b      	ldr	r3, [r3, #0]
 80098a4:	691a      	ldr	r2, [r3, #16]
 80098a6:	68fb      	ldr	r3, [r7, #12]
 80098a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098aa:	b2d2      	uxtb	r2, r2
 80098ac:	701a      	strb	r2, [r3, #0]
 80098ae:	68fb      	ldr	r3, [r7, #12]
 80098b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098b2:	1c5a      	adds	r2, r3, #1
 80098b4:	68fb      	ldr	r3, [r7, #12]
 80098b6:	625a      	str	r2, [r3, #36]	; 0x24
 80098b8:	68fb      	ldr	r3, [r7, #12]
 80098ba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80098bc:	3b01      	subs	r3, #1
 80098be:	b29a      	uxth	r2, r3
 80098c0:	68fb      	ldr	r3, [r7, #12]
 80098c2:	851a      	strh	r2, [r3, #40]	; 0x28
 80098c4:	68fb      	ldr	r3, [r7, #12]
 80098c6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80098c8:	b29b      	uxth	r3, r3
 80098ca:	3b01      	subs	r3, #1
 80098cc:	b29a      	uxth	r2, r3
 80098ce:	68fb      	ldr	r3, [r7, #12]
 80098d0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80098d2:	68fb      	ldr	r3, [r7, #12]
 80098d4:	681b      	ldr	r3, [r3, #0]
 80098d6:	691a      	ldr	r2, [r3, #16]
 80098d8:	68fb      	ldr	r3, [r7, #12]
 80098da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098dc:	b2d2      	uxtb	r2, r2
 80098de:	701a      	strb	r2, [r3, #0]
 80098e0:	68fb      	ldr	r3, [r7, #12]
 80098e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098e4:	1c5a      	adds	r2, r3, #1
 80098e6:	68fb      	ldr	r3, [r7, #12]
 80098e8:	625a      	str	r2, [r3, #36]	; 0x24
 80098ea:	68fb      	ldr	r3, [r7, #12]
 80098ec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80098ee:	3b01      	subs	r3, #1
 80098f0:	b29a      	uxth	r2, r3
 80098f2:	68fb      	ldr	r3, [r7, #12]
 80098f4:	851a      	strh	r2, [r3, #40]	; 0x28
 80098f6:	68fb      	ldr	r3, [r7, #12]
 80098f8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80098fa:	b29b      	uxth	r3, r3
 80098fc:	3b01      	subs	r3, #1
 80098fe:	b29a      	uxth	r2, r3
 8009900:	68fb      	ldr	r3, [r7, #12]
 8009902:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009904:	e042      	b.n	800998c <HAL_I2C_Master_Receive+0x418>
 8009906:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009908:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800990a:	68f8      	ldr	r0, [r7, #12]
 800990c:	f000 ff9e 	bl	800a84c <I2C_WaitOnRXNEFlagUntilTimeout>
 8009910:	4603      	mov	r3, r0
 8009912:	2b00      	cmp	r3, #0
 8009914:	d001      	beq.n	800991a <HAL_I2C_Master_Receive+0x3a6>
 8009916:	2301      	movs	r3, #1
 8009918:	e04c      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 800991a:	68fb      	ldr	r3, [r7, #12]
 800991c:	681b      	ldr	r3, [r3, #0]
 800991e:	691a      	ldr	r2, [r3, #16]
 8009920:	68fb      	ldr	r3, [r7, #12]
 8009922:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009924:	b2d2      	uxtb	r2, r2
 8009926:	701a      	strb	r2, [r3, #0]
 8009928:	68fb      	ldr	r3, [r7, #12]
 800992a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800992c:	1c5a      	adds	r2, r3, #1
 800992e:	68fb      	ldr	r3, [r7, #12]
 8009930:	625a      	str	r2, [r3, #36]	; 0x24
 8009932:	68fb      	ldr	r3, [r7, #12]
 8009934:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009936:	3b01      	subs	r3, #1
 8009938:	b29a      	uxth	r2, r3
 800993a:	68fb      	ldr	r3, [r7, #12]
 800993c:	851a      	strh	r2, [r3, #40]	; 0x28
 800993e:	68fb      	ldr	r3, [r7, #12]
 8009940:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009942:	b29b      	uxth	r3, r3
 8009944:	3b01      	subs	r3, #1
 8009946:	b29a      	uxth	r2, r3
 8009948:	68fb      	ldr	r3, [r7, #12]
 800994a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800994c:	68fb      	ldr	r3, [r7, #12]
 800994e:	681b      	ldr	r3, [r3, #0]
 8009950:	695b      	ldr	r3, [r3, #20]
 8009952:	f003 0304 	and.w	r3, r3, #4
 8009956:	2b04      	cmp	r3, #4
 8009958:	d118      	bne.n	800998c <HAL_I2C_Master_Receive+0x418>
 800995a:	68fb      	ldr	r3, [r7, #12]
 800995c:	681b      	ldr	r3, [r3, #0]
 800995e:	691a      	ldr	r2, [r3, #16]
 8009960:	68fb      	ldr	r3, [r7, #12]
 8009962:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009964:	b2d2      	uxtb	r2, r2
 8009966:	701a      	strb	r2, [r3, #0]
 8009968:	68fb      	ldr	r3, [r7, #12]
 800996a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800996c:	1c5a      	adds	r2, r3, #1
 800996e:	68fb      	ldr	r3, [r7, #12]
 8009970:	625a      	str	r2, [r3, #36]	; 0x24
 8009972:	68fb      	ldr	r3, [r7, #12]
 8009974:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009976:	3b01      	subs	r3, #1
 8009978:	b29a      	uxth	r2, r3
 800997a:	68fb      	ldr	r3, [r7, #12]
 800997c:	851a      	strh	r2, [r3, #40]	; 0x28
 800997e:	68fb      	ldr	r3, [r7, #12]
 8009980:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009982:	b29b      	uxth	r3, r3
 8009984:	3b01      	subs	r3, #1
 8009986:	b29a      	uxth	r2, r3
 8009988:	68fb      	ldr	r3, [r7, #12]
 800998a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800998c:	68fb      	ldr	r3, [r7, #12]
 800998e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009990:	2b00      	cmp	r3, #0
 8009992:	f47f aec2 	bne.w	800971a <HAL_I2C_Master_Receive+0x1a6>
 8009996:	68fb      	ldr	r3, [r7, #12]
 8009998:	2220      	movs	r2, #32
 800999a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800999e:	68fb      	ldr	r3, [r7, #12]
 80099a0:	2200      	movs	r2, #0
 80099a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80099a6:	68fb      	ldr	r3, [r7, #12]
 80099a8:	2200      	movs	r2, #0
 80099aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80099ae:	2300      	movs	r3, #0
 80099b0:	e000      	b.n	80099b4 <HAL_I2C_Master_Receive+0x440>
 80099b2:	2302      	movs	r3, #2
 80099b4:	4618      	mov	r0, r3
 80099b6:	3728      	adds	r7, #40	; 0x28
 80099b8:	46bd      	mov	sp, r7
 80099ba:	bd80      	pop	{r7, pc}
 80099bc:	00010004 	.word	0x00010004

080099c0 <HAL_I2C_Mem_Write>:
 80099c0:	b580      	push	{r7, lr}
 80099c2:	b088      	sub	sp, #32
 80099c4:	af02      	add	r7, sp, #8
 80099c6:	60f8      	str	r0, [r7, #12]
 80099c8:	4608      	mov	r0, r1
 80099ca:	4611      	mov	r1, r2
 80099cc:	461a      	mov	r2, r3
 80099ce:	4603      	mov	r3, r0
 80099d0:	817b      	strh	r3, [r7, #10]
 80099d2:	460b      	mov	r3, r1
 80099d4:	813b      	strh	r3, [r7, #8]
 80099d6:	4613      	mov	r3, r2
 80099d8:	80fb      	strh	r3, [r7, #6]
 80099da:	f7fd fca1 	bl	8007320 <HAL_GetTick>
 80099de:	6178      	str	r0, [r7, #20]
 80099e0:	68fb      	ldr	r3, [r7, #12]
 80099e2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80099e6:	b2db      	uxtb	r3, r3
 80099e8:	2b20      	cmp	r3, #32
 80099ea:	f040 80d9 	bne.w	8009ba0 <HAL_I2C_Mem_Write+0x1e0>
 80099ee:	697b      	ldr	r3, [r7, #20]
 80099f0:	9300      	str	r3, [sp, #0]
 80099f2:	2319      	movs	r3, #25
 80099f4:	2201      	movs	r2, #1
 80099f6:	496d      	ldr	r1, [pc, #436]	; (8009bac <HAL_I2C_Mem_Write+0x1ec>)
 80099f8:	68f8      	ldr	r0, [r7, #12]
 80099fa:	f000 fdcf 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 80099fe:	4603      	mov	r3, r0
 8009a00:	2b00      	cmp	r3, #0
 8009a02:	d001      	beq.n	8009a08 <HAL_I2C_Mem_Write+0x48>
 8009a04:	2302      	movs	r3, #2
 8009a06:	e0cc      	b.n	8009ba2 <HAL_I2C_Mem_Write+0x1e2>
 8009a08:	68fb      	ldr	r3, [r7, #12]
 8009a0a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009a0e:	2b01      	cmp	r3, #1
 8009a10:	d101      	bne.n	8009a16 <HAL_I2C_Mem_Write+0x56>
 8009a12:	2302      	movs	r3, #2
 8009a14:	e0c5      	b.n	8009ba2 <HAL_I2C_Mem_Write+0x1e2>
 8009a16:	68fb      	ldr	r3, [r7, #12]
 8009a18:	2201      	movs	r2, #1
 8009a1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009a1e:	68fb      	ldr	r3, [r7, #12]
 8009a20:	681b      	ldr	r3, [r3, #0]
 8009a22:	681b      	ldr	r3, [r3, #0]
 8009a24:	f003 0301 	and.w	r3, r3, #1
 8009a28:	2b01      	cmp	r3, #1
 8009a2a:	d007      	beq.n	8009a3c <HAL_I2C_Mem_Write+0x7c>
 8009a2c:	68fb      	ldr	r3, [r7, #12]
 8009a2e:	681b      	ldr	r3, [r3, #0]
 8009a30:	681a      	ldr	r2, [r3, #0]
 8009a32:	68fb      	ldr	r3, [r7, #12]
 8009a34:	681b      	ldr	r3, [r3, #0]
 8009a36:	f042 0201 	orr.w	r2, r2, #1
 8009a3a:	601a      	str	r2, [r3, #0]
 8009a3c:	68fb      	ldr	r3, [r7, #12]
 8009a3e:	681b      	ldr	r3, [r3, #0]
 8009a40:	681a      	ldr	r2, [r3, #0]
 8009a42:	68fb      	ldr	r3, [r7, #12]
 8009a44:	681b      	ldr	r3, [r3, #0]
 8009a46:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009a4a:	601a      	str	r2, [r3, #0]
 8009a4c:	68fb      	ldr	r3, [r7, #12]
 8009a4e:	2221      	movs	r2, #33	; 0x21
 8009a50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009a54:	68fb      	ldr	r3, [r7, #12]
 8009a56:	2240      	movs	r2, #64	; 0x40
 8009a58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009a5c:	68fb      	ldr	r3, [r7, #12]
 8009a5e:	2200      	movs	r2, #0
 8009a60:	641a      	str	r2, [r3, #64]	; 0x40
 8009a62:	68fb      	ldr	r3, [r7, #12]
 8009a64:	6a3a      	ldr	r2, [r7, #32]
 8009a66:	625a      	str	r2, [r3, #36]	; 0x24
 8009a68:	68fb      	ldr	r3, [r7, #12]
 8009a6a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8009a6c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009a6e:	68fb      	ldr	r3, [r7, #12]
 8009a70:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009a72:	b29a      	uxth	r2, r3
 8009a74:	68fb      	ldr	r3, [r7, #12]
 8009a76:	851a      	strh	r2, [r3, #40]	; 0x28
 8009a78:	68fb      	ldr	r3, [r7, #12]
 8009a7a:	4a4d      	ldr	r2, [pc, #308]	; (8009bb0 <HAL_I2C_Mem_Write+0x1f0>)
 8009a7c:	62da      	str	r2, [r3, #44]	; 0x2c
 8009a7e:	88f8      	ldrh	r0, [r7, #6]
 8009a80:	893a      	ldrh	r2, [r7, #8]
 8009a82:	8979      	ldrh	r1, [r7, #10]
 8009a84:	697b      	ldr	r3, [r7, #20]
 8009a86:	9301      	str	r3, [sp, #4]
 8009a88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009a8a:	9300      	str	r3, [sp, #0]
 8009a8c:	4603      	mov	r3, r0
 8009a8e:	68f8      	ldr	r0, [r7, #12]
 8009a90:	f000 fc06 	bl	800a2a0 <I2C_RequestMemoryWrite>
 8009a94:	4603      	mov	r3, r0
 8009a96:	2b00      	cmp	r3, #0
 8009a98:	d052      	beq.n	8009b40 <HAL_I2C_Mem_Write+0x180>
 8009a9a:	2301      	movs	r3, #1
 8009a9c:	e081      	b.n	8009ba2 <HAL_I2C_Mem_Write+0x1e2>
 8009a9e:	697a      	ldr	r2, [r7, #20]
 8009aa0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009aa2:	68f8      	ldr	r0, [r7, #12]
 8009aa4:	f000 fe50 	bl	800a748 <I2C_WaitOnTXEFlagUntilTimeout>
 8009aa8:	4603      	mov	r3, r0
 8009aaa:	2b00      	cmp	r3, #0
 8009aac:	d00d      	beq.n	8009aca <HAL_I2C_Mem_Write+0x10a>
 8009aae:	68fb      	ldr	r3, [r7, #12]
 8009ab0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009ab2:	2b04      	cmp	r3, #4
 8009ab4:	d107      	bne.n	8009ac6 <HAL_I2C_Mem_Write+0x106>
 8009ab6:	68fb      	ldr	r3, [r7, #12]
 8009ab8:	681b      	ldr	r3, [r3, #0]
 8009aba:	681a      	ldr	r2, [r3, #0]
 8009abc:	68fb      	ldr	r3, [r7, #12]
 8009abe:	681b      	ldr	r3, [r3, #0]
 8009ac0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009ac4:	601a      	str	r2, [r3, #0]
 8009ac6:	2301      	movs	r3, #1
 8009ac8:	e06b      	b.n	8009ba2 <HAL_I2C_Mem_Write+0x1e2>
 8009aca:	68fb      	ldr	r3, [r7, #12]
 8009acc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ace:	781a      	ldrb	r2, [r3, #0]
 8009ad0:	68fb      	ldr	r3, [r7, #12]
 8009ad2:	681b      	ldr	r3, [r3, #0]
 8009ad4:	611a      	str	r2, [r3, #16]
 8009ad6:	68fb      	ldr	r3, [r7, #12]
 8009ad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ada:	1c5a      	adds	r2, r3, #1
 8009adc:	68fb      	ldr	r3, [r7, #12]
 8009ade:	625a      	str	r2, [r3, #36]	; 0x24
 8009ae0:	68fb      	ldr	r3, [r7, #12]
 8009ae2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009ae4:	3b01      	subs	r3, #1
 8009ae6:	b29a      	uxth	r2, r3
 8009ae8:	68fb      	ldr	r3, [r7, #12]
 8009aea:	851a      	strh	r2, [r3, #40]	; 0x28
 8009aec:	68fb      	ldr	r3, [r7, #12]
 8009aee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009af0:	b29b      	uxth	r3, r3
 8009af2:	3b01      	subs	r3, #1
 8009af4:	b29a      	uxth	r2, r3
 8009af6:	68fb      	ldr	r3, [r7, #12]
 8009af8:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009afa:	68fb      	ldr	r3, [r7, #12]
 8009afc:	681b      	ldr	r3, [r3, #0]
 8009afe:	695b      	ldr	r3, [r3, #20]
 8009b00:	f003 0304 	and.w	r3, r3, #4
 8009b04:	2b04      	cmp	r3, #4
 8009b06:	d11b      	bne.n	8009b40 <HAL_I2C_Mem_Write+0x180>
 8009b08:	68fb      	ldr	r3, [r7, #12]
 8009b0a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009b0c:	2b00      	cmp	r3, #0
 8009b0e:	d017      	beq.n	8009b40 <HAL_I2C_Mem_Write+0x180>
 8009b10:	68fb      	ldr	r3, [r7, #12]
 8009b12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b14:	781a      	ldrb	r2, [r3, #0]
 8009b16:	68fb      	ldr	r3, [r7, #12]
 8009b18:	681b      	ldr	r3, [r3, #0]
 8009b1a:	611a      	str	r2, [r3, #16]
 8009b1c:	68fb      	ldr	r3, [r7, #12]
 8009b1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b20:	1c5a      	adds	r2, r3, #1
 8009b22:	68fb      	ldr	r3, [r7, #12]
 8009b24:	625a      	str	r2, [r3, #36]	; 0x24
 8009b26:	68fb      	ldr	r3, [r7, #12]
 8009b28:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009b2a:	3b01      	subs	r3, #1
 8009b2c:	b29a      	uxth	r2, r3
 8009b2e:	68fb      	ldr	r3, [r7, #12]
 8009b30:	851a      	strh	r2, [r3, #40]	; 0x28
 8009b32:	68fb      	ldr	r3, [r7, #12]
 8009b34:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009b36:	b29b      	uxth	r3, r3
 8009b38:	3b01      	subs	r3, #1
 8009b3a:	b29a      	uxth	r2, r3
 8009b3c:	68fb      	ldr	r3, [r7, #12]
 8009b3e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009b40:	68fb      	ldr	r3, [r7, #12]
 8009b42:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009b44:	2b00      	cmp	r3, #0
 8009b46:	d1aa      	bne.n	8009a9e <HAL_I2C_Mem_Write+0xde>
 8009b48:	697a      	ldr	r2, [r7, #20]
 8009b4a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009b4c:	68f8      	ldr	r0, [r7, #12]
 8009b4e:	f000 fe3c 	bl	800a7ca <I2C_WaitOnBTFFlagUntilTimeout>
 8009b52:	4603      	mov	r3, r0
 8009b54:	2b00      	cmp	r3, #0
 8009b56:	d00d      	beq.n	8009b74 <HAL_I2C_Mem_Write+0x1b4>
 8009b58:	68fb      	ldr	r3, [r7, #12]
 8009b5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b5c:	2b04      	cmp	r3, #4
 8009b5e:	d107      	bne.n	8009b70 <HAL_I2C_Mem_Write+0x1b0>
 8009b60:	68fb      	ldr	r3, [r7, #12]
 8009b62:	681b      	ldr	r3, [r3, #0]
 8009b64:	681a      	ldr	r2, [r3, #0]
 8009b66:	68fb      	ldr	r3, [r7, #12]
 8009b68:	681b      	ldr	r3, [r3, #0]
 8009b6a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009b6e:	601a      	str	r2, [r3, #0]
 8009b70:	2301      	movs	r3, #1
 8009b72:	e016      	b.n	8009ba2 <HAL_I2C_Mem_Write+0x1e2>
 8009b74:	68fb      	ldr	r3, [r7, #12]
 8009b76:	681b      	ldr	r3, [r3, #0]
 8009b78:	681a      	ldr	r2, [r3, #0]
 8009b7a:	68fb      	ldr	r3, [r7, #12]
 8009b7c:	681b      	ldr	r3, [r3, #0]
 8009b7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009b82:	601a      	str	r2, [r3, #0]
 8009b84:	68fb      	ldr	r3, [r7, #12]
 8009b86:	2220      	movs	r2, #32
 8009b88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009b8c:	68fb      	ldr	r3, [r7, #12]
 8009b8e:	2200      	movs	r2, #0
 8009b90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009b94:	68fb      	ldr	r3, [r7, #12]
 8009b96:	2200      	movs	r2, #0
 8009b98:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009b9c:	2300      	movs	r3, #0
 8009b9e:	e000      	b.n	8009ba2 <HAL_I2C_Mem_Write+0x1e2>
 8009ba0:	2302      	movs	r3, #2
 8009ba2:	4618      	mov	r0, r3
 8009ba4:	3718      	adds	r7, #24
 8009ba6:	46bd      	mov	sp, r7
 8009ba8:	bd80      	pop	{r7, pc}
 8009baa:	bf00      	nop
 8009bac:	00100002 	.word	0x00100002
 8009bb0:	ffff0000 	.word	0xffff0000

08009bb4 <HAL_I2C_Mem_Read>:
 8009bb4:	b580      	push	{r7, lr}
 8009bb6:	b08c      	sub	sp, #48	; 0x30
 8009bb8:	af02      	add	r7, sp, #8
 8009bba:	60f8      	str	r0, [r7, #12]
 8009bbc:	4608      	mov	r0, r1
 8009bbe:	4611      	mov	r1, r2
 8009bc0:	461a      	mov	r2, r3
 8009bc2:	4603      	mov	r3, r0
 8009bc4:	817b      	strh	r3, [r7, #10]
 8009bc6:	460b      	mov	r3, r1
 8009bc8:	813b      	strh	r3, [r7, #8]
 8009bca:	4613      	mov	r3, r2
 8009bcc:	80fb      	strh	r3, [r7, #6]
 8009bce:	f7fd fba7 	bl	8007320 <HAL_GetTick>
 8009bd2:	6278      	str	r0, [r7, #36]	; 0x24
 8009bd4:	68fb      	ldr	r3, [r7, #12]
 8009bd6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009bda:	b2db      	uxtb	r3, r3
 8009bdc:	2b20      	cmp	r3, #32
 8009bde:	f040 8208 	bne.w	8009ff2 <HAL_I2C_Mem_Read+0x43e>
 8009be2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009be4:	9300      	str	r3, [sp, #0]
 8009be6:	2319      	movs	r3, #25
 8009be8:	2201      	movs	r2, #1
 8009bea:	497b      	ldr	r1, [pc, #492]	; (8009dd8 <HAL_I2C_Mem_Read+0x224>)
 8009bec:	68f8      	ldr	r0, [r7, #12]
 8009bee:	f000 fcd5 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 8009bf2:	4603      	mov	r3, r0
 8009bf4:	2b00      	cmp	r3, #0
 8009bf6:	d001      	beq.n	8009bfc <HAL_I2C_Mem_Read+0x48>
 8009bf8:	2302      	movs	r3, #2
 8009bfa:	e1fb      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009bfc:	68fb      	ldr	r3, [r7, #12]
 8009bfe:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009c02:	2b01      	cmp	r3, #1
 8009c04:	d101      	bne.n	8009c0a <HAL_I2C_Mem_Read+0x56>
 8009c06:	2302      	movs	r3, #2
 8009c08:	e1f4      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009c0a:	68fb      	ldr	r3, [r7, #12]
 8009c0c:	2201      	movs	r2, #1
 8009c0e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009c12:	68fb      	ldr	r3, [r7, #12]
 8009c14:	681b      	ldr	r3, [r3, #0]
 8009c16:	681b      	ldr	r3, [r3, #0]
 8009c18:	f003 0301 	and.w	r3, r3, #1
 8009c1c:	2b01      	cmp	r3, #1
 8009c1e:	d007      	beq.n	8009c30 <HAL_I2C_Mem_Read+0x7c>
 8009c20:	68fb      	ldr	r3, [r7, #12]
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	681a      	ldr	r2, [r3, #0]
 8009c26:	68fb      	ldr	r3, [r7, #12]
 8009c28:	681b      	ldr	r3, [r3, #0]
 8009c2a:	f042 0201 	orr.w	r2, r2, #1
 8009c2e:	601a      	str	r2, [r3, #0]
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	681a      	ldr	r2, [r3, #0]
 8009c36:	68fb      	ldr	r3, [r7, #12]
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009c3e:	601a      	str	r2, [r3, #0]
 8009c40:	68fb      	ldr	r3, [r7, #12]
 8009c42:	2222      	movs	r2, #34	; 0x22
 8009c44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009c48:	68fb      	ldr	r3, [r7, #12]
 8009c4a:	2240      	movs	r2, #64	; 0x40
 8009c4c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009c50:	68fb      	ldr	r3, [r7, #12]
 8009c52:	2200      	movs	r2, #0
 8009c54:	641a      	str	r2, [r3, #64]	; 0x40
 8009c56:	68fb      	ldr	r3, [r7, #12]
 8009c58:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009c5a:	625a      	str	r2, [r3, #36]	; 0x24
 8009c5c:	68fb      	ldr	r3, [r7, #12]
 8009c5e:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8009c60:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009c62:	68fb      	ldr	r3, [r7, #12]
 8009c64:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009c66:	b29a      	uxth	r2, r3
 8009c68:	68fb      	ldr	r3, [r7, #12]
 8009c6a:	851a      	strh	r2, [r3, #40]	; 0x28
 8009c6c:	68fb      	ldr	r3, [r7, #12]
 8009c6e:	4a5b      	ldr	r2, [pc, #364]	; (8009ddc <HAL_I2C_Mem_Read+0x228>)
 8009c70:	62da      	str	r2, [r3, #44]	; 0x2c
 8009c72:	88f8      	ldrh	r0, [r7, #6]
 8009c74:	893a      	ldrh	r2, [r7, #8]
 8009c76:	8979      	ldrh	r1, [r7, #10]
 8009c78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c7a:	9301      	str	r3, [sp, #4]
 8009c7c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009c7e:	9300      	str	r3, [sp, #0]
 8009c80:	4603      	mov	r3, r0
 8009c82:	68f8      	ldr	r0, [r7, #12]
 8009c84:	f000 fba2 	bl	800a3cc <I2C_RequestMemoryRead>
 8009c88:	4603      	mov	r3, r0
 8009c8a:	2b00      	cmp	r3, #0
 8009c8c:	d001      	beq.n	8009c92 <HAL_I2C_Mem_Read+0xde>
 8009c8e:	2301      	movs	r3, #1
 8009c90:	e1b0      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009c92:	68fb      	ldr	r3, [r7, #12]
 8009c94:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009c96:	2b00      	cmp	r3, #0
 8009c98:	d113      	bne.n	8009cc2 <HAL_I2C_Mem_Read+0x10e>
 8009c9a:	2300      	movs	r3, #0
 8009c9c:	623b      	str	r3, [r7, #32]
 8009c9e:	68fb      	ldr	r3, [r7, #12]
 8009ca0:	681b      	ldr	r3, [r3, #0]
 8009ca2:	695b      	ldr	r3, [r3, #20]
 8009ca4:	623b      	str	r3, [r7, #32]
 8009ca6:	68fb      	ldr	r3, [r7, #12]
 8009ca8:	681b      	ldr	r3, [r3, #0]
 8009caa:	699b      	ldr	r3, [r3, #24]
 8009cac:	623b      	str	r3, [r7, #32]
 8009cae:	6a3b      	ldr	r3, [r7, #32]
 8009cb0:	68fb      	ldr	r3, [r7, #12]
 8009cb2:	681b      	ldr	r3, [r3, #0]
 8009cb4:	681a      	ldr	r2, [r3, #0]
 8009cb6:	68fb      	ldr	r3, [r7, #12]
 8009cb8:	681b      	ldr	r3, [r3, #0]
 8009cba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009cbe:	601a      	str	r2, [r3, #0]
 8009cc0:	e184      	b.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009cc2:	68fb      	ldr	r3, [r7, #12]
 8009cc4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009cc6:	2b01      	cmp	r3, #1
 8009cc8:	d11b      	bne.n	8009d02 <HAL_I2C_Mem_Read+0x14e>
 8009cca:	68fb      	ldr	r3, [r7, #12]
 8009ccc:	681b      	ldr	r3, [r3, #0]
 8009cce:	681a      	ldr	r2, [r3, #0]
 8009cd0:	68fb      	ldr	r3, [r7, #12]
 8009cd2:	681b      	ldr	r3, [r3, #0]
 8009cd4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009cd8:	601a      	str	r2, [r3, #0]
 8009cda:	2300      	movs	r3, #0
 8009cdc:	61fb      	str	r3, [r7, #28]
 8009cde:	68fb      	ldr	r3, [r7, #12]
 8009ce0:	681b      	ldr	r3, [r3, #0]
 8009ce2:	695b      	ldr	r3, [r3, #20]
 8009ce4:	61fb      	str	r3, [r7, #28]
 8009ce6:	68fb      	ldr	r3, [r7, #12]
 8009ce8:	681b      	ldr	r3, [r3, #0]
 8009cea:	699b      	ldr	r3, [r3, #24]
 8009cec:	61fb      	str	r3, [r7, #28]
 8009cee:	69fb      	ldr	r3, [r7, #28]
 8009cf0:	68fb      	ldr	r3, [r7, #12]
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	681a      	ldr	r2, [r3, #0]
 8009cf6:	68fb      	ldr	r3, [r7, #12]
 8009cf8:	681b      	ldr	r3, [r3, #0]
 8009cfa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009cfe:	601a      	str	r2, [r3, #0]
 8009d00:	e164      	b.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009d02:	68fb      	ldr	r3, [r7, #12]
 8009d04:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009d06:	2b02      	cmp	r3, #2
 8009d08:	d11b      	bne.n	8009d42 <HAL_I2C_Mem_Read+0x18e>
 8009d0a:	68fb      	ldr	r3, [r7, #12]
 8009d0c:	681b      	ldr	r3, [r3, #0]
 8009d0e:	681a      	ldr	r2, [r3, #0]
 8009d10:	68fb      	ldr	r3, [r7, #12]
 8009d12:	681b      	ldr	r3, [r3, #0]
 8009d14:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d18:	601a      	str	r2, [r3, #0]
 8009d1a:	68fb      	ldr	r3, [r7, #12]
 8009d1c:	681b      	ldr	r3, [r3, #0]
 8009d1e:	681a      	ldr	r2, [r3, #0]
 8009d20:	68fb      	ldr	r3, [r7, #12]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009d28:	601a      	str	r2, [r3, #0]
 8009d2a:	2300      	movs	r3, #0
 8009d2c:	61bb      	str	r3, [r7, #24]
 8009d2e:	68fb      	ldr	r3, [r7, #12]
 8009d30:	681b      	ldr	r3, [r3, #0]
 8009d32:	695b      	ldr	r3, [r3, #20]
 8009d34:	61bb      	str	r3, [r7, #24]
 8009d36:	68fb      	ldr	r3, [r7, #12]
 8009d38:	681b      	ldr	r3, [r3, #0]
 8009d3a:	699b      	ldr	r3, [r3, #24]
 8009d3c:	61bb      	str	r3, [r7, #24]
 8009d3e:	69bb      	ldr	r3, [r7, #24]
 8009d40:	e144      	b.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009d42:	2300      	movs	r3, #0
 8009d44:	617b      	str	r3, [r7, #20]
 8009d46:	68fb      	ldr	r3, [r7, #12]
 8009d48:	681b      	ldr	r3, [r3, #0]
 8009d4a:	695b      	ldr	r3, [r3, #20]
 8009d4c:	617b      	str	r3, [r7, #20]
 8009d4e:	68fb      	ldr	r3, [r7, #12]
 8009d50:	681b      	ldr	r3, [r3, #0]
 8009d52:	699b      	ldr	r3, [r3, #24]
 8009d54:	617b      	str	r3, [r7, #20]
 8009d56:	697b      	ldr	r3, [r7, #20]
 8009d58:	e138      	b.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009d5a:	68fb      	ldr	r3, [r7, #12]
 8009d5c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009d5e:	2b03      	cmp	r3, #3
 8009d60:	f200 80f1 	bhi.w	8009f46 <HAL_I2C_Mem_Read+0x392>
 8009d64:	68fb      	ldr	r3, [r7, #12]
 8009d66:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009d68:	2b01      	cmp	r3, #1
 8009d6a:	d123      	bne.n	8009db4 <HAL_I2C_Mem_Read+0x200>
 8009d6c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009d6e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8009d70:	68f8      	ldr	r0, [r7, #12]
 8009d72:	f000 fd6b 	bl	800a84c <I2C_WaitOnRXNEFlagUntilTimeout>
 8009d76:	4603      	mov	r3, r0
 8009d78:	2b00      	cmp	r3, #0
 8009d7a:	d001      	beq.n	8009d80 <HAL_I2C_Mem_Read+0x1cc>
 8009d7c:	2301      	movs	r3, #1
 8009d7e:	e139      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009d80:	68fb      	ldr	r3, [r7, #12]
 8009d82:	681b      	ldr	r3, [r3, #0]
 8009d84:	691a      	ldr	r2, [r3, #16]
 8009d86:	68fb      	ldr	r3, [r7, #12]
 8009d88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d8a:	b2d2      	uxtb	r2, r2
 8009d8c:	701a      	strb	r2, [r3, #0]
 8009d8e:	68fb      	ldr	r3, [r7, #12]
 8009d90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d92:	1c5a      	adds	r2, r3, #1
 8009d94:	68fb      	ldr	r3, [r7, #12]
 8009d96:	625a      	str	r2, [r3, #36]	; 0x24
 8009d98:	68fb      	ldr	r3, [r7, #12]
 8009d9a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009d9c:	3b01      	subs	r3, #1
 8009d9e:	b29a      	uxth	r2, r3
 8009da0:	68fb      	ldr	r3, [r7, #12]
 8009da2:	851a      	strh	r2, [r3, #40]	; 0x28
 8009da4:	68fb      	ldr	r3, [r7, #12]
 8009da6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009da8:	b29b      	uxth	r3, r3
 8009daa:	3b01      	subs	r3, #1
 8009dac:	b29a      	uxth	r2, r3
 8009dae:	68fb      	ldr	r3, [r7, #12]
 8009db0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009db2:	e10b      	b.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009db4:	68fb      	ldr	r3, [r7, #12]
 8009db6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009db8:	2b02      	cmp	r3, #2
 8009dba:	d14e      	bne.n	8009e5a <HAL_I2C_Mem_Read+0x2a6>
 8009dbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009dbe:	9300      	str	r3, [sp, #0]
 8009dc0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009dc2:	2200      	movs	r2, #0
 8009dc4:	4906      	ldr	r1, [pc, #24]	; (8009de0 <HAL_I2C_Mem_Read+0x22c>)
 8009dc6:	68f8      	ldr	r0, [r7, #12]
 8009dc8:	f000 fbe8 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 8009dcc:	4603      	mov	r3, r0
 8009dce:	2b00      	cmp	r3, #0
 8009dd0:	d008      	beq.n	8009de4 <HAL_I2C_Mem_Read+0x230>
 8009dd2:	2301      	movs	r3, #1
 8009dd4:	e10e      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009dd6:	bf00      	nop
 8009dd8:	00100002 	.word	0x00100002
 8009ddc:	ffff0000 	.word	0xffff0000
 8009de0:	00010004 	.word	0x00010004
 8009de4:	68fb      	ldr	r3, [r7, #12]
 8009de6:	681b      	ldr	r3, [r3, #0]
 8009de8:	681a      	ldr	r2, [r3, #0]
 8009dea:	68fb      	ldr	r3, [r7, #12]
 8009dec:	681b      	ldr	r3, [r3, #0]
 8009dee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009df2:	601a      	str	r2, [r3, #0]
 8009df4:	68fb      	ldr	r3, [r7, #12]
 8009df6:	681b      	ldr	r3, [r3, #0]
 8009df8:	691a      	ldr	r2, [r3, #16]
 8009dfa:	68fb      	ldr	r3, [r7, #12]
 8009dfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009dfe:	b2d2      	uxtb	r2, r2
 8009e00:	701a      	strb	r2, [r3, #0]
 8009e02:	68fb      	ldr	r3, [r7, #12]
 8009e04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e06:	1c5a      	adds	r2, r3, #1
 8009e08:	68fb      	ldr	r3, [r7, #12]
 8009e0a:	625a      	str	r2, [r3, #36]	; 0x24
 8009e0c:	68fb      	ldr	r3, [r7, #12]
 8009e0e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009e10:	3b01      	subs	r3, #1
 8009e12:	b29a      	uxth	r2, r3
 8009e14:	68fb      	ldr	r3, [r7, #12]
 8009e16:	851a      	strh	r2, [r3, #40]	; 0x28
 8009e18:	68fb      	ldr	r3, [r7, #12]
 8009e1a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009e1c:	b29b      	uxth	r3, r3
 8009e1e:	3b01      	subs	r3, #1
 8009e20:	b29a      	uxth	r2, r3
 8009e22:	68fb      	ldr	r3, [r7, #12]
 8009e24:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009e26:	68fb      	ldr	r3, [r7, #12]
 8009e28:	681b      	ldr	r3, [r3, #0]
 8009e2a:	691a      	ldr	r2, [r3, #16]
 8009e2c:	68fb      	ldr	r3, [r7, #12]
 8009e2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e30:	b2d2      	uxtb	r2, r2
 8009e32:	701a      	strb	r2, [r3, #0]
 8009e34:	68fb      	ldr	r3, [r7, #12]
 8009e36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e38:	1c5a      	adds	r2, r3, #1
 8009e3a:	68fb      	ldr	r3, [r7, #12]
 8009e3c:	625a      	str	r2, [r3, #36]	; 0x24
 8009e3e:	68fb      	ldr	r3, [r7, #12]
 8009e40:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009e42:	3b01      	subs	r3, #1
 8009e44:	b29a      	uxth	r2, r3
 8009e46:	68fb      	ldr	r3, [r7, #12]
 8009e48:	851a      	strh	r2, [r3, #40]	; 0x28
 8009e4a:	68fb      	ldr	r3, [r7, #12]
 8009e4c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009e4e:	b29b      	uxth	r3, r3
 8009e50:	3b01      	subs	r3, #1
 8009e52:	b29a      	uxth	r2, r3
 8009e54:	68fb      	ldr	r3, [r7, #12]
 8009e56:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009e58:	e0b8      	b.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009e5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009e5c:	9300      	str	r3, [sp, #0]
 8009e5e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009e60:	2200      	movs	r2, #0
 8009e62:	4966      	ldr	r1, [pc, #408]	; (8009ffc <HAL_I2C_Mem_Read+0x448>)
 8009e64:	68f8      	ldr	r0, [r7, #12]
 8009e66:	f000 fb99 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 8009e6a:	4603      	mov	r3, r0
 8009e6c:	2b00      	cmp	r3, #0
 8009e6e:	d001      	beq.n	8009e74 <HAL_I2C_Mem_Read+0x2c0>
 8009e70:	2301      	movs	r3, #1
 8009e72:	e0bf      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009e74:	68fb      	ldr	r3, [r7, #12]
 8009e76:	681b      	ldr	r3, [r3, #0]
 8009e78:	681a      	ldr	r2, [r3, #0]
 8009e7a:	68fb      	ldr	r3, [r7, #12]
 8009e7c:	681b      	ldr	r3, [r3, #0]
 8009e7e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009e82:	601a      	str	r2, [r3, #0]
 8009e84:	68fb      	ldr	r3, [r7, #12]
 8009e86:	681b      	ldr	r3, [r3, #0]
 8009e88:	691a      	ldr	r2, [r3, #16]
 8009e8a:	68fb      	ldr	r3, [r7, #12]
 8009e8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e8e:	b2d2      	uxtb	r2, r2
 8009e90:	701a      	strb	r2, [r3, #0]
 8009e92:	68fb      	ldr	r3, [r7, #12]
 8009e94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e96:	1c5a      	adds	r2, r3, #1
 8009e98:	68fb      	ldr	r3, [r7, #12]
 8009e9a:	625a      	str	r2, [r3, #36]	; 0x24
 8009e9c:	68fb      	ldr	r3, [r7, #12]
 8009e9e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009ea0:	3b01      	subs	r3, #1
 8009ea2:	b29a      	uxth	r2, r3
 8009ea4:	68fb      	ldr	r3, [r7, #12]
 8009ea6:	851a      	strh	r2, [r3, #40]	; 0x28
 8009ea8:	68fb      	ldr	r3, [r7, #12]
 8009eaa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009eac:	b29b      	uxth	r3, r3
 8009eae:	3b01      	subs	r3, #1
 8009eb0:	b29a      	uxth	r2, r3
 8009eb2:	68fb      	ldr	r3, [r7, #12]
 8009eb4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009eb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009eb8:	9300      	str	r3, [sp, #0]
 8009eba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009ebc:	2200      	movs	r2, #0
 8009ebe:	494f      	ldr	r1, [pc, #316]	; (8009ffc <HAL_I2C_Mem_Read+0x448>)
 8009ec0:	68f8      	ldr	r0, [r7, #12]
 8009ec2:	f000 fb6b 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 8009ec6:	4603      	mov	r3, r0
 8009ec8:	2b00      	cmp	r3, #0
 8009eca:	d001      	beq.n	8009ed0 <HAL_I2C_Mem_Read+0x31c>
 8009ecc:	2301      	movs	r3, #1
 8009ece:	e091      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009ed0:	68fb      	ldr	r3, [r7, #12]
 8009ed2:	681b      	ldr	r3, [r3, #0]
 8009ed4:	681a      	ldr	r2, [r3, #0]
 8009ed6:	68fb      	ldr	r3, [r7, #12]
 8009ed8:	681b      	ldr	r3, [r3, #0]
 8009eda:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009ede:	601a      	str	r2, [r3, #0]
 8009ee0:	68fb      	ldr	r3, [r7, #12]
 8009ee2:	681b      	ldr	r3, [r3, #0]
 8009ee4:	691a      	ldr	r2, [r3, #16]
 8009ee6:	68fb      	ldr	r3, [r7, #12]
 8009ee8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009eea:	b2d2      	uxtb	r2, r2
 8009eec:	701a      	strb	r2, [r3, #0]
 8009eee:	68fb      	ldr	r3, [r7, #12]
 8009ef0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ef2:	1c5a      	adds	r2, r3, #1
 8009ef4:	68fb      	ldr	r3, [r7, #12]
 8009ef6:	625a      	str	r2, [r3, #36]	; 0x24
 8009ef8:	68fb      	ldr	r3, [r7, #12]
 8009efa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009efc:	3b01      	subs	r3, #1
 8009efe:	b29a      	uxth	r2, r3
 8009f00:	68fb      	ldr	r3, [r7, #12]
 8009f02:	851a      	strh	r2, [r3, #40]	; 0x28
 8009f04:	68fb      	ldr	r3, [r7, #12]
 8009f06:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009f08:	b29b      	uxth	r3, r3
 8009f0a:	3b01      	subs	r3, #1
 8009f0c:	b29a      	uxth	r2, r3
 8009f0e:	68fb      	ldr	r3, [r7, #12]
 8009f10:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009f12:	68fb      	ldr	r3, [r7, #12]
 8009f14:	681b      	ldr	r3, [r3, #0]
 8009f16:	691a      	ldr	r2, [r3, #16]
 8009f18:	68fb      	ldr	r3, [r7, #12]
 8009f1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f1c:	b2d2      	uxtb	r2, r2
 8009f1e:	701a      	strb	r2, [r3, #0]
 8009f20:	68fb      	ldr	r3, [r7, #12]
 8009f22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f24:	1c5a      	adds	r2, r3, #1
 8009f26:	68fb      	ldr	r3, [r7, #12]
 8009f28:	625a      	str	r2, [r3, #36]	; 0x24
 8009f2a:	68fb      	ldr	r3, [r7, #12]
 8009f2c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009f2e:	3b01      	subs	r3, #1
 8009f30:	b29a      	uxth	r2, r3
 8009f32:	68fb      	ldr	r3, [r7, #12]
 8009f34:	851a      	strh	r2, [r3, #40]	; 0x28
 8009f36:	68fb      	ldr	r3, [r7, #12]
 8009f38:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009f3a:	b29b      	uxth	r3, r3
 8009f3c:	3b01      	subs	r3, #1
 8009f3e:	b29a      	uxth	r2, r3
 8009f40:	68fb      	ldr	r3, [r7, #12]
 8009f42:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009f44:	e042      	b.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009f46:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009f48:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8009f4a:	68f8      	ldr	r0, [r7, #12]
 8009f4c:	f000 fc7e 	bl	800a84c <I2C_WaitOnRXNEFlagUntilTimeout>
 8009f50:	4603      	mov	r3, r0
 8009f52:	2b00      	cmp	r3, #0
 8009f54:	d001      	beq.n	8009f5a <HAL_I2C_Mem_Read+0x3a6>
 8009f56:	2301      	movs	r3, #1
 8009f58:	e04c      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009f5a:	68fb      	ldr	r3, [r7, #12]
 8009f5c:	681b      	ldr	r3, [r3, #0]
 8009f5e:	691a      	ldr	r2, [r3, #16]
 8009f60:	68fb      	ldr	r3, [r7, #12]
 8009f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f64:	b2d2      	uxtb	r2, r2
 8009f66:	701a      	strb	r2, [r3, #0]
 8009f68:	68fb      	ldr	r3, [r7, #12]
 8009f6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f6c:	1c5a      	adds	r2, r3, #1
 8009f6e:	68fb      	ldr	r3, [r7, #12]
 8009f70:	625a      	str	r2, [r3, #36]	; 0x24
 8009f72:	68fb      	ldr	r3, [r7, #12]
 8009f74:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009f76:	3b01      	subs	r3, #1
 8009f78:	b29a      	uxth	r2, r3
 8009f7a:	68fb      	ldr	r3, [r7, #12]
 8009f7c:	851a      	strh	r2, [r3, #40]	; 0x28
 8009f7e:	68fb      	ldr	r3, [r7, #12]
 8009f80:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009f82:	b29b      	uxth	r3, r3
 8009f84:	3b01      	subs	r3, #1
 8009f86:	b29a      	uxth	r2, r3
 8009f88:	68fb      	ldr	r3, [r7, #12]
 8009f8a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009f8c:	68fb      	ldr	r3, [r7, #12]
 8009f8e:	681b      	ldr	r3, [r3, #0]
 8009f90:	695b      	ldr	r3, [r3, #20]
 8009f92:	f003 0304 	and.w	r3, r3, #4
 8009f96:	2b04      	cmp	r3, #4
 8009f98:	d118      	bne.n	8009fcc <HAL_I2C_Mem_Read+0x418>
 8009f9a:	68fb      	ldr	r3, [r7, #12]
 8009f9c:	681b      	ldr	r3, [r3, #0]
 8009f9e:	691a      	ldr	r2, [r3, #16]
 8009fa0:	68fb      	ldr	r3, [r7, #12]
 8009fa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009fa4:	b2d2      	uxtb	r2, r2
 8009fa6:	701a      	strb	r2, [r3, #0]
 8009fa8:	68fb      	ldr	r3, [r7, #12]
 8009faa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009fac:	1c5a      	adds	r2, r3, #1
 8009fae:	68fb      	ldr	r3, [r7, #12]
 8009fb0:	625a      	str	r2, [r3, #36]	; 0x24
 8009fb2:	68fb      	ldr	r3, [r7, #12]
 8009fb4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009fb6:	3b01      	subs	r3, #1
 8009fb8:	b29a      	uxth	r2, r3
 8009fba:	68fb      	ldr	r3, [r7, #12]
 8009fbc:	851a      	strh	r2, [r3, #40]	; 0x28
 8009fbe:	68fb      	ldr	r3, [r7, #12]
 8009fc0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009fc2:	b29b      	uxth	r3, r3
 8009fc4:	3b01      	subs	r3, #1
 8009fc6:	b29a      	uxth	r2, r3
 8009fc8:	68fb      	ldr	r3, [r7, #12]
 8009fca:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009fcc:	68fb      	ldr	r3, [r7, #12]
 8009fce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8009fd0:	2b00      	cmp	r3, #0
 8009fd2:	f47f aec2 	bne.w	8009d5a <HAL_I2C_Mem_Read+0x1a6>
 8009fd6:	68fb      	ldr	r3, [r7, #12]
 8009fd8:	2220      	movs	r2, #32
 8009fda:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009fde:	68fb      	ldr	r3, [r7, #12]
 8009fe0:	2200      	movs	r2, #0
 8009fe2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009fe6:	68fb      	ldr	r3, [r7, #12]
 8009fe8:	2200      	movs	r2, #0
 8009fea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009fee:	2300      	movs	r3, #0
 8009ff0:	e000      	b.n	8009ff4 <HAL_I2C_Mem_Read+0x440>
 8009ff2:	2302      	movs	r3, #2
 8009ff4:	4618      	mov	r0, r3
 8009ff6:	3728      	adds	r7, #40	; 0x28
 8009ff8:	46bd      	mov	sp, r7
 8009ffa:	bd80      	pop	{r7, pc}
 8009ffc:	00010004 	.word	0x00010004

0800a000 <I2C_MasterRequestWrite>:
 800a000:	b580      	push	{r7, lr}
 800a002:	b088      	sub	sp, #32
 800a004:	af02      	add	r7, sp, #8
 800a006:	60f8      	str	r0, [r7, #12]
 800a008:	607a      	str	r2, [r7, #4]
 800a00a:	603b      	str	r3, [r7, #0]
 800a00c:	460b      	mov	r3, r1
 800a00e:	817b      	strh	r3, [r7, #10]
 800a010:	68fb      	ldr	r3, [r7, #12]
 800a012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a014:	617b      	str	r3, [r7, #20]
 800a016:	697b      	ldr	r3, [r7, #20]
 800a018:	2b08      	cmp	r3, #8
 800a01a:	d006      	beq.n	800a02a <I2C_MasterRequestWrite+0x2a>
 800a01c:	697b      	ldr	r3, [r7, #20]
 800a01e:	2b01      	cmp	r3, #1
 800a020:	d003      	beq.n	800a02a <I2C_MasterRequestWrite+0x2a>
 800a022:	697b      	ldr	r3, [r7, #20]
 800a024:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800a028:	d108      	bne.n	800a03c <I2C_MasterRequestWrite+0x3c>
 800a02a:	68fb      	ldr	r3, [r7, #12]
 800a02c:	681b      	ldr	r3, [r3, #0]
 800a02e:	681a      	ldr	r2, [r3, #0]
 800a030:	68fb      	ldr	r3, [r7, #12]
 800a032:	681b      	ldr	r3, [r3, #0]
 800a034:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a038:	601a      	str	r2, [r3, #0]
 800a03a:	e00b      	b.n	800a054 <I2C_MasterRequestWrite+0x54>
 800a03c:	68fb      	ldr	r3, [r7, #12]
 800a03e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a040:	2b12      	cmp	r3, #18
 800a042:	d107      	bne.n	800a054 <I2C_MasterRequestWrite+0x54>
 800a044:	68fb      	ldr	r3, [r7, #12]
 800a046:	681b      	ldr	r3, [r3, #0]
 800a048:	681a      	ldr	r2, [r3, #0]
 800a04a:	68fb      	ldr	r3, [r7, #12]
 800a04c:	681b      	ldr	r3, [r3, #0]
 800a04e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a052:	601a      	str	r2, [r3, #0]
 800a054:	683b      	ldr	r3, [r7, #0]
 800a056:	9300      	str	r3, [sp, #0]
 800a058:	687b      	ldr	r3, [r7, #4]
 800a05a:	2200      	movs	r2, #0
 800a05c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800a060:	68f8      	ldr	r0, [r7, #12]
 800a062:	f000 fa9b 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800a066:	4603      	mov	r3, r0
 800a068:	2b00      	cmp	r3, #0
 800a06a:	d00d      	beq.n	800a088 <I2C_MasterRequestWrite+0x88>
 800a06c:	68fb      	ldr	r3, [r7, #12]
 800a06e:	681b      	ldr	r3, [r3, #0]
 800a070:	681b      	ldr	r3, [r3, #0]
 800a072:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a076:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a07a:	d103      	bne.n	800a084 <I2C_MasterRequestWrite+0x84>
 800a07c:	68fb      	ldr	r3, [r7, #12]
 800a07e:	f44f 7200 	mov.w	r2, #512	; 0x200
 800a082:	641a      	str	r2, [r3, #64]	; 0x40
 800a084:	2303      	movs	r3, #3
 800a086:	e035      	b.n	800a0f4 <I2C_MasterRequestWrite+0xf4>
 800a088:	68fb      	ldr	r3, [r7, #12]
 800a08a:	691b      	ldr	r3, [r3, #16]
 800a08c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800a090:	d108      	bne.n	800a0a4 <I2C_MasterRequestWrite+0xa4>
 800a092:	897b      	ldrh	r3, [r7, #10]
 800a094:	b2db      	uxtb	r3, r3
 800a096:	461a      	mov	r2, r3
 800a098:	68fb      	ldr	r3, [r7, #12]
 800a09a:	681b      	ldr	r3, [r3, #0]
 800a09c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a0a0:	611a      	str	r2, [r3, #16]
 800a0a2:	e01b      	b.n	800a0dc <I2C_MasterRequestWrite+0xdc>
 800a0a4:	897b      	ldrh	r3, [r7, #10]
 800a0a6:	11db      	asrs	r3, r3, #7
 800a0a8:	b2db      	uxtb	r3, r3
 800a0aa:	f003 0306 	and.w	r3, r3, #6
 800a0ae:	b2db      	uxtb	r3, r3
 800a0b0:	f063 030f 	orn	r3, r3, #15
 800a0b4:	b2da      	uxtb	r2, r3
 800a0b6:	68fb      	ldr	r3, [r7, #12]
 800a0b8:	681b      	ldr	r3, [r3, #0]
 800a0ba:	611a      	str	r2, [r3, #16]
 800a0bc:	683b      	ldr	r3, [r7, #0]
 800a0be:	687a      	ldr	r2, [r7, #4]
 800a0c0:	490e      	ldr	r1, [pc, #56]	; (800a0fc <I2C_MasterRequestWrite+0xfc>)
 800a0c2:	68f8      	ldr	r0, [r7, #12]
 800a0c4:	f000 fac1 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a0c8:	4603      	mov	r3, r0
 800a0ca:	2b00      	cmp	r3, #0
 800a0cc:	d001      	beq.n	800a0d2 <I2C_MasterRequestWrite+0xd2>
 800a0ce:	2301      	movs	r3, #1
 800a0d0:	e010      	b.n	800a0f4 <I2C_MasterRequestWrite+0xf4>
 800a0d2:	897b      	ldrh	r3, [r7, #10]
 800a0d4:	b2da      	uxtb	r2, r3
 800a0d6:	68fb      	ldr	r3, [r7, #12]
 800a0d8:	681b      	ldr	r3, [r3, #0]
 800a0da:	611a      	str	r2, [r3, #16]
 800a0dc:	683b      	ldr	r3, [r7, #0]
 800a0de:	687a      	ldr	r2, [r7, #4]
 800a0e0:	4907      	ldr	r1, [pc, #28]	; (800a100 <I2C_MasterRequestWrite+0x100>)
 800a0e2:	68f8      	ldr	r0, [r7, #12]
 800a0e4:	f000 fab1 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a0e8:	4603      	mov	r3, r0
 800a0ea:	2b00      	cmp	r3, #0
 800a0ec:	d001      	beq.n	800a0f2 <I2C_MasterRequestWrite+0xf2>
 800a0ee:	2301      	movs	r3, #1
 800a0f0:	e000      	b.n	800a0f4 <I2C_MasterRequestWrite+0xf4>
 800a0f2:	2300      	movs	r3, #0
 800a0f4:	4618      	mov	r0, r3
 800a0f6:	3718      	adds	r7, #24
 800a0f8:	46bd      	mov	sp, r7
 800a0fa:	bd80      	pop	{r7, pc}
 800a0fc:	00010008 	.word	0x00010008
 800a100:	00010002 	.word	0x00010002

0800a104 <I2C_MasterRequestRead>:
 800a104:	b580      	push	{r7, lr}
 800a106:	b088      	sub	sp, #32
 800a108:	af02      	add	r7, sp, #8
 800a10a:	60f8      	str	r0, [r7, #12]
 800a10c:	607a      	str	r2, [r7, #4]
 800a10e:	603b      	str	r3, [r7, #0]
 800a110:	460b      	mov	r3, r1
 800a112:	817b      	strh	r3, [r7, #10]
 800a114:	68fb      	ldr	r3, [r7, #12]
 800a116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a118:	617b      	str	r3, [r7, #20]
 800a11a:	68fb      	ldr	r3, [r7, #12]
 800a11c:	681b      	ldr	r3, [r3, #0]
 800a11e:	681a      	ldr	r2, [r3, #0]
 800a120:	68fb      	ldr	r3, [r7, #12]
 800a122:	681b      	ldr	r3, [r3, #0]
 800a124:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a128:	601a      	str	r2, [r3, #0]
 800a12a:	697b      	ldr	r3, [r7, #20]
 800a12c:	2b08      	cmp	r3, #8
 800a12e:	d006      	beq.n	800a13e <I2C_MasterRequestRead+0x3a>
 800a130:	697b      	ldr	r3, [r7, #20]
 800a132:	2b01      	cmp	r3, #1
 800a134:	d003      	beq.n	800a13e <I2C_MasterRequestRead+0x3a>
 800a136:	697b      	ldr	r3, [r7, #20]
 800a138:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800a13c:	d108      	bne.n	800a150 <I2C_MasterRequestRead+0x4c>
 800a13e:	68fb      	ldr	r3, [r7, #12]
 800a140:	681b      	ldr	r3, [r3, #0]
 800a142:	681a      	ldr	r2, [r3, #0]
 800a144:	68fb      	ldr	r3, [r7, #12]
 800a146:	681b      	ldr	r3, [r3, #0]
 800a148:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a14c:	601a      	str	r2, [r3, #0]
 800a14e:	e00b      	b.n	800a168 <I2C_MasterRequestRead+0x64>
 800a150:	68fb      	ldr	r3, [r7, #12]
 800a152:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a154:	2b11      	cmp	r3, #17
 800a156:	d107      	bne.n	800a168 <I2C_MasterRequestRead+0x64>
 800a158:	68fb      	ldr	r3, [r7, #12]
 800a15a:	681b      	ldr	r3, [r3, #0]
 800a15c:	681a      	ldr	r2, [r3, #0]
 800a15e:	68fb      	ldr	r3, [r7, #12]
 800a160:	681b      	ldr	r3, [r3, #0]
 800a162:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a166:	601a      	str	r2, [r3, #0]
 800a168:	683b      	ldr	r3, [r7, #0]
 800a16a:	9300      	str	r3, [sp, #0]
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	2200      	movs	r2, #0
 800a170:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800a174:	68f8      	ldr	r0, [r7, #12]
 800a176:	f000 fa11 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800a17a:	4603      	mov	r3, r0
 800a17c:	2b00      	cmp	r3, #0
 800a17e:	d00d      	beq.n	800a19c <I2C_MasterRequestRead+0x98>
 800a180:	68fb      	ldr	r3, [r7, #12]
 800a182:	681b      	ldr	r3, [r3, #0]
 800a184:	681b      	ldr	r3, [r3, #0]
 800a186:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a18a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a18e:	d103      	bne.n	800a198 <I2C_MasterRequestRead+0x94>
 800a190:	68fb      	ldr	r3, [r7, #12]
 800a192:	f44f 7200 	mov.w	r2, #512	; 0x200
 800a196:	641a      	str	r2, [r3, #64]	; 0x40
 800a198:	2303      	movs	r3, #3
 800a19a:	e079      	b.n	800a290 <I2C_MasterRequestRead+0x18c>
 800a19c:	68fb      	ldr	r3, [r7, #12]
 800a19e:	691b      	ldr	r3, [r3, #16]
 800a1a0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800a1a4:	d108      	bne.n	800a1b8 <I2C_MasterRequestRead+0xb4>
 800a1a6:	897b      	ldrh	r3, [r7, #10]
 800a1a8:	b2db      	uxtb	r3, r3
 800a1aa:	f043 0301 	orr.w	r3, r3, #1
 800a1ae:	b2da      	uxtb	r2, r3
 800a1b0:	68fb      	ldr	r3, [r7, #12]
 800a1b2:	681b      	ldr	r3, [r3, #0]
 800a1b4:	611a      	str	r2, [r3, #16]
 800a1b6:	e05f      	b.n	800a278 <I2C_MasterRequestRead+0x174>
 800a1b8:	897b      	ldrh	r3, [r7, #10]
 800a1ba:	11db      	asrs	r3, r3, #7
 800a1bc:	b2db      	uxtb	r3, r3
 800a1be:	f003 0306 	and.w	r3, r3, #6
 800a1c2:	b2db      	uxtb	r3, r3
 800a1c4:	f063 030f 	orn	r3, r3, #15
 800a1c8:	b2da      	uxtb	r2, r3
 800a1ca:	68fb      	ldr	r3, [r7, #12]
 800a1cc:	681b      	ldr	r3, [r3, #0]
 800a1ce:	611a      	str	r2, [r3, #16]
 800a1d0:	683b      	ldr	r3, [r7, #0]
 800a1d2:	687a      	ldr	r2, [r7, #4]
 800a1d4:	4930      	ldr	r1, [pc, #192]	; (800a298 <I2C_MasterRequestRead+0x194>)
 800a1d6:	68f8      	ldr	r0, [r7, #12]
 800a1d8:	f000 fa37 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a1dc:	4603      	mov	r3, r0
 800a1de:	2b00      	cmp	r3, #0
 800a1e0:	d001      	beq.n	800a1e6 <I2C_MasterRequestRead+0xe2>
 800a1e2:	2301      	movs	r3, #1
 800a1e4:	e054      	b.n	800a290 <I2C_MasterRequestRead+0x18c>
 800a1e6:	897b      	ldrh	r3, [r7, #10]
 800a1e8:	b2da      	uxtb	r2, r3
 800a1ea:	68fb      	ldr	r3, [r7, #12]
 800a1ec:	681b      	ldr	r3, [r3, #0]
 800a1ee:	611a      	str	r2, [r3, #16]
 800a1f0:	683b      	ldr	r3, [r7, #0]
 800a1f2:	687a      	ldr	r2, [r7, #4]
 800a1f4:	4929      	ldr	r1, [pc, #164]	; (800a29c <I2C_MasterRequestRead+0x198>)
 800a1f6:	68f8      	ldr	r0, [r7, #12]
 800a1f8:	f000 fa27 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a1fc:	4603      	mov	r3, r0
 800a1fe:	2b00      	cmp	r3, #0
 800a200:	d001      	beq.n	800a206 <I2C_MasterRequestRead+0x102>
 800a202:	2301      	movs	r3, #1
 800a204:	e044      	b.n	800a290 <I2C_MasterRequestRead+0x18c>
 800a206:	2300      	movs	r3, #0
 800a208:	613b      	str	r3, [r7, #16]
 800a20a:	68fb      	ldr	r3, [r7, #12]
 800a20c:	681b      	ldr	r3, [r3, #0]
 800a20e:	695b      	ldr	r3, [r3, #20]
 800a210:	613b      	str	r3, [r7, #16]
 800a212:	68fb      	ldr	r3, [r7, #12]
 800a214:	681b      	ldr	r3, [r3, #0]
 800a216:	699b      	ldr	r3, [r3, #24]
 800a218:	613b      	str	r3, [r7, #16]
 800a21a:	693b      	ldr	r3, [r7, #16]
 800a21c:	68fb      	ldr	r3, [r7, #12]
 800a21e:	681b      	ldr	r3, [r3, #0]
 800a220:	681a      	ldr	r2, [r3, #0]
 800a222:	68fb      	ldr	r3, [r7, #12]
 800a224:	681b      	ldr	r3, [r3, #0]
 800a226:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a22a:	601a      	str	r2, [r3, #0]
 800a22c:	683b      	ldr	r3, [r7, #0]
 800a22e:	9300      	str	r3, [sp, #0]
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	2200      	movs	r2, #0
 800a234:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800a238:	68f8      	ldr	r0, [r7, #12]
 800a23a:	f000 f9af 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800a23e:	4603      	mov	r3, r0
 800a240:	2b00      	cmp	r3, #0
 800a242:	d00d      	beq.n	800a260 <I2C_MasterRequestRead+0x15c>
 800a244:	68fb      	ldr	r3, [r7, #12]
 800a246:	681b      	ldr	r3, [r3, #0]
 800a248:	681b      	ldr	r3, [r3, #0]
 800a24a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a24e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a252:	d103      	bne.n	800a25c <I2C_MasterRequestRead+0x158>
 800a254:	68fb      	ldr	r3, [r7, #12]
 800a256:	f44f 7200 	mov.w	r2, #512	; 0x200
 800a25a:	641a      	str	r2, [r3, #64]	; 0x40
 800a25c:	2303      	movs	r3, #3
 800a25e:	e017      	b.n	800a290 <I2C_MasterRequestRead+0x18c>
 800a260:	897b      	ldrh	r3, [r7, #10]
 800a262:	11db      	asrs	r3, r3, #7
 800a264:	b2db      	uxtb	r3, r3
 800a266:	f003 0306 	and.w	r3, r3, #6
 800a26a:	b2db      	uxtb	r3, r3
 800a26c:	f063 030e 	orn	r3, r3, #14
 800a270:	b2da      	uxtb	r2, r3
 800a272:	68fb      	ldr	r3, [r7, #12]
 800a274:	681b      	ldr	r3, [r3, #0]
 800a276:	611a      	str	r2, [r3, #16]
 800a278:	683b      	ldr	r3, [r7, #0]
 800a27a:	687a      	ldr	r2, [r7, #4]
 800a27c:	4907      	ldr	r1, [pc, #28]	; (800a29c <I2C_MasterRequestRead+0x198>)
 800a27e:	68f8      	ldr	r0, [r7, #12]
 800a280:	f000 f9e3 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a284:	4603      	mov	r3, r0
 800a286:	2b00      	cmp	r3, #0
 800a288:	d001      	beq.n	800a28e <I2C_MasterRequestRead+0x18a>
 800a28a:	2301      	movs	r3, #1
 800a28c:	e000      	b.n	800a290 <I2C_MasterRequestRead+0x18c>
 800a28e:	2300      	movs	r3, #0
 800a290:	4618      	mov	r0, r3
 800a292:	3718      	adds	r7, #24
 800a294:	46bd      	mov	sp, r7
 800a296:	bd80      	pop	{r7, pc}
 800a298:	00010008 	.word	0x00010008
 800a29c:	00010002 	.word	0x00010002

0800a2a0 <I2C_RequestMemoryWrite>:
 800a2a0:	b580      	push	{r7, lr}
 800a2a2:	b088      	sub	sp, #32
 800a2a4:	af02      	add	r7, sp, #8
 800a2a6:	60f8      	str	r0, [r7, #12]
 800a2a8:	4608      	mov	r0, r1
 800a2aa:	4611      	mov	r1, r2
 800a2ac:	461a      	mov	r2, r3
 800a2ae:	4603      	mov	r3, r0
 800a2b0:	817b      	strh	r3, [r7, #10]
 800a2b2:	460b      	mov	r3, r1
 800a2b4:	813b      	strh	r3, [r7, #8]
 800a2b6:	4613      	mov	r3, r2
 800a2b8:	80fb      	strh	r3, [r7, #6]
 800a2ba:	68fb      	ldr	r3, [r7, #12]
 800a2bc:	681b      	ldr	r3, [r3, #0]
 800a2be:	681a      	ldr	r2, [r3, #0]
 800a2c0:	68fb      	ldr	r3, [r7, #12]
 800a2c2:	681b      	ldr	r3, [r3, #0]
 800a2c4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a2c8:	601a      	str	r2, [r3, #0]
 800a2ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a2cc:	9300      	str	r3, [sp, #0]
 800a2ce:	6a3b      	ldr	r3, [r7, #32]
 800a2d0:	2200      	movs	r2, #0
 800a2d2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800a2d6:	68f8      	ldr	r0, [r7, #12]
 800a2d8:	f000 f960 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800a2dc:	4603      	mov	r3, r0
 800a2de:	2b00      	cmp	r3, #0
 800a2e0:	d00d      	beq.n	800a2fe <I2C_RequestMemoryWrite+0x5e>
 800a2e2:	68fb      	ldr	r3, [r7, #12]
 800a2e4:	681b      	ldr	r3, [r3, #0]
 800a2e6:	681b      	ldr	r3, [r3, #0]
 800a2e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a2ec:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a2f0:	d103      	bne.n	800a2fa <I2C_RequestMemoryWrite+0x5a>
 800a2f2:	68fb      	ldr	r3, [r7, #12]
 800a2f4:	f44f 7200 	mov.w	r2, #512	; 0x200
 800a2f8:	641a      	str	r2, [r3, #64]	; 0x40
 800a2fa:	2303      	movs	r3, #3
 800a2fc:	e05f      	b.n	800a3be <I2C_RequestMemoryWrite+0x11e>
 800a2fe:	897b      	ldrh	r3, [r7, #10]
 800a300:	b2db      	uxtb	r3, r3
 800a302:	461a      	mov	r2, r3
 800a304:	68fb      	ldr	r3, [r7, #12]
 800a306:	681b      	ldr	r3, [r3, #0]
 800a308:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a30c:	611a      	str	r2, [r3, #16]
 800a30e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a310:	6a3a      	ldr	r2, [r7, #32]
 800a312:	492d      	ldr	r1, [pc, #180]	; (800a3c8 <I2C_RequestMemoryWrite+0x128>)
 800a314:	68f8      	ldr	r0, [r7, #12]
 800a316:	f000 f998 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a31a:	4603      	mov	r3, r0
 800a31c:	2b00      	cmp	r3, #0
 800a31e:	d001      	beq.n	800a324 <I2C_RequestMemoryWrite+0x84>
 800a320:	2301      	movs	r3, #1
 800a322:	e04c      	b.n	800a3be <I2C_RequestMemoryWrite+0x11e>
 800a324:	2300      	movs	r3, #0
 800a326:	617b      	str	r3, [r7, #20]
 800a328:	68fb      	ldr	r3, [r7, #12]
 800a32a:	681b      	ldr	r3, [r3, #0]
 800a32c:	695b      	ldr	r3, [r3, #20]
 800a32e:	617b      	str	r3, [r7, #20]
 800a330:	68fb      	ldr	r3, [r7, #12]
 800a332:	681b      	ldr	r3, [r3, #0]
 800a334:	699b      	ldr	r3, [r3, #24]
 800a336:	617b      	str	r3, [r7, #20]
 800a338:	697b      	ldr	r3, [r7, #20]
 800a33a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a33c:	6a39      	ldr	r1, [r7, #32]
 800a33e:	68f8      	ldr	r0, [r7, #12]
 800a340:	f000 fa02 	bl	800a748 <I2C_WaitOnTXEFlagUntilTimeout>
 800a344:	4603      	mov	r3, r0
 800a346:	2b00      	cmp	r3, #0
 800a348:	d00d      	beq.n	800a366 <I2C_RequestMemoryWrite+0xc6>
 800a34a:	68fb      	ldr	r3, [r7, #12]
 800a34c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a34e:	2b04      	cmp	r3, #4
 800a350:	d107      	bne.n	800a362 <I2C_RequestMemoryWrite+0xc2>
 800a352:	68fb      	ldr	r3, [r7, #12]
 800a354:	681b      	ldr	r3, [r3, #0]
 800a356:	681a      	ldr	r2, [r3, #0]
 800a358:	68fb      	ldr	r3, [r7, #12]
 800a35a:	681b      	ldr	r3, [r3, #0]
 800a35c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a360:	601a      	str	r2, [r3, #0]
 800a362:	2301      	movs	r3, #1
 800a364:	e02b      	b.n	800a3be <I2C_RequestMemoryWrite+0x11e>
 800a366:	88fb      	ldrh	r3, [r7, #6]
 800a368:	2b01      	cmp	r3, #1
 800a36a:	d105      	bne.n	800a378 <I2C_RequestMemoryWrite+0xd8>
 800a36c:	893b      	ldrh	r3, [r7, #8]
 800a36e:	b2da      	uxtb	r2, r3
 800a370:	68fb      	ldr	r3, [r7, #12]
 800a372:	681b      	ldr	r3, [r3, #0]
 800a374:	611a      	str	r2, [r3, #16]
 800a376:	e021      	b.n	800a3bc <I2C_RequestMemoryWrite+0x11c>
 800a378:	893b      	ldrh	r3, [r7, #8]
 800a37a:	0a1b      	lsrs	r3, r3, #8
 800a37c:	b29b      	uxth	r3, r3
 800a37e:	b2da      	uxtb	r2, r3
 800a380:	68fb      	ldr	r3, [r7, #12]
 800a382:	681b      	ldr	r3, [r3, #0]
 800a384:	611a      	str	r2, [r3, #16]
 800a386:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a388:	6a39      	ldr	r1, [r7, #32]
 800a38a:	68f8      	ldr	r0, [r7, #12]
 800a38c:	f000 f9dc 	bl	800a748 <I2C_WaitOnTXEFlagUntilTimeout>
 800a390:	4603      	mov	r3, r0
 800a392:	2b00      	cmp	r3, #0
 800a394:	d00d      	beq.n	800a3b2 <I2C_RequestMemoryWrite+0x112>
 800a396:	68fb      	ldr	r3, [r7, #12]
 800a398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a39a:	2b04      	cmp	r3, #4
 800a39c:	d107      	bne.n	800a3ae <I2C_RequestMemoryWrite+0x10e>
 800a39e:	68fb      	ldr	r3, [r7, #12]
 800a3a0:	681b      	ldr	r3, [r3, #0]
 800a3a2:	681a      	ldr	r2, [r3, #0]
 800a3a4:	68fb      	ldr	r3, [r7, #12]
 800a3a6:	681b      	ldr	r3, [r3, #0]
 800a3a8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a3ac:	601a      	str	r2, [r3, #0]
 800a3ae:	2301      	movs	r3, #1
 800a3b0:	e005      	b.n	800a3be <I2C_RequestMemoryWrite+0x11e>
 800a3b2:	893b      	ldrh	r3, [r7, #8]
 800a3b4:	b2da      	uxtb	r2, r3
 800a3b6:	68fb      	ldr	r3, [r7, #12]
 800a3b8:	681b      	ldr	r3, [r3, #0]
 800a3ba:	611a      	str	r2, [r3, #16]
 800a3bc:	2300      	movs	r3, #0
 800a3be:	4618      	mov	r0, r3
 800a3c0:	3718      	adds	r7, #24
 800a3c2:	46bd      	mov	sp, r7
 800a3c4:	bd80      	pop	{r7, pc}
 800a3c6:	bf00      	nop
 800a3c8:	00010002 	.word	0x00010002

0800a3cc <I2C_RequestMemoryRead>:
 800a3cc:	b580      	push	{r7, lr}
 800a3ce:	b088      	sub	sp, #32
 800a3d0:	af02      	add	r7, sp, #8
 800a3d2:	60f8      	str	r0, [r7, #12]
 800a3d4:	4608      	mov	r0, r1
 800a3d6:	4611      	mov	r1, r2
 800a3d8:	461a      	mov	r2, r3
 800a3da:	4603      	mov	r3, r0
 800a3dc:	817b      	strh	r3, [r7, #10]
 800a3de:	460b      	mov	r3, r1
 800a3e0:	813b      	strh	r3, [r7, #8]
 800a3e2:	4613      	mov	r3, r2
 800a3e4:	80fb      	strh	r3, [r7, #6]
 800a3e6:	68fb      	ldr	r3, [r7, #12]
 800a3e8:	681b      	ldr	r3, [r3, #0]
 800a3ea:	681a      	ldr	r2, [r3, #0]
 800a3ec:	68fb      	ldr	r3, [r7, #12]
 800a3ee:	681b      	ldr	r3, [r3, #0]
 800a3f0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a3f4:	601a      	str	r2, [r3, #0]
 800a3f6:	68fb      	ldr	r3, [r7, #12]
 800a3f8:	681b      	ldr	r3, [r3, #0]
 800a3fa:	681a      	ldr	r2, [r3, #0]
 800a3fc:	68fb      	ldr	r3, [r7, #12]
 800a3fe:	681b      	ldr	r3, [r3, #0]
 800a400:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a404:	601a      	str	r2, [r3, #0]
 800a406:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a408:	9300      	str	r3, [sp, #0]
 800a40a:	6a3b      	ldr	r3, [r7, #32]
 800a40c:	2200      	movs	r2, #0
 800a40e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800a412:	68f8      	ldr	r0, [r7, #12]
 800a414:	f000 f8c2 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800a418:	4603      	mov	r3, r0
 800a41a:	2b00      	cmp	r3, #0
 800a41c:	d00d      	beq.n	800a43a <I2C_RequestMemoryRead+0x6e>
 800a41e:	68fb      	ldr	r3, [r7, #12]
 800a420:	681b      	ldr	r3, [r3, #0]
 800a422:	681b      	ldr	r3, [r3, #0]
 800a424:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a428:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a42c:	d103      	bne.n	800a436 <I2C_RequestMemoryRead+0x6a>
 800a42e:	68fb      	ldr	r3, [r7, #12]
 800a430:	f44f 7200 	mov.w	r2, #512	; 0x200
 800a434:	641a      	str	r2, [r3, #64]	; 0x40
 800a436:	2303      	movs	r3, #3
 800a438:	e0aa      	b.n	800a590 <I2C_RequestMemoryRead+0x1c4>
 800a43a:	897b      	ldrh	r3, [r7, #10]
 800a43c:	b2db      	uxtb	r3, r3
 800a43e:	461a      	mov	r2, r3
 800a440:	68fb      	ldr	r3, [r7, #12]
 800a442:	681b      	ldr	r3, [r3, #0]
 800a444:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a448:	611a      	str	r2, [r3, #16]
 800a44a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a44c:	6a3a      	ldr	r2, [r7, #32]
 800a44e:	4952      	ldr	r1, [pc, #328]	; (800a598 <I2C_RequestMemoryRead+0x1cc>)
 800a450:	68f8      	ldr	r0, [r7, #12]
 800a452:	f000 f8fa 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a456:	4603      	mov	r3, r0
 800a458:	2b00      	cmp	r3, #0
 800a45a:	d001      	beq.n	800a460 <I2C_RequestMemoryRead+0x94>
 800a45c:	2301      	movs	r3, #1
 800a45e:	e097      	b.n	800a590 <I2C_RequestMemoryRead+0x1c4>
 800a460:	2300      	movs	r3, #0
 800a462:	617b      	str	r3, [r7, #20]
 800a464:	68fb      	ldr	r3, [r7, #12]
 800a466:	681b      	ldr	r3, [r3, #0]
 800a468:	695b      	ldr	r3, [r3, #20]
 800a46a:	617b      	str	r3, [r7, #20]
 800a46c:	68fb      	ldr	r3, [r7, #12]
 800a46e:	681b      	ldr	r3, [r3, #0]
 800a470:	699b      	ldr	r3, [r3, #24]
 800a472:	617b      	str	r3, [r7, #20]
 800a474:	697b      	ldr	r3, [r7, #20]
 800a476:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a478:	6a39      	ldr	r1, [r7, #32]
 800a47a:	68f8      	ldr	r0, [r7, #12]
 800a47c:	f000 f964 	bl	800a748 <I2C_WaitOnTXEFlagUntilTimeout>
 800a480:	4603      	mov	r3, r0
 800a482:	2b00      	cmp	r3, #0
 800a484:	d00d      	beq.n	800a4a2 <I2C_RequestMemoryRead+0xd6>
 800a486:	68fb      	ldr	r3, [r7, #12]
 800a488:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a48a:	2b04      	cmp	r3, #4
 800a48c:	d107      	bne.n	800a49e <I2C_RequestMemoryRead+0xd2>
 800a48e:	68fb      	ldr	r3, [r7, #12]
 800a490:	681b      	ldr	r3, [r3, #0]
 800a492:	681a      	ldr	r2, [r3, #0]
 800a494:	68fb      	ldr	r3, [r7, #12]
 800a496:	681b      	ldr	r3, [r3, #0]
 800a498:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a49c:	601a      	str	r2, [r3, #0]
 800a49e:	2301      	movs	r3, #1
 800a4a0:	e076      	b.n	800a590 <I2C_RequestMemoryRead+0x1c4>
 800a4a2:	88fb      	ldrh	r3, [r7, #6]
 800a4a4:	2b01      	cmp	r3, #1
 800a4a6:	d105      	bne.n	800a4b4 <I2C_RequestMemoryRead+0xe8>
 800a4a8:	893b      	ldrh	r3, [r7, #8]
 800a4aa:	b2da      	uxtb	r2, r3
 800a4ac:	68fb      	ldr	r3, [r7, #12]
 800a4ae:	681b      	ldr	r3, [r3, #0]
 800a4b0:	611a      	str	r2, [r3, #16]
 800a4b2:	e021      	b.n	800a4f8 <I2C_RequestMemoryRead+0x12c>
 800a4b4:	893b      	ldrh	r3, [r7, #8]
 800a4b6:	0a1b      	lsrs	r3, r3, #8
 800a4b8:	b29b      	uxth	r3, r3
 800a4ba:	b2da      	uxtb	r2, r3
 800a4bc:	68fb      	ldr	r3, [r7, #12]
 800a4be:	681b      	ldr	r3, [r3, #0]
 800a4c0:	611a      	str	r2, [r3, #16]
 800a4c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a4c4:	6a39      	ldr	r1, [r7, #32]
 800a4c6:	68f8      	ldr	r0, [r7, #12]
 800a4c8:	f000 f93e 	bl	800a748 <I2C_WaitOnTXEFlagUntilTimeout>
 800a4cc:	4603      	mov	r3, r0
 800a4ce:	2b00      	cmp	r3, #0
 800a4d0:	d00d      	beq.n	800a4ee <I2C_RequestMemoryRead+0x122>
 800a4d2:	68fb      	ldr	r3, [r7, #12]
 800a4d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a4d6:	2b04      	cmp	r3, #4
 800a4d8:	d107      	bne.n	800a4ea <I2C_RequestMemoryRead+0x11e>
 800a4da:	68fb      	ldr	r3, [r7, #12]
 800a4dc:	681b      	ldr	r3, [r3, #0]
 800a4de:	681a      	ldr	r2, [r3, #0]
 800a4e0:	68fb      	ldr	r3, [r7, #12]
 800a4e2:	681b      	ldr	r3, [r3, #0]
 800a4e4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a4e8:	601a      	str	r2, [r3, #0]
 800a4ea:	2301      	movs	r3, #1
 800a4ec:	e050      	b.n	800a590 <I2C_RequestMemoryRead+0x1c4>
 800a4ee:	893b      	ldrh	r3, [r7, #8]
 800a4f0:	b2da      	uxtb	r2, r3
 800a4f2:	68fb      	ldr	r3, [r7, #12]
 800a4f4:	681b      	ldr	r3, [r3, #0]
 800a4f6:	611a      	str	r2, [r3, #16]
 800a4f8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a4fa:	6a39      	ldr	r1, [r7, #32]
 800a4fc:	68f8      	ldr	r0, [r7, #12]
 800a4fe:	f000 f923 	bl	800a748 <I2C_WaitOnTXEFlagUntilTimeout>
 800a502:	4603      	mov	r3, r0
 800a504:	2b00      	cmp	r3, #0
 800a506:	d00d      	beq.n	800a524 <I2C_RequestMemoryRead+0x158>
 800a508:	68fb      	ldr	r3, [r7, #12]
 800a50a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a50c:	2b04      	cmp	r3, #4
 800a50e:	d107      	bne.n	800a520 <I2C_RequestMemoryRead+0x154>
 800a510:	68fb      	ldr	r3, [r7, #12]
 800a512:	681b      	ldr	r3, [r3, #0]
 800a514:	681a      	ldr	r2, [r3, #0]
 800a516:	68fb      	ldr	r3, [r7, #12]
 800a518:	681b      	ldr	r3, [r3, #0]
 800a51a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a51e:	601a      	str	r2, [r3, #0]
 800a520:	2301      	movs	r3, #1
 800a522:	e035      	b.n	800a590 <I2C_RequestMemoryRead+0x1c4>
 800a524:	68fb      	ldr	r3, [r7, #12]
 800a526:	681b      	ldr	r3, [r3, #0]
 800a528:	681a      	ldr	r2, [r3, #0]
 800a52a:	68fb      	ldr	r3, [r7, #12]
 800a52c:	681b      	ldr	r3, [r3, #0]
 800a52e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a532:	601a      	str	r2, [r3, #0]
 800a534:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a536:	9300      	str	r3, [sp, #0]
 800a538:	6a3b      	ldr	r3, [r7, #32]
 800a53a:	2200      	movs	r2, #0
 800a53c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800a540:	68f8      	ldr	r0, [r7, #12]
 800a542:	f000 f82b 	bl	800a59c <I2C_WaitOnFlagUntilTimeout>
 800a546:	4603      	mov	r3, r0
 800a548:	2b00      	cmp	r3, #0
 800a54a:	d00d      	beq.n	800a568 <I2C_RequestMemoryRead+0x19c>
 800a54c:	68fb      	ldr	r3, [r7, #12]
 800a54e:	681b      	ldr	r3, [r3, #0]
 800a550:	681b      	ldr	r3, [r3, #0]
 800a552:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a556:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a55a:	d103      	bne.n	800a564 <I2C_RequestMemoryRead+0x198>
 800a55c:	68fb      	ldr	r3, [r7, #12]
 800a55e:	f44f 7200 	mov.w	r2, #512	; 0x200
 800a562:	641a      	str	r2, [r3, #64]	; 0x40
 800a564:	2303      	movs	r3, #3
 800a566:	e013      	b.n	800a590 <I2C_RequestMemoryRead+0x1c4>
 800a568:	897b      	ldrh	r3, [r7, #10]
 800a56a:	b2db      	uxtb	r3, r3
 800a56c:	f043 0301 	orr.w	r3, r3, #1
 800a570:	b2da      	uxtb	r2, r3
 800a572:	68fb      	ldr	r3, [r7, #12]
 800a574:	681b      	ldr	r3, [r3, #0]
 800a576:	611a      	str	r2, [r3, #16]
 800a578:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a57a:	6a3a      	ldr	r2, [r7, #32]
 800a57c:	4906      	ldr	r1, [pc, #24]	; (800a598 <I2C_RequestMemoryRead+0x1cc>)
 800a57e:	68f8      	ldr	r0, [r7, #12]
 800a580:	f000 f863 	bl	800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800a584:	4603      	mov	r3, r0
 800a586:	2b00      	cmp	r3, #0
 800a588:	d001      	beq.n	800a58e <I2C_RequestMemoryRead+0x1c2>
 800a58a:	2301      	movs	r3, #1
 800a58c:	e000      	b.n	800a590 <I2C_RequestMemoryRead+0x1c4>
 800a58e:	2300      	movs	r3, #0
 800a590:	4618      	mov	r0, r3
 800a592:	3718      	adds	r7, #24
 800a594:	46bd      	mov	sp, r7
 800a596:	bd80      	pop	{r7, pc}
 800a598:	00010002 	.word	0x00010002

0800a59c <I2C_WaitOnFlagUntilTimeout>:
 800a59c:	b580      	push	{r7, lr}
 800a59e:	b084      	sub	sp, #16
 800a5a0:	af00      	add	r7, sp, #0
 800a5a2:	60f8      	str	r0, [r7, #12]
 800a5a4:	60b9      	str	r1, [r7, #8]
 800a5a6:	603b      	str	r3, [r7, #0]
 800a5a8:	4613      	mov	r3, r2
 800a5aa:	71fb      	strb	r3, [r7, #7]
 800a5ac:	e025      	b.n	800a5fa <I2C_WaitOnFlagUntilTimeout+0x5e>
 800a5ae:	683b      	ldr	r3, [r7, #0]
 800a5b0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a5b4:	d021      	beq.n	800a5fa <I2C_WaitOnFlagUntilTimeout+0x5e>
 800a5b6:	f7fc feb3 	bl	8007320 <HAL_GetTick>
 800a5ba:	4602      	mov	r2, r0
 800a5bc:	69bb      	ldr	r3, [r7, #24]
 800a5be:	1ad3      	subs	r3, r2, r3
 800a5c0:	683a      	ldr	r2, [r7, #0]
 800a5c2:	429a      	cmp	r2, r3
 800a5c4:	d302      	bcc.n	800a5cc <I2C_WaitOnFlagUntilTimeout+0x30>
 800a5c6:	683b      	ldr	r3, [r7, #0]
 800a5c8:	2b00      	cmp	r3, #0
 800a5ca:	d116      	bne.n	800a5fa <I2C_WaitOnFlagUntilTimeout+0x5e>
 800a5cc:	68fb      	ldr	r3, [r7, #12]
 800a5ce:	2200      	movs	r2, #0
 800a5d0:	631a      	str	r2, [r3, #48]	; 0x30
 800a5d2:	68fb      	ldr	r3, [r7, #12]
 800a5d4:	2220      	movs	r2, #32
 800a5d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a5da:	68fb      	ldr	r3, [r7, #12]
 800a5dc:	2200      	movs	r2, #0
 800a5de:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a5e2:	68fb      	ldr	r3, [r7, #12]
 800a5e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a5e6:	f043 0220 	orr.w	r2, r3, #32
 800a5ea:	68fb      	ldr	r3, [r7, #12]
 800a5ec:	641a      	str	r2, [r3, #64]	; 0x40
 800a5ee:	68fb      	ldr	r3, [r7, #12]
 800a5f0:	2200      	movs	r2, #0
 800a5f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a5f6:	2301      	movs	r3, #1
 800a5f8:	e023      	b.n	800a642 <I2C_WaitOnFlagUntilTimeout+0xa6>
 800a5fa:	68bb      	ldr	r3, [r7, #8]
 800a5fc:	0c1b      	lsrs	r3, r3, #16
 800a5fe:	b2db      	uxtb	r3, r3
 800a600:	2b01      	cmp	r3, #1
 800a602:	d10d      	bne.n	800a620 <I2C_WaitOnFlagUntilTimeout+0x84>
 800a604:	68fb      	ldr	r3, [r7, #12]
 800a606:	681b      	ldr	r3, [r3, #0]
 800a608:	695b      	ldr	r3, [r3, #20]
 800a60a:	43da      	mvns	r2, r3
 800a60c:	68bb      	ldr	r3, [r7, #8]
 800a60e:	4013      	ands	r3, r2
 800a610:	b29b      	uxth	r3, r3
 800a612:	2b00      	cmp	r3, #0
 800a614:	bf0c      	ite	eq
 800a616:	2301      	moveq	r3, #1
 800a618:	2300      	movne	r3, #0
 800a61a:	b2db      	uxtb	r3, r3
 800a61c:	461a      	mov	r2, r3
 800a61e:	e00c      	b.n	800a63a <I2C_WaitOnFlagUntilTimeout+0x9e>
 800a620:	68fb      	ldr	r3, [r7, #12]
 800a622:	681b      	ldr	r3, [r3, #0]
 800a624:	699b      	ldr	r3, [r3, #24]
 800a626:	43da      	mvns	r2, r3
 800a628:	68bb      	ldr	r3, [r7, #8]
 800a62a:	4013      	ands	r3, r2
 800a62c:	b29b      	uxth	r3, r3
 800a62e:	2b00      	cmp	r3, #0
 800a630:	bf0c      	ite	eq
 800a632:	2301      	moveq	r3, #1
 800a634:	2300      	movne	r3, #0
 800a636:	b2db      	uxtb	r3, r3
 800a638:	461a      	mov	r2, r3
 800a63a:	79fb      	ldrb	r3, [r7, #7]
 800a63c:	429a      	cmp	r2, r3
 800a63e:	d0b6      	beq.n	800a5ae <I2C_WaitOnFlagUntilTimeout+0x12>
 800a640:	2300      	movs	r3, #0
 800a642:	4618      	mov	r0, r3
 800a644:	3710      	adds	r7, #16
 800a646:	46bd      	mov	sp, r7
 800a648:	bd80      	pop	{r7, pc}

0800a64a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800a64a:	b580      	push	{r7, lr}
 800a64c:	b084      	sub	sp, #16
 800a64e:	af00      	add	r7, sp, #0
 800a650:	60f8      	str	r0, [r7, #12]
 800a652:	60b9      	str	r1, [r7, #8]
 800a654:	607a      	str	r2, [r7, #4]
 800a656:	603b      	str	r3, [r7, #0]
 800a658:	e051      	b.n	800a6fe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800a65a:	68fb      	ldr	r3, [r7, #12]
 800a65c:	681b      	ldr	r3, [r3, #0]
 800a65e:	695b      	ldr	r3, [r3, #20]
 800a660:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800a664:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a668:	d123      	bne.n	800a6b2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800a66a:	68fb      	ldr	r3, [r7, #12]
 800a66c:	681b      	ldr	r3, [r3, #0]
 800a66e:	681a      	ldr	r2, [r3, #0]
 800a670:	68fb      	ldr	r3, [r7, #12]
 800a672:	681b      	ldr	r3, [r3, #0]
 800a674:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a678:	601a      	str	r2, [r3, #0]
 800a67a:	68fb      	ldr	r3, [r7, #12]
 800a67c:	681b      	ldr	r3, [r3, #0]
 800a67e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800a682:	615a      	str	r2, [r3, #20]
 800a684:	68fb      	ldr	r3, [r7, #12]
 800a686:	2200      	movs	r2, #0
 800a688:	631a      	str	r2, [r3, #48]	; 0x30
 800a68a:	68fb      	ldr	r3, [r7, #12]
 800a68c:	2220      	movs	r2, #32
 800a68e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a692:	68fb      	ldr	r3, [r7, #12]
 800a694:	2200      	movs	r2, #0
 800a696:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a69a:	68fb      	ldr	r3, [r7, #12]
 800a69c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a69e:	f043 0204 	orr.w	r2, r3, #4
 800a6a2:	68fb      	ldr	r3, [r7, #12]
 800a6a4:	641a      	str	r2, [r3, #64]	; 0x40
 800a6a6:	68fb      	ldr	r3, [r7, #12]
 800a6a8:	2200      	movs	r2, #0
 800a6aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a6ae:	2301      	movs	r3, #1
 800a6b0:	e046      	b.n	800a740 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800a6b2:	687b      	ldr	r3, [r7, #4]
 800a6b4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a6b8:	d021      	beq.n	800a6fe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800a6ba:	f7fc fe31 	bl	8007320 <HAL_GetTick>
 800a6be:	4602      	mov	r2, r0
 800a6c0:	683b      	ldr	r3, [r7, #0]
 800a6c2:	1ad3      	subs	r3, r2, r3
 800a6c4:	687a      	ldr	r2, [r7, #4]
 800a6c6:	429a      	cmp	r2, r3
 800a6c8:	d302      	bcc.n	800a6d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800a6ca:	687b      	ldr	r3, [r7, #4]
 800a6cc:	2b00      	cmp	r3, #0
 800a6ce:	d116      	bne.n	800a6fe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800a6d0:	68fb      	ldr	r3, [r7, #12]
 800a6d2:	2200      	movs	r2, #0
 800a6d4:	631a      	str	r2, [r3, #48]	; 0x30
 800a6d6:	68fb      	ldr	r3, [r7, #12]
 800a6d8:	2220      	movs	r2, #32
 800a6da:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a6de:	68fb      	ldr	r3, [r7, #12]
 800a6e0:	2200      	movs	r2, #0
 800a6e2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a6e6:	68fb      	ldr	r3, [r7, #12]
 800a6e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a6ea:	f043 0220 	orr.w	r2, r3, #32
 800a6ee:	68fb      	ldr	r3, [r7, #12]
 800a6f0:	641a      	str	r2, [r3, #64]	; 0x40
 800a6f2:	68fb      	ldr	r3, [r7, #12]
 800a6f4:	2200      	movs	r2, #0
 800a6f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a6fa:	2301      	movs	r3, #1
 800a6fc:	e020      	b.n	800a740 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800a6fe:	68bb      	ldr	r3, [r7, #8]
 800a700:	0c1b      	lsrs	r3, r3, #16
 800a702:	b2db      	uxtb	r3, r3
 800a704:	2b01      	cmp	r3, #1
 800a706:	d10c      	bne.n	800a722 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 800a708:	68fb      	ldr	r3, [r7, #12]
 800a70a:	681b      	ldr	r3, [r3, #0]
 800a70c:	695b      	ldr	r3, [r3, #20]
 800a70e:	43da      	mvns	r2, r3
 800a710:	68bb      	ldr	r3, [r7, #8]
 800a712:	4013      	ands	r3, r2
 800a714:	b29b      	uxth	r3, r3
 800a716:	2b00      	cmp	r3, #0
 800a718:	bf14      	ite	ne
 800a71a:	2301      	movne	r3, #1
 800a71c:	2300      	moveq	r3, #0
 800a71e:	b2db      	uxtb	r3, r3
 800a720:	e00b      	b.n	800a73a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800a722:	68fb      	ldr	r3, [r7, #12]
 800a724:	681b      	ldr	r3, [r3, #0]
 800a726:	699b      	ldr	r3, [r3, #24]
 800a728:	43da      	mvns	r2, r3
 800a72a:	68bb      	ldr	r3, [r7, #8]
 800a72c:	4013      	ands	r3, r2
 800a72e:	b29b      	uxth	r3, r3
 800a730:	2b00      	cmp	r3, #0
 800a732:	bf14      	ite	ne
 800a734:	2301      	movne	r3, #1
 800a736:	2300      	moveq	r3, #0
 800a738:	b2db      	uxtb	r3, r3
 800a73a:	2b00      	cmp	r3, #0
 800a73c:	d18d      	bne.n	800a65a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800a73e:	2300      	movs	r3, #0
 800a740:	4618      	mov	r0, r3
 800a742:	3710      	adds	r7, #16
 800a744:	46bd      	mov	sp, r7
 800a746:	bd80      	pop	{r7, pc}

0800a748 <I2C_WaitOnTXEFlagUntilTimeout>:
 800a748:	b580      	push	{r7, lr}
 800a74a:	b084      	sub	sp, #16
 800a74c:	af00      	add	r7, sp, #0
 800a74e:	60f8      	str	r0, [r7, #12]
 800a750:	60b9      	str	r1, [r7, #8]
 800a752:	607a      	str	r2, [r7, #4]
 800a754:	e02d      	b.n	800a7b2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800a756:	68f8      	ldr	r0, [r7, #12]
 800a758:	f000 f8ce 	bl	800a8f8 <I2C_IsAcknowledgeFailed>
 800a75c:	4603      	mov	r3, r0
 800a75e:	2b00      	cmp	r3, #0
 800a760:	d001      	beq.n	800a766 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800a762:	2301      	movs	r3, #1
 800a764:	e02d      	b.n	800a7c2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800a766:	68bb      	ldr	r3, [r7, #8]
 800a768:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a76c:	d021      	beq.n	800a7b2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800a76e:	f7fc fdd7 	bl	8007320 <HAL_GetTick>
 800a772:	4602      	mov	r2, r0
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	1ad3      	subs	r3, r2, r3
 800a778:	68ba      	ldr	r2, [r7, #8]
 800a77a:	429a      	cmp	r2, r3
 800a77c:	d302      	bcc.n	800a784 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800a77e:	68bb      	ldr	r3, [r7, #8]
 800a780:	2b00      	cmp	r3, #0
 800a782:	d116      	bne.n	800a7b2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800a784:	68fb      	ldr	r3, [r7, #12]
 800a786:	2200      	movs	r2, #0
 800a788:	631a      	str	r2, [r3, #48]	; 0x30
 800a78a:	68fb      	ldr	r3, [r7, #12]
 800a78c:	2220      	movs	r2, #32
 800a78e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a792:	68fb      	ldr	r3, [r7, #12]
 800a794:	2200      	movs	r2, #0
 800a796:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a79a:	68fb      	ldr	r3, [r7, #12]
 800a79c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a79e:	f043 0220 	orr.w	r2, r3, #32
 800a7a2:	68fb      	ldr	r3, [r7, #12]
 800a7a4:	641a      	str	r2, [r3, #64]	; 0x40
 800a7a6:	68fb      	ldr	r3, [r7, #12]
 800a7a8:	2200      	movs	r2, #0
 800a7aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a7ae:	2301      	movs	r3, #1
 800a7b0:	e007      	b.n	800a7c2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800a7b2:	68fb      	ldr	r3, [r7, #12]
 800a7b4:	681b      	ldr	r3, [r3, #0]
 800a7b6:	695b      	ldr	r3, [r3, #20]
 800a7b8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a7bc:	2b80      	cmp	r3, #128	; 0x80
 800a7be:	d1ca      	bne.n	800a756 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800a7c0:	2300      	movs	r3, #0
 800a7c2:	4618      	mov	r0, r3
 800a7c4:	3710      	adds	r7, #16
 800a7c6:	46bd      	mov	sp, r7
 800a7c8:	bd80      	pop	{r7, pc}

0800a7ca <I2C_WaitOnBTFFlagUntilTimeout>:
 800a7ca:	b580      	push	{r7, lr}
 800a7cc:	b084      	sub	sp, #16
 800a7ce:	af00      	add	r7, sp, #0
 800a7d0:	60f8      	str	r0, [r7, #12]
 800a7d2:	60b9      	str	r1, [r7, #8]
 800a7d4:	607a      	str	r2, [r7, #4]
 800a7d6:	e02d      	b.n	800a834 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800a7d8:	68f8      	ldr	r0, [r7, #12]
 800a7da:	f000 f88d 	bl	800a8f8 <I2C_IsAcknowledgeFailed>
 800a7de:	4603      	mov	r3, r0
 800a7e0:	2b00      	cmp	r3, #0
 800a7e2:	d001      	beq.n	800a7e8 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800a7e4:	2301      	movs	r3, #1
 800a7e6:	e02d      	b.n	800a844 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800a7e8:	68bb      	ldr	r3, [r7, #8]
 800a7ea:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a7ee:	d021      	beq.n	800a834 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800a7f0:	f7fc fd96 	bl	8007320 <HAL_GetTick>
 800a7f4:	4602      	mov	r2, r0
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	1ad3      	subs	r3, r2, r3
 800a7fa:	68ba      	ldr	r2, [r7, #8]
 800a7fc:	429a      	cmp	r2, r3
 800a7fe:	d302      	bcc.n	800a806 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800a800:	68bb      	ldr	r3, [r7, #8]
 800a802:	2b00      	cmp	r3, #0
 800a804:	d116      	bne.n	800a834 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800a806:	68fb      	ldr	r3, [r7, #12]
 800a808:	2200      	movs	r2, #0
 800a80a:	631a      	str	r2, [r3, #48]	; 0x30
 800a80c:	68fb      	ldr	r3, [r7, #12]
 800a80e:	2220      	movs	r2, #32
 800a810:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a814:	68fb      	ldr	r3, [r7, #12]
 800a816:	2200      	movs	r2, #0
 800a818:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a81c:	68fb      	ldr	r3, [r7, #12]
 800a81e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a820:	f043 0220 	orr.w	r2, r3, #32
 800a824:	68fb      	ldr	r3, [r7, #12]
 800a826:	641a      	str	r2, [r3, #64]	; 0x40
 800a828:	68fb      	ldr	r3, [r7, #12]
 800a82a:	2200      	movs	r2, #0
 800a82c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a830:	2301      	movs	r3, #1
 800a832:	e007      	b.n	800a844 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800a834:	68fb      	ldr	r3, [r7, #12]
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	695b      	ldr	r3, [r3, #20]
 800a83a:	f003 0304 	and.w	r3, r3, #4
 800a83e:	2b04      	cmp	r3, #4
 800a840:	d1ca      	bne.n	800a7d8 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800a842:	2300      	movs	r3, #0
 800a844:	4618      	mov	r0, r3
 800a846:	3710      	adds	r7, #16
 800a848:	46bd      	mov	sp, r7
 800a84a:	bd80      	pop	{r7, pc}

0800a84c <I2C_WaitOnRXNEFlagUntilTimeout>:
 800a84c:	b580      	push	{r7, lr}
 800a84e:	b084      	sub	sp, #16
 800a850:	af00      	add	r7, sp, #0
 800a852:	60f8      	str	r0, [r7, #12]
 800a854:	60b9      	str	r1, [r7, #8]
 800a856:	607a      	str	r2, [r7, #4]
 800a858:	e042      	b.n	800a8e0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800a85a:	68fb      	ldr	r3, [r7, #12]
 800a85c:	681b      	ldr	r3, [r3, #0]
 800a85e:	695b      	ldr	r3, [r3, #20]
 800a860:	f003 0310 	and.w	r3, r3, #16
 800a864:	2b10      	cmp	r3, #16
 800a866:	d119      	bne.n	800a89c <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 800a868:	68fb      	ldr	r3, [r7, #12]
 800a86a:	681b      	ldr	r3, [r3, #0]
 800a86c:	f06f 0210 	mvn.w	r2, #16
 800a870:	615a      	str	r2, [r3, #20]
 800a872:	68fb      	ldr	r3, [r7, #12]
 800a874:	2200      	movs	r2, #0
 800a876:	631a      	str	r2, [r3, #48]	; 0x30
 800a878:	68fb      	ldr	r3, [r7, #12]
 800a87a:	2220      	movs	r2, #32
 800a87c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a880:	68fb      	ldr	r3, [r7, #12]
 800a882:	2200      	movs	r2, #0
 800a884:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a888:	68fb      	ldr	r3, [r7, #12]
 800a88a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800a88c:	68fb      	ldr	r3, [r7, #12]
 800a88e:	641a      	str	r2, [r3, #64]	; 0x40
 800a890:	68fb      	ldr	r3, [r7, #12]
 800a892:	2200      	movs	r2, #0
 800a894:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a898:	2301      	movs	r3, #1
 800a89a:	e029      	b.n	800a8f0 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800a89c:	f7fc fd40 	bl	8007320 <HAL_GetTick>
 800a8a0:	4602      	mov	r2, r0
 800a8a2:	687b      	ldr	r3, [r7, #4]
 800a8a4:	1ad3      	subs	r3, r2, r3
 800a8a6:	68ba      	ldr	r2, [r7, #8]
 800a8a8:	429a      	cmp	r2, r3
 800a8aa:	d302      	bcc.n	800a8b2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800a8ac:	68bb      	ldr	r3, [r7, #8]
 800a8ae:	2b00      	cmp	r3, #0
 800a8b0:	d116      	bne.n	800a8e0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800a8b2:	68fb      	ldr	r3, [r7, #12]
 800a8b4:	2200      	movs	r2, #0
 800a8b6:	631a      	str	r2, [r3, #48]	; 0x30
 800a8b8:	68fb      	ldr	r3, [r7, #12]
 800a8ba:	2220      	movs	r2, #32
 800a8bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a8c0:	68fb      	ldr	r3, [r7, #12]
 800a8c2:	2200      	movs	r2, #0
 800a8c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a8c8:	68fb      	ldr	r3, [r7, #12]
 800a8ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a8cc:	f043 0220 	orr.w	r2, r3, #32
 800a8d0:	68fb      	ldr	r3, [r7, #12]
 800a8d2:	641a      	str	r2, [r3, #64]	; 0x40
 800a8d4:	68fb      	ldr	r3, [r7, #12]
 800a8d6:	2200      	movs	r2, #0
 800a8d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a8dc:	2301      	movs	r3, #1
 800a8de:	e007      	b.n	800a8f0 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800a8e0:	68fb      	ldr	r3, [r7, #12]
 800a8e2:	681b      	ldr	r3, [r3, #0]
 800a8e4:	695b      	ldr	r3, [r3, #20]
 800a8e6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a8ea:	2b40      	cmp	r3, #64	; 0x40
 800a8ec:	d1b5      	bne.n	800a85a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800a8ee:	2300      	movs	r3, #0
 800a8f0:	4618      	mov	r0, r3
 800a8f2:	3710      	adds	r7, #16
 800a8f4:	46bd      	mov	sp, r7
 800a8f6:	bd80      	pop	{r7, pc}

0800a8f8 <I2C_IsAcknowledgeFailed>:
 800a8f8:	b480      	push	{r7}
 800a8fa:	b083      	sub	sp, #12
 800a8fc:	af00      	add	r7, sp, #0
 800a8fe:	6078      	str	r0, [r7, #4]
 800a900:	687b      	ldr	r3, [r7, #4]
 800a902:	681b      	ldr	r3, [r3, #0]
 800a904:	695b      	ldr	r3, [r3, #20]
 800a906:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800a90a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a90e:	d11b      	bne.n	800a948 <I2C_IsAcknowledgeFailed+0x50>
 800a910:	687b      	ldr	r3, [r7, #4]
 800a912:	681b      	ldr	r3, [r3, #0]
 800a914:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800a918:	615a      	str	r2, [r3, #20]
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	2200      	movs	r2, #0
 800a91e:	631a      	str	r2, [r3, #48]	; 0x30
 800a920:	687b      	ldr	r3, [r7, #4]
 800a922:	2220      	movs	r2, #32
 800a924:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a928:	687b      	ldr	r3, [r7, #4]
 800a92a:	2200      	movs	r2, #0
 800a92c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a930:	687b      	ldr	r3, [r7, #4]
 800a932:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a934:	f043 0204 	orr.w	r2, r3, #4
 800a938:	687b      	ldr	r3, [r7, #4]
 800a93a:	641a      	str	r2, [r3, #64]	; 0x40
 800a93c:	687b      	ldr	r3, [r7, #4]
 800a93e:	2200      	movs	r2, #0
 800a940:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a944:	2301      	movs	r3, #1
 800a946:	e000      	b.n	800a94a <I2C_IsAcknowledgeFailed+0x52>
 800a948:	2300      	movs	r3, #0
 800a94a:	4618      	mov	r0, r3
 800a94c:	370c      	adds	r7, #12
 800a94e:	46bd      	mov	sp, r7
 800a950:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a954:	4770      	bx	lr

0800a956 <HAL_IWDG_Init>:
 800a956:	b580      	push	{r7, lr}
 800a958:	b084      	sub	sp, #16
 800a95a:	af00      	add	r7, sp, #0
 800a95c:	6078      	str	r0, [r7, #4]
 800a95e:	687b      	ldr	r3, [r7, #4]
 800a960:	2b00      	cmp	r3, #0
 800a962:	d101      	bne.n	800a968 <HAL_IWDG_Init+0x12>
 800a964:	2301      	movs	r3, #1
 800a966:	e034      	b.n	800a9d2 <HAL_IWDG_Init+0x7c>
 800a968:	687b      	ldr	r3, [r7, #4]
 800a96a:	681b      	ldr	r3, [r3, #0]
 800a96c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800a970:	601a      	str	r2, [r3, #0]
 800a972:	687b      	ldr	r3, [r7, #4]
 800a974:	681b      	ldr	r3, [r3, #0]
 800a976:	f245 5255 	movw	r2, #21845	; 0x5555
 800a97a:	601a      	str	r2, [r3, #0]
 800a97c:	687b      	ldr	r3, [r7, #4]
 800a97e:	681b      	ldr	r3, [r3, #0]
 800a980:	687a      	ldr	r2, [r7, #4]
 800a982:	6852      	ldr	r2, [r2, #4]
 800a984:	605a      	str	r2, [r3, #4]
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	681b      	ldr	r3, [r3, #0]
 800a98a:	687a      	ldr	r2, [r7, #4]
 800a98c:	6892      	ldr	r2, [r2, #8]
 800a98e:	609a      	str	r2, [r3, #8]
 800a990:	f7fc fcc6 	bl	8007320 <HAL_GetTick>
 800a994:	60f8      	str	r0, [r7, #12]
 800a996:	e00f      	b.n	800a9b8 <HAL_IWDG_Init+0x62>
 800a998:	f7fc fcc2 	bl	8007320 <HAL_GetTick>
 800a99c:	4602      	mov	r2, r0
 800a99e:	68fb      	ldr	r3, [r7, #12]
 800a9a0:	1ad3      	subs	r3, r2, r3
 800a9a2:	2b31      	cmp	r3, #49	; 0x31
 800a9a4:	d908      	bls.n	800a9b8 <HAL_IWDG_Init+0x62>
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	681b      	ldr	r3, [r3, #0]
 800a9aa:	68db      	ldr	r3, [r3, #12]
 800a9ac:	f003 0303 	and.w	r3, r3, #3
 800a9b0:	2b00      	cmp	r3, #0
 800a9b2:	d001      	beq.n	800a9b8 <HAL_IWDG_Init+0x62>
 800a9b4:	2303      	movs	r3, #3
 800a9b6:	e00c      	b.n	800a9d2 <HAL_IWDG_Init+0x7c>
 800a9b8:	687b      	ldr	r3, [r7, #4]
 800a9ba:	681b      	ldr	r3, [r3, #0]
 800a9bc:	68db      	ldr	r3, [r3, #12]
 800a9be:	f003 0303 	and.w	r3, r3, #3
 800a9c2:	2b00      	cmp	r3, #0
 800a9c4:	d1e8      	bne.n	800a998 <HAL_IWDG_Init+0x42>
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	681b      	ldr	r3, [r3, #0]
 800a9ca:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800a9ce:	601a      	str	r2, [r3, #0]
 800a9d0:	2300      	movs	r3, #0
 800a9d2:	4618      	mov	r0, r3
 800a9d4:	3710      	adds	r7, #16
 800a9d6:	46bd      	mov	sp, r7
 800a9d8:	bd80      	pop	{r7, pc}

0800a9da <HAL_IWDG_Refresh>:
 800a9da:	b480      	push	{r7}
 800a9dc:	b083      	sub	sp, #12
 800a9de:	af00      	add	r7, sp, #0
 800a9e0:	6078      	str	r0, [r7, #4]
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	681b      	ldr	r3, [r3, #0]
 800a9e6:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800a9ea:	601a      	str	r2, [r3, #0]
 800a9ec:	2300      	movs	r3, #0
 800a9ee:	4618      	mov	r0, r3
 800a9f0:	370c      	adds	r7, #12
 800a9f2:	46bd      	mov	sp, r7
 800a9f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9f8:	4770      	bx	lr
	...

0800a9fc <HAL_RCC_ClockConfig>:
 800a9fc:	b580      	push	{r7, lr}
 800a9fe:	b084      	sub	sp, #16
 800aa00:	af00      	add	r7, sp, #0
 800aa02:	6078      	str	r0, [r7, #4]
 800aa04:	6039      	str	r1, [r7, #0]
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	2b00      	cmp	r3, #0
 800aa0a:	d101      	bne.n	800aa10 <HAL_RCC_ClockConfig+0x14>
 800aa0c:	2301      	movs	r3, #1
 800aa0e:	e0cc      	b.n	800abaa <HAL_RCC_ClockConfig+0x1ae>
 800aa10:	4b68      	ldr	r3, [pc, #416]	; (800abb4 <HAL_RCC_ClockConfig+0x1b8>)
 800aa12:	681b      	ldr	r3, [r3, #0]
 800aa14:	f003 0307 	and.w	r3, r3, #7
 800aa18:	683a      	ldr	r2, [r7, #0]
 800aa1a:	429a      	cmp	r2, r3
 800aa1c:	d90c      	bls.n	800aa38 <HAL_RCC_ClockConfig+0x3c>
 800aa1e:	4b65      	ldr	r3, [pc, #404]	; (800abb4 <HAL_RCC_ClockConfig+0x1b8>)
 800aa20:	683a      	ldr	r2, [r7, #0]
 800aa22:	b2d2      	uxtb	r2, r2
 800aa24:	701a      	strb	r2, [r3, #0]
 800aa26:	4b63      	ldr	r3, [pc, #396]	; (800abb4 <HAL_RCC_ClockConfig+0x1b8>)
 800aa28:	681b      	ldr	r3, [r3, #0]
 800aa2a:	f003 0307 	and.w	r3, r3, #7
 800aa2e:	683a      	ldr	r2, [r7, #0]
 800aa30:	429a      	cmp	r2, r3
 800aa32:	d001      	beq.n	800aa38 <HAL_RCC_ClockConfig+0x3c>
 800aa34:	2301      	movs	r3, #1
 800aa36:	e0b8      	b.n	800abaa <HAL_RCC_ClockConfig+0x1ae>
 800aa38:	687b      	ldr	r3, [r7, #4]
 800aa3a:	681b      	ldr	r3, [r3, #0]
 800aa3c:	f003 0302 	and.w	r3, r3, #2
 800aa40:	2b00      	cmp	r3, #0
 800aa42:	d020      	beq.n	800aa86 <HAL_RCC_ClockConfig+0x8a>
 800aa44:	687b      	ldr	r3, [r7, #4]
 800aa46:	681b      	ldr	r3, [r3, #0]
 800aa48:	f003 0304 	and.w	r3, r3, #4
 800aa4c:	2b00      	cmp	r3, #0
 800aa4e:	d005      	beq.n	800aa5c <HAL_RCC_ClockConfig+0x60>
 800aa50:	4b59      	ldr	r3, [pc, #356]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aa52:	689b      	ldr	r3, [r3, #8]
 800aa54:	4a58      	ldr	r2, [pc, #352]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aa56:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800aa5a:	6093      	str	r3, [r2, #8]
 800aa5c:	687b      	ldr	r3, [r7, #4]
 800aa5e:	681b      	ldr	r3, [r3, #0]
 800aa60:	f003 0308 	and.w	r3, r3, #8
 800aa64:	2b00      	cmp	r3, #0
 800aa66:	d005      	beq.n	800aa74 <HAL_RCC_ClockConfig+0x78>
 800aa68:	4b53      	ldr	r3, [pc, #332]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aa6a:	689b      	ldr	r3, [r3, #8]
 800aa6c:	4a52      	ldr	r2, [pc, #328]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aa6e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800aa72:	6093      	str	r3, [r2, #8]
 800aa74:	4b50      	ldr	r3, [pc, #320]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aa76:	689b      	ldr	r3, [r3, #8]
 800aa78:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	689b      	ldr	r3, [r3, #8]
 800aa80:	494d      	ldr	r1, [pc, #308]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aa82:	4313      	orrs	r3, r2
 800aa84:	608b      	str	r3, [r1, #8]
 800aa86:	687b      	ldr	r3, [r7, #4]
 800aa88:	681b      	ldr	r3, [r3, #0]
 800aa8a:	f003 0301 	and.w	r3, r3, #1
 800aa8e:	2b00      	cmp	r3, #0
 800aa90:	d044      	beq.n	800ab1c <HAL_RCC_ClockConfig+0x120>
 800aa92:	687b      	ldr	r3, [r7, #4]
 800aa94:	685b      	ldr	r3, [r3, #4]
 800aa96:	2b01      	cmp	r3, #1
 800aa98:	d107      	bne.n	800aaaa <HAL_RCC_ClockConfig+0xae>
 800aa9a:	4b47      	ldr	r3, [pc, #284]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aa9c:	681b      	ldr	r3, [r3, #0]
 800aa9e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	d119      	bne.n	800aada <HAL_RCC_ClockConfig+0xde>
 800aaa6:	2301      	movs	r3, #1
 800aaa8:	e07f      	b.n	800abaa <HAL_RCC_ClockConfig+0x1ae>
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	685b      	ldr	r3, [r3, #4]
 800aaae:	2b02      	cmp	r3, #2
 800aab0:	d003      	beq.n	800aaba <HAL_RCC_ClockConfig+0xbe>
 800aab2:	687b      	ldr	r3, [r7, #4]
 800aab4:	685b      	ldr	r3, [r3, #4]
 800aab6:	2b03      	cmp	r3, #3
 800aab8:	d107      	bne.n	800aaca <HAL_RCC_ClockConfig+0xce>
 800aaba:	4b3f      	ldr	r3, [pc, #252]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aabc:	681b      	ldr	r3, [r3, #0]
 800aabe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800aac2:	2b00      	cmp	r3, #0
 800aac4:	d109      	bne.n	800aada <HAL_RCC_ClockConfig+0xde>
 800aac6:	2301      	movs	r3, #1
 800aac8:	e06f      	b.n	800abaa <HAL_RCC_ClockConfig+0x1ae>
 800aaca:	4b3b      	ldr	r3, [pc, #236]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aacc:	681b      	ldr	r3, [r3, #0]
 800aace:	f003 0302 	and.w	r3, r3, #2
 800aad2:	2b00      	cmp	r3, #0
 800aad4:	d101      	bne.n	800aada <HAL_RCC_ClockConfig+0xde>
 800aad6:	2301      	movs	r3, #1
 800aad8:	e067      	b.n	800abaa <HAL_RCC_ClockConfig+0x1ae>
 800aada:	4b37      	ldr	r3, [pc, #220]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aadc:	689b      	ldr	r3, [r3, #8]
 800aade:	f023 0203 	bic.w	r2, r3, #3
 800aae2:	687b      	ldr	r3, [r7, #4]
 800aae4:	685b      	ldr	r3, [r3, #4]
 800aae6:	4934      	ldr	r1, [pc, #208]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800aae8:	4313      	orrs	r3, r2
 800aaea:	608b      	str	r3, [r1, #8]
 800aaec:	f7fc fc18 	bl	8007320 <HAL_GetTick>
 800aaf0:	60f8      	str	r0, [r7, #12]
 800aaf2:	e00a      	b.n	800ab0a <HAL_RCC_ClockConfig+0x10e>
 800aaf4:	f7fc fc14 	bl	8007320 <HAL_GetTick>
 800aaf8:	4602      	mov	r2, r0
 800aafa:	68fb      	ldr	r3, [r7, #12]
 800aafc:	1ad3      	subs	r3, r2, r3
 800aafe:	f241 3288 	movw	r2, #5000	; 0x1388
 800ab02:	4293      	cmp	r3, r2
 800ab04:	d901      	bls.n	800ab0a <HAL_RCC_ClockConfig+0x10e>
 800ab06:	2303      	movs	r3, #3
 800ab08:	e04f      	b.n	800abaa <HAL_RCC_ClockConfig+0x1ae>
 800ab0a:	4b2b      	ldr	r3, [pc, #172]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800ab0c:	689b      	ldr	r3, [r3, #8]
 800ab0e:	f003 020c 	and.w	r2, r3, #12
 800ab12:	687b      	ldr	r3, [r7, #4]
 800ab14:	685b      	ldr	r3, [r3, #4]
 800ab16:	009b      	lsls	r3, r3, #2
 800ab18:	429a      	cmp	r2, r3
 800ab1a:	d1eb      	bne.n	800aaf4 <HAL_RCC_ClockConfig+0xf8>
 800ab1c:	4b25      	ldr	r3, [pc, #148]	; (800abb4 <HAL_RCC_ClockConfig+0x1b8>)
 800ab1e:	681b      	ldr	r3, [r3, #0]
 800ab20:	f003 0307 	and.w	r3, r3, #7
 800ab24:	683a      	ldr	r2, [r7, #0]
 800ab26:	429a      	cmp	r2, r3
 800ab28:	d20c      	bcs.n	800ab44 <HAL_RCC_ClockConfig+0x148>
 800ab2a:	4b22      	ldr	r3, [pc, #136]	; (800abb4 <HAL_RCC_ClockConfig+0x1b8>)
 800ab2c:	683a      	ldr	r2, [r7, #0]
 800ab2e:	b2d2      	uxtb	r2, r2
 800ab30:	701a      	strb	r2, [r3, #0]
 800ab32:	4b20      	ldr	r3, [pc, #128]	; (800abb4 <HAL_RCC_ClockConfig+0x1b8>)
 800ab34:	681b      	ldr	r3, [r3, #0]
 800ab36:	f003 0307 	and.w	r3, r3, #7
 800ab3a:	683a      	ldr	r2, [r7, #0]
 800ab3c:	429a      	cmp	r2, r3
 800ab3e:	d001      	beq.n	800ab44 <HAL_RCC_ClockConfig+0x148>
 800ab40:	2301      	movs	r3, #1
 800ab42:	e032      	b.n	800abaa <HAL_RCC_ClockConfig+0x1ae>
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	681b      	ldr	r3, [r3, #0]
 800ab48:	f003 0304 	and.w	r3, r3, #4
 800ab4c:	2b00      	cmp	r3, #0
 800ab4e:	d008      	beq.n	800ab62 <HAL_RCC_ClockConfig+0x166>
 800ab50:	4b19      	ldr	r3, [pc, #100]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800ab52:	689b      	ldr	r3, [r3, #8]
 800ab54:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	68db      	ldr	r3, [r3, #12]
 800ab5c:	4916      	ldr	r1, [pc, #88]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800ab5e:	4313      	orrs	r3, r2
 800ab60:	608b      	str	r3, [r1, #8]
 800ab62:	687b      	ldr	r3, [r7, #4]
 800ab64:	681b      	ldr	r3, [r3, #0]
 800ab66:	f003 0308 	and.w	r3, r3, #8
 800ab6a:	2b00      	cmp	r3, #0
 800ab6c:	d009      	beq.n	800ab82 <HAL_RCC_ClockConfig+0x186>
 800ab6e:	4b12      	ldr	r3, [pc, #72]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800ab70:	689b      	ldr	r3, [r3, #8]
 800ab72:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800ab76:	687b      	ldr	r3, [r7, #4]
 800ab78:	691b      	ldr	r3, [r3, #16]
 800ab7a:	00db      	lsls	r3, r3, #3
 800ab7c:	490e      	ldr	r1, [pc, #56]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800ab7e:	4313      	orrs	r3, r2
 800ab80:	608b      	str	r3, [r1, #8]
 800ab82:	f000 f821 	bl	800abc8 <HAL_RCC_GetSysClockFreq>
 800ab86:	4602      	mov	r2, r0
 800ab88:	4b0b      	ldr	r3, [pc, #44]	; (800abb8 <HAL_RCC_ClockConfig+0x1bc>)
 800ab8a:	689b      	ldr	r3, [r3, #8]
 800ab8c:	091b      	lsrs	r3, r3, #4
 800ab8e:	f003 030f 	and.w	r3, r3, #15
 800ab92:	490a      	ldr	r1, [pc, #40]	; (800abbc <HAL_RCC_ClockConfig+0x1c0>)
 800ab94:	5ccb      	ldrb	r3, [r1, r3]
 800ab96:	fa22 f303 	lsr.w	r3, r2, r3
 800ab9a:	4a09      	ldr	r2, [pc, #36]	; (800abc0 <HAL_RCC_ClockConfig+0x1c4>)
 800ab9c:	6013      	str	r3, [r2, #0]
 800ab9e:	4b09      	ldr	r3, [pc, #36]	; (800abc4 <HAL_RCC_ClockConfig+0x1c8>)
 800aba0:	681b      	ldr	r3, [r3, #0]
 800aba2:	4618      	mov	r0, r3
 800aba4:	f7fc fb78 	bl	8007298 <HAL_InitTick>
 800aba8:	2300      	movs	r3, #0
 800abaa:	4618      	mov	r0, r3
 800abac:	3710      	adds	r7, #16
 800abae:	46bd      	mov	sp, r7
 800abb0:	bd80      	pop	{r7, pc}
 800abb2:	bf00      	nop
 800abb4:	40023c00 	.word	0x40023c00
 800abb8:	40023800 	.word	0x40023800
 800abbc:	080108d0 	.word	0x080108d0
 800abc0:	20000128 	.word	0x20000128
 800abc4:	2000012c 	.word	0x2000012c

0800abc8 <HAL_RCC_GetSysClockFreq>:
 800abc8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800abcc:	b090      	sub	sp, #64	; 0x40
 800abce:	af00      	add	r7, sp, #0
 800abd0:	2300      	movs	r3, #0
 800abd2:	637b      	str	r3, [r7, #52]	; 0x34
 800abd4:	2300      	movs	r3, #0
 800abd6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800abd8:	2300      	movs	r3, #0
 800abda:	633b      	str	r3, [r7, #48]	; 0x30
 800abdc:	2300      	movs	r3, #0
 800abde:	63bb      	str	r3, [r7, #56]	; 0x38
 800abe0:	4b59      	ldr	r3, [pc, #356]	; (800ad48 <HAL_RCC_GetSysClockFreq+0x180>)
 800abe2:	689b      	ldr	r3, [r3, #8]
 800abe4:	f003 030c 	and.w	r3, r3, #12
 800abe8:	2b08      	cmp	r3, #8
 800abea:	d00d      	beq.n	800ac08 <HAL_RCC_GetSysClockFreq+0x40>
 800abec:	2b08      	cmp	r3, #8
 800abee:	f200 80a1 	bhi.w	800ad34 <HAL_RCC_GetSysClockFreq+0x16c>
 800abf2:	2b00      	cmp	r3, #0
 800abf4:	d002      	beq.n	800abfc <HAL_RCC_GetSysClockFreq+0x34>
 800abf6:	2b04      	cmp	r3, #4
 800abf8:	d003      	beq.n	800ac02 <HAL_RCC_GetSysClockFreq+0x3a>
 800abfa:	e09b      	b.n	800ad34 <HAL_RCC_GetSysClockFreq+0x16c>
 800abfc:	4b53      	ldr	r3, [pc, #332]	; (800ad4c <HAL_RCC_GetSysClockFreq+0x184>)
 800abfe:	63bb      	str	r3, [r7, #56]	; 0x38
 800ac00:	e09b      	b.n	800ad3a <HAL_RCC_GetSysClockFreq+0x172>
 800ac02:	4b53      	ldr	r3, [pc, #332]	; (800ad50 <HAL_RCC_GetSysClockFreq+0x188>)
 800ac04:	63bb      	str	r3, [r7, #56]	; 0x38
 800ac06:	e098      	b.n	800ad3a <HAL_RCC_GetSysClockFreq+0x172>
 800ac08:	4b4f      	ldr	r3, [pc, #316]	; (800ad48 <HAL_RCC_GetSysClockFreq+0x180>)
 800ac0a:	685b      	ldr	r3, [r3, #4]
 800ac0c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800ac10:	637b      	str	r3, [r7, #52]	; 0x34
 800ac12:	4b4d      	ldr	r3, [pc, #308]	; (800ad48 <HAL_RCC_GetSysClockFreq+0x180>)
 800ac14:	685b      	ldr	r3, [r3, #4]
 800ac16:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800ac1a:	2b00      	cmp	r3, #0
 800ac1c:	d028      	beq.n	800ac70 <HAL_RCC_GetSysClockFreq+0xa8>
 800ac1e:	4b4a      	ldr	r3, [pc, #296]	; (800ad48 <HAL_RCC_GetSysClockFreq+0x180>)
 800ac20:	685b      	ldr	r3, [r3, #4]
 800ac22:	099b      	lsrs	r3, r3, #6
 800ac24:	2200      	movs	r2, #0
 800ac26:	623b      	str	r3, [r7, #32]
 800ac28:	627a      	str	r2, [r7, #36]	; 0x24
 800ac2a:	6a3b      	ldr	r3, [r7, #32]
 800ac2c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800ac30:	2100      	movs	r1, #0
 800ac32:	4b47      	ldr	r3, [pc, #284]	; (800ad50 <HAL_RCC_GetSysClockFreq+0x188>)
 800ac34:	fb03 f201 	mul.w	r2, r3, r1
 800ac38:	2300      	movs	r3, #0
 800ac3a:	fb00 f303 	mul.w	r3, r0, r3
 800ac3e:	4413      	add	r3, r2
 800ac40:	4a43      	ldr	r2, [pc, #268]	; (800ad50 <HAL_RCC_GetSysClockFreq+0x188>)
 800ac42:	fba0 1202 	umull	r1, r2, r0, r2
 800ac46:	62fa      	str	r2, [r7, #44]	; 0x2c
 800ac48:	460a      	mov	r2, r1
 800ac4a:	62ba      	str	r2, [r7, #40]	; 0x28
 800ac4c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ac4e:	4413      	add	r3, r2
 800ac50:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ac52:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ac54:	2200      	movs	r2, #0
 800ac56:	61bb      	str	r3, [r7, #24]
 800ac58:	61fa      	str	r2, [r7, #28]
 800ac5a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800ac5e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800ac62:	f7f5 ffbd 	bl	8000be0 <__aeabi_uldivmod>
 800ac66:	4602      	mov	r2, r0
 800ac68:	460b      	mov	r3, r1
 800ac6a:	4613      	mov	r3, r2
 800ac6c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ac6e:	e053      	b.n	800ad18 <HAL_RCC_GetSysClockFreq+0x150>
 800ac70:	4b35      	ldr	r3, [pc, #212]	; (800ad48 <HAL_RCC_GetSysClockFreq+0x180>)
 800ac72:	685b      	ldr	r3, [r3, #4]
 800ac74:	099b      	lsrs	r3, r3, #6
 800ac76:	2200      	movs	r2, #0
 800ac78:	613b      	str	r3, [r7, #16]
 800ac7a:	617a      	str	r2, [r7, #20]
 800ac7c:	693b      	ldr	r3, [r7, #16]
 800ac7e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800ac82:	f04f 0b00 	mov.w	fp, #0
 800ac86:	4652      	mov	r2, sl
 800ac88:	465b      	mov	r3, fp
 800ac8a:	f04f 0000 	mov.w	r0, #0
 800ac8e:	f04f 0100 	mov.w	r1, #0
 800ac92:	0159      	lsls	r1, r3, #5
 800ac94:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800ac98:	0150      	lsls	r0, r2, #5
 800ac9a:	4602      	mov	r2, r0
 800ac9c:	460b      	mov	r3, r1
 800ac9e:	ebb2 080a 	subs.w	r8, r2, sl
 800aca2:	eb63 090b 	sbc.w	r9, r3, fp
 800aca6:	f04f 0200 	mov.w	r2, #0
 800acaa:	f04f 0300 	mov.w	r3, #0
 800acae:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800acb2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800acb6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800acba:	ebb2 0408 	subs.w	r4, r2, r8
 800acbe:	eb63 0509 	sbc.w	r5, r3, r9
 800acc2:	f04f 0200 	mov.w	r2, #0
 800acc6:	f04f 0300 	mov.w	r3, #0
 800acca:	00eb      	lsls	r3, r5, #3
 800accc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800acd0:	00e2      	lsls	r2, r4, #3
 800acd2:	4614      	mov	r4, r2
 800acd4:	461d      	mov	r5, r3
 800acd6:	eb14 030a 	adds.w	r3, r4, sl
 800acda:	603b      	str	r3, [r7, #0]
 800acdc:	eb45 030b 	adc.w	r3, r5, fp
 800ace0:	607b      	str	r3, [r7, #4]
 800ace2:	f04f 0200 	mov.w	r2, #0
 800ace6:	f04f 0300 	mov.w	r3, #0
 800acea:	e9d7 4500 	ldrd	r4, r5, [r7]
 800acee:	4629      	mov	r1, r5
 800acf0:	028b      	lsls	r3, r1, #10
 800acf2:	4621      	mov	r1, r4
 800acf4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800acf8:	4621      	mov	r1, r4
 800acfa:	028a      	lsls	r2, r1, #10
 800acfc:	4610      	mov	r0, r2
 800acfe:	4619      	mov	r1, r3
 800ad00:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ad02:	2200      	movs	r2, #0
 800ad04:	60bb      	str	r3, [r7, #8]
 800ad06:	60fa      	str	r2, [r7, #12]
 800ad08:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800ad0c:	f7f5 ff68 	bl	8000be0 <__aeabi_uldivmod>
 800ad10:	4602      	mov	r2, r0
 800ad12:	460b      	mov	r3, r1
 800ad14:	4613      	mov	r3, r2
 800ad16:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ad18:	4b0b      	ldr	r3, [pc, #44]	; (800ad48 <HAL_RCC_GetSysClockFreq+0x180>)
 800ad1a:	685b      	ldr	r3, [r3, #4]
 800ad1c:	0c1b      	lsrs	r3, r3, #16
 800ad1e:	f003 0303 	and.w	r3, r3, #3
 800ad22:	3301      	adds	r3, #1
 800ad24:	005b      	lsls	r3, r3, #1
 800ad26:	633b      	str	r3, [r7, #48]	; 0x30
 800ad28:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800ad2a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ad2c:	fbb2 f3f3 	udiv	r3, r2, r3
 800ad30:	63bb      	str	r3, [r7, #56]	; 0x38
 800ad32:	e002      	b.n	800ad3a <HAL_RCC_GetSysClockFreq+0x172>
 800ad34:	4b05      	ldr	r3, [pc, #20]	; (800ad4c <HAL_RCC_GetSysClockFreq+0x184>)
 800ad36:	63bb      	str	r3, [r7, #56]	; 0x38
 800ad38:	bf00      	nop
 800ad3a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ad3c:	4618      	mov	r0, r3
 800ad3e:	3740      	adds	r7, #64	; 0x40
 800ad40:	46bd      	mov	sp, r7
 800ad42:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800ad46:	bf00      	nop
 800ad48:	40023800 	.word	0x40023800
 800ad4c:	00f42400 	.word	0x00f42400
 800ad50:	017d7840 	.word	0x017d7840

0800ad54 <HAL_RCC_GetHCLKFreq>:
 800ad54:	b480      	push	{r7}
 800ad56:	af00      	add	r7, sp, #0
 800ad58:	4b03      	ldr	r3, [pc, #12]	; (800ad68 <HAL_RCC_GetHCLKFreq+0x14>)
 800ad5a:	681b      	ldr	r3, [r3, #0]
 800ad5c:	4618      	mov	r0, r3
 800ad5e:	46bd      	mov	sp, r7
 800ad60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad64:	4770      	bx	lr
 800ad66:	bf00      	nop
 800ad68:	20000128 	.word	0x20000128

0800ad6c <HAL_RCC_GetPCLK1Freq>:
 800ad6c:	b580      	push	{r7, lr}
 800ad6e:	af00      	add	r7, sp, #0
 800ad70:	f7ff fff0 	bl	800ad54 <HAL_RCC_GetHCLKFreq>
 800ad74:	4602      	mov	r2, r0
 800ad76:	4b05      	ldr	r3, [pc, #20]	; (800ad8c <HAL_RCC_GetPCLK1Freq+0x20>)
 800ad78:	689b      	ldr	r3, [r3, #8]
 800ad7a:	0a9b      	lsrs	r3, r3, #10
 800ad7c:	f003 0307 	and.w	r3, r3, #7
 800ad80:	4903      	ldr	r1, [pc, #12]	; (800ad90 <HAL_RCC_GetPCLK1Freq+0x24>)
 800ad82:	5ccb      	ldrb	r3, [r1, r3]
 800ad84:	fa22 f303 	lsr.w	r3, r2, r3
 800ad88:	4618      	mov	r0, r3
 800ad8a:	bd80      	pop	{r7, pc}
 800ad8c:	40023800 	.word	0x40023800
 800ad90:	080108e0 	.word	0x080108e0

0800ad94 <HAL_RCC_GetPCLK2Freq>:
 800ad94:	b580      	push	{r7, lr}
 800ad96:	af00      	add	r7, sp, #0
 800ad98:	f7ff ffdc 	bl	800ad54 <HAL_RCC_GetHCLKFreq>
 800ad9c:	4602      	mov	r2, r0
 800ad9e:	4b05      	ldr	r3, [pc, #20]	; (800adb4 <HAL_RCC_GetPCLK2Freq+0x20>)
 800ada0:	689b      	ldr	r3, [r3, #8]
 800ada2:	0b5b      	lsrs	r3, r3, #13
 800ada4:	f003 0307 	and.w	r3, r3, #7
 800ada8:	4903      	ldr	r1, [pc, #12]	; (800adb8 <HAL_RCC_GetPCLK2Freq+0x24>)
 800adaa:	5ccb      	ldrb	r3, [r1, r3]
 800adac:	fa22 f303 	lsr.w	r3, r2, r3
 800adb0:	4618      	mov	r0, r3
 800adb2:	bd80      	pop	{r7, pc}
 800adb4:	40023800 	.word	0x40023800
 800adb8:	080108e0 	.word	0x080108e0

0800adbc <HAL_RCC_OscConfig>:
 800adbc:	b580      	push	{r7, lr}
 800adbe:	b086      	sub	sp, #24
 800adc0:	af00      	add	r7, sp, #0
 800adc2:	6078      	str	r0, [r7, #4]
 800adc4:	687b      	ldr	r3, [r7, #4]
 800adc6:	2b00      	cmp	r3, #0
 800adc8:	d101      	bne.n	800adce <HAL_RCC_OscConfig+0x12>
 800adca:	2301      	movs	r3, #1
 800adcc:	e273      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800adce:	687b      	ldr	r3, [r7, #4]
 800add0:	681b      	ldr	r3, [r3, #0]
 800add2:	f003 0301 	and.w	r3, r3, #1
 800add6:	2b00      	cmp	r3, #0
 800add8:	d075      	beq.n	800aec6 <HAL_RCC_OscConfig+0x10a>
 800adda:	4b88      	ldr	r3, [pc, #544]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800addc:	689b      	ldr	r3, [r3, #8]
 800adde:	f003 030c 	and.w	r3, r3, #12
 800ade2:	2b04      	cmp	r3, #4
 800ade4:	d00c      	beq.n	800ae00 <HAL_RCC_OscConfig+0x44>
 800ade6:	4b85      	ldr	r3, [pc, #532]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ade8:	689b      	ldr	r3, [r3, #8]
 800adea:	f003 030c 	and.w	r3, r3, #12
 800adee:	2b08      	cmp	r3, #8
 800adf0:	d112      	bne.n	800ae18 <HAL_RCC_OscConfig+0x5c>
 800adf2:	4b82      	ldr	r3, [pc, #520]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800adf4:	685b      	ldr	r3, [r3, #4]
 800adf6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800adfa:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800adfe:	d10b      	bne.n	800ae18 <HAL_RCC_OscConfig+0x5c>
 800ae00:	4b7e      	ldr	r3, [pc, #504]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae02:	681b      	ldr	r3, [r3, #0]
 800ae04:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800ae08:	2b00      	cmp	r3, #0
 800ae0a:	d05b      	beq.n	800aec4 <HAL_RCC_OscConfig+0x108>
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	685b      	ldr	r3, [r3, #4]
 800ae10:	2b00      	cmp	r3, #0
 800ae12:	d157      	bne.n	800aec4 <HAL_RCC_OscConfig+0x108>
 800ae14:	2301      	movs	r3, #1
 800ae16:	e24e      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	685b      	ldr	r3, [r3, #4]
 800ae1c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ae20:	d106      	bne.n	800ae30 <HAL_RCC_OscConfig+0x74>
 800ae22:	4b76      	ldr	r3, [pc, #472]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae24:	681b      	ldr	r3, [r3, #0]
 800ae26:	4a75      	ldr	r2, [pc, #468]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae28:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ae2c:	6013      	str	r3, [r2, #0]
 800ae2e:	e01d      	b.n	800ae6c <HAL_RCC_OscConfig+0xb0>
 800ae30:	687b      	ldr	r3, [r7, #4]
 800ae32:	685b      	ldr	r3, [r3, #4]
 800ae34:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800ae38:	d10c      	bne.n	800ae54 <HAL_RCC_OscConfig+0x98>
 800ae3a:	4b70      	ldr	r3, [pc, #448]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae3c:	681b      	ldr	r3, [r3, #0]
 800ae3e:	4a6f      	ldr	r2, [pc, #444]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae40:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800ae44:	6013      	str	r3, [r2, #0]
 800ae46:	4b6d      	ldr	r3, [pc, #436]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae48:	681b      	ldr	r3, [r3, #0]
 800ae4a:	4a6c      	ldr	r2, [pc, #432]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae4c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ae50:	6013      	str	r3, [r2, #0]
 800ae52:	e00b      	b.n	800ae6c <HAL_RCC_OscConfig+0xb0>
 800ae54:	4b69      	ldr	r3, [pc, #420]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae56:	681b      	ldr	r3, [r3, #0]
 800ae58:	4a68      	ldr	r2, [pc, #416]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae5a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800ae5e:	6013      	str	r3, [r2, #0]
 800ae60:	4b66      	ldr	r3, [pc, #408]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae62:	681b      	ldr	r3, [r3, #0]
 800ae64:	4a65      	ldr	r2, [pc, #404]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae66:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800ae6a:	6013      	str	r3, [r2, #0]
 800ae6c:	687b      	ldr	r3, [r7, #4]
 800ae6e:	685b      	ldr	r3, [r3, #4]
 800ae70:	2b00      	cmp	r3, #0
 800ae72:	d013      	beq.n	800ae9c <HAL_RCC_OscConfig+0xe0>
 800ae74:	f7fc fa54 	bl	8007320 <HAL_GetTick>
 800ae78:	6138      	str	r0, [r7, #16]
 800ae7a:	e008      	b.n	800ae8e <HAL_RCC_OscConfig+0xd2>
 800ae7c:	f7fc fa50 	bl	8007320 <HAL_GetTick>
 800ae80:	4602      	mov	r2, r0
 800ae82:	693b      	ldr	r3, [r7, #16]
 800ae84:	1ad3      	subs	r3, r2, r3
 800ae86:	2b64      	cmp	r3, #100	; 0x64
 800ae88:	d901      	bls.n	800ae8e <HAL_RCC_OscConfig+0xd2>
 800ae8a:	2303      	movs	r3, #3
 800ae8c:	e213      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800ae8e:	4b5b      	ldr	r3, [pc, #364]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800ae90:	681b      	ldr	r3, [r3, #0]
 800ae92:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800ae96:	2b00      	cmp	r3, #0
 800ae98:	d0f0      	beq.n	800ae7c <HAL_RCC_OscConfig+0xc0>
 800ae9a:	e014      	b.n	800aec6 <HAL_RCC_OscConfig+0x10a>
 800ae9c:	f7fc fa40 	bl	8007320 <HAL_GetTick>
 800aea0:	6138      	str	r0, [r7, #16]
 800aea2:	e008      	b.n	800aeb6 <HAL_RCC_OscConfig+0xfa>
 800aea4:	f7fc fa3c 	bl	8007320 <HAL_GetTick>
 800aea8:	4602      	mov	r2, r0
 800aeaa:	693b      	ldr	r3, [r7, #16]
 800aeac:	1ad3      	subs	r3, r2, r3
 800aeae:	2b64      	cmp	r3, #100	; 0x64
 800aeb0:	d901      	bls.n	800aeb6 <HAL_RCC_OscConfig+0xfa>
 800aeb2:	2303      	movs	r3, #3
 800aeb4:	e1ff      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800aeb6:	4b51      	ldr	r3, [pc, #324]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800aeb8:	681b      	ldr	r3, [r3, #0]
 800aeba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800aebe:	2b00      	cmp	r3, #0
 800aec0:	d1f0      	bne.n	800aea4 <HAL_RCC_OscConfig+0xe8>
 800aec2:	e000      	b.n	800aec6 <HAL_RCC_OscConfig+0x10a>
 800aec4:	bf00      	nop
 800aec6:	687b      	ldr	r3, [r7, #4]
 800aec8:	681b      	ldr	r3, [r3, #0]
 800aeca:	f003 0302 	and.w	r3, r3, #2
 800aece:	2b00      	cmp	r3, #0
 800aed0:	d063      	beq.n	800af9a <HAL_RCC_OscConfig+0x1de>
 800aed2:	4b4a      	ldr	r3, [pc, #296]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800aed4:	689b      	ldr	r3, [r3, #8]
 800aed6:	f003 030c 	and.w	r3, r3, #12
 800aeda:	2b00      	cmp	r3, #0
 800aedc:	d00b      	beq.n	800aef6 <HAL_RCC_OscConfig+0x13a>
 800aede:	4b47      	ldr	r3, [pc, #284]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800aee0:	689b      	ldr	r3, [r3, #8]
 800aee2:	f003 030c 	and.w	r3, r3, #12
 800aee6:	2b08      	cmp	r3, #8
 800aee8:	d11c      	bne.n	800af24 <HAL_RCC_OscConfig+0x168>
 800aeea:	4b44      	ldr	r3, [pc, #272]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800aeec:	685b      	ldr	r3, [r3, #4]
 800aeee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800aef2:	2b00      	cmp	r3, #0
 800aef4:	d116      	bne.n	800af24 <HAL_RCC_OscConfig+0x168>
 800aef6:	4b41      	ldr	r3, [pc, #260]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800aef8:	681b      	ldr	r3, [r3, #0]
 800aefa:	f003 0302 	and.w	r3, r3, #2
 800aefe:	2b00      	cmp	r3, #0
 800af00:	d005      	beq.n	800af0e <HAL_RCC_OscConfig+0x152>
 800af02:	687b      	ldr	r3, [r7, #4]
 800af04:	68db      	ldr	r3, [r3, #12]
 800af06:	2b01      	cmp	r3, #1
 800af08:	d001      	beq.n	800af0e <HAL_RCC_OscConfig+0x152>
 800af0a:	2301      	movs	r3, #1
 800af0c:	e1d3      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800af0e:	4b3b      	ldr	r3, [pc, #236]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800af10:	681b      	ldr	r3, [r3, #0]
 800af12:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800af16:	687b      	ldr	r3, [r7, #4]
 800af18:	691b      	ldr	r3, [r3, #16]
 800af1a:	00db      	lsls	r3, r3, #3
 800af1c:	4937      	ldr	r1, [pc, #220]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800af1e:	4313      	orrs	r3, r2
 800af20:	600b      	str	r3, [r1, #0]
 800af22:	e03a      	b.n	800af9a <HAL_RCC_OscConfig+0x1de>
 800af24:	687b      	ldr	r3, [r7, #4]
 800af26:	68db      	ldr	r3, [r3, #12]
 800af28:	2b00      	cmp	r3, #0
 800af2a:	d020      	beq.n	800af6e <HAL_RCC_OscConfig+0x1b2>
 800af2c:	4b34      	ldr	r3, [pc, #208]	; (800b000 <HAL_RCC_OscConfig+0x244>)
 800af2e:	2201      	movs	r2, #1
 800af30:	601a      	str	r2, [r3, #0]
 800af32:	f7fc f9f5 	bl	8007320 <HAL_GetTick>
 800af36:	6138      	str	r0, [r7, #16]
 800af38:	e008      	b.n	800af4c <HAL_RCC_OscConfig+0x190>
 800af3a:	f7fc f9f1 	bl	8007320 <HAL_GetTick>
 800af3e:	4602      	mov	r2, r0
 800af40:	693b      	ldr	r3, [r7, #16]
 800af42:	1ad3      	subs	r3, r2, r3
 800af44:	2b02      	cmp	r3, #2
 800af46:	d901      	bls.n	800af4c <HAL_RCC_OscConfig+0x190>
 800af48:	2303      	movs	r3, #3
 800af4a:	e1b4      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800af4c:	4b2b      	ldr	r3, [pc, #172]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800af4e:	681b      	ldr	r3, [r3, #0]
 800af50:	f003 0302 	and.w	r3, r3, #2
 800af54:	2b00      	cmp	r3, #0
 800af56:	d0f0      	beq.n	800af3a <HAL_RCC_OscConfig+0x17e>
 800af58:	4b28      	ldr	r3, [pc, #160]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800af5a:	681b      	ldr	r3, [r3, #0]
 800af5c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800af60:	687b      	ldr	r3, [r7, #4]
 800af62:	691b      	ldr	r3, [r3, #16]
 800af64:	00db      	lsls	r3, r3, #3
 800af66:	4925      	ldr	r1, [pc, #148]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800af68:	4313      	orrs	r3, r2
 800af6a:	600b      	str	r3, [r1, #0]
 800af6c:	e015      	b.n	800af9a <HAL_RCC_OscConfig+0x1de>
 800af6e:	4b24      	ldr	r3, [pc, #144]	; (800b000 <HAL_RCC_OscConfig+0x244>)
 800af70:	2200      	movs	r2, #0
 800af72:	601a      	str	r2, [r3, #0]
 800af74:	f7fc f9d4 	bl	8007320 <HAL_GetTick>
 800af78:	6138      	str	r0, [r7, #16]
 800af7a:	e008      	b.n	800af8e <HAL_RCC_OscConfig+0x1d2>
 800af7c:	f7fc f9d0 	bl	8007320 <HAL_GetTick>
 800af80:	4602      	mov	r2, r0
 800af82:	693b      	ldr	r3, [r7, #16]
 800af84:	1ad3      	subs	r3, r2, r3
 800af86:	2b02      	cmp	r3, #2
 800af88:	d901      	bls.n	800af8e <HAL_RCC_OscConfig+0x1d2>
 800af8a:	2303      	movs	r3, #3
 800af8c:	e193      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800af8e:	4b1b      	ldr	r3, [pc, #108]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800af90:	681b      	ldr	r3, [r3, #0]
 800af92:	f003 0302 	and.w	r3, r3, #2
 800af96:	2b00      	cmp	r3, #0
 800af98:	d1f0      	bne.n	800af7c <HAL_RCC_OscConfig+0x1c0>
 800af9a:	687b      	ldr	r3, [r7, #4]
 800af9c:	681b      	ldr	r3, [r3, #0]
 800af9e:	f003 0308 	and.w	r3, r3, #8
 800afa2:	2b00      	cmp	r3, #0
 800afa4:	d036      	beq.n	800b014 <HAL_RCC_OscConfig+0x258>
 800afa6:	687b      	ldr	r3, [r7, #4]
 800afa8:	695b      	ldr	r3, [r3, #20]
 800afaa:	2b00      	cmp	r3, #0
 800afac:	d016      	beq.n	800afdc <HAL_RCC_OscConfig+0x220>
 800afae:	4b15      	ldr	r3, [pc, #84]	; (800b004 <HAL_RCC_OscConfig+0x248>)
 800afb0:	2201      	movs	r2, #1
 800afb2:	601a      	str	r2, [r3, #0]
 800afb4:	f7fc f9b4 	bl	8007320 <HAL_GetTick>
 800afb8:	6138      	str	r0, [r7, #16]
 800afba:	e008      	b.n	800afce <HAL_RCC_OscConfig+0x212>
 800afbc:	f7fc f9b0 	bl	8007320 <HAL_GetTick>
 800afc0:	4602      	mov	r2, r0
 800afc2:	693b      	ldr	r3, [r7, #16]
 800afc4:	1ad3      	subs	r3, r2, r3
 800afc6:	2b02      	cmp	r3, #2
 800afc8:	d901      	bls.n	800afce <HAL_RCC_OscConfig+0x212>
 800afca:	2303      	movs	r3, #3
 800afcc:	e173      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800afce:	4b0b      	ldr	r3, [pc, #44]	; (800affc <HAL_RCC_OscConfig+0x240>)
 800afd0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800afd2:	f003 0302 	and.w	r3, r3, #2
 800afd6:	2b00      	cmp	r3, #0
 800afd8:	d0f0      	beq.n	800afbc <HAL_RCC_OscConfig+0x200>
 800afda:	e01b      	b.n	800b014 <HAL_RCC_OscConfig+0x258>
 800afdc:	4b09      	ldr	r3, [pc, #36]	; (800b004 <HAL_RCC_OscConfig+0x248>)
 800afde:	2200      	movs	r2, #0
 800afe0:	601a      	str	r2, [r3, #0]
 800afe2:	f7fc f99d 	bl	8007320 <HAL_GetTick>
 800afe6:	6138      	str	r0, [r7, #16]
 800afe8:	e00e      	b.n	800b008 <HAL_RCC_OscConfig+0x24c>
 800afea:	f7fc f999 	bl	8007320 <HAL_GetTick>
 800afee:	4602      	mov	r2, r0
 800aff0:	693b      	ldr	r3, [r7, #16]
 800aff2:	1ad3      	subs	r3, r2, r3
 800aff4:	2b02      	cmp	r3, #2
 800aff6:	d907      	bls.n	800b008 <HAL_RCC_OscConfig+0x24c>
 800aff8:	2303      	movs	r3, #3
 800affa:	e15c      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800affc:	40023800 	.word	0x40023800
 800b000:	42470000 	.word	0x42470000
 800b004:	42470e80 	.word	0x42470e80
 800b008:	4b8a      	ldr	r3, [pc, #552]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b00a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b00c:	f003 0302 	and.w	r3, r3, #2
 800b010:	2b00      	cmp	r3, #0
 800b012:	d1ea      	bne.n	800afea <HAL_RCC_OscConfig+0x22e>
 800b014:	687b      	ldr	r3, [r7, #4]
 800b016:	681b      	ldr	r3, [r3, #0]
 800b018:	f003 0304 	and.w	r3, r3, #4
 800b01c:	2b00      	cmp	r3, #0
 800b01e:	f000 8097 	beq.w	800b150 <HAL_RCC_OscConfig+0x394>
 800b022:	2300      	movs	r3, #0
 800b024:	75fb      	strb	r3, [r7, #23]
 800b026:	4b83      	ldr	r3, [pc, #524]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b028:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b02a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b02e:	2b00      	cmp	r3, #0
 800b030:	d10f      	bne.n	800b052 <HAL_RCC_OscConfig+0x296>
 800b032:	2300      	movs	r3, #0
 800b034:	60bb      	str	r3, [r7, #8]
 800b036:	4b7f      	ldr	r3, [pc, #508]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b038:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b03a:	4a7e      	ldr	r2, [pc, #504]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b03c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b040:	6413      	str	r3, [r2, #64]	; 0x40
 800b042:	4b7c      	ldr	r3, [pc, #496]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b044:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b046:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b04a:	60bb      	str	r3, [r7, #8]
 800b04c:	68bb      	ldr	r3, [r7, #8]
 800b04e:	2301      	movs	r3, #1
 800b050:	75fb      	strb	r3, [r7, #23]
 800b052:	4b79      	ldr	r3, [pc, #484]	; (800b238 <HAL_RCC_OscConfig+0x47c>)
 800b054:	681b      	ldr	r3, [r3, #0]
 800b056:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b05a:	2b00      	cmp	r3, #0
 800b05c:	d118      	bne.n	800b090 <HAL_RCC_OscConfig+0x2d4>
 800b05e:	4b76      	ldr	r3, [pc, #472]	; (800b238 <HAL_RCC_OscConfig+0x47c>)
 800b060:	681b      	ldr	r3, [r3, #0]
 800b062:	4a75      	ldr	r2, [pc, #468]	; (800b238 <HAL_RCC_OscConfig+0x47c>)
 800b064:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b068:	6013      	str	r3, [r2, #0]
 800b06a:	f7fc f959 	bl	8007320 <HAL_GetTick>
 800b06e:	6138      	str	r0, [r7, #16]
 800b070:	e008      	b.n	800b084 <HAL_RCC_OscConfig+0x2c8>
 800b072:	f7fc f955 	bl	8007320 <HAL_GetTick>
 800b076:	4602      	mov	r2, r0
 800b078:	693b      	ldr	r3, [r7, #16]
 800b07a:	1ad3      	subs	r3, r2, r3
 800b07c:	2b02      	cmp	r3, #2
 800b07e:	d901      	bls.n	800b084 <HAL_RCC_OscConfig+0x2c8>
 800b080:	2303      	movs	r3, #3
 800b082:	e118      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b084:	4b6c      	ldr	r3, [pc, #432]	; (800b238 <HAL_RCC_OscConfig+0x47c>)
 800b086:	681b      	ldr	r3, [r3, #0]
 800b088:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b08c:	2b00      	cmp	r3, #0
 800b08e:	d0f0      	beq.n	800b072 <HAL_RCC_OscConfig+0x2b6>
 800b090:	687b      	ldr	r3, [r7, #4]
 800b092:	689b      	ldr	r3, [r3, #8]
 800b094:	2b01      	cmp	r3, #1
 800b096:	d106      	bne.n	800b0a6 <HAL_RCC_OscConfig+0x2ea>
 800b098:	4b66      	ldr	r3, [pc, #408]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b09a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b09c:	4a65      	ldr	r2, [pc, #404]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b09e:	f043 0301 	orr.w	r3, r3, #1
 800b0a2:	6713      	str	r3, [r2, #112]	; 0x70
 800b0a4:	e01c      	b.n	800b0e0 <HAL_RCC_OscConfig+0x324>
 800b0a6:	687b      	ldr	r3, [r7, #4]
 800b0a8:	689b      	ldr	r3, [r3, #8]
 800b0aa:	2b05      	cmp	r3, #5
 800b0ac:	d10c      	bne.n	800b0c8 <HAL_RCC_OscConfig+0x30c>
 800b0ae:	4b61      	ldr	r3, [pc, #388]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b0b2:	4a60      	ldr	r2, [pc, #384]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0b4:	f043 0304 	orr.w	r3, r3, #4
 800b0b8:	6713      	str	r3, [r2, #112]	; 0x70
 800b0ba:	4b5e      	ldr	r3, [pc, #376]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b0be:	4a5d      	ldr	r2, [pc, #372]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0c0:	f043 0301 	orr.w	r3, r3, #1
 800b0c4:	6713      	str	r3, [r2, #112]	; 0x70
 800b0c6:	e00b      	b.n	800b0e0 <HAL_RCC_OscConfig+0x324>
 800b0c8:	4b5a      	ldr	r3, [pc, #360]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0ca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b0cc:	4a59      	ldr	r2, [pc, #356]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0ce:	f023 0301 	bic.w	r3, r3, #1
 800b0d2:	6713      	str	r3, [r2, #112]	; 0x70
 800b0d4:	4b57      	ldr	r3, [pc, #348]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0d6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b0d8:	4a56      	ldr	r2, [pc, #344]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b0da:	f023 0304 	bic.w	r3, r3, #4
 800b0de:	6713      	str	r3, [r2, #112]	; 0x70
 800b0e0:	687b      	ldr	r3, [r7, #4]
 800b0e2:	689b      	ldr	r3, [r3, #8]
 800b0e4:	2b00      	cmp	r3, #0
 800b0e6:	d015      	beq.n	800b114 <HAL_RCC_OscConfig+0x358>
 800b0e8:	f7fc f91a 	bl	8007320 <HAL_GetTick>
 800b0ec:	6138      	str	r0, [r7, #16]
 800b0ee:	e00a      	b.n	800b106 <HAL_RCC_OscConfig+0x34a>
 800b0f0:	f7fc f916 	bl	8007320 <HAL_GetTick>
 800b0f4:	4602      	mov	r2, r0
 800b0f6:	693b      	ldr	r3, [r7, #16]
 800b0f8:	1ad3      	subs	r3, r2, r3
 800b0fa:	f241 3288 	movw	r2, #5000	; 0x1388
 800b0fe:	4293      	cmp	r3, r2
 800b100:	d901      	bls.n	800b106 <HAL_RCC_OscConfig+0x34a>
 800b102:	2303      	movs	r3, #3
 800b104:	e0d7      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b106:	4b4b      	ldr	r3, [pc, #300]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b108:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b10a:	f003 0302 	and.w	r3, r3, #2
 800b10e:	2b00      	cmp	r3, #0
 800b110:	d0ee      	beq.n	800b0f0 <HAL_RCC_OscConfig+0x334>
 800b112:	e014      	b.n	800b13e <HAL_RCC_OscConfig+0x382>
 800b114:	f7fc f904 	bl	8007320 <HAL_GetTick>
 800b118:	6138      	str	r0, [r7, #16]
 800b11a:	e00a      	b.n	800b132 <HAL_RCC_OscConfig+0x376>
 800b11c:	f7fc f900 	bl	8007320 <HAL_GetTick>
 800b120:	4602      	mov	r2, r0
 800b122:	693b      	ldr	r3, [r7, #16]
 800b124:	1ad3      	subs	r3, r2, r3
 800b126:	f241 3288 	movw	r2, #5000	; 0x1388
 800b12a:	4293      	cmp	r3, r2
 800b12c:	d901      	bls.n	800b132 <HAL_RCC_OscConfig+0x376>
 800b12e:	2303      	movs	r3, #3
 800b130:	e0c1      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b132:	4b40      	ldr	r3, [pc, #256]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b134:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b136:	f003 0302 	and.w	r3, r3, #2
 800b13a:	2b00      	cmp	r3, #0
 800b13c:	d1ee      	bne.n	800b11c <HAL_RCC_OscConfig+0x360>
 800b13e:	7dfb      	ldrb	r3, [r7, #23]
 800b140:	2b01      	cmp	r3, #1
 800b142:	d105      	bne.n	800b150 <HAL_RCC_OscConfig+0x394>
 800b144:	4b3b      	ldr	r3, [pc, #236]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b146:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b148:	4a3a      	ldr	r2, [pc, #232]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b14a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b14e:	6413      	str	r3, [r2, #64]	; 0x40
 800b150:	687b      	ldr	r3, [r7, #4]
 800b152:	699b      	ldr	r3, [r3, #24]
 800b154:	2b00      	cmp	r3, #0
 800b156:	f000 80ad 	beq.w	800b2b4 <HAL_RCC_OscConfig+0x4f8>
 800b15a:	4b36      	ldr	r3, [pc, #216]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b15c:	689b      	ldr	r3, [r3, #8]
 800b15e:	f003 030c 	and.w	r3, r3, #12
 800b162:	2b08      	cmp	r3, #8
 800b164:	d060      	beq.n	800b228 <HAL_RCC_OscConfig+0x46c>
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	699b      	ldr	r3, [r3, #24]
 800b16a:	2b02      	cmp	r3, #2
 800b16c:	d145      	bne.n	800b1fa <HAL_RCC_OscConfig+0x43e>
 800b16e:	4b33      	ldr	r3, [pc, #204]	; (800b23c <HAL_RCC_OscConfig+0x480>)
 800b170:	2200      	movs	r2, #0
 800b172:	601a      	str	r2, [r3, #0]
 800b174:	f7fc f8d4 	bl	8007320 <HAL_GetTick>
 800b178:	6138      	str	r0, [r7, #16]
 800b17a:	e008      	b.n	800b18e <HAL_RCC_OscConfig+0x3d2>
 800b17c:	f7fc f8d0 	bl	8007320 <HAL_GetTick>
 800b180:	4602      	mov	r2, r0
 800b182:	693b      	ldr	r3, [r7, #16]
 800b184:	1ad3      	subs	r3, r2, r3
 800b186:	2b02      	cmp	r3, #2
 800b188:	d901      	bls.n	800b18e <HAL_RCC_OscConfig+0x3d2>
 800b18a:	2303      	movs	r3, #3
 800b18c:	e093      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b18e:	4b29      	ldr	r3, [pc, #164]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b190:	681b      	ldr	r3, [r3, #0]
 800b192:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b196:	2b00      	cmp	r3, #0
 800b198:	d1f0      	bne.n	800b17c <HAL_RCC_OscConfig+0x3c0>
 800b19a:	687b      	ldr	r3, [r7, #4]
 800b19c:	69da      	ldr	r2, [r3, #28]
 800b19e:	687b      	ldr	r3, [r7, #4]
 800b1a0:	6a1b      	ldr	r3, [r3, #32]
 800b1a2:	431a      	orrs	r2, r3
 800b1a4:	687b      	ldr	r3, [r7, #4]
 800b1a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b1a8:	019b      	lsls	r3, r3, #6
 800b1aa:	431a      	orrs	r2, r3
 800b1ac:	687b      	ldr	r3, [r7, #4]
 800b1ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b1b0:	085b      	lsrs	r3, r3, #1
 800b1b2:	3b01      	subs	r3, #1
 800b1b4:	041b      	lsls	r3, r3, #16
 800b1b6:	431a      	orrs	r2, r3
 800b1b8:	687b      	ldr	r3, [r7, #4]
 800b1ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1bc:	061b      	lsls	r3, r3, #24
 800b1be:	431a      	orrs	r2, r3
 800b1c0:	687b      	ldr	r3, [r7, #4]
 800b1c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b1c4:	071b      	lsls	r3, r3, #28
 800b1c6:	491b      	ldr	r1, [pc, #108]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b1c8:	4313      	orrs	r3, r2
 800b1ca:	604b      	str	r3, [r1, #4]
 800b1cc:	4b1b      	ldr	r3, [pc, #108]	; (800b23c <HAL_RCC_OscConfig+0x480>)
 800b1ce:	2201      	movs	r2, #1
 800b1d0:	601a      	str	r2, [r3, #0]
 800b1d2:	f7fc f8a5 	bl	8007320 <HAL_GetTick>
 800b1d6:	6138      	str	r0, [r7, #16]
 800b1d8:	e008      	b.n	800b1ec <HAL_RCC_OscConfig+0x430>
 800b1da:	f7fc f8a1 	bl	8007320 <HAL_GetTick>
 800b1de:	4602      	mov	r2, r0
 800b1e0:	693b      	ldr	r3, [r7, #16]
 800b1e2:	1ad3      	subs	r3, r2, r3
 800b1e4:	2b02      	cmp	r3, #2
 800b1e6:	d901      	bls.n	800b1ec <HAL_RCC_OscConfig+0x430>
 800b1e8:	2303      	movs	r3, #3
 800b1ea:	e064      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b1ec:	4b11      	ldr	r3, [pc, #68]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b1ee:	681b      	ldr	r3, [r3, #0]
 800b1f0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b1f4:	2b00      	cmp	r3, #0
 800b1f6:	d0f0      	beq.n	800b1da <HAL_RCC_OscConfig+0x41e>
 800b1f8:	e05c      	b.n	800b2b4 <HAL_RCC_OscConfig+0x4f8>
 800b1fa:	4b10      	ldr	r3, [pc, #64]	; (800b23c <HAL_RCC_OscConfig+0x480>)
 800b1fc:	2200      	movs	r2, #0
 800b1fe:	601a      	str	r2, [r3, #0]
 800b200:	f7fc f88e 	bl	8007320 <HAL_GetTick>
 800b204:	6138      	str	r0, [r7, #16]
 800b206:	e008      	b.n	800b21a <HAL_RCC_OscConfig+0x45e>
 800b208:	f7fc f88a 	bl	8007320 <HAL_GetTick>
 800b20c:	4602      	mov	r2, r0
 800b20e:	693b      	ldr	r3, [r7, #16]
 800b210:	1ad3      	subs	r3, r2, r3
 800b212:	2b02      	cmp	r3, #2
 800b214:	d901      	bls.n	800b21a <HAL_RCC_OscConfig+0x45e>
 800b216:	2303      	movs	r3, #3
 800b218:	e04d      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b21a:	4b06      	ldr	r3, [pc, #24]	; (800b234 <HAL_RCC_OscConfig+0x478>)
 800b21c:	681b      	ldr	r3, [r3, #0]
 800b21e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b222:	2b00      	cmp	r3, #0
 800b224:	d1f0      	bne.n	800b208 <HAL_RCC_OscConfig+0x44c>
 800b226:	e045      	b.n	800b2b4 <HAL_RCC_OscConfig+0x4f8>
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	699b      	ldr	r3, [r3, #24]
 800b22c:	2b01      	cmp	r3, #1
 800b22e:	d107      	bne.n	800b240 <HAL_RCC_OscConfig+0x484>
 800b230:	2301      	movs	r3, #1
 800b232:	e040      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b234:	40023800 	.word	0x40023800
 800b238:	40007000 	.word	0x40007000
 800b23c:	42470060 	.word	0x42470060
 800b240:	4b1f      	ldr	r3, [pc, #124]	; (800b2c0 <HAL_RCC_OscConfig+0x504>)
 800b242:	685b      	ldr	r3, [r3, #4]
 800b244:	60fb      	str	r3, [r7, #12]
 800b246:	687b      	ldr	r3, [r7, #4]
 800b248:	699b      	ldr	r3, [r3, #24]
 800b24a:	2b01      	cmp	r3, #1
 800b24c:	d030      	beq.n	800b2b0 <HAL_RCC_OscConfig+0x4f4>
 800b24e:	68fb      	ldr	r3, [r7, #12]
 800b250:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800b254:	687b      	ldr	r3, [r7, #4]
 800b256:	69db      	ldr	r3, [r3, #28]
 800b258:	429a      	cmp	r2, r3
 800b25a:	d129      	bne.n	800b2b0 <HAL_RCC_OscConfig+0x4f4>
 800b25c:	68fb      	ldr	r3, [r7, #12]
 800b25e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800b262:	687b      	ldr	r3, [r7, #4]
 800b264:	6a1b      	ldr	r3, [r3, #32]
 800b266:	429a      	cmp	r2, r3
 800b268:	d122      	bne.n	800b2b0 <HAL_RCC_OscConfig+0x4f4>
 800b26a:	68fa      	ldr	r2, [r7, #12]
 800b26c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800b270:	4013      	ands	r3, r2
 800b272:	687a      	ldr	r2, [r7, #4]
 800b274:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b276:	0192      	lsls	r2, r2, #6
 800b278:	4293      	cmp	r3, r2
 800b27a:	d119      	bne.n	800b2b0 <HAL_RCC_OscConfig+0x4f4>
 800b27c:	68fb      	ldr	r3, [r7, #12]
 800b27e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800b282:	687b      	ldr	r3, [r7, #4]
 800b284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b286:	085b      	lsrs	r3, r3, #1
 800b288:	3b01      	subs	r3, #1
 800b28a:	041b      	lsls	r3, r3, #16
 800b28c:	429a      	cmp	r2, r3
 800b28e:	d10f      	bne.n	800b2b0 <HAL_RCC_OscConfig+0x4f4>
 800b290:	68fb      	ldr	r3, [r7, #12]
 800b292:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b29a:	061b      	lsls	r3, r3, #24
 800b29c:	429a      	cmp	r2, r3
 800b29e:	d107      	bne.n	800b2b0 <HAL_RCC_OscConfig+0x4f4>
 800b2a0:	68fb      	ldr	r3, [r7, #12]
 800b2a2:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 800b2a6:	687b      	ldr	r3, [r7, #4]
 800b2a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b2aa:	071b      	lsls	r3, r3, #28
 800b2ac:	429a      	cmp	r2, r3
 800b2ae:	d001      	beq.n	800b2b4 <HAL_RCC_OscConfig+0x4f8>
 800b2b0:	2301      	movs	r3, #1
 800b2b2:	e000      	b.n	800b2b6 <HAL_RCC_OscConfig+0x4fa>
 800b2b4:	2300      	movs	r3, #0
 800b2b6:	4618      	mov	r0, r3
 800b2b8:	3718      	adds	r7, #24
 800b2ba:	46bd      	mov	sp, r7
 800b2bc:	bd80      	pop	{r7, pc}
 800b2be:	bf00      	nop
 800b2c0:	40023800 	.word	0x40023800

0800b2c4 <HAL_TIM_Base_Init>:
 800b2c4:	b580      	push	{r7, lr}
 800b2c6:	b082      	sub	sp, #8
 800b2c8:	af00      	add	r7, sp, #0
 800b2ca:	6078      	str	r0, [r7, #4]
 800b2cc:	687b      	ldr	r3, [r7, #4]
 800b2ce:	2b00      	cmp	r3, #0
 800b2d0:	d101      	bne.n	800b2d6 <HAL_TIM_Base_Init+0x12>
 800b2d2:	2301      	movs	r3, #1
 800b2d4:	e041      	b.n	800b35a <HAL_TIM_Base_Init+0x96>
 800b2d6:	687b      	ldr	r3, [r7, #4]
 800b2d8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b2dc:	b2db      	uxtb	r3, r3
 800b2de:	2b00      	cmp	r3, #0
 800b2e0:	d106      	bne.n	800b2f0 <HAL_TIM_Base_Init+0x2c>
 800b2e2:	687b      	ldr	r3, [r7, #4]
 800b2e4:	2200      	movs	r2, #0
 800b2e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2ea:	6878      	ldr	r0, [r7, #4]
 800b2ec:	f7fb fc2a 	bl	8006b44 <HAL_TIM_Base_MspInit>
 800b2f0:	687b      	ldr	r3, [r7, #4]
 800b2f2:	2202      	movs	r2, #2
 800b2f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	681a      	ldr	r2, [r3, #0]
 800b2fc:	687b      	ldr	r3, [r7, #4]
 800b2fe:	3304      	adds	r3, #4
 800b300:	4619      	mov	r1, r3
 800b302:	4610      	mov	r0, r2
 800b304:	f000 fb38 	bl	800b978 <TIM_Base_SetConfig>
 800b308:	687b      	ldr	r3, [r7, #4]
 800b30a:	2201      	movs	r2, #1
 800b30c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800b310:	687b      	ldr	r3, [r7, #4]
 800b312:	2201      	movs	r2, #1
 800b314:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	2201      	movs	r2, #1
 800b31c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b320:	687b      	ldr	r3, [r7, #4]
 800b322:	2201      	movs	r2, #1
 800b324:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b328:	687b      	ldr	r3, [r7, #4]
 800b32a:	2201      	movs	r2, #1
 800b32c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b330:	687b      	ldr	r3, [r7, #4]
 800b332:	2201      	movs	r2, #1
 800b334:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b338:	687b      	ldr	r3, [r7, #4]
 800b33a:	2201      	movs	r2, #1
 800b33c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	2201      	movs	r2, #1
 800b344:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b348:	687b      	ldr	r3, [r7, #4]
 800b34a:	2201      	movs	r2, #1
 800b34c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	2201      	movs	r2, #1
 800b354:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b358:	2300      	movs	r3, #0
 800b35a:	4618      	mov	r0, r3
 800b35c:	3708      	adds	r7, #8
 800b35e:	46bd      	mov	sp, r7
 800b360:	bd80      	pop	{r7, pc}
	...

0800b364 <HAL_TIM_Base_Start>:
 800b364:	b480      	push	{r7}
 800b366:	b085      	sub	sp, #20
 800b368:	af00      	add	r7, sp, #0
 800b36a:	6078      	str	r0, [r7, #4]
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b372:	b2db      	uxtb	r3, r3
 800b374:	2b01      	cmp	r3, #1
 800b376:	d001      	beq.n	800b37c <HAL_TIM_Base_Start+0x18>
 800b378:	2301      	movs	r3, #1
 800b37a:	e046      	b.n	800b40a <HAL_TIM_Base_Start+0xa6>
 800b37c:	687b      	ldr	r3, [r7, #4]
 800b37e:	2202      	movs	r2, #2
 800b380:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b384:	687b      	ldr	r3, [r7, #4]
 800b386:	681b      	ldr	r3, [r3, #0]
 800b388:	4a23      	ldr	r2, [pc, #140]	; (800b418 <HAL_TIM_Base_Start+0xb4>)
 800b38a:	4293      	cmp	r3, r2
 800b38c:	d022      	beq.n	800b3d4 <HAL_TIM_Base_Start+0x70>
 800b38e:	687b      	ldr	r3, [r7, #4]
 800b390:	681b      	ldr	r3, [r3, #0]
 800b392:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b396:	d01d      	beq.n	800b3d4 <HAL_TIM_Base_Start+0x70>
 800b398:	687b      	ldr	r3, [r7, #4]
 800b39a:	681b      	ldr	r3, [r3, #0]
 800b39c:	4a1f      	ldr	r2, [pc, #124]	; (800b41c <HAL_TIM_Base_Start+0xb8>)
 800b39e:	4293      	cmp	r3, r2
 800b3a0:	d018      	beq.n	800b3d4 <HAL_TIM_Base_Start+0x70>
 800b3a2:	687b      	ldr	r3, [r7, #4]
 800b3a4:	681b      	ldr	r3, [r3, #0]
 800b3a6:	4a1e      	ldr	r2, [pc, #120]	; (800b420 <HAL_TIM_Base_Start+0xbc>)
 800b3a8:	4293      	cmp	r3, r2
 800b3aa:	d013      	beq.n	800b3d4 <HAL_TIM_Base_Start+0x70>
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	681b      	ldr	r3, [r3, #0]
 800b3b0:	4a1c      	ldr	r2, [pc, #112]	; (800b424 <HAL_TIM_Base_Start+0xc0>)
 800b3b2:	4293      	cmp	r3, r2
 800b3b4:	d00e      	beq.n	800b3d4 <HAL_TIM_Base_Start+0x70>
 800b3b6:	687b      	ldr	r3, [r7, #4]
 800b3b8:	681b      	ldr	r3, [r3, #0]
 800b3ba:	4a1b      	ldr	r2, [pc, #108]	; (800b428 <HAL_TIM_Base_Start+0xc4>)
 800b3bc:	4293      	cmp	r3, r2
 800b3be:	d009      	beq.n	800b3d4 <HAL_TIM_Base_Start+0x70>
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	681b      	ldr	r3, [r3, #0]
 800b3c4:	4a19      	ldr	r2, [pc, #100]	; (800b42c <HAL_TIM_Base_Start+0xc8>)
 800b3c6:	4293      	cmp	r3, r2
 800b3c8:	d004      	beq.n	800b3d4 <HAL_TIM_Base_Start+0x70>
 800b3ca:	687b      	ldr	r3, [r7, #4]
 800b3cc:	681b      	ldr	r3, [r3, #0]
 800b3ce:	4a18      	ldr	r2, [pc, #96]	; (800b430 <HAL_TIM_Base_Start+0xcc>)
 800b3d0:	4293      	cmp	r3, r2
 800b3d2:	d111      	bne.n	800b3f8 <HAL_TIM_Base_Start+0x94>
 800b3d4:	687b      	ldr	r3, [r7, #4]
 800b3d6:	681b      	ldr	r3, [r3, #0]
 800b3d8:	689b      	ldr	r3, [r3, #8]
 800b3da:	f003 0307 	and.w	r3, r3, #7
 800b3de:	60fb      	str	r3, [r7, #12]
 800b3e0:	68fb      	ldr	r3, [r7, #12]
 800b3e2:	2b06      	cmp	r3, #6
 800b3e4:	d010      	beq.n	800b408 <HAL_TIM_Base_Start+0xa4>
 800b3e6:	687b      	ldr	r3, [r7, #4]
 800b3e8:	681b      	ldr	r3, [r3, #0]
 800b3ea:	681a      	ldr	r2, [r3, #0]
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	681b      	ldr	r3, [r3, #0]
 800b3f0:	f042 0201 	orr.w	r2, r2, #1
 800b3f4:	601a      	str	r2, [r3, #0]
 800b3f6:	e007      	b.n	800b408 <HAL_TIM_Base_Start+0xa4>
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	681b      	ldr	r3, [r3, #0]
 800b3fc:	681a      	ldr	r2, [r3, #0]
 800b3fe:	687b      	ldr	r3, [r7, #4]
 800b400:	681b      	ldr	r3, [r3, #0]
 800b402:	f042 0201 	orr.w	r2, r2, #1
 800b406:	601a      	str	r2, [r3, #0]
 800b408:	2300      	movs	r3, #0
 800b40a:	4618      	mov	r0, r3
 800b40c:	3714      	adds	r7, #20
 800b40e:	46bd      	mov	sp, r7
 800b410:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b414:	4770      	bx	lr
 800b416:	bf00      	nop
 800b418:	40010000 	.word	0x40010000
 800b41c:	40000400 	.word	0x40000400
 800b420:	40000800 	.word	0x40000800
 800b424:	40000c00 	.word	0x40000c00
 800b428:	40010400 	.word	0x40010400
 800b42c:	40014000 	.word	0x40014000
 800b430:	40001800 	.word	0x40001800

0800b434 <HAL_TIM_PWM_Init>:
 800b434:	b580      	push	{r7, lr}
 800b436:	b082      	sub	sp, #8
 800b438:	af00      	add	r7, sp, #0
 800b43a:	6078      	str	r0, [r7, #4]
 800b43c:	687b      	ldr	r3, [r7, #4]
 800b43e:	2b00      	cmp	r3, #0
 800b440:	d101      	bne.n	800b446 <HAL_TIM_PWM_Init+0x12>
 800b442:	2301      	movs	r3, #1
 800b444:	e041      	b.n	800b4ca <HAL_TIM_PWM_Init+0x96>
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b44c:	b2db      	uxtb	r3, r3
 800b44e:	2b00      	cmp	r3, #0
 800b450:	d106      	bne.n	800b460 <HAL_TIM_PWM_Init+0x2c>
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	2200      	movs	r2, #0
 800b456:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b45a:	6878      	ldr	r0, [r7, #4]
 800b45c:	f7fb fb50 	bl	8006b00 <HAL_TIM_PWM_MspInit>
 800b460:	687b      	ldr	r3, [r7, #4]
 800b462:	2202      	movs	r2, #2
 800b464:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	681a      	ldr	r2, [r3, #0]
 800b46c:	687b      	ldr	r3, [r7, #4]
 800b46e:	3304      	adds	r3, #4
 800b470:	4619      	mov	r1, r3
 800b472:	4610      	mov	r0, r2
 800b474:	f000 fa80 	bl	800b978 <TIM_Base_SetConfig>
 800b478:	687b      	ldr	r3, [r7, #4]
 800b47a:	2201      	movs	r2, #1
 800b47c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800b480:	687b      	ldr	r3, [r7, #4]
 800b482:	2201      	movs	r2, #1
 800b484:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	2201      	movs	r2, #1
 800b48c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b490:	687b      	ldr	r3, [r7, #4]
 800b492:	2201      	movs	r2, #1
 800b494:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b498:	687b      	ldr	r3, [r7, #4]
 800b49a:	2201      	movs	r2, #1
 800b49c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	2201      	movs	r2, #1
 800b4a4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	2201      	movs	r2, #1
 800b4ac:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b4b0:	687b      	ldr	r3, [r7, #4]
 800b4b2:	2201      	movs	r2, #1
 800b4b4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b4b8:	687b      	ldr	r3, [r7, #4]
 800b4ba:	2201      	movs	r2, #1
 800b4bc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	2201      	movs	r2, #1
 800b4c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b4c8:	2300      	movs	r3, #0
 800b4ca:	4618      	mov	r0, r3
 800b4cc:	3708      	adds	r7, #8
 800b4ce:	46bd      	mov	sp, r7
 800b4d0:	bd80      	pop	{r7, pc}
	...

0800b4d4 <HAL_TIM_PWM_Start>:
 800b4d4:	b580      	push	{r7, lr}
 800b4d6:	b084      	sub	sp, #16
 800b4d8:	af00      	add	r7, sp, #0
 800b4da:	6078      	str	r0, [r7, #4]
 800b4dc:	6039      	str	r1, [r7, #0]
 800b4de:	683b      	ldr	r3, [r7, #0]
 800b4e0:	2b00      	cmp	r3, #0
 800b4e2:	d109      	bne.n	800b4f8 <HAL_TIM_PWM_Start+0x24>
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b4ea:	b2db      	uxtb	r3, r3
 800b4ec:	2b01      	cmp	r3, #1
 800b4ee:	bf14      	ite	ne
 800b4f0:	2301      	movne	r3, #1
 800b4f2:	2300      	moveq	r3, #0
 800b4f4:	b2db      	uxtb	r3, r3
 800b4f6:	e022      	b.n	800b53e <HAL_TIM_PWM_Start+0x6a>
 800b4f8:	683b      	ldr	r3, [r7, #0]
 800b4fa:	2b04      	cmp	r3, #4
 800b4fc:	d109      	bne.n	800b512 <HAL_TIM_PWM_Start+0x3e>
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800b504:	b2db      	uxtb	r3, r3
 800b506:	2b01      	cmp	r3, #1
 800b508:	bf14      	ite	ne
 800b50a:	2301      	movne	r3, #1
 800b50c:	2300      	moveq	r3, #0
 800b50e:	b2db      	uxtb	r3, r3
 800b510:	e015      	b.n	800b53e <HAL_TIM_PWM_Start+0x6a>
 800b512:	683b      	ldr	r3, [r7, #0]
 800b514:	2b08      	cmp	r3, #8
 800b516:	d109      	bne.n	800b52c <HAL_TIM_PWM_Start+0x58>
 800b518:	687b      	ldr	r3, [r7, #4]
 800b51a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800b51e:	b2db      	uxtb	r3, r3
 800b520:	2b01      	cmp	r3, #1
 800b522:	bf14      	ite	ne
 800b524:	2301      	movne	r3, #1
 800b526:	2300      	moveq	r3, #0
 800b528:	b2db      	uxtb	r3, r3
 800b52a:	e008      	b.n	800b53e <HAL_TIM_PWM_Start+0x6a>
 800b52c:	687b      	ldr	r3, [r7, #4]
 800b52e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800b532:	b2db      	uxtb	r3, r3
 800b534:	2b01      	cmp	r3, #1
 800b536:	bf14      	ite	ne
 800b538:	2301      	movne	r3, #1
 800b53a:	2300      	moveq	r3, #0
 800b53c:	b2db      	uxtb	r3, r3
 800b53e:	2b00      	cmp	r3, #0
 800b540:	d001      	beq.n	800b546 <HAL_TIM_PWM_Start+0x72>
 800b542:	2301      	movs	r3, #1
 800b544:	e07c      	b.n	800b640 <HAL_TIM_PWM_Start+0x16c>
 800b546:	683b      	ldr	r3, [r7, #0]
 800b548:	2b00      	cmp	r3, #0
 800b54a:	d104      	bne.n	800b556 <HAL_TIM_PWM_Start+0x82>
 800b54c:	687b      	ldr	r3, [r7, #4]
 800b54e:	2202      	movs	r2, #2
 800b550:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b554:	e013      	b.n	800b57e <HAL_TIM_PWM_Start+0xaa>
 800b556:	683b      	ldr	r3, [r7, #0]
 800b558:	2b04      	cmp	r3, #4
 800b55a:	d104      	bne.n	800b566 <HAL_TIM_PWM_Start+0x92>
 800b55c:	687b      	ldr	r3, [r7, #4]
 800b55e:	2202      	movs	r2, #2
 800b560:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b564:	e00b      	b.n	800b57e <HAL_TIM_PWM_Start+0xaa>
 800b566:	683b      	ldr	r3, [r7, #0]
 800b568:	2b08      	cmp	r3, #8
 800b56a:	d104      	bne.n	800b576 <HAL_TIM_PWM_Start+0xa2>
 800b56c:	687b      	ldr	r3, [r7, #4]
 800b56e:	2202      	movs	r2, #2
 800b570:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b574:	e003      	b.n	800b57e <HAL_TIM_PWM_Start+0xaa>
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	2202      	movs	r2, #2
 800b57a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b57e:	687b      	ldr	r3, [r7, #4]
 800b580:	681b      	ldr	r3, [r3, #0]
 800b582:	2201      	movs	r2, #1
 800b584:	6839      	ldr	r1, [r7, #0]
 800b586:	4618      	mov	r0, r3
 800b588:	f000 fce0 	bl	800bf4c <TIM_CCxChannelCmd>
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	681b      	ldr	r3, [r3, #0]
 800b590:	4a2d      	ldr	r2, [pc, #180]	; (800b648 <HAL_TIM_PWM_Start+0x174>)
 800b592:	4293      	cmp	r3, r2
 800b594:	d004      	beq.n	800b5a0 <HAL_TIM_PWM_Start+0xcc>
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	681b      	ldr	r3, [r3, #0]
 800b59a:	4a2c      	ldr	r2, [pc, #176]	; (800b64c <HAL_TIM_PWM_Start+0x178>)
 800b59c:	4293      	cmp	r3, r2
 800b59e:	d101      	bne.n	800b5a4 <HAL_TIM_PWM_Start+0xd0>
 800b5a0:	2301      	movs	r3, #1
 800b5a2:	e000      	b.n	800b5a6 <HAL_TIM_PWM_Start+0xd2>
 800b5a4:	2300      	movs	r3, #0
 800b5a6:	2b00      	cmp	r3, #0
 800b5a8:	d007      	beq.n	800b5ba <HAL_TIM_PWM_Start+0xe6>
 800b5aa:	687b      	ldr	r3, [r7, #4]
 800b5ac:	681b      	ldr	r3, [r3, #0]
 800b5ae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800b5b0:	687b      	ldr	r3, [r7, #4]
 800b5b2:	681b      	ldr	r3, [r3, #0]
 800b5b4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b5b8:	645a      	str	r2, [r3, #68]	; 0x44
 800b5ba:	687b      	ldr	r3, [r7, #4]
 800b5bc:	681b      	ldr	r3, [r3, #0]
 800b5be:	4a22      	ldr	r2, [pc, #136]	; (800b648 <HAL_TIM_PWM_Start+0x174>)
 800b5c0:	4293      	cmp	r3, r2
 800b5c2:	d022      	beq.n	800b60a <HAL_TIM_PWM_Start+0x136>
 800b5c4:	687b      	ldr	r3, [r7, #4]
 800b5c6:	681b      	ldr	r3, [r3, #0]
 800b5c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b5cc:	d01d      	beq.n	800b60a <HAL_TIM_PWM_Start+0x136>
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	681b      	ldr	r3, [r3, #0]
 800b5d2:	4a1f      	ldr	r2, [pc, #124]	; (800b650 <HAL_TIM_PWM_Start+0x17c>)
 800b5d4:	4293      	cmp	r3, r2
 800b5d6:	d018      	beq.n	800b60a <HAL_TIM_PWM_Start+0x136>
 800b5d8:	687b      	ldr	r3, [r7, #4]
 800b5da:	681b      	ldr	r3, [r3, #0]
 800b5dc:	4a1d      	ldr	r2, [pc, #116]	; (800b654 <HAL_TIM_PWM_Start+0x180>)
 800b5de:	4293      	cmp	r3, r2
 800b5e0:	d013      	beq.n	800b60a <HAL_TIM_PWM_Start+0x136>
 800b5e2:	687b      	ldr	r3, [r7, #4]
 800b5e4:	681b      	ldr	r3, [r3, #0]
 800b5e6:	4a1c      	ldr	r2, [pc, #112]	; (800b658 <HAL_TIM_PWM_Start+0x184>)
 800b5e8:	4293      	cmp	r3, r2
 800b5ea:	d00e      	beq.n	800b60a <HAL_TIM_PWM_Start+0x136>
 800b5ec:	687b      	ldr	r3, [r7, #4]
 800b5ee:	681b      	ldr	r3, [r3, #0]
 800b5f0:	4a16      	ldr	r2, [pc, #88]	; (800b64c <HAL_TIM_PWM_Start+0x178>)
 800b5f2:	4293      	cmp	r3, r2
 800b5f4:	d009      	beq.n	800b60a <HAL_TIM_PWM_Start+0x136>
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	681b      	ldr	r3, [r3, #0]
 800b5fa:	4a18      	ldr	r2, [pc, #96]	; (800b65c <HAL_TIM_PWM_Start+0x188>)
 800b5fc:	4293      	cmp	r3, r2
 800b5fe:	d004      	beq.n	800b60a <HAL_TIM_PWM_Start+0x136>
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	681b      	ldr	r3, [r3, #0]
 800b604:	4a16      	ldr	r2, [pc, #88]	; (800b660 <HAL_TIM_PWM_Start+0x18c>)
 800b606:	4293      	cmp	r3, r2
 800b608:	d111      	bne.n	800b62e <HAL_TIM_PWM_Start+0x15a>
 800b60a:	687b      	ldr	r3, [r7, #4]
 800b60c:	681b      	ldr	r3, [r3, #0]
 800b60e:	689b      	ldr	r3, [r3, #8]
 800b610:	f003 0307 	and.w	r3, r3, #7
 800b614:	60fb      	str	r3, [r7, #12]
 800b616:	68fb      	ldr	r3, [r7, #12]
 800b618:	2b06      	cmp	r3, #6
 800b61a:	d010      	beq.n	800b63e <HAL_TIM_PWM_Start+0x16a>
 800b61c:	687b      	ldr	r3, [r7, #4]
 800b61e:	681b      	ldr	r3, [r3, #0]
 800b620:	681a      	ldr	r2, [r3, #0]
 800b622:	687b      	ldr	r3, [r7, #4]
 800b624:	681b      	ldr	r3, [r3, #0]
 800b626:	f042 0201 	orr.w	r2, r2, #1
 800b62a:	601a      	str	r2, [r3, #0]
 800b62c:	e007      	b.n	800b63e <HAL_TIM_PWM_Start+0x16a>
 800b62e:	687b      	ldr	r3, [r7, #4]
 800b630:	681b      	ldr	r3, [r3, #0]
 800b632:	681a      	ldr	r2, [r3, #0]
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	681b      	ldr	r3, [r3, #0]
 800b638:	f042 0201 	orr.w	r2, r2, #1
 800b63c:	601a      	str	r2, [r3, #0]
 800b63e:	2300      	movs	r3, #0
 800b640:	4618      	mov	r0, r3
 800b642:	3710      	adds	r7, #16
 800b644:	46bd      	mov	sp, r7
 800b646:	bd80      	pop	{r7, pc}
 800b648:	40010000 	.word	0x40010000
 800b64c:	40010400 	.word	0x40010400
 800b650:	40000400 	.word	0x40000400
 800b654:	40000800 	.word	0x40000800
 800b658:	40000c00 	.word	0x40000c00
 800b65c:	40014000 	.word	0x40014000
 800b660:	40001800 	.word	0x40001800

0800b664 <HAL_TIM_PWM_ConfigChannel>:
 800b664:	b580      	push	{r7, lr}
 800b666:	b086      	sub	sp, #24
 800b668:	af00      	add	r7, sp, #0
 800b66a:	60f8      	str	r0, [r7, #12]
 800b66c:	60b9      	str	r1, [r7, #8]
 800b66e:	607a      	str	r2, [r7, #4]
 800b670:	2300      	movs	r3, #0
 800b672:	75fb      	strb	r3, [r7, #23]
 800b674:	68fb      	ldr	r3, [r7, #12]
 800b676:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b67a:	2b01      	cmp	r3, #1
 800b67c:	d101      	bne.n	800b682 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800b67e:	2302      	movs	r3, #2
 800b680:	e0ae      	b.n	800b7e0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800b682:	68fb      	ldr	r3, [r7, #12]
 800b684:	2201      	movs	r2, #1
 800b686:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b68a:	687b      	ldr	r3, [r7, #4]
 800b68c:	2b0c      	cmp	r3, #12
 800b68e:	f200 809f 	bhi.w	800b7d0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800b692:	a201      	add	r2, pc, #4	; (adr r2, 800b698 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800b694:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b698:	0800b6cd 	.word	0x0800b6cd
 800b69c:	0800b7d1 	.word	0x0800b7d1
 800b6a0:	0800b7d1 	.word	0x0800b7d1
 800b6a4:	0800b7d1 	.word	0x0800b7d1
 800b6a8:	0800b70d 	.word	0x0800b70d
 800b6ac:	0800b7d1 	.word	0x0800b7d1
 800b6b0:	0800b7d1 	.word	0x0800b7d1
 800b6b4:	0800b7d1 	.word	0x0800b7d1
 800b6b8:	0800b74f 	.word	0x0800b74f
 800b6bc:	0800b7d1 	.word	0x0800b7d1
 800b6c0:	0800b7d1 	.word	0x0800b7d1
 800b6c4:	0800b7d1 	.word	0x0800b7d1
 800b6c8:	0800b78f 	.word	0x0800b78f
 800b6cc:	68fb      	ldr	r3, [r7, #12]
 800b6ce:	681b      	ldr	r3, [r3, #0]
 800b6d0:	68b9      	ldr	r1, [r7, #8]
 800b6d2:	4618      	mov	r0, r3
 800b6d4:	f000 f9f0 	bl	800bab8 <TIM_OC1_SetConfig>
 800b6d8:	68fb      	ldr	r3, [r7, #12]
 800b6da:	681b      	ldr	r3, [r3, #0]
 800b6dc:	699a      	ldr	r2, [r3, #24]
 800b6de:	68fb      	ldr	r3, [r7, #12]
 800b6e0:	681b      	ldr	r3, [r3, #0]
 800b6e2:	f042 0208 	orr.w	r2, r2, #8
 800b6e6:	619a      	str	r2, [r3, #24]
 800b6e8:	68fb      	ldr	r3, [r7, #12]
 800b6ea:	681b      	ldr	r3, [r3, #0]
 800b6ec:	699a      	ldr	r2, [r3, #24]
 800b6ee:	68fb      	ldr	r3, [r7, #12]
 800b6f0:	681b      	ldr	r3, [r3, #0]
 800b6f2:	f022 0204 	bic.w	r2, r2, #4
 800b6f6:	619a      	str	r2, [r3, #24]
 800b6f8:	68fb      	ldr	r3, [r7, #12]
 800b6fa:	681b      	ldr	r3, [r3, #0]
 800b6fc:	6999      	ldr	r1, [r3, #24]
 800b6fe:	68bb      	ldr	r3, [r7, #8]
 800b700:	691a      	ldr	r2, [r3, #16]
 800b702:	68fb      	ldr	r3, [r7, #12]
 800b704:	681b      	ldr	r3, [r3, #0]
 800b706:	430a      	orrs	r2, r1
 800b708:	619a      	str	r2, [r3, #24]
 800b70a:	e064      	b.n	800b7d6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b70c:	68fb      	ldr	r3, [r7, #12]
 800b70e:	681b      	ldr	r3, [r3, #0]
 800b710:	68b9      	ldr	r1, [r7, #8]
 800b712:	4618      	mov	r0, r3
 800b714:	f000 fa40 	bl	800bb98 <TIM_OC2_SetConfig>
 800b718:	68fb      	ldr	r3, [r7, #12]
 800b71a:	681b      	ldr	r3, [r3, #0]
 800b71c:	699a      	ldr	r2, [r3, #24]
 800b71e:	68fb      	ldr	r3, [r7, #12]
 800b720:	681b      	ldr	r3, [r3, #0]
 800b722:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b726:	619a      	str	r2, [r3, #24]
 800b728:	68fb      	ldr	r3, [r7, #12]
 800b72a:	681b      	ldr	r3, [r3, #0]
 800b72c:	699a      	ldr	r2, [r3, #24]
 800b72e:	68fb      	ldr	r3, [r7, #12]
 800b730:	681b      	ldr	r3, [r3, #0]
 800b732:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b736:	619a      	str	r2, [r3, #24]
 800b738:	68fb      	ldr	r3, [r7, #12]
 800b73a:	681b      	ldr	r3, [r3, #0]
 800b73c:	6999      	ldr	r1, [r3, #24]
 800b73e:	68bb      	ldr	r3, [r7, #8]
 800b740:	691b      	ldr	r3, [r3, #16]
 800b742:	021a      	lsls	r2, r3, #8
 800b744:	68fb      	ldr	r3, [r7, #12]
 800b746:	681b      	ldr	r3, [r3, #0]
 800b748:	430a      	orrs	r2, r1
 800b74a:	619a      	str	r2, [r3, #24]
 800b74c:	e043      	b.n	800b7d6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b74e:	68fb      	ldr	r3, [r7, #12]
 800b750:	681b      	ldr	r3, [r3, #0]
 800b752:	68b9      	ldr	r1, [r7, #8]
 800b754:	4618      	mov	r0, r3
 800b756:	f000 fa95 	bl	800bc84 <TIM_OC3_SetConfig>
 800b75a:	68fb      	ldr	r3, [r7, #12]
 800b75c:	681b      	ldr	r3, [r3, #0]
 800b75e:	69da      	ldr	r2, [r3, #28]
 800b760:	68fb      	ldr	r3, [r7, #12]
 800b762:	681b      	ldr	r3, [r3, #0]
 800b764:	f042 0208 	orr.w	r2, r2, #8
 800b768:	61da      	str	r2, [r3, #28]
 800b76a:	68fb      	ldr	r3, [r7, #12]
 800b76c:	681b      	ldr	r3, [r3, #0]
 800b76e:	69da      	ldr	r2, [r3, #28]
 800b770:	68fb      	ldr	r3, [r7, #12]
 800b772:	681b      	ldr	r3, [r3, #0]
 800b774:	f022 0204 	bic.w	r2, r2, #4
 800b778:	61da      	str	r2, [r3, #28]
 800b77a:	68fb      	ldr	r3, [r7, #12]
 800b77c:	681b      	ldr	r3, [r3, #0]
 800b77e:	69d9      	ldr	r1, [r3, #28]
 800b780:	68bb      	ldr	r3, [r7, #8]
 800b782:	691a      	ldr	r2, [r3, #16]
 800b784:	68fb      	ldr	r3, [r7, #12]
 800b786:	681b      	ldr	r3, [r3, #0]
 800b788:	430a      	orrs	r2, r1
 800b78a:	61da      	str	r2, [r3, #28]
 800b78c:	e023      	b.n	800b7d6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b78e:	68fb      	ldr	r3, [r7, #12]
 800b790:	681b      	ldr	r3, [r3, #0]
 800b792:	68b9      	ldr	r1, [r7, #8]
 800b794:	4618      	mov	r0, r3
 800b796:	f000 fae9 	bl	800bd6c <TIM_OC4_SetConfig>
 800b79a:	68fb      	ldr	r3, [r7, #12]
 800b79c:	681b      	ldr	r3, [r3, #0]
 800b79e:	69da      	ldr	r2, [r3, #28]
 800b7a0:	68fb      	ldr	r3, [r7, #12]
 800b7a2:	681b      	ldr	r3, [r3, #0]
 800b7a4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b7a8:	61da      	str	r2, [r3, #28]
 800b7aa:	68fb      	ldr	r3, [r7, #12]
 800b7ac:	681b      	ldr	r3, [r3, #0]
 800b7ae:	69da      	ldr	r2, [r3, #28]
 800b7b0:	68fb      	ldr	r3, [r7, #12]
 800b7b2:	681b      	ldr	r3, [r3, #0]
 800b7b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b7b8:	61da      	str	r2, [r3, #28]
 800b7ba:	68fb      	ldr	r3, [r7, #12]
 800b7bc:	681b      	ldr	r3, [r3, #0]
 800b7be:	69d9      	ldr	r1, [r3, #28]
 800b7c0:	68bb      	ldr	r3, [r7, #8]
 800b7c2:	691b      	ldr	r3, [r3, #16]
 800b7c4:	021a      	lsls	r2, r3, #8
 800b7c6:	68fb      	ldr	r3, [r7, #12]
 800b7c8:	681b      	ldr	r3, [r3, #0]
 800b7ca:	430a      	orrs	r2, r1
 800b7cc:	61da      	str	r2, [r3, #28]
 800b7ce:	e002      	b.n	800b7d6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b7d0:	2301      	movs	r3, #1
 800b7d2:	75fb      	strb	r3, [r7, #23]
 800b7d4:	bf00      	nop
 800b7d6:	68fb      	ldr	r3, [r7, #12]
 800b7d8:	2200      	movs	r2, #0
 800b7da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b7de:	7dfb      	ldrb	r3, [r7, #23]
 800b7e0:	4618      	mov	r0, r3
 800b7e2:	3718      	adds	r7, #24
 800b7e4:	46bd      	mov	sp, r7
 800b7e6:	bd80      	pop	{r7, pc}

0800b7e8 <HAL_TIM_ConfigClockSource>:
 800b7e8:	b580      	push	{r7, lr}
 800b7ea:	b084      	sub	sp, #16
 800b7ec:	af00      	add	r7, sp, #0
 800b7ee:	6078      	str	r0, [r7, #4]
 800b7f0:	6039      	str	r1, [r7, #0]
 800b7f2:	2300      	movs	r3, #0
 800b7f4:	73fb      	strb	r3, [r7, #15]
 800b7f6:	687b      	ldr	r3, [r7, #4]
 800b7f8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b7fc:	2b01      	cmp	r3, #1
 800b7fe:	d101      	bne.n	800b804 <HAL_TIM_ConfigClockSource+0x1c>
 800b800:	2302      	movs	r3, #2
 800b802:	e0b4      	b.n	800b96e <HAL_TIM_ConfigClockSource+0x186>
 800b804:	687b      	ldr	r3, [r7, #4]
 800b806:	2201      	movs	r2, #1
 800b808:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b80c:	687b      	ldr	r3, [r7, #4]
 800b80e:	2202      	movs	r2, #2
 800b810:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b814:	687b      	ldr	r3, [r7, #4]
 800b816:	681b      	ldr	r3, [r3, #0]
 800b818:	689b      	ldr	r3, [r3, #8]
 800b81a:	60bb      	str	r3, [r7, #8]
 800b81c:	68bb      	ldr	r3, [r7, #8]
 800b81e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800b822:	60bb      	str	r3, [r7, #8]
 800b824:	68bb      	ldr	r3, [r7, #8]
 800b826:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b82a:	60bb      	str	r3, [r7, #8]
 800b82c:	687b      	ldr	r3, [r7, #4]
 800b82e:	681b      	ldr	r3, [r3, #0]
 800b830:	68ba      	ldr	r2, [r7, #8]
 800b832:	609a      	str	r2, [r3, #8]
 800b834:	683b      	ldr	r3, [r7, #0]
 800b836:	681b      	ldr	r3, [r3, #0]
 800b838:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b83c:	d03e      	beq.n	800b8bc <HAL_TIM_ConfigClockSource+0xd4>
 800b83e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b842:	f200 8087 	bhi.w	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b846:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b84a:	f000 8086 	beq.w	800b95a <HAL_TIM_ConfigClockSource+0x172>
 800b84e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b852:	d87f      	bhi.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b854:	2b70      	cmp	r3, #112	; 0x70
 800b856:	d01a      	beq.n	800b88e <HAL_TIM_ConfigClockSource+0xa6>
 800b858:	2b70      	cmp	r3, #112	; 0x70
 800b85a:	d87b      	bhi.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b85c:	2b60      	cmp	r3, #96	; 0x60
 800b85e:	d050      	beq.n	800b902 <HAL_TIM_ConfigClockSource+0x11a>
 800b860:	2b60      	cmp	r3, #96	; 0x60
 800b862:	d877      	bhi.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b864:	2b50      	cmp	r3, #80	; 0x50
 800b866:	d03c      	beq.n	800b8e2 <HAL_TIM_ConfigClockSource+0xfa>
 800b868:	2b50      	cmp	r3, #80	; 0x50
 800b86a:	d873      	bhi.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b86c:	2b40      	cmp	r3, #64	; 0x40
 800b86e:	d058      	beq.n	800b922 <HAL_TIM_ConfigClockSource+0x13a>
 800b870:	2b40      	cmp	r3, #64	; 0x40
 800b872:	d86f      	bhi.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b874:	2b30      	cmp	r3, #48	; 0x30
 800b876:	d064      	beq.n	800b942 <HAL_TIM_ConfigClockSource+0x15a>
 800b878:	2b30      	cmp	r3, #48	; 0x30
 800b87a:	d86b      	bhi.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b87c:	2b20      	cmp	r3, #32
 800b87e:	d060      	beq.n	800b942 <HAL_TIM_ConfigClockSource+0x15a>
 800b880:	2b20      	cmp	r3, #32
 800b882:	d867      	bhi.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b884:	2b00      	cmp	r3, #0
 800b886:	d05c      	beq.n	800b942 <HAL_TIM_ConfigClockSource+0x15a>
 800b888:	2b10      	cmp	r3, #16
 800b88a:	d05a      	beq.n	800b942 <HAL_TIM_ConfigClockSource+0x15a>
 800b88c:	e062      	b.n	800b954 <HAL_TIM_ConfigClockSource+0x16c>
 800b88e:	687b      	ldr	r3, [r7, #4]
 800b890:	6818      	ldr	r0, [r3, #0]
 800b892:	683b      	ldr	r3, [r7, #0]
 800b894:	6899      	ldr	r1, [r3, #8]
 800b896:	683b      	ldr	r3, [r7, #0]
 800b898:	685a      	ldr	r2, [r3, #4]
 800b89a:	683b      	ldr	r3, [r7, #0]
 800b89c:	68db      	ldr	r3, [r3, #12]
 800b89e:	f000 fb35 	bl	800bf0c <TIM_ETR_SetConfig>
 800b8a2:	687b      	ldr	r3, [r7, #4]
 800b8a4:	681b      	ldr	r3, [r3, #0]
 800b8a6:	689b      	ldr	r3, [r3, #8]
 800b8a8:	60bb      	str	r3, [r7, #8]
 800b8aa:	68bb      	ldr	r3, [r7, #8]
 800b8ac:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b8b0:	60bb      	str	r3, [r7, #8]
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	681b      	ldr	r3, [r3, #0]
 800b8b6:	68ba      	ldr	r2, [r7, #8]
 800b8b8:	609a      	str	r2, [r3, #8]
 800b8ba:	e04f      	b.n	800b95c <HAL_TIM_ConfigClockSource+0x174>
 800b8bc:	687b      	ldr	r3, [r7, #4]
 800b8be:	6818      	ldr	r0, [r3, #0]
 800b8c0:	683b      	ldr	r3, [r7, #0]
 800b8c2:	6899      	ldr	r1, [r3, #8]
 800b8c4:	683b      	ldr	r3, [r7, #0]
 800b8c6:	685a      	ldr	r2, [r3, #4]
 800b8c8:	683b      	ldr	r3, [r7, #0]
 800b8ca:	68db      	ldr	r3, [r3, #12]
 800b8cc:	f000 fb1e 	bl	800bf0c <TIM_ETR_SetConfig>
 800b8d0:	687b      	ldr	r3, [r7, #4]
 800b8d2:	681b      	ldr	r3, [r3, #0]
 800b8d4:	689a      	ldr	r2, [r3, #8]
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	681b      	ldr	r3, [r3, #0]
 800b8da:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b8de:	609a      	str	r2, [r3, #8]
 800b8e0:	e03c      	b.n	800b95c <HAL_TIM_ConfigClockSource+0x174>
 800b8e2:	687b      	ldr	r3, [r7, #4]
 800b8e4:	6818      	ldr	r0, [r3, #0]
 800b8e6:	683b      	ldr	r3, [r7, #0]
 800b8e8:	6859      	ldr	r1, [r3, #4]
 800b8ea:	683b      	ldr	r3, [r7, #0]
 800b8ec:	68db      	ldr	r3, [r3, #12]
 800b8ee:	461a      	mov	r2, r3
 800b8f0:	f000 fa92 	bl	800be18 <TIM_TI1_ConfigInputStage>
 800b8f4:	687b      	ldr	r3, [r7, #4]
 800b8f6:	681b      	ldr	r3, [r3, #0]
 800b8f8:	2150      	movs	r1, #80	; 0x50
 800b8fa:	4618      	mov	r0, r3
 800b8fc:	f000 faeb 	bl	800bed6 <TIM_ITRx_SetConfig>
 800b900:	e02c      	b.n	800b95c <HAL_TIM_ConfigClockSource+0x174>
 800b902:	687b      	ldr	r3, [r7, #4]
 800b904:	6818      	ldr	r0, [r3, #0]
 800b906:	683b      	ldr	r3, [r7, #0]
 800b908:	6859      	ldr	r1, [r3, #4]
 800b90a:	683b      	ldr	r3, [r7, #0]
 800b90c:	68db      	ldr	r3, [r3, #12]
 800b90e:	461a      	mov	r2, r3
 800b910:	f000 fab1 	bl	800be76 <TIM_TI2_ConfigInputStage>
 800b914:	687b      	ldr	r3, [r7, #4]
 800b916:	681b      	ldr	r3, [r3, #0]
 800b918:	2160      	movs	r1, #96	; 0x60
 800b91a:	4618      	mov	r0, r3
 800b91c:	f000 fadb 	bl	800bed6 <TIM_ITRx_SetConfig>
 800b920:	e01c      	b.n	800b95c <HAL_TIM_ConfigClockSource+0x174>
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	6818      	ldr	r0, [r3, #0]
 800b926:	683b      	ldr	r3, [r7, #0]
 800b928:	6859      	ldr	r1, [r3, #4]
 800b92a:	683b      	ldr	r3, [r7, #0]
 800b92c:	68db      	ldr	r3, [r3, #12]
 800b92e:	461a      	mov	r2, r3
 800b930:	f000 fa72 	bl	800be18 <TIM_TI1_ConfigInputStage>
 800b934:	687b      	ldr	r3, [r7, #4]
 800b936:	681b      	ldr	r3, [r3, #0]
 800b938:	2140      	movs	r1, #64	; 0x40
 800b93a:	4618      	mov	r0, r3
 800b93c:	f000 facb 	bl	800bed6 <TIM_ITRx_SetConfig>
 800b940:	e00c      	b.n	800b95c <HAL_TIM_ConfigClockSource+0x174>
 800b942:	687b      	ldr	r3, [r7, #4]
 800b944:	681a      	ldr	r2, [r3, #0]
 800b946:	683b      	ldr	r3, [r7, #0]
 800b948:	681b      	ldr	r3, [r3, #0]
 800b94a:	4619      	mov	r1, r3
 800b94c:	4610      	mov	r0, r2
 800b94e:	f000 fac2 	bl	800bed6 <TIM_ITRx_SetConfig>
 800b952:	e003      	b.n	800b95c <HAL_TIM_ConfigClockSource+0x174>
 800b954:	2301      	movs	r3, #1
 800b956:	73fb      	strb	r3, [r7, #15]
 800b958:	e000      	b.n	800b95c <HAL_TIM_ConfigClockSource+0x174>
 800b95a:	bf00      	nop
 800b95c:	687b      	ldr	r3, [r7, #4]
 800b95e:	2201      	movs	r2, #1
 800b960:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	2200      	movs	r2, #0
 800b968:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b96c:	7bfb      	ldrb	r3, [r7, #15]
 800b96e:	4618      	mov	r0, r3
 800b970:	3710      	adds	r7, #16
 800b972:	46bd      	mov	sp, r7
 800b974:	bd80      	pop	{r7, pc}
	...

0800b978 <TIM_Base_SetConfig>:
 800b978:	b480      	push	{r7}
 800b97a:	b085      	sub	sp, #20
 800b97c:	af00      	add	r7, sp, #0
 800b97e:	6078      	str	r0, [r7, #4]
 800b980:	6039      	str	r1, [r7, #0]
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	681b      	ldr	r3, [r3, #0]
 800b986:	60fb      	str	r3, [r7, #12]
 800b988:	687b      	ldr	r3, [r7, #4]
 800b98a:	4a40      	ldr	r2, [pc, #256]	; (800ba8c <TIM_Base_SetConfig+0x114>)
 800b98c:	4293      	cmp	r3, r2
 800b98e:	d013      	beq.n	800b9b8 <TIM_Base_SetConfig+0x40>
 800b990:	687b      	ldr	r3, [r7, #4]
 800b992:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b996:	d00f      	beq.n	800b9b8 <TIM_Base_SetConfig+0x40>
 800b998:	687b      	ldr	r3, [r7, #4]
 800b99a:	4a3d      	ldr	r2, [pc, #244]	; (800ba90 <TIM_Base_SetConfig+0x118>)
 800b99c:	4293      	cmp	r3, r2
 800b99e:	d00b      	beq.n	800b9b8 <TIM_Base_SetConfig+0x40>
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	4a3c      	ldr	r2, [pc, #240]	; (800ba94 <TIM_Base_SetConfig+0x11c>)
 800b9a4:	4293      	cmp	r3, r2
 800b9a6:	d007      	beq.n	800b9b8 <TIM_Base_SetConfig+0x40>
 800b9a8:	687b      	ldr	r3, [r7, #4]
 800b9aa:	4a3b      	ldr	r2, [pc, #236]	; (800ba98 <TIM_Base_SetConfig+0x120>)
 800b9ac:	4293      	cmp	r3, r2
 800b9ae:	d003      	beq.n	800b9b8 <TIM_Base_SetConfig+0x40>
 800b9b0:	687b      	ldr	r3, [r7, #4]
 800b9b2:	4a3a      	ldr	r2, [pc, #232]	; (800ba9c <TIM_Base_SetConfig+0x124>)
 800b9b4:	4293      	cmp	r3, r2
 800b9b6:	d108      	bne.n	800b9ca <TIM_Base_SetConfig+0x52>
 800b9b8:	68fb      	ldr	r3, [r7, #12]
 800b9ba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b9be:	60fb      	str	r3, [r7, #12]
 800b9c0:	683b      	ldr	r3, [r7, #0]
 800b9c2:	685b      	ldr	r3, [r3, #4]
 800b9c4:	68fa      	ldr	r2, [r7, #12]
 800b9c6:	4313      	orrs	r3, r2
 800b9c8:	60fb      	str	r3, [r7, #12]
 800b9ca:	687b      	ldr	r3, [r7, #4]
 800b9cc:	4a2f      	ldr	r2, [pc, #188]	; (800ba8c <TIM_Base_SetConfig+0x114>)
 800b9ce:	4293      	cmp	r3, r2
 800b9d0:	d02b      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800b9d2:	687b      	ldr	r3, [r7, #4]
 800b9d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b9d8:	d027      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	4a2c      	ldr	r2, [pc, #176]	; (800ba90 <TIM_Base_SetConfig+0x118>)
 800b9de:	4293      	cmp	r3, r2
 800b9e0:	d023      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800b9e2:	687b      	ldr	r3, [r7, #4]
 800b9e4:	4a2b      	ldr	r2, [pc, #172]	; (800ba94 <TIM_Base_SetConfig+0x11c>)
 800b9e6:	4293      	cmp	r3, r2
 800b9e8:	d01f      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800b9ea:	687b      	ldr	r3, [r7, #4]
 800b9ec:	4a2a      	ldr	r2, [pc, #168]	; (800ba98 <TIM_Base_SetConfig+0x120>)
 800b9ee:	4293      	cmp	r3, r2
 800b9f0:	d01b      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800b9f2:	687b      	ldr	r3, [r7, #4]
 800b9f4:	4a29      	ldr	r2, [pc, #164]	; (800ba9c <TIM_Base_SetConfig+0x124>)
 800b9f6:	4293      	cmp	r3, r2
 800b9f8:	d017      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800b9fa:	687b      	ldr	r3, [r7, #4]
 800b9fc:	4a28      	ldr	r2, [pc, #160]	; (800baa0 <TIM_Base_SetConfig+0x128>)
 800b9fe:	4293      	cmp	r3, r2
 800ba00:	d013      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800ba02:	687b      	ldr	r3, [r7, #4]
 800ba04:	4a27      	ldr	r2, [pc, #156]	; (800baa4 <TIM_Base_SetConfig+0x12c>)
 800ba06:	4293      	cmp	r3, r2
 800ba08:	d00f      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800ba0a:	687b      	ldr	r3, [r7, #4]
 800ba0c:	4a26      	ldr	r2, [pc, #152]	; (800baa8 <TIM_Base_SetConfig+0x130>)
 800ba0e:	4293      	cmp	r3, r2
 800ba10:	d00b      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	4a25      	ldr	r2, [pc, #148]	; (800baac <TIM_Base_SetConfig+0x134>)
 800ba16:	4293      	cmp	r3, r2
 800ba18:	d007      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800ba1a:	687b      	ldr	r3, [r7, #4]
 800ba1c:	4a24      	ldr	r2, [pc, #144]	; (800bab0 <TIM_Base_SetConfig+0x138>)
 800ba1e:	4293      	cmp	r3, r2
 800ba20:	d003      	beq.n	800ba2a <TIM_Base_SetConfig+0xb2>
 800ba22:	687b      	ldr	r3, [r7, #4]
 800ba24:	4a23      	ldr	r2, [pc, #140]	; (800bab4 <TIM_Base_SetConfig+0x13c>)
 800ba26:	4293      	cmp	r3, r2
 800ba28:	d108      	bne.n	800ba3c <TIM_Base_SetConfig+0xc4>
 800ba2a:	68fb      	ldr	r3, [r7, #12]
 800ba2c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ba30:	60fb      	str	r3, [r7, #12]
 800ba32:	683b      	ldr	r3, [r7, #0]
 800ba34:	68db      	ldr	r3, [r3, #12]
 800ba36:	68fa      	ldr	r2, [r7, #12]
 800ba38:	4313      	orrs	r3, r2
 800ba3a:	60fb      	str	r3, [r7, #12]
 800ba3c:	68fb      	ldr	r3, [r7, #12]
 800ba3e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800ba42:	683b      	ldr	r3, [r7, #0]
 800ba44:	695b      	ldr	r3, [r3, #20]
 800ba46:	4313      	orrs	r3, r2
 800ba48:	60fb      	str	r3, [r7, #12]
 800ba4a:	687b      	ldr	r3, [r7, #4]
 800ba4c:	68fa      	ldr	r2, [r7, #12]
 800ba4e:	601a      	str	r2, [r3, #0]
 800ba50:	683b      	ldr	r3, [r7, #0]
 800ba52:	689a      	ldr	r2, [r3, #8]
 800ba54:	687b      	ldr	r3, [r7, #4]
 800ba56:	62da      	str	r2, [r3, #44]	; 0x2c
 800ba58:	683b      	ldr	r3, [r7, #0]
 800ba5a:	681a      	ldr	r2, [r3, #0]
 800ba5c:	687b      	ldr	r3, [r7, #4]
 800ba5e:	629a      	str	r2, [r3, #40]	; 0x28
 800ba60:	687b      	ldr	r3, [r7, #4]
 800ba62:	4a0a      	ldr	r2, [pc, #40]	; (800ba8c <TIM_Base_SetConfig+0x114>)
 800ba64:	4293      	cmp	r3, r2
 800ba66:	d003      	beq.n	800ba70 <TIM_Base_SetConfig+0xf8>
 800ba68:	687b      	ldr	r3, [r7, #4]
 800ba6a:	4a0c      	ldr	r2, [pc, #48]	; (800ba9c <TIM_Base_SetConfig+0x124>)
 800ba6c:	4293      	cmp	r3, r2
 800ba6e:	d103      	bne.n	800ba78 <TIM_Base_SetConfig+0x100>
 800ba70:	683b      	ldr	r3, [r7, #0]
 800ba72:	691a      	ldr	r2, [r3, #16]
 800ba74:	687b      	ldr	r3, [r7, #4]
 800ba76:	631a      	str	r2, [r3, #48]	; 0x30
 800ba78:	687b      	ldr	r3, [r7, #4]
 800ba7a:	2201      	movs	r2, #1
 800ba7c:	615a      	str	r2, [r3, #20]
 800ba7e:	bf00      	nop
 800ba80:	3714      	adds	r7, #20
 800ba82:	46bd      	mov	sp, r7
 800ba84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba88:	4770      	bx	lr
 800ba8a:	bf00      	nop
 800ba8c:	40010000 	.word	0x40010000
 800ba90:	40000400 	.word	0x40000400
 800ba94:	40000800 	.word	0x40000800
 800ba98:	40000c00 	.word	0x40000c00
 800ba9c:	40010400 	.word	0x40010400
 800baa0:	40014000 	.word	0x40014000
 800baa4:	40014400 	.word	0x40014400
 800baa8:	40014800 	.word	0x40014800
 800baac:	40001800 	.word	0x40001800
 800bab0:	40001c00 	.word	0x40001c00
 800bab4:	40002000 	.word	0x40002000

0800bab8 <TIM_OC1_SetConfig>:
 800bab8:	b480      	push	{r7}
 800baba:	b087      	sub	sp, #28
 800babc:	af00      	add	r7, sp, #0
 800babe:	6078      	str	r0, [r7, #4]
 800bac0:	6039      	str	r1, [r7, #0]
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	6a1b      	ldr	r3, [r3, #32]
 800bac6:	f023 0201 	bic.w	r2, r3, #1
 800baca:	687b      	ldr	r3, [r7, #4]
 800bacc:	621a      	str	r2, [r3, #32]
 800bace:	687b      	ldr	r3, [r7, #4]
 800bad0:	6a1b      	ldr	r3, [r3, #32]
 800bad2:	617b      	str	r3, [r7, #20]
 800bad4:	687b      	ldr	r3, [r7, #4]
 800bad6:	685b      	ldr	r3, [r3, #4]
 800bad8:	613b      	str	r3, [r7, #16]
 800bada:	687b      	ldr	r3, [r7, #4]
 800badc:	699b      	ldr	r3, [r3, #24]
 800bade:	60fb      	str	r3, [r7, #12]
 800bae0:	68fb      	ldr	r3, [r7, #12]
 800bae2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bae6:	60fb      	str	r3, [r7, #12]
 800bae8:	68fb      	ldr	r3, [r7, #12]
 800baea:	f023 0303 	bic.w	r3, r3, #3
 800baee:	60fb      	str	r3, [r7, #12]
 800baf0:	683b      	ldr	r3, [r7, #0]
 800baf2:	681b      	ldr	r3, [r3, #0]
 800baf4:	68fa      	ldr	r2, [r7, #12]
 800baf6:	4313      	orrs	r3, r2
 800baf8:	60fb      	str	r3, [r7, #12]
 800bafa:	697b      	ldr	r3, [r7, #20]
 800bafc:	f023 0302 	bic.w	r3, r3, #2
 800bb00:	617b      	str	r3, [r7, #20]
 800bb02:	683b      	ldr	r3, [r7, #0]
 800bb04:	689b      	ldr	r3, [r3, #8]
 800bb06:	697a      	ldr	r2, [r7, #20]
 800bb08:	4313      	orrs	r3, r2
 800bb0a:	617b      	str	r3, [r7, #20]
 800bb0c:	687b      	ldr	r3, [r7, #4]
 800bb0e:	4a20      	ldr	r2, [pc, #128]	; (800bb90 <TIM_OC1_SetConfig+0xd8>)
 800bb10:	4293      	cmp	r3, r2
 800bb12:	d003      	beq.n	800bb1c <TIM_OC1_SetConfig+0x64>
 800bb14:	687b      	ldr	r3, [r7, #4]
 800bb16:	4a1f      	ldr	r2, [pc, #124]	; (800bb94 <TIM_OC1_SetConfig+0xdc>)
 800bb18:	4293      	cmp	r3, r2
 800bb1a:	d10c      	bne.n	800bb36 <TIM_OC1_SetConfig+0x7e>
 800bb1c:	697b      	ldr	r3, [r7, #20]
 800bb1e:	f023 0308 	bic.w	r3, r3, #8
 800bb22:	617b      	str	r3, [r7, #20]
 800bb24:	683b      	ldr	r3, [r7, #0]
 800bb26:	68db      	ldr	r3, [r3, #12]
 800bb28:	697a      	ldr	r2, [r7, #20]
 800bb2a:	4313      	orrs	r3, r2
 800bb2c:	617b      	str	r3, [r7, #20]
 800bb2e:	697b      	ldr	r3, [r7, #20]
 800bb30:	f023 0304 	bic.w	r3, r3, #4
 800bb34:	617b      	str	r3, [r7, #20]
 800bb36:	687b      	ldr	r3, [r7, #4]
 800bb38:	4a15      	ldr	r2, [pc, #84]	; (800bb90 <TIM_OC1_SetConfig+0xd8>)
 800bb3a:	4293      	cmp	r3, r2
 800bb3c:	d003      	beq.n	800bb46 <TIM_OC1_SetConfig+0x8e>
 800bb3e:	687b      	ldr	r3, [r7, #4]
 800bb40:	4a14      	ldr	r2, [pc, #80]	; (800bb94 <TIM_OC1_SetConfig+0xdc>)
 800bb42:	4293      	cmp	r3, r2
 800bb44:	d111      	bne.n	800bb6a <TIM_OC1_SetConfig+0xb2>
 800bb46:	693b      	ldr	r3, [r7, #16]
 800bb48:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800bb4c:	613b      	str	r3, [r7, #16]
 800bb4e:	693b      	ldr	r3, [r7, #16]
 800bb50:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800bb54:	613b      	str	r3, [r7, #16]
 800bb56:	683b      	ldr	r3, [r7, #0]
 800bb58:	695b      	ldr	r3, [r3, #20]
 800bb5a:	693a      	ldr	r2, [r7, #16]
 800bb5c:	4313      	orrs	r3, r2
 800bb5e:	613b      	str	r3, [r7, #16]
 800bb60:	683b      	ldr	r3, [r7, #0]
 800bb62:	699b      	ldr	r3, [r3, #24]
 800bb64:	693a      	ldr	r2, [r7, #16]
 800bb66:	4313      	orrs	r3, r2
 800bb68:	613b      	str	r3, [r7, #16]
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	693a      	ldr	r2, [r7, #16]
 800bb6e:	605a      	str	r2, [r3, #4]
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	68fa      	ldr	r2, [r7, #12]
 800bb74:	619a      	str	r2, [r3, #24]
 800bb76:	683b      	ldr	r3, [r7, #0]
 800bb78:	685a      	ldr	r2, [r3, #4]
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	635a      	str	r2, [r3, #52]	; 0x34
 800bb7e:	687b      	ldr	r3, [r7, #4]
 800bb80:	697a      	ldr	r2, [r7, #20]
 800bb82:	621a      	str	r2, [r3, #32]
 800bb84:	bf00      	nop
 800bb86:	371c      	adds	r7, #28
 800bb88:	46bd      	mov	sp, r7
 800bb8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb8e:	4770      	bx	lr
 800bb90:	40010000 	.word	0x40010000
 800bb94:	40010400 	.word	0x40010400

0800bb98 <TIM_OC2_SetConfig>:
 800bb98:	b480      	push	{r7}
 800bb9a:	b087      	sub	sp, #28
 800bb9c:	af00      	add	r7, sp, #0
 800bb9e:	6078      	str	r0, [r7, #4]
 800bba0:	6039      	str	r1, [r7, #0]
 800bba2:	687b      	ldr	r3, [r7, #4]
 800bba4:	6a1b      	ldr	r3, [r3, #32]
 800bba6:	f023 0210 	bic.w	r2, r3, #16
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	621a      	str	r2, [r3, #32]
 800bbae:	687b      	ldr	r3, [r7, #4]
 800bbb0:	6a1b      	ldr	r3, [r3, #32]
 800bbb2:	617b      	str	r3, [r7, #20]
 800bbb4:	687b      	ldr	r3, [r7, #4]
 800bbb6:	685b      	ldr	r3, [r3, #4]
 800bbb8:	613b      	str	r3, [r7, #16]
 800bbba:	687b      	ldr	r3, [r7, #4]
 800bbbc:	699b      	ldr	r3, [r3, #24]
 800bbbe:	60fb      	str	r3, [r7, #12]
 800bbc0:	68fb      	ldr	r3, [r7, #12]
 800bbc2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800bbc6:	60fb      	str	r3, [r7, #12]
 800bbc8:	68fb      	ldr	r3, [r7, #12]
 800bbca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bbce:	60fb      	str	r3, [r7, #12]
 800bbd0:	683b      	ldr	r3, [r7, #0]
 800bbd2:	681b      	ldr	r3, [r3, #0]
 800bbd4:	021b      	lsls	r3, r3, #8
 800bbd6:	68fa      	ldr	r2, [r7, #12]
 800bbd8:	4313      	orrs	r3, r2
 800bbda:	60fb      	str	r3, [r7, #12]
 800bbdc:	697b      	ldr	r3, [r7, #20]
 800bbde:	f023 0320 	bic.w	r3, r3, #32
 800bbe2:	617b      	str	r3, [r7, #20]
 800bbe4:	683b      	ldr	r3, [r7, #0]
 800bbe6:	689b      	ldr	r3, [r3, #8]
 800bbe8:	011b      	lsls	r3, r3, #4
 800bbea:	697a      	ldr	r2, [r7, #20]
 800bbec:	4313      	orrs	r3, r2
 800bbee:	617b      	str	r3, [r7, #20]
 800bbf0:	687b      	ldr	r3, [r7, #4]
 800bbf2:	4a22      	ldr	r2, [pc, #136]	; (800bc7c <TIM_OC2_SetConfig+0xe4>)
 800bbf4:	4293      	cmp	r3, r2
 800bbf6:	d003      	beq.n	800bc00 <TIM_OC2_SetConfig+0x68>
 800bbf8:	687b      	ldr	r3, [r7, #4]
 800bbfa:	4a21      	ldr	r2, [pc, #132]	; (800bc80 <TIM_OC2_SetConfig+0xe8>)
 800bbfc:	4293      	cmp	r3, r2
 800bbfe:	d10d      	bne.n	800bc1c <TIM_OC2_SetConfig+0x84>
 800bc00:	697b      	ldr	r3, [r7, #20]
 800bc02:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bc06:	617b      	str	r3, [r7, #20]
 800bc08:	683b      	ldr	r3, [r7, #0]
 800bc0a:	68db      	ldr	r3, [r3, #12]
 800bc0c:	011b      	lsls	r3, r3, #4
 800bc0e:	697a      	ldr	r2, [r7, #20]
 800bc10:	4313      	orrs	r3, r2
 800bc12:	617b      	str	r3, [r7, #20]
 800bc14:	697b      	ldr	r3, [r7, #20]
 800bc16:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bc1a:	617b      	str	r3, [r7, #20]
 800bc1c:	687b      	ldr	r3, [r7, #4]
 800bc1e:	4a17      	ldr	r2, [pc, #92]	; (800bc7c <TIM_OC2_SetConfig+0xe4>)
 800bc20:	4293      	cmp	r3, r2
 800bc22:	d003      	beq.n	800bc2c <TIM_OC2_SetConfig+0x94>
 800bc24:	687b      	ldr	r3, [r7, #4]
 800bc26:	4a16      	ldr	r2, [pc, #88]	; (800bc80 <TIM_OC2_SetConfig+0xe8>)
 800bc28:	4293      	cmp	r3, r2
 800bc2a:	d113      	bne.n	800bc54 <TIM_OC2_SetConfig+0xbc>
 800bc2c:	693b      	ldr	r3, [r7, #16]
 800bc2e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800bc32:	613b      	str	r3, [r7, #16]
 800bc34:	693b      	ldr	r3, [r7, #16]
 800bc36:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800bc3a:	613b      	str	r3, [r7, #16]
 800bc3c:	683b      	ldr	r3, [r7, #0]
 800bc3e:	695b      	ldr	r3, [r3, #20]
 800bc40:	009b      	lsls	r3, r3, #2
 800bc42:	693a      	ldr	r2, [r7, #16]
 800bc44:	4313      	orrs	r3, r2
 800bc46:	613b      	str	r3, [r7, #16]
 800bc48:	683b      	ldr	r3, [r7, #0]
 800bc4a:	699b      	ldr	r3, [r3, #24]
 800bc4c:	009b      	lsls	r3, r3, #2
 800bc4e:	693a      	ldr	r2, [r7, #16]
 800bc50:	4313      	orrs	r3, r2
 800bc52:	613b      	str	r3, [r7, #16]
 800bc54:	687b      	ldr	r3, [r7, #4]
 800bc56:	693a      	ldr	r2, [r7, #16]
 800bc58:	605a      	str	r2, [r3, #4]
 800bc5a:	687b      	ldr	r3, [r7, #4]
 800bc5c:	68fa      	ldr	r2, [r7, #12]
 800bc5e:	619a      	str	r2, [r3, #24]
 800bc60:	683b      	ldr	r3, [r7, #0]
 800bc62:	685a      	ldr	r2, [r3, #4]
 800bc64:	687b      	ldr	r3, [r7, #4]
 800bc66:	639a      	str	r2, [r3, #56]	; 0x38
 800bc68:	687b      	ldr	r3, [r7, #4]
 800bc6a:	697a      	ldr	r2, [r7, #20]
 800bc6c:	621a      	str	r2, [r3, #32]
 800bc6e:	bf00      	nop
 800bc70:	371c      	adds	r7, #28
 800bc72:	46bd      	mov	sp, r7
 800bc74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc78:	4770      	bx	lr
 800bc7a:	bf00      	nop
 800bc7c:	40010000 	.word	0x40010000
 800bc80:	40010400 	.word	0x40010400

0800bc84 <TIM_OC3_SetConfig>:
 800bc84:	b480      	push	{r7}
 800bc86:	b087      	sub	sp, #28
 800bc88:	af00      	add	r7, sp, #0
 800bc8a:	6078      	str	r0, [r7, #4]
 800bc8c:	6039      	str	r1, [r7, #0]
 800bc8e:	687b      	ldr	r3, [r7, #4]
 800bc90:	6a1b      	ldr	r3, [r3, #32]
 800bc92:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800bc96:	687b      	ldr	r3, [r7, #4]
 800bc98:	621a      	str	r2, [r3, #32]
 800bc9a:	687b      	ldr	r3, [r7, #4]
 800bc9c:	6a1b      	ldr	r3, [r3, #32]
 800bc9e:	617b      	str	r3, [r7, #20]
 800bca0:	687b      	ldr	r3, [r7, #4]
 800bca2:	685b      	ldr	r3, [r3, #4]
 800bca4:	613b      	str	r3, [r7, #16]
 800bca6:	687b      	ldr	r3, [r7, #4]
 800bca8:	69db      	ldr	r3, [r3, #28]
 800bcaa:	60fb      	str	r3, [r7, #12]
 800bcac:	68fb      	ldr	r3, [r7, #12]
 800bcae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bcb2:	60fb      	str	r3, [r7, #12]
 800bcb4:	68fb      	ldr	r3, [r7, #12]
 800bcb6:	f023 0303 	bic.w	r3, r3, #3
 800bcba:	60fb      	str	r3, [r7, #12]
 800bcbc:	683b      	ldr	r3, [r7, #0]
 800bcbe:	681b      	ldr	r3, [r3, #0]
 800bcc0:	68fa      	ldr	r2, [r7, #12]
 800bcc2:	4313      	orrs	r3, r2
 800bcc4:	60fb      	str	r3, [r7, #12]
 800bcc6:	697b      	ldr	r3, [r7, #20]
 800bcc8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800bccc:	617b      	str	r3, [r7, #20]
 800bcce:	683b      	ldr	r3, [r7, #0]
 800bcd0:	689b      	ldr	r3, [r3, #8]
 800bcd2:	021b      	lsls	r3, r3, #8
 800bcd4:	697a      	ldr	r2, [r7, #20]
 800bcd6:	4313      	orrs	r3, r2
 800bcd8:	617b      	str	r3, [r7, #20]
 800bcda:	687b      	ldr	r3, [r7, #4]
 800bcdc:	4a21      	ldr	r2, [pc, #132]	; (800bd64 <TIM_OC3_SetConfig+0xe0>)
 800bcde:	4293      	cmp	r3, r2
 800bce0:	d003      	beq.n	800bcea <TIM_OC3_SetConfig+0x66>
 800bce2:	687b      	ldr	r3, [r7, #4]
 800bce4:	4a20      	ldr	r2, [pc, #128]	; (800bd68 <TIM_OC3_SetConfig+0xe4>)
 800bce6:	4293      	cmp	r3, r2
 800bce8:	d10d      	bne.n	800bd06 <TIM_OC3_SetConfig+0x82>
 800bcea:	697b      	ldr	r3, [r7, #20]
 800bcec:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800bcf0:	617b      	str	r3, [r7, #20]
 800bcf2:	683b      	ldr	r3, [r7, #0]
 800bcf4:	68db      	ldr	r3, [r3, #12]
 800bcf6:	021b      	lsls	r3, r3, #8
 800bcf8:	697a      	ldr	r2, [r7, #20]
 800bcfa:	4313      	orrs	r3, r2
 800bcfc:	617b      	str	r3, [r7, #20]
 800bcfe:	697b      	ldr	r3, [r7, #20]
 800bd00:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800bd04:	617b      	str	r3, [r7, #20]
 800bd06:	687b      	ldr	r3, [r7, #4]
 800bd08:	4a16      	ldr	r2, [pc, #88]	; (800bd64 <TIM_OC3_SetConfig+0xe0>)
 800bd0a:	4293      	cmp	r3, r2
 800bd0c:	d003      	beq.n	800bd16 <TIM_OC3_SetConfig+0x92>
 800bd0e:	687b      	ldr	r3, [r7, #4]
 800bd10:	4a15      	ldr	r2, [pc, #84]	; (800bd68 <TIM_OC3_SetConfig+0xe4>)
 800bd12:	4293      	cmp	r3, r2
 800bd14:	d113      	bne.n	800bd3e <TIM_OC3_SetConfig+0xba>
 800bd16:	693b      	ldr	r3, [r7, #16]
 800bd18:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800bd1c:	613b      	str	r3, [r7, #16]
 800bd1e:	693b      	ldr	r3, [r7, #16]
 800bd20:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800bd24:	613b      	str	r3, [r7, #16]
 800bd26:	683b      	ldr	r3, [r7, #0]
 800bd28:	695b      	ldr	r3, [r3, #20]
 800bd2a:	011b      	lsls	r3, r3, #4
 800bd2c:	693a      	ldr	r2, [r7, #16]
 800bd2e:	4313      	orrs	r3, r2
 800bd30:	613b      	str	r3, [r7, #16]
 800bd32:	683b      	ldr	r3, [r7, #0]
 800bd34:	699b      	ldr	r3, [r3, #24]
 800bd36:	011b      	lsls	r3, r3, #4
 800bd38:	693a      	ldr	r2, [r7, #16]
 800bd3a:	4313      	orrs	r3, r2
 800bd3c:	613b      	str	r3, [r7, #16]
 800bd3e:	687b      	ldr	r3, [r7, #4]
 800bd40:	693a      	ldr	r2, [r7, #16]
 800bd42:	605a      	str	r2, [r3, #4]
 800bd44:	687b      	ldr	r3, [r7, #4]
 800bd46:	68fa      	ldr	r2, [r7, #12]
 800bd48:	61da      	str	r2, [r3, #28]
 800bd4a:	683b      	ldr	r3, [r7, #0]
 800bd4c:	685a      	ldr	r2, [r3, #4]
 800bd4e:	687b      	ldr	r3, [r7, #4]
 800bd50:	63da      	str	r2, [r3, #60]	; 0x3c
 800bd52:	687b      	ldr	r3, [r7, #4]
 800bd54:	697a      	ldr	r2, [r7, #20]
 800bd56:	621a      	str	r2, [r3, #32]
 800bd58:	bf00      	nop
 800bd5a:	371c      	adds	r7, #28
 800bd5c:	46bd      	mov	sp, r7
 800bd5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd62:	4770      	bx	lr
 800bd64:	40010000 	.word	0x40010000
 800bd68:	40010400 	.word	0x40010400

0800bd6c <TIM_OC4_SetConfig>:
 800bd6c:	b480      	push	{r7}
 800bd6e:	b087      	sub	sp, #28
 800bd70:	af00      	add	r7, sp, #0
 800bd72:	6078      	str	r0, [r7, #4]
 800bd74:	6039      	str	r1, [r7, #0]
 800bd76:	687b      	ldr	r3, [r7, #4]
 800bd78:	6a1b      	ldr	r3, [r3, #32]
 800bd7a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bd7e:	687b      	ldr	r3, [r7, #4]
 800bd80:	621a      	str	r2, [r3, #32]
 800bd82:	687b      	ldr	r3, [r7, #4]
 800bd84:	6a1b      	ldr	r3, [r3, #32]
 800bd86:	613b      	str	r3, [r7, #16]
 800bd88:	687b      	ldr	r3, [r7, #4]
 800bd8a:	685b      	ldr	r3, [r3, #4]
 800bd8c:	617b      	str	r3, [r7, #20]
 800bd8e:	687b      	ldr	r3, [r7, #4]
 800bd90:	69db      	ldr	r3, [r3, #28]
 800bd92:	60fb      	str	r3, [r7, #12]
 800bd94:	68fb      	ldr	r3, [r7, #12]
 800bd96:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800bd9a:	60fb      	str	r3, [r7, #12]
 800bd9c:	68fb      	ldr	r3, [r7, #12]
 800bd9e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bda2:	60fb      	str	r3, [r7, #12]
 800bda4:	683b      	ldr	r3, [r7, #0]
 800bda6:	681b      	ldr	r3, [r3, #0]
 800bda8:	021b      	lsls	r3, r3, #8
 800bdaa:	68fa      	ldr	r2, [r7, #12]
 800bdac:	4313      	orrs	r3, r2
 800bdae:	60fb      	str	r3, [r7, #12]
 800bdb0:	693b      	ldr	r3, [r7, #16]
 800bdb2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800bdb6:	613b      	str	r3, [r7, #16]
 800bdb8:	683b      	ldr	r3, [r7, #0]
 800bdba:	689b      	ldr	r3, [r3, #8]
 800bdbc:	031b      	lsls	r3, r3, #12
 800bdbe:	693a      	ldr	r2, [r7, #16]
 800bdc0:	4313      	orrs	r3, r2
 800bdc2:	613b      	str	r3, [r7, #16]
 800bdc4:	687b      	ldr	r3, [r7, #4]
 800bdc6:	4a12      	ldr	r2, [pc, #72]	; (800be10 <TIM_OC4_SetConfig+0xa4>)
 800bdc8:	4293      	cmp	r3, r2
 800bdca:	d003      	beq.n	800bdd4 <TIM_OC4_SetConfig+0x68>
 800bdcc:	687b      	ldr	r3, [r7, #4]
 800bdce:	4a11      	ldr	r2, [pc, #68]	; (800be14 <TIM_OC4_SetConfig+0xa8>)
 800bdd0:	4293      	cmp	r3, r2
 800bdd2:	d109      	bne.n	800bde8 <TIM_OC4_SetConfig+0x7c>
 800bdd4:	697b      	ldr	r3, [r7, #20]
 800bdd6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800bdda:	617b      	str	r3, [r7, #20]
 800bddc:	683b      	ldr	r3, [r7, #0]
 800bdde:	695b      	ldr	r3, [r3, #20]
 800bde0:	019b      	lsls	r3, r3, #6
 800bde2:	697a      	ldr	r2, [r7, #20]
 800bde4:	4313      	orrs	r3, r2
 800bde6:	617b      	str	r3, [r7, #20]
 800bde8:	687b      	ldr	r3, [r7, #4]
 800bdea:	697a      	ldr	r2, [r7, #20]
 800bdec:	605a      	str	r2, [r3, #4]
 800bdee:	687b      	ldr	r3, [r7, #4]
 800bdf0:	68fa      	ldr	r2, [r7, #12]
 800bdf2:	61da      	str	r2, [r3, #28]
 800bdf4:	683b      	ldr	r3, [r7, #0]
 800bdf6:	685a      	ldr	r2, [r3, #4]
 800bdf8:	687b      	ldr	r3, [r7, #4]
 800bdfa:	641a      	str	r2, [r3, #64]	; 0x40
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	693a      	ldr	r2, [r7, #16]
 800be00:	621a      	str	r2, [r3, #32]
 800be02:	bf00      	nop
 800be04:	371c      	adds	r7, #28
 800be06:	46bd      	mov	sp, r7
 800be08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be0c:	4770      	bx	lr
 800be0e:	bf00      	nop
 800be10:	40010000 	.word	0x40010000
 800be14:	40010400 	.word	0x40010400

0800be18 <TIM_TI1_ConfigInputStage>:
 800be18:	b480      	push	{r7}
 800be1a:	b087      	sub	sp, #28
 800be1c:	af00      	add	r7, sp, #0
 800be1e:	60f8      	str	r0, [r7, #12]
 800be20:	60b9      	str	r1, [r7, #8]
 800be22:	607a      	str	r2, [r7, #4]
 800be24:	68fb      	ldr	r3, [r7, #12]
 800be26:	6a1b      	ldr	r3, [r3, #32]
 800be28:	617b      	str	r3, [r7, #20]
 800be2a:	68fb      	ldr	r3, [r7, #12]
 800be2c:	6a1b      	ldr	r3, [r3, #32]
 800be2e:	f023 0201 	bic.w	r2, r3, #1
 800be32:	68fb      	ldr	r3, [r7, #12]
 800be34:	621a      	str	r2, [r3, #32]
 800be36:	68fb      	ldr	r3, [r7, #12]
 800be38:	699b      	ldr	r3, [r3, #24]
 800be3a:	613b      	str	r3, [r7, #16]
 800be3c:	693b      	ldr	r3, [r7, #16]
 800be3e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800be42:	613b      	str	r3, [r7, #16]
 800be44:	687b      	ldr	r3, [r7, #4]
 800be46:	011b      	lsls	r3, r3, #4
 800be48:	693a      	ldr	r2, [r7, #16]
 800be4a:	4313      	orrs	r3, r2
 800be4c:	613b      	str	r3, [r7, #16]
 800be4e:	697b      	ldr	r3, [r7, #20]
 800be50:	f023 030a 	bic.w	r3, r3, #10
 800be54:	617b      	str	r3, [r7, #20]
 800be56:	697a      	ldr	r2, [r7, #20]
 800be58:	68bb      	ldr	r3, [r7, #8]
 800be5a:	4313      	orrs	r3, r2
 800be5c:	617b      	str	r3, [r7, #20]
 800be5e:	68fb      	ldr	r3, [r7, #12]
 800be60:	693a      	ldr	r2, [r7, #16]
 800be62:	619a      	str	r2, [r3, #24]
 800be64:	68fb      	ldr	r3, [r7, #12]
 800be66:	697a      	ldr	r2, [r7, #20]
 800be68:	621a      	str	r2, [r3, #32]
 800be6a:	bf00      	nop
 800be6c:	371c      	adds	r7, #28
 800be6e:	46bd      	mov	sp, r7
 800be70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be74:	4770      	bx	lr

0800be76 <TIM_TI2_ConfigInputStage>:
 800be76:	b480      	push	{r7}
 800be78:	b087      	sub	sp, #28
 800be7a:	af00      	add	r7, sp, #0
 800be7c:	60f8      	str	r0, [r7, #12]
 800be7e:	60b9      	str	r1, [r7, #8]
 800be80:	607a      	str	r2, [r7, #4]
 800be82:	68fb      	ldr	r3, [r7, #12]
 800be84:	6a1b      	ldr	r3, [r3, #32]
 800be86:	f023 0210 	bic.w	r2, r3, #16
 800be8a:	68fb      	ldr	r3, [r7, #12]
 800be8c:	621a      	str	r2, [r3, #32]
 800be8e:	68fb      	ldr	r3, [r7, #12]
 800be90:	699b      	ldr	r3, [r3, #24]
 800be92:	617b      	str	r3, [r7, #20]
 800be94:	68fb      	ldr	r3, [r7, #12]
 800be96:	6a1b      	ldr	r3, [r3, #32]
 800be98:	613b      	str	r3, [r7, #16]
 800be9a:	697b      	ldr	r3, [r7, #20]
 800be9c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bea0:	617b      	str	r3, [r7, #20]
 800bea2:	687b      	ldr	r3, [r7, #4]
 800bea4:	031b      	lsls	r3, r3, #12
 800bea6:	697a      	ldr	r2, [r7, #20]
 800bea8:	4313      	orrs	r3, r2
 800beaa:	617b      	str	r3, [r7, #20]
 800beac:	693b      	ldr	r3, [r7, #16]
 800beae:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800beb2:	613b      	str	r3, [r7, #16]
 800beb4:	68bb      	ldr	r3, [r7, #8]
 800beb6:	011b      	lsls	r3, r3, #4
 800beb8:	693a      	ldr	r2, [r7, #16]
 800beba:	4313      	orrs	r3, r2
 800bebc:	613b      	str	r3, [r7, #16]
 800bebe:	68fb      	ldr	r3, [r7, #12]
 800bec0:	697a      	ldr	r2, [r7, #20]
 800bec2:	619a      	str	r2, [r3, #24]
 800bec4:	68fb      	ldr	r3, [r7, #12]
 800bec6:	693a      	ldr	r2, [r7, #16]
 800bec8:	621a      	str	r2, [r3, #32]
 800beca:	bf00      	nop
 800becc:	371c      	adds	r7, #28
 800bece:	46bd      	mov	sp, r7
 800bed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bed4:	4770      	bx	lr

0800bed6 <TIM_ITRx_SetConfig>:
 800bed6:	b480      	push	{r7}
 800bed8:	b085      	sub	sp, #20
 800beda:	af00      	add	r7, sp, #0
 800bedc:	6078      	str	r0, [r7, #4]
 800bede:	6039      	str	r1, [r7, #0]
 800bee0:	687b      	ldr	r3, [r7, #4]
 800bee2:	689b      	ldr	r3, [r3, #8]
 800bee4:	60fb      	str	r3, [r7, #12]
 800bee6:	68fb      	ldr	r3, [r7, #12]
 800bee8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800beec:	60fb      	str	r3, [r7, #12]
 800beee:	683a      	ldr	r2, [r7, #0]
 800bef0:	68fb      	ldr	r3, [r7, #12]
 800bef2:	4313      	orrs	r3, r2
 800bef4:	f043 0307 	orr.w	r3, r3, #7
 800bef8:	60fb      	str	r3, [r7, #12]
 800befa:	687b      	ldr	r3, [r7, #4]
 800befc:	68fa      	ldr	r2, [r7, #12]
 800befe:	609a      	str	r2, [r3, #8]
 800bf00:	bf00      	nop
 800bf02:	3714      	adds	r7, #20
 800bf04:	46bd      	mov	sp, r7
 800bf06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf0a:	4770      	bx	lr

0800bf0c <TIM_ETR_SetConfig>:
 800bf0c:	b480      	push	{r7}
 800bf0e:	b087      	sub	sp, #28
 800bf10:	af00      	add	r7, sp, #0
 800bf12:	60f8      	str	r0, [r7, #12]
 800bf14:	60b9      	str	r1, [r7, #8]
 800bf16:	607a      	str	r2, [r7, #4]
 800bf18:	603b      	str	r3, [r7, #0]
 800bf1a:	68fb      	ldr	r3, [r7, #12]
 800bf1c:	689b      	ldr	r3, [r3, #8]
 800bf1e:	617b      	str	r3, [r7, #20]
 800bf20:	697b      	ldr	r3, [r7, #20]
 800bf22:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800bf26:	617b      	str	r3, [r7, #20]
 800bf28:	683b      	ldr	r3, [r7, #0]
 800bf2a:	021a      	lsls	r2, r3, #8
 800bf2c:	687b      	ldr	r3, [r7, #4]
 800bf2e:	431a      	orrs	r2, r3
 800bf30:	68bb      	ldr	r3, [r7, #8]
 800bf32:	4313      	orrs	r3, r2
 800bf34:	697a      	ldr	r2, [r7, #20]
 800bf36:	4313      	orrs	r3, r2
 800bf38:	617b      	str	r3, [r7, #20]
 800bf3a:	68fb      	ldr	r3, [r7, #12]
 800bf3c:	697a      	ldr	r2, [r7, #20]
 800bf3e:	609a      	str	r2, [r3, #8]
 800bf40:	bf00      	nop
 800bf42:	371c      	adds	r7, #28
 800bf44:	46bd      	mov	sp, r7
 800bf46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf4a:	4770      	bx	lr

0800bf4c <TIM_CCxChannelCmd>:
 800bf4c:	b480      	push	{r7}
 800bf4e:	b087      	sub	sp, #28
 800bf50:	af00      	add	r7, sp, #0
 800bf52:	60f8      	str	r0, [r7, #12]
 800bf54:	60b9      	str	r1, [r7, #8]
 800bf56:	607a      	str	r2, [r7, #4]
 800bf58:	68bb      	ldr	r3, [r7, #8]
 800bf5a:	f003 031f 	and.w	r3, r3, #31
 800bf5e:	2201      	movs	r2, #1
 800bf60:	fa02 f303 	lsl.w	r3, r2, r3
 800bf64:	617b      	str	r3, [r7, #20]
 800bf66:	68fb      	ldr	r3, [r7, #12]
 800bf68:	6a1a      	ldr	r2, [r3, #32]
 800bf6a:	697b      	ldr	r3, [r7, #20]
 800bf6c:	43db      	mvns	r3, r3
 800bf6e:	401a      	ands	r2, r3
 800bf70:	68fb      	ldr	r3, [r7, #12]
 800bf72:	621a      	str	r2, [r3, #32]
 800bf74:	68fb      	ldr	r3, [r7, #12]
 800bf76:	6a1a      	ldr	r2, [r3, #32]
 800bf78:	68bb      	ldr	r3, [r7, #8]
 800bf7a:	f003 031f 	and.w	r3, r3, #31
 800bf7e:	6879      	ldr	r1, [r7, #4]
 800bf80:	fa01 f303 	lsl.w	r3, r1, r3
 800bf84:	431a      	orrs	r2, r3
 800bf86:	68fb      	ldr	r3, [r7, #12]
 800bf88:	621a      	str	r2, [r3, #32]
 800bf8a:	bf00      	nop
 800bf8c:	371c      	adds	r7, #28
 800bf8e:	46bd      	mov	sp, r7
 800bf90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf94:	4770      	bx	lr
	...

0800bf98 <HAL_TIMEx_MasterConfigSynchronization>:
 800bf98:	b480      	push	{r7}
 800bf9a:	b085      	sub	sp, #20
 800bf9c:	af00      	add	r7, sp, #0
 800bf9e:	6078      	str	r0, [r7, #4]
 800bfa0:	6039      	str	r1, [r7, #0]
 800bfa2:	687b      	ldr	r3, [r7, #4]
 800bfa4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bfa8:	2b01      	cmp	r3, #1
 800bfaa:	d101      	bne.n	800bfb0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800bfac:	2302      	movs	r3, #2
 800bfae:	e05a      	b.n	800c066 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800bfb0:	687b      	ldr	r3, [r7, #4]
 800bfb2:	2201      	movs	r2, #1
 800bfb4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bfb8:	687b      	ldr	r3, [r7, #4]
 800bfba:	2202      	movs	r2, #2
 800bfbc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bfc0:	687b      	ldr	r3, [r7, #4]
 800bfc2:	681b      	ldr	r3, [r3, #0]
 800bfc4:	685b      	ldr	r3, [r3, #4]
 800bfc6:	60fb      	str	r3, [r7, #12]
 800bfc8:	687b      	ldr	r3, [r7, #4]
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	689b      	ldr	r3, [r3, #8]
 800bfce:	60bb      	str	r3, [r7, #8]
 800bfd0:	68fb      	ldr	r3, [r7, #12]
 800bfd2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bfd6:	60fb      	str	r3, [r7, #12]
 800bfd8:	683b      	ldr	r3, [r7, #0]
 800bfda:	681b      	ldr	r3, [r3, #0]
 800bfdc:	68fa      	ldr	r2, [r7, #12]
 800bfde:	4313      	orrs	r3, r2
 800bfe0:	60fb      	str	r3, [r7, #12]
 800bfe2:	687b      	ldr	r3, [r7, #4]
 800bfe4:	681b      	ldr	r3, [r3, #0]
 800bfe6:	68fa      	ldr	r2, [r7, #12]
 800bfe8:	605a      	str	r2, [r3, #4]
 800bfea:	687b      	ldr	r3, [r7, #4]
 800bfec:	681b      	ldr	r3, [r3, #0]
 800bfee:	4a21      	ldr	r2, [pc, #132]	; (800c074 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800bff0:	4293      	cmp	r3, r2
 800bff2:	d022      	beq.n	800c03a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bff4:	687b      	ldr	r3, [r7, #4]
 800bff6:	681b      	ldr	r3, [r3, #0]
 800bff8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bffc:	d01d      	beq.n	800c03a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bffe:	687b      	ldr	r3, [r7, #4]
 800c000:	681b      	ldr	r3, [r3, #0]
 800c002:	4a1d      	ldr	r2, [pc, #116]	; (800c078 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800c004:	4293      	cmp	r3, r2
 800c006:	d018      	beq.n	800c03a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800c008:	687b      	ldr	r3, [r7, #4]
 800c00a:	681b      	ldr	r3, [r3, #0]
 800c00c:	4a1b      	ldr	r2, [pc, #108]	; (800c07c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800c00e:	4293      	cmp	r3, r2
 800c010:	d013      	beq.n	800c03a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800c012:	687b      	ldr	r3, [r7, #4]
 800c014:	681b      	ldr	r3, [r3, #0]
 800c016:	4a1a      	ldr	r2, [pc, #104]	; (800c080 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800c018:	4293      	cmp	r3, r2
 800c01a:	d00e      	beq.n	800c03a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800c01c:	687b      	ldr	r3, [r7, #4]
 800c01e:	681b      	ldr	r3, [r3, #0]
 800c020:	4a18      	ldr	r2, [pc, #96]	; (800c084 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800c022:	4293      	cmp	r3, r2
 800c024:	d009      	beq.n	800c03a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	681b      	ldr	r3, [r3, #0]
 800c02a:	4a17      	ldr	r2, [pc, #92]	; (800c088 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800c02c:	4293      	cmp	r3, r2
 800c02e:	d004      	beq.n	800c03a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800c030:	687b      	ldr	r3, [r7, #4]
 800c032:	681b      	ldr	r3, [r3, #0]
 800c034:	4a15      	ldr	r2, [pc, #84]	; (800c08c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800c036:	4293      	cmp	r3, r2
 800c038:	d10c      	bne.n	800c054 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800c03a:	68bb      	ldr	r3, [r7, #8]
 800c03c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c040:	60bb      	str	r3, [r7, #8]
 800c042:	683b      	ldr	r3, [r7, #0]
 800c044:	685b      	ldr	r3, [r3, #4]
 800c046:	68ba      	ldr	r2, [r7, #8]
 800c048:	4313      	orrs	r3, r2
 800c04a:	60bb      	str	r3, [r7, #8]
 800c04c:	687b      	ldr	r3, [r7, #4]
 800c04e:	681b      	ldr	r3, [r3, #0]
 800c050:	68ba      	ldr	r2, [r7, #8]
 800c052:	609a      	str	r2, [r3, #8]
 800c054:	687b      	ldr	r3, [r7, #4]
 800c056:	2201      	movs	r2, #1
 800c058:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c05c:	687b      	ldr	r3, [r7, #4]
 800c05e:	2200      	movs	r2, #0
 800c060:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c064:	2300      	movs	r3, #0
 800c066:	4618      	mov	r0, r3
 800c068:	3714      	adds	r7, #20
 800c06a:	46bd      	mov	sp, r7
 800c06c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c070:	4770      	bx	lr
 800c072:	bf00      	nop
 800c074:	40010000 	.word	0x40010000
 800c078:	40000400 	.word	0x40000400
 800c07c:	40000800 	.word	0x40000800
 800c080:	40000c00 	.word	0x40000c00
 800c084:	40010400 	.word	0x40010400
 800c088:	40014000 	.word	0x40014000
 800c08c:	40001800 	.word	0x40001800

0800c090 <HAL_TIMEx_ConfigBreakDeadTime>:
 800c090:	b480      	push	{r7}
 800c092:	b085      	sub	sp, #20
 800c094:	af00      	add	r7, sp, #0
 800c096:	6078      	str	r0, [r7, #4]
 800c098:	6039      	str	r1, [r7, #0]
 800c09a:	2300      	movs	r3, #0
 800c09c:	60fb      	str	r3, [r7, #12]
 800c09e:	687b      	ldr	r3, [r7, #4]
 800c0a0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c0a4:	2b01      	cmp	r3, #1
 800c0a6:	d101      	bne.n	800c0ac <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800c0a8:	2302      	movs	r3, #2
 800c0aa:	e03d      	b.n	800c128 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800c0ac:	687b      	ldr	r3, [r7, #4]
 800c0ae:	2201      	movs	r2, #1
 800c0b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c0b4:	68fb      	ldr	r3, [r7, #12]
 800c0b6:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800c0ba:	683b      	ldr	r3, [r7, #0]
 800c0bc:	68db      	ldr	r3, [r3, #12]
 800c0be:	4313      	orrs	r3, r2
 800c0c0:	60fb      	str	r3, [r7, #12]
 800c0c2:	68fb      	ldr	r3, [r7, #12]
 800c0c4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800c0c8:	683b      	ldr	r3, [r7, #0]
 800c0ca:	689b      	ldr	r3, [r3, #8]
 800c0cc:	4313      	orrs	r3, r2
 800c0ce:	60fb      	str	r3, [r7, #12]
 800c0d0:	68fb      	ldr	r3, [r7, #12]
 800c0d2:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800c0d6:	683b      	ldr	r3, [r7, #0]
 800c0d8:	685b      	ldr	r3, [r3, #4]
 800c0da:	4313      	orrs	r3, r2
 800c0dc:	60fb      	str	r3, [r7, #12]
 800c0de:	68fb      	ldr	r3, [r7, #12]
 800c0e0:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800c0e4:	683b      	ldr	r3, [r7, #0]
 800c0e6:	681b      	ldr	r3, [r3, #0]
 800c0e8:	4313      	orrs	r3, r2
 800c0ea:	60fb      	str	r3, [r7, #12]
 800c0ec:	68fb      	ldr	r3, [r7, #12]
 800c0ee:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800c0f2:	683b      	ldr	r3, [r7, #0]
 800c0f4:	691b      	ldr	r3, [r3, #16]
 800c0f6:	4313      	orrs	r3, r2
 800c0f8:	60fb      	str	r3, [r7, #12]
 800c0fa:	68fb      	ldr	r3, [r7, #12]
 800c0fc:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800c100:	683b      	ldr	r3, [r7, #0]
 800c102:	695b      	ldr	r3, [r3, #20]
 800c104:	4313      	orrs	r3, r2
 800c106:	60fb      	str	r3, [r7, #12]
 800c108:	68fb      	ldr	r3, [r7, #12]
 800c10a:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800c10e:	683b      	ldr	r3, [r7, #0]
 800c110:	69db      	ldr	r3, [r3, #28]
 800c112:	4313      	orrs	r3, r2
 800c114:	60fb      	str	r3, [r7, #12]
 800c116:	687b      	ldr	r3, [r7, #4]
 800c118:	681b      	ldr	r3, [r3, #0]
 800c11a:	68fa      	ldr	r2, [r7, #12]
 800c11c:	645a      	str	r2, [r3, #68]	; 0x44
 800c11e:	687b      	ldr	r3, [r7, #4]
 800c120:	2200      	movs	r2, #0
 800c122:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c126:	2300      	movs	r3, #0
 800c128:	4618      	mov	r0, r3
 800c12a:	3714      	adds	r7, #20
 800c12c:	46bd      	mov	sp, r7
 800c12e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c132:	4770      	bx	lr

0800c134 <HAL_UART_Init>:
 800c134:	b580      	push	{r7, lr}
 800c136:	b082      	sub	sp, #8
 800c138:	af00      	add	r7, sp, #0
 800c13a:	6078      	str	r0, [r7, #4]
 800c13c:	687b      	ldr	r3, [r7, #4]
 800c13e:	2b00      	cmp	r3, #0
 800c140:	d101      	bne.n	800c146 <HAL_UART_Init+0x12>
 800c142:	2301      	movs	r3, #1
 800c144:	e03f      	b.n	800c1c6 <HAL_UART_Init+0x92>
 800c146:	687b      	ldr	r3, [r7, #4]
 800c148:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c14c:	b2db      	uxtb	r3, r3
 800c14e:	2b00      	cmp	r3, #0
 800c150:	d106      	bne.n	800c160 <HAL_UART_Init+0x2c>
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	2200      	movs	r2, #0
 800c156:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c15a:	6878      	ldr	r0, [r7, #4]
 800c15c:	f7fa fd62 	bl	8006c24 <HAL_UART_MspInit>
 800c160:	687b      	ldr	r3, [r7, #4]
 800c162:	2224      	movs	r2, #36	; 0x24
 800c164:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c168:	687b      	ldr	r3, [r7, #4]
 800c16a:	681b      	ldr	r3, [r3, #0]
 800c16c:	68da      	ldr	r2, [r3, #12]
 800c16e:	687b      	ldr	r3, [r7, #4]
 800c170:	681b      	ldr	r3, [r3, #0]
 800c172:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c176:	60da      	str	r2, [r3, #12]
 800c178:	6878      	ldr	r0, [r7, #4]
 800c17a:	f001 f8fb 	bl	800d374 <UART_SetConfig>
 800c17e:	687b      	ldr	r3, [r7, #4]
 800c180:	681b      	ldr	r3, [r3, #0]
 800c182:	691a      	ldr	r2, [r3, #16]
 800c184:	687b      	ldr	r3, [r7, #4]
 800c186:	681b      	ldr	r3, [r3, #0]
 800c188:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800c18c:	611a      	str	r2, [r3, #16]
 800c18e:	687b      	ldr	r3, [r7, #4]
 800c190:	681b      	ldr	r3, [r3, #0]
 800c192:	695a      	ldr	r2, [r3, #20]
 800c194:	687b      	ldr	r3, [r7, #4]
 800c196:	681b      	ldr	r3, [r3, #0]
 800c198:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800c19c:	615a      	str	r2, [r3, #20]
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	681b      	ldr	r3, [r3, #0]
 800c1a2:	68da      	ldr	r2, [r3, #12]
 800c1a4:	687b      	ldr	r3, [r7, #4]
 800c1a6:	681b      	ldr	r3, [r3, #0]
 800c1a8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c1ac:	60da      	str	r2, [r3, #12]
 800c1ae:	687b      	ldr	r3, [r7, #4]
 800c1b0:	2200      	movs	r2, #0
 800c1b2:	641a      	str	r2, [r3, #64]	; 0x40
 800c1b4:	687b      	ldr	r3, [r7, #4]
 800c1b6:	2220      	movs	r2, #32
 800c1b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c1bc:	687b      	ldr	r3, [r7, #4]
 800c1be:	2220      	movs	r2, #32
 800c1c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c1c4:	2300      	movs	r3, #0
 800c1c6:	4618      	mov	r0, r3
 800c1c8:	3708      	adds	r7, #8
 800c1ca:	46bd      	mov	sp, r7
 800c1cc:	bd80      	pop	{r7, pc}

0800c1ce <HAL_UART_DeInit>:
 800c1ce:	b580      	push	{r7, lr}
 800c1d0:	b082      	sub	sp, #8
 800c1d2:	af00      	add	r7, sp, #0
 800c1d4:	6078      	str	r0, [r7, #4]
 800c1d6:	687b      	ldr	r3, [r7, #4]
 800c1d8:	2b00      	cmp	r3, #0
 800c1da:	d101      	bne.n	800c1e0 <HAL_UART_DeInit+0x12>
 800c1dc:	2301      	movs	r3, #1
 800c1de:	e021      	b.n	800c224 <HAL_UART_DeInit+0x56>
 800c1e0:	687b      	ldr	r3, [r7, #4]
 800c1e2:	2224      	movs	r2, #36	; 0x24
 800c1e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c1e8:	687b      	ldr	r3, [r7, #4]
 800c1ea:	681b      	ldr	r3, [r3, #0]
 800c1ec:	68da      	ldr	r2, [r3, #12]
 800c1ee:	687b      	ldr	r3, [r7, #4]
 800c1f0:	681b      	ldr	r3, [r3, #0]
 800c1f2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c1f6:	60da      	str	r2, [r3, #12]
 800c1f8:	6878      	ldr	r0, [r7, #4]
 800c1fa:	f7fa ff09 	bl	8007010 <HAL_UART_MspDeInit>
 800c1fe:	687b      	ldr	r3, [r7, #4]
 800c200:	2200      	movs	r2, #0
 800c202:	641a      	str	r2, [r3, #64]	; 0x40
 800c204:	687b      	ldr	r3, [r7, #4]
 800c206:	2200      	movs	r2, #0
 800c208:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c20c:	687b      	ldr	r3, [r7, #4]
 800c20e:	2200      	movs	r2, #0
 800c210:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c214:	687b      	ldr	r3, [r7, #4]
 800c216:	2200      	movs	r2, #0
 800c218:	631a      	str	r2, [r3, #48]	; 0x30
 800c21a:	687b      	ldr	r3, [r7, #4]
 800c21c:	2200      	movs	r2, #0
 800c21e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c222:	2300      	movs	r3, #0
 800c224:	4618      	mov	r0, r3
 800c226:	3708      	adds	r7, #8
 800c228:	46bd      	mov	sp, r7
 800c22a:	bd80      	pop	{r7, pc}

0800c22c <HAL_UART_Transmit>:
 800c22c:	b580      	push	{r7, lr}
 800c22e:	b08a      	sub	sp, #40	; 0x28
 800c230:	af02      	add	r7, sp, #8
 800c232:	60f8      	str	r0, [r7, #12]
 800c234:	60b9      	str	r1, [r7, #8]
 800c236:	603b      	str	r3, [r7, #0]
 800c238:	4613      	mov	r3, r2
 800c23a:	80fb      	strh	r3, [r7, #6]
 800c23c:	2300      	movs	r3, #0
 800c23e:	617b      	str	r3, [r7, #20]
 800c240:	68fb      	ldr	r3, [r7, #12]
 800c242:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c246:	b2db      	uxtb	r3, r3
 800c248:	2b20      	cmp	r3, #32
 800c24a:	d17c      	bne.n	800c346 <HAL_UART_Transmit+0x11a>
 800c24c:	68bb      	ldr	r3, [r7, #8]
 800c24e:	2b00      	cmp	r3, #0
 800c250:	d002      	beq.n	800c258 <HAL_UART_Transmit+0x2c>
 800c252:	88fb      	ldrh	r3, [r7, #6]
 800c254:	2b00      	cmp	r3, #0
 800c256:	d101      	bne.n	800c25c <HAL_UART_Transmit+0x30>
 800c258:	2301      	movs	r3, #1
 800c25a:	e075      	b.n	800c348 <HAL_UART_Transmit+0x11c>
 800c25c:	68fb      	ldr	r3, [r7, #12]
 800c25e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c262:	2b01      	cmp	r3, #1
 800c264:	d101      	bne.n	800c26a <HAL_UART_Transmit+0x3e>
 800c266:	2302      	movs	r3, #2
 800c268:	e06e      	b.n	800c348 <HAL_UART_Transmit+0x11c>
 800c26a:	68fb      	ldr	r3, [r7, #12]
 800c26c:	2201      	movs	r2, #1
 800c26e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c272:	68fb      	ldr	r3, [r7, #12]
 800c274:	2200      	movs	r2, #0
 800c276:	641a      	str	r2, [r3, #64]	; 0x40
 800c278:	68fb      	ldr	r3, [r7, #12]
 800c27a:	2221      	movs	r2, #33	; 0x21
 800c27c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c280:	f7fb f84e 	bl	8007320 <HAL_GetTick>
 800c284:	6178      	str	r0, [r7, #20]
 800c286:	68fb      	ldr	r3, [r7, #12]
 800c288:	88fa      	ldrh	r2, [r7, #6]
 800c28a:	849a      	strh	r2, [r3, #36]	; 0x24
 800c28c:	68fb      	ldr	r3, [r7, #12]
 800c28e:	88fa      	ldrh	r2, [r7, #6]
 800c290:	84da      	strh	r2, [r3, #38]	; 0x26
 800c292:	68fb      	ldr	r3, [r7, #12]
 800c294:	689b      	ldr	r3, [r3, #8]
 800c296:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c29a:	d108      	bne.n	800c2ae <HAL_UART_Transmit+0x82>
 800c29c:	68fb      	ldr	r3, [r7, #12]
 800c29e:	691b      	ldr	r3, [r3, #16]
 800c2a0:	2b00      	cmp	r3, #0
 800c2a2:	d104      	bne.n	800c2ae <HAL_UART_Transmit+0x82>
 800c2a4:	2300      	movs	r3, #0
 800c2a6:	61fb      	str	r3, [r7, #28]
 800c2a8:	68bb      	ldr	r3, [r7, #8]
 800c2aa:	61bb      	str	r3, [r7, #24]
 800c2ac:	e003      	b.n	800c2b6 <HAL_UART_Transmit+0x8a>
 800c2ae:	68bb      	ldr	r3, [r7, #8]
 800c2b0:	61fb      	str	r3, [r7, #28]
 800c2b2:	2300      	movs	r3, #0
 800c2b4:	61bb      	str	r3, [r7, #24]
 800c2b6:	68fb      	ldr	r3, [r7, #12]
 800c2b8:	2200      	movs	r2, #0
 800c2ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c2be:	e02a      	b.n	800c316 <HAL_UART_Transmit+0xea>
 800c2c0:	683b      	ldr	r3, [r7, #0]
 800c2c2:	9300      	str	r3, [sp, #0]
 800c2c4:	697b      	ldr	r3, [r7, #20]
 800c2c6:	2200      	movs	r2, #0
 800c2c8:	2180      	movs	r1, #128	; 0x80
 800c2ca:	68f8      	ldr	r0, [r7, #12]
 800c2cc:	f000 fd83 	bl	800cdd6 <UART_WaitOnFlagUntilTimeout>
 800c2d0:	4603      	mov	r3, r0
 800c2d2:	2b00      	cmp	r3, #0
 800c2d4:	d001      	beq.n	800c2da <HAL_UART_Transmit+0xae>
 800c2d6:	2303      	movs	r3, #3
 800c2d8:	e036      	b.n	800c348 <HAL_UART_Transmit+0x11c>
 800c2da:	69fb      	ldr	r3, [r7, #28]
 800c2dc:	2b00      	cmp	r3, #0
 800c2de:	d10b      	bne.n	800c2f8 <HAL_UART_Transmit+0xcc>
 800c2e0:	69bb      	ldr	r3, [r7, #24]
 800c2e2:	881b      	ldrh	r3, [r3, #0]
 800c2e4:	461a      	mov	r2, r3
 800c2e6:	68fb      	ldr	r3, [r7, #12]
 800c2e8:	681b      	ldr	r3, [r3, #0]
 800c2ea:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800c2ee:	605a      	str	r2, [r3, #4]
 800c2f0:	69bb      	ldr	r3, [r7, #24]
 800c2f2:	3302      	adds	r3, #2
 800c2f4:	61bb      	str	r3, [r7, #24]
 800c2f6:	e007      	b.n	800c308 <HAL_UART_Transmit+0xdc>
 800c2f8:	69fb      	ldr	r3, [r7, #28]
 800c2fa:	781a      	ldrb	r2, [r3, #0]
 800c2fc:	68fb      	ldr	r3, [r7, #12]
 800c2fe:	681b      	ldr	r3, [r3, #0]
 800c300:	605a      	str	r2, [r3, #4]
 800c302:	69fb      	ldr	r3, [r7, #28]
 800c304:	3301      	adds	r3, #1
 800c306:	61fb      	str	r3, [r7, #28]
 800c308:	68fb      	ldr	r3, [r7, #12]
 800c30a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c30c:	b29b      	uxth	r3, r3
 800c30e:	3b01      	subs	r3, #1
 800c310:	b29a      	uxth	r2, r3
 800c312:	68fb      	ldr	r3, [r7, #12]
 800c314:	84da      	strh	r2, [r3, #38]	; 0x26
 800c316:	68fb      	ldr	r3, [r7, #12]
 800c318:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c31a:	b29b      	uxth	r3, r3
 800c31c:	2b00      	cmp	r3, #0
 800c31e:	d1cf      	bne.n	800c2c0 <HAL_UART_Transmit+0x94>
 800c320:	683b      	ldr	r3, [r7, #0]
 800c322:	9300      	str	r3, [sp, #0]
 800c324:	697b      	ldr	r3, [r7, #20]
 800c326:	2200      	movs	r2, #0
 800c328:	2140      	movs	r1, #64	; 0x40
 800c32a:	68f8      	ldr	r0, [r7, #12]
 800c32c:	f000 fd53 	bl	800cdd6 <UART_WaitOnFlagUntilTimeout>
 800c330:	4603      	mov	r3, r0
 800c332:	2b00      	cmp	r3, #0
 800c334:	d001      	beq.n	800c33a <HAL_UART_Transmit+0x10e>
 800c336:	2303      	movs	r3, #3
 800c338:	e006      	b.n	800c348 <HAL_UART_Transmit+0x11c>
 800c33a:	68fb      	ldr	r3, [r7, #12]
 800c33c:	2220      	movs	r2, #32
 800c33e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c342:	2300      	movs	r3, #0
 800c344:	e000      	b.n	800c348 <HAL_UART_Transmit+0x11c>
 800c346:	2302      	movs	r3, #2
 800c348:	4618      	mov	r0, r3
 800c34a:	3720      	adds	r7, #32
 800c34c:	46bd      	mov	sp, r7
 800c34e:	bd80      	pop	{r7, pc}

0800c350 <HAL_UART_Transmit_DMA>:
 800c350:	b580      	push	{r7, lr}
 800c352:	b08c      	sub	sp, #48	; 0x30
 800c354:	af00      	add	r7, sp, #0
 800c356:	60f8      	str	r0, [r7, #12]
 800c358:	60b9      	str	r1, [r7, #8]
 800c35a:	4613      	mov	r3, r2
 800c35c:	80fb      	strh	r3, [r7, #6]
 800c35e:	68fb      	ldr	r3, [r7, #12]
 800c360:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c364:	b2db      	uxtb	r3, r3
 800c366:	2b20      	cmp	r3, #32
 800c368:	d165      	bne.n	800c436 <HAL_UART_Transmit_DMA+0xe6>
 800c36a:	68bb      	ldr	r3, [r7, #8]
 800c36c:	2b00      	cmp	r3, #0
 800c36e:	d002      	beq.n	800c376 <HAL_UART_Transmit_DMA+0x26>
 800c370:	88fb      	ldrh	r3, [r7, #6]
 800c372:	2b00      	cmp	r3, #0
 800c374:	d101      	bne.n	800c37a <HAL_UART_Transmit_DMA+0x2a>
 800c376:	2301      	movs	r3, #1
 800c378:	e05e      	b.n	800c438 <HAL_UART_Transmit_DMA+0xe8>
 800c37a:	68fb      	ldr	r3, [r7, #12]
 800c37c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c380:	2b01      	cmp	r3, #1
 800c382:	d101      	bne.n	800c388 <HAL_UART_Transmit_DMA+0x38>
 800c384:	2302      	movs	r3, #2
 800c386:	e057      	b.n	800c438 <HAL_UART_Transmit_DMA+0xe8>
 800c388:	68fb      	ldr	r3, [r7, #12]
 800c38a:	2201      	movs	r2, #1
 800c38c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c390:	68ba      	ldr	r2, [r7, #8]
 800c392:	68fb      	ldr	r3, [r7, #12]
 800c394:	621a      	str	r2, [r3, #32]
 800c396:	68fb      	ldr	r3, [r7, #12]
 800c398:	88fa      	ldrh	r2, [r7, #6]
 800c39a:	849a      	strh	r2, [r3, #36]	; 0x24
 800c39c:	68fb      	ldr	r3, [r7, #12]
 800c39e:	88fa      	ldrh	r2, [r7, #6]
 800c3a0:	84da      	strh	r2, [r3, #38]	; 0x26
 800c3a2:	68fb      	ldr	r3, [r7, #12]
 800c3a4:	2200      	movs	r2, #0
 800c3a6:	641a      	str	r2, [r3, #64]	; 0x40
 800c3a8:	68fb      	ldr	r3, [r7, #12]
 800c3aa:	2221      	movs	r2, #33	; 0x21
 800c3ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c3b0:	68fb      	ldr	r3, [r7, #12]
 800c3b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c3b4:	4a22      	ldr	r2, [pc, #136]	; (800c440 <HAL_UART_Transmit_DMA+0xf0>)
 800c3b6:	63da      	str	r2, [r3, #60]	; 0x3c
 800c3b8:	68fb      	ldr	r3, [r7, #12]
 800c3ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c3bc:	4a21      	ldr	r2, [pc, #132]	; (800c444 <HAL_UART_Transmit_DMA+0xf4>)
 800c3be:	641a      	str	r2, [r3, #64]	; 0x40
 800c3c0:	68fb      	ldr	r3, [r7, #12]
 800c3c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c3c4:	4a20      	ldr	r2, [pc, #128]	; (800c448 <HAL_UART_Transmit_DMA+0xf8>)
 800c3c6:	64da      	str	r2, [r3, #76]	; 0x4c
 800c3c8:	68fb      	ldr	r3, [r7, #12]
 800c3ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c3cc:	2200      	movs	r2, #0
 800c3ce:	651a      	str	r2, [r3, #80]	; 0x50
 800c3d0:	f107 0308 	add.w	r3, r7, #8
 800c3d4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c3d6:	68fb      	ldr	r3, [r7, #12]
 800c3d8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800c3da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c3dc:	6819      	ldr	r1, [r3, #0]
 800c3de:	68fb      	ldr	r3, [r7, #12]
 800c3e0:	681b      	ldr	r3, [r3, #0]
 800c3e2:	3304      	adds	r3, #4
 800c3e4:	461a      	mov	r2, r3
 800c3e6:	88fb      	ldrh	r3, [r7, #6]
 800c3e8:	f7fb fe1c 	bl	8008024 <HAL_DMA_Start_IT>
 800c3ec:	68fb      	ldr	r3, [r7, #12]
 800c3ee:	681b      	ldr	r3, [r3, #0]
 800c3f0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c3f4:	601a      	str	r2, [r3, #0]
 800c3f6:	68fb      	ldr	r3, [r7, #12]
 800c3f8:	2200      	movs	r2, #0
 800c3fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c3fe:	68fb      	ldr	r3, [r7, #12]
 800c400:	681b      	ldr	r3, [r3, #0]
 800c402:	3314      	adds	r3, #20
 800c404:	61bb      	str	r3, [r7, #24]
 800c406:	69bb      	ldr	r3, [r7, #24]
 800c408:	e853 3f00 	ldrex	r3, [r3]
 800c40c:	617b      	str	r3, [r7, #20]
 800c40e:	697b      	ldr	r3, [r7, #20]
 800c410:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c414:	62bb      	str	r3, [r7, #40]	; 0x28
 800c416:	68fb      	ldr	r3, [r7, #12]
 800c418:	681b      	ldr	r3, [r3, #0]
 800c41a:	3314      	adds	r3, #20
 800c41c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c41e:	627a      	str	r2, [r7, #36]	; 0x24
 800c420:	623b      	str	r3, [r7, #32]
 800c422:	6a39      	ldr	r1, [r7, #32]
 800c424:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800c426:	e841 2300 	strex	r3, r2, [r1]
 800c42a:	61fb      	str	r3, [r7, #28]
 800c42c:	69fb      	ldr	r3, [r7, #28]
 800c42e:	2b00      	cmp	r3, #0
 800c430:	d1e5      	bne.n	800c3fe <HAL_UART_Transmit_DMA+0xae>
 800c432:	2300      	movs	r3, #0
 800c434:	e000      	b.n	800c438 <HAL_UART_Transmit_DMA+0xe8>
 800c436:	2302      	movs	r3, #2
 800c438:	4618      	mov	r0, r3
 800c43a:	3730      	adds	r7, #48	; 0x30
 800c43c:	46bd      	mov	sp, r7
 800c43e:	bd80      	pop	{r7, pc}
 800c440:	0800cb31 	.word	0x0800cb31
 800c444:	0800cbcb 	.word	0x0800cbcb
 800c448:	0800cd43 	.word	0x0800cd43

0800c44c <HAL_UART_Receive_DMA>:
 800c44c:	b580      	push	{r7, lr}
 800c44e:	b084      	sub	sp, #16
 800c450:	af00      	add	r7, sp, #0
 800c452:	60f8      	str	r0, [r7, #12]
 800c454:	60b9      	str	r1, [r7, #8]
 800c456:	4613      	mov	r3, r2
 800c458:	80fb      	strh	r3, [r7, #6]
 800c45a:	68fb      	ldr	r3, [r7, #12]
 800c45c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c460:	b2db      	uxtb	r3, r3
 800c462:	2b20      	cmp	r3, #32
 800c464:	d11d      	bne.n	800c4a2 <HAL_UART_Receive_DMA+0x56>
 800c466:	68bb      	ldr	r3, [r7, #8]
 800c468:	2b00      	cmp	r3, #0
 800c46a:	d002      	beq.n	800c472 <HAL_UART_Receive_DMA+0x26>
 800c46c:	88fb      	ldrh	r3, [r7, #6]
 800c46e:	2b00      	cmp	r3, #0
 800c470:	d101      	bne.n	800c476 <HAL_UART_Receive_DMA+0x2a>
 800c472:	2301      	movs	r3, #1
 800c474:	e016      	b.n	800c4a4 <HAL_UART_Receive_DMA+0x58>
 800c476:	68fb      	ldr	r3, [r7, #12]
 800c478:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c47c:	2b01      	cmp	r3, #1
 800c47e:	d101      	bne.n	800c484 <HAL_UART_Receive_DMA+0x38>
 800c480:	2302      	movs	r3, #2
 800c482:	e00f      	b.n	800c4a4 <HAL_UART_Receive_DMA+0x58>
 800c484:	68fb      	ldr	r3, [r7, #12]
 800c486:	2201      	movs	r2, #1
 800c488:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c48c:	68fb      	ldr	r3, [r7, #12]
 800c48e:	2200      	movs	r2, #0
 800c490:	631a      	str	r2, [r3, #48]	; 0x30
 800c492:	88fb      	ldrh	r3, [r7, #6]
 800c494:	461a      	mov	r2, r3
 800c496:	68b9      	ldr	r1, [r7, #8]
 800c498:	68f8      	ldr	r0, [r7, #12]
 800c49a:	f000 fd0b 	bl	800ceb4 <UART_Start_Receive_DMA>
 800c49e:	4603      	mov	r3, r0
 800c4a0:	e000      	b.n	800c4a4 <HAL_UART_Receive_DMA+0x58>
 800c4a2:	2302      	movs	r3, #2
 800c4a4:	4618      	mov	r0, r3
 800c4a6:	3710      	adds	r7, #16
 800c4a8:	46bd      	mov	sp, r7
 800c4aa:	bd80      	pop	{r7, pc}

0800c4ac <HAL_UART_DMAStop>:
 800c4ac:	b580      	push	{r7, lr}
 800c4ae:	b090      	sub	sp, #64	; 0x40
 800c4b0:	af00      	add	r7, sp, #0
 800c4b2:	6078      	str	r0, [r7, #4]
 800c4b4:	2300      	movs	r3, #0
 800c4b6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c4b8:	687b      	ldr	r3, [r7, #4]
 800c4ba:	681b      	ldr	r3, [r3, #0]
 800c4bc:	695b      	ldr	r3, [r3, #20]
 800c4be:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c4c2:	2b80      	cmp	r3, #128	; 0x80
 800c4c4:	bf0c      	ite	eq
 800c4c6:	2301      	moveq	r3, #1
 800c4c8:	2300      	movne	r3, #0
 800c4ca:	b2db      	uxtb	r3, r3
 800c4cc:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c4ce:	687b      	ldr	r3, [r7, #4]
 800c4d0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c4d4:	b2db      	uxtb	r3, r3
 800c4d6:	2b21      	cmp	r3, #33	; 0x21
 800c4d8:	d128      	bne.n	800c52c <HAL_UART_DMAStop+0x80>
 800c4da:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c4dc:	2b00      	cmp	r3, #0
 800c4de:	d025      	beq.n	800c52c <HAL_UART_DMAStop+0x80>
 800c4e0:	687b      	ldr	r3, [r7, #4]
 800c4e2:	681b      	ldr	r3, [r3, #0]
 800c4e4:	3314      	adds	r3, #20
 800c4e6:	627b      	str	r3, [r7, #36]	; 0x24
 800c4e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c4ea:	e853 3f00 	ldrex	r3, [r3]
 800c4ee:	623b      	str	r3, [r7, #32]
 800c4f0:	6a3b      	ldr	r3, [r7, #32]
 800c4f2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c4f6:	63bb      	str	r3, [r7, #56]	; 0x38
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	681b      	ldr	r3, [r3, #0]
 800c4fc:	3314      	adds	r3, #20
 800c4fe:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c500:	633a      	str	r2, [r7, #48]	; 0x30
 800c502:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c504:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c506:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c508:	e841 2300 	strex	r3, r2, [r1]
 800c50c:	62bb      	str	r3, [r7, #40]	; 0x28
 800c50e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c510:	2b00      	cmp	r3, #0
 800c512:	d1e5      	bne.n	800c4e0 <HAL_UART_DMAStop+0x34>
 800c514:	687b      	ldr	r3, [r7, #4]
 800c516:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c518:	2b00      	cmp	r3, #0
 800c51a:	d004      	beq.n	800c526 <HAL_UART_DMAStop+0x7a>
 800c51c:	687b      	ldr	r3, [r7, #4]
 800c51e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c520:	4618      	mov	r0, r3
 800c522:	f7fb fdd7 	bl	80080d4 <HAL_DMA_Abort>
 800c526:	6878      	ldr	r0, [r7, #4]
 800c528:	f000 fd62 	bl	800cff0 <UART_EndTxTransfer>
 800c52c:	687b      	ldr	r3, [r7, #4]
 800c52e:	681b      	ldr	r3, [r3, #0]
 800c530:	695b      	ldr	r3, [r3, #20]
 800c532:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c536:	2b40      	cmp	r3, #64	; 0x40
 800c538:	bf0c      	ite	eq
 800c53a:	2301      	moveq	r3, #1
 800c53c:	2300      	movne	r3, #0
 800c53e:	b2db      	uxtb	r3, r3
 800c540:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c542:	687b      	ldr	r3, [r7, #4]
 800c544:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c548:	b2db      	uxtb	r3, r3
 800c54a:	2b22      	cmp	r3, #34	; 0x22
 800c54c:	d128      	bne.n	800c5a0 <HAL_UART_DMAStop+0xf4>
 800c54e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c550:	2b00      	cmp	r3, #0
 800c552:	d025      	beq.n	800c5a0 <HAL_UART_DMAStop+0xf4>
 800c554:	687b      	ldr	r3, [r7, #4]
 800c556:	681b      	ldr	r3, [r3, #0]
 800c558:	3314      	adds	r3, #20
 800c55a:	613b      	str	r3, [r7, #16]
 800c55c:	693b      	ldr	r3, [r7, #16]
 800c55e:	e853 3f00 	ldrex	r3, [r3]
 800c562:	60fb      	str	r3, [r7, #12]
 800c564:	68fb      	ldr	r3, [r7, #12]
 800c566:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c56a:	637b      	str	r3, [r7, #52]	; 0x34
 800c56c:	687b      	ldr	r3, [r7, #4]
 800c56e:	681b      	ldr	r3, [r3, #0]
 800c570:	3314      	adds	r3, #20
 800c572:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c574:	61fa      	str	r2, [r7, #28]
 800c576:	61bb      	str	r3, [r7, #24]
 800c578:	69b9      	ldr	r1, [r7, #24]
 800c57a:	69fa      	ldr	r2, [r7, #28]
 800c57c:	e841 2300 	strex	r3, r2, [r1]
 800c580:	617b      	str	r3, [r7, #20]
 800c582:	697b      	ldr	r3, [r7, #20]
 800c584:	2b00      	cmp	r3, #0
 800c586:	d1e5      	bne.n	800c554 <HAL_UART_DMAStop+0xa8>
 800c588:	687b      	ldr	r3, [r7, #4]
 800c58a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c58c:	2b00      	cmp	r3, #0
 800c58e:	d004      	beq.n	800c59a <HAL_UART_DMAStop+0xee>
 800c590:	687b      	ldr	r3, [r7, #4]
 800c592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c594:	4618      	mov	r0, r3
 800c596:	f7fb fd9d 	bl	80080d4 <HAL_DMA_Abort>
 800c59a:	6878      	ldr	r0, [r7, #4]
 800c59c:	f000 fd50 	bl	800d040 <UART_EndRxTransfer>
 800c5a0:	2300      	movs	r3, #0
 800c5a2:	4618      	mov	r0, r3
 800c5a4:	3740      	adds	r7, #64	; 0x40
 800c5a6:	46bd      	mov	sp, r7
 800c5a8:	bd80      	pop	{r7, pc}
	...

0800c5ac <HAL_UART_IRQHandler>:
 800c5ac:	b580      	push	{r7, lr}
 800c5ae:	b0ba      	sub	sp, #232	; 0xe8
 800c5b0:	af00      	add	r7, sp, #0
 800c5b2:	6078      	str	r0, [r7, #4]
 800c5b4:	687b      	ldr	r3, [r7, #4]
 800c5b6:	681b      	ldr	r3, [r3, #0]
 800c5b8:	681b      	ldr	r3, [r3, #0]
 800c5ba:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800c5be:	687b      	ldr	r3, [r7, #4]
 800c5c0:	681b      	ldr	r3, [r3, #0]
 800c5c2:	68db      	ldr	r3, [r3, #12]
 800c5c4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800c5c8:	687b      	ldr	r3, [r7, #4]
 800c5ca:	681b      	ldr	r3, [r3, #0]
 800c5cc:	695b      	ldr	r3, [r3, #20]
 800c5ce:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800c5d2:	2300      	movs	r3, #0
 800c5d4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c5d8:	2300      	movs	r3, #0
 800c5da:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c5de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c5e2:	f003 030f 	and.w	r3, r3, #15
 800c5e6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c5ea:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c5ee:	2b00      	cmp	r3, #0
 800c5f0:	d10f      	bne.n	800c612 <HAL_UART_IRQHandler+0x66>
 800c5f2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c5f6:	f003 0320 	and.w	r3, r3, #32
 800c5fa:	2b00      	cmp	r3, #0
 800c5fc:	d009      	beq.n	800c612 <HAL_UART_IRQHandler+0x66>
 800c5fe:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c602:	f003 0320 	and.w	r3, r3, #32
 800c606:	2b00      	cmp	r3, #0
 800c608:	d003      	beq.n	800c612 <HAL_UART_IRQHandler+0x66>
 800c60a:	6878      	ldr	r0, [r7, #4]
 800c60c:	f000 fdf7 	bl	800d1fe <UART_Receive_IT>
 800c610:	e256      	b.n	800cac0 <HAL_UART_IRQHandler+0x514>
 800c612:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c616:	2b00      	cmp	r3, #0
 800c618:	f000 80de 	beq.w	800c7d8 <HAL_UART_IRQHandler+0x22c>
 800c61c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c620:	f003 0301 	and.w	r3, r3, #1
 800c624:	2b00      	cmp	r3, #0
 800c626:	d106      	bne.n	800c636 <HAL_UART_IRQHandler+0x8a>
 800c628:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c62c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800c630:	2b00      	cmp	r3, #0
 800c632:	f000 80d1 	beq.w	800c7d8 <HAL_UART_IRQHandler+0x22c>
 800c636:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c63a:	f003 0301 	and.w	r3, r3, #1
 800c63e:	2b00      	cmp	r3, #0
 800c640:	d00b      	beq.n	800c65a <HAL_UART_IRQHandler+0xae>
 800c642:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c646:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c64a:	2b00      	cmp	r3, #0
 800c64c:	d005      	beq.n	800c65a <HAL_UART_IRQHandler+0xae>
 800c64e:	687b      	ldr	r3, [r7, #4]
 800c650:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c652:	f043 0201 	orr.w	r2, r3, #1
 800c656:	687b      	ldr	r3, [r7, #4]
 800c658:	641a      	str	r2, [r3, #64]	; 0x40
 800c65a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c65e:	f003 0304 	and.w	r3, r3, #4
 800c662:	2b00      	cmp	r3, #0
 800c664:	d00b      	beq.n	800c67e <HAL_UART_IRQHandler+0xd2>
 800c666:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c66a:	f003 0301 	and.w	r3, r3, #1
 800c66e:	2b00      	cmp	r3, #0
 800c670:	d005      	beq.n	800c67e <HAL_UART_IRQHandler+0xd2>
 800c672:	687b      	ldr	r3, [r7, #4]
 800c674:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c676:	f043 0202 	orr.w	r2, r3, #2
 800c67a:	687b      	ldr	r3, [r7, #4]
 800c67c:	641a      	str	r2, [r3, #64]	; 0x40
 800c67e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c682:	f003 0302 	and.w	r3, r3, #2
 800c686:	2b00      	cmp	r3, #0
 800c688:	d00b      	beq.n	800c6a2 <HAL_UART_IRQHandler+0xf6>
 800c68a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c68e:	f003 0301 	and.w	r3, r3, #1
 800c692:	2b00      	cmp	r3, #0
 800c694:	d005      	beq.n	800c6a2 <HAL_UART_IRQHandler+0xf6>
 800c696:	687b      	ldr	r3, [r7, #4]
 800c698:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c69a:	f043 0204 	orr.w	r2, r3, #4
 800c69e:	687b      	ldr	r3, [r7, #4]
 800c6a0:	641a      	str	r2, [r3, #64]	; 0x40
 800c6a2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c6a6:	f003 0308 	and.w	r3, r3, #8
 800c6aa:	2b00      	cmp	r3, #0
 800c6ac:	d011      	beq.n	800c6d2 <HAL_UART_IRQHandler+0x126>
 800c6ae:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c6b2:	f003 0320 	and.w	r3, r3, #32
 800c6b6:	2b00      	cmp	r3, #0
 800c6b8:	d105      	bne.n	800c6c6 <HAL_UART_IRQHandler+0x11a>
 800c6ba:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c6be:	f003 0301 	and.w	r3, r3, #1
 800c6c2:	2b00      	cmp	r3, #0
 800c6c4:	d005      	beq.n	800c6d2 <HAL_UART_IRQHandler+0x126>
 800c6c6:	687b      	ldr	r3, [r7, #4]
 800c6c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c6ca:	f043 0208 	orr.w	r2, r3, #8
 800c6ce:	687b      	ldr	r3, [r7, #4]
 800c6d0:	641a      	str	r2, [r3, #64]	; 0x40
 800c6d2:	687b      	ldr	r3, [r7, #4]
 800c6d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c6d6:	2b00      	cmp	r3, #0
 800c6d8:	f000 81ed 	beq.w	800cab6 <HAL_UART_IRQHandler+0x50a>
 800c6dc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c6e0:	f003 0320 	and.w	r3, r3, #32
 800c6e4:	2b00      	cmp	r3, #0
 800c6e6:	d008      	beq.n	800c6fa <HAL_UART_IRQHandler+0x14e>
 800c6e8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c6ec:	f003 0320 	and.w	r3, r3, #32
 800c6f0:	2b00      	cmp	r3, #0
 800c6f2:	d002      	beq.n	800c6fa <HAL_UART_IRQHandler+0x14e>
 800c6f4:	6878      	ldr	r0, [r7, #4]
 800c6f6:	f000 fd82 	bl	800d1fe <UART_Receive_IT>
 800c6fa:	687b      	ldr	r3, [r7, #4]
 800c6fc:	681b      	ldr	r3, [r3, #0]
 800c6fe:	695b      	ldr	r3, [r3, #20]
 800c700:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c704:	2b40      	cmp	r3, #64	; 0x40
 800c706:	bf0c      	ite	eq
 800c708:	2301      	moveq	r3, #1
 800c70a:	2300      	movne	r3, #0
 800c70c:	b2db      	uxtb	r3, r3
 800c70e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c712:	687b      	ldr	r3, [r7, #4]
 800c714:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c716:	f003 0308 	and.w	r3, r3, #8
 800c71a:	2b00      	cmp	r3, #0
 800c71c:	d103      	bne.n	800c726 <HAL_UART_IRQHandler+0x17a>
 800c71e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c722:	2b00      	cmp	r3, #0
 800c724:	d04f      	beq.n	800c7c6 <HAL_UART_IRQHandler+0x21a>
 800c726:	6878      	ldr	r0, [r7, #4]
 800c728:	f000 fc8a 	bl	800d040 <UART_EndRxTransfer>
 800c72c:	687b      	ldr	r3, [r7, #4]
 800c72e:	681b      	ldr	r3, [r3, #0]
 800c730:	695b      	ldr	r3, [r3, #20]
 800c732:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c736:	2b40      	cmp	r3, #64	; 0x40
 800c738:	d141      	bne.n	800c7be <HAL_UART_IRQHandler+0x212>
 800c73a:	687b      	ldr	r3, [r7, #4]
 800c73c:	681b      	ldr	r3, [r3, #0]
 800c73e:	3314      	adds	r3, #20
 800c740:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800c744:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800c748:	e853 3f00 	ldrex	r3, [r3]
 800c74c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800c750:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800c754:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c758:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800c75c:	687b      	ldr	r3, [r7, #4]
 800c75e:	681b      	ldr	r3, [r3, #0]
 800c760:	3314      	adds	r3, #20
 800c762:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800c766:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800c76a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800c76e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800c772:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800c776:	e841 2300 	strex	r3, r2, [r1]
 800c77a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800c77e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800c782:	2b00      	cmp	r3, #0
 800c784:	d1d9      	bne.n	800c73a <HAL_UART_IRQHandler+0x18e>
 800c786:	687b      	ldr	r3, [r7, #4]
 800c788:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c78a:	2b00      	cmp	r3, #0
 800c78c:	d013      	beq.n	800c7b6 <HAL_UART_IRQHandler+0x20a>
 800c78e:	687b      	ldr	r3, [r7, #4]
 800c790:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c792:	4a7d      	ldr	r2, [pc, #500]	; (800c988 <HAL_UART_IRQHandler+0x3dc>)
 800c794:	651a      	str	r2, [r3, #80]	; 0x50
 800c796:	687b      	ldr	r3, [r7, #4]
 800c798:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c79a:	4618      	mov	r0, r3
 800c79c:	f7fb fd0a 	bl	80081b4 <HAL_DMA_Abort_IT>
 800c7a0:	4603      	mov	r3, r0
 800c7a2:	2b00      	cmp	r3, #0
 800c7a4:	d016      	beq.n	800c7d4 <HAL_UART_IRQHandler+0x228>
 800c7a6:	687b      	ldr	r3, [r7, #4]
 800c7a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c7ac:	687a      	ldr	r2, [r7, #4]
 800c7ae:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800c7b0:	4610      	mov	r0, r2
 800c7b2:	4798      	blx	r3
 800c7b4:	e00e      	b.n	800c7d4 <HAL_UART_IRQHandler+0x228>
 800c7b6:	6878      	ldr	r0, [r7, #4]
 800c7b8:	f000 f9a4 	bl	800cb04 <HAL_UART_ErrorCallback>
 800c7bc:	e00a      	b.n	800c7d4 <HAL_UART_IRQHandler+0x228>
 800c7be:	6878      	ldr	r0, [r7, #4]
 800c7c0:	f000 f9a0 	bl	800cb04 <HAL_UART_ErrorCallback>
 800c7c4:	e006      	b.n	800c7d4 <HAL_UART_IRQHandler+0x228>
 800c7c6:	6878      	ldr	r0, [r7, #4]
 800c7c8:	f000 f99c 	bl	800cb04 <HAL_UART_ErrorCallback>
 800c7cc:	687b      	ldr	r3, [r7, #4]
 800c7ce:	2200      	movs	r2, #0
 800c7d0:	641a      	str	r2, [r3, #64]	; 0x40
 800c7d2:	e170      	b.n	800cab6 <HAL_UART_IRQHandler+0x50a>
 800c7d4:	bf00      	nop
 800c7d6:	e16e      	b.n	800cab6 <HAL_UART_IRQHandler+0x50a>
 800c7d8:	687b      	ldr	r3, [r7, #4]
 800c7da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c7dc:	2b01      	cmp	r3, #1
 800c7de:	f040 814a 	bne.w	800ca76 <HAL_UART_IRQHandler+0x4ca>
 800c7e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c7e6:	f003 0310 	and.w	r3, r3, #16
 800c7ea:	2b00      	cmp	r3, #0
 800c7ec:	f000 8143 	beq.w	800ca76 <HAL_UART_IRQHandler+0x4ca>
 800c7f0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c7f4:	f003 0310 	and.w	r3, r3, #16
 800c7f8:	2b00      	cmp	r3, #0
 800c7fa:	f000 813c 	beq.w	800ca76 <HAL_UART_IRQHandler+0x4ca>
 800c7fe:	2300      	movs	r3, #0
 800c800:	60bb      	str	r3, [r7, #8]
 800c802:	687b      	ldr	r3, [r7, #4]
 800c804:	681b      	ldr	r3, [r3, #0]
 800c806:	681b      	ldr	r3, [r3, #0]
 800c808:	60bb      	str	r3, [r7, #8]
 800c80a:	687b      	ldr	r3, [r7, #4]
 800c80c:	681b      	ldr	r3, [r3, #0]
 800c80e:	685b      	ldr	r3, [r3, #4]
 800c810:	60bb      	str	r3, [r7, #8]
 800c812:	68bb      	ldr	r3, [r7, #8]
 800c814:	687b      	ldr	r3, [r7, #4]
 800c816:	681b      	ldr	r3, [r3, #0]
 800c818:	695b      	ldr	r3, [r3, #20]
 800c81a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c81e:	2b40      	cmp	r3, #64	; 0x40
 800c820:	f040 80b4 	bne.w	800c98c <HAL_UART_IRQHandler+0x3e0>
 800c824:	687b      	ldr	r3, [r7, #4]
 800c826:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c828:	681b      	ldr	r3, [r3, #0]
 800c82a:	685b      	ldr	r3, [r3, #4]
 800c82c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800c830:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800c834:	2b00      	cmp	r3, #0
 800c836:	f000 8140 	beq.w	800caba <HAL_UART_IRQHandler+0x50e>
 800c83a:	687b      	ldr	r3, [r7, #4]
 800c83c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c83e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c842:	429a      	cmp	r2, r3
 800c844:	f080 8139 	bcs.w	800caba <HAL_UART_IRQHandler+0x50e>
 800c848:	687b      	ldr	r3, [r7, #4]
 800c84a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c84e:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c850:	687b      	ldr	r3, [r7, #4]
 800c852:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c854:	69db      	ldr	r3, [r3, #28]
 800c856:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c85a:	f000 8088 	beq.w	800c96e <HAL_UART_IRQHandler+0x3c2>
 800c85e:	687b      	ldr	r3, [r7, #4]
 800c860:	681b      	ldr	r3, [r3, #0]
 800c862:	330c      	adds	r3, #12
 800c864:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800c868:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800c86c:	e853 3f00 	ldrex	r3, [r3]
 800c870:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800c874:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800c878:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c87c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800c880:	687b      	ldr	r3, [r7, #4]
 800c882:	681b      	ldr	r3, [r3, #0]
 800c884:	330c      	adds	r3, #12
 800c886:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800c88a:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800c88e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800c892:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800c896:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800c89a:	e841 2300 	strex	r3, r2, [r1]
 800c89e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800c8a2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800c8a6:	2b00      	cmp	r3, #0
 800c8a8:	d1d9      	bne.n	800c85e <HAL_UART_IRQHandler+0x2b2>
 800c8aa:	687b      	ldr	r3, [r7, #4]
 800c8ac:	681b      	ldr	r3, [r3, #0]
 800c8ae:	3314      	adds	r3, #20
 800c8b0:	677b      	str	r3, [r7, #116]	; 0x74
 800c8b2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800c8b4:	e853 3f00 	ldrex	r3, [r3]
 800c8b8:	673b      	str	r3, [r7, #112]	; 0x70
 800c8ba:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c8bc:	f023 0301 	bic.w	r3, r3, #1
 800c8c0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800c8c4:	687b      	ldr	r3, [r7, #4]
 800c8c6:	681b      	ldr	r3, [r3, #0]
 800c8c8:	3314      	adds	r3, #20
 800c8ca:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800c8ce:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800c8d2:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c8d4:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800c8d6:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800c8da:	e841 2300 	strex	r3, r2, [r1]
 800c8de:	67bb      	str	r3, [r7, #120]	; 0x78
 800c8e0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800c8e2:	2b00      	cmp	r3, #0
 800c8e4:	d1e1      	bne.n	800c8aa <HAL_UART_IRQHandler+0x2fe>
 800c8e6:	687b      	ldr	r3, [r7, #4]
 800c8e8:	681b      	ldr	r3, [r3, #0]
 800c8ea:	3314      	adds	r3, #20
 800c8ec:	663b      	str	r3, [r7, #96]	; 0x60
 800c8ee:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c8f0:	e853 3f00 	ldrex	r3, [r3]
 800c8f4:	65fb      	str	r3, [r7, #92]	; 0x5c
 800c8f6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c8f8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c8fc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800c900:	687b      	ldr	r3, [r7, #4]
 800c902:	681b      	ldr	r3, [r3, #0]
 800c904:	3314      	adds	r3, #20
 800c906:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800c90a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800c90c:	66bb      	str	r3, [r7, #104]	; 0x68
 800c90e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800c910:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800c912:	e841 2300 	strex	r3, r2, [r1]
 800c916:	667b      	str	r3, [r7, #100]	; 0x64
 800c918:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c91a:	2b00      	cmp	r3, #0
 800c91c:	d1e3      	bne.n	800c8e6 <HAL_UART_IRQHandler+0x33a>
 800c91e:	687b      	ldr	r3, [r7, #4]
 800c920:	2220      	movs	r2, #32
 800c922:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c926:	687b      	ldr	r3, [r7, #4]
 800c928:	2200      	movs	r2, #0
 800c92a:	631a      	str	r2, [r3, #48]	; 0x30
 800c92c:	687b      	ldr	r3, [r7, #4]
 800c92e:	681b      	ldr	r3, [r3, #0]
 800c930:	330c      	adds	r3, #12
 800c932:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c934:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c936:	e853 3f00 	ldrex	r3, [r3]
 800c93a:	64bb      	str	r3, [r7, #72]	; 0x48
 800c93c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c93e:	f023 0310 	bic.w	r3, r3, #16
 800c942:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800c946:	687b      	ldr	r3, [r7, #4]
 800c948:	681b      	ldr	r3, [r3, #0]
 800c94a:	330c      	adds	r3, #12
 800c94c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800c950:	65ba      	str	r2, [r7, #88]	; 0x58
 800c952:	657b      	str	r3, [r7, #84]	; 0x54
 800c954:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800c956:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c958:	e841 2300 	strex	r3, r2, [r1]
 800c95c:	653b      	str	r3, [r7, #80]	; 0x50
 800c95e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c960:	2b00      	cmp	r3, #0
 800c962:	d1e3      	bne.n	800c92c <HAL_UART_IRQHandler+0x380>
 800c964:	687b      	ldr	r3, [r7, #4]
 800c966:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c968:	4618      	mov	r0, r3
 800c96a:	f7fb fbb3 	bl	80080d4 <HAL_DMA_Abort>
 800c96e:	687b      	ldr	r3, [r7, #4]
 800c970:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c972:	687b      	ldr	r3, [r7, #4]
 800c974:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c976:	b29b      	uxth	r3, r3
 800c978:	1ad3      	subs	r3, r2, r3
 800c97a:	b29b      	uxth	r3, r3
 800c97c:	4619      	mov	r1, r3
 800c97e:	6878      	ldr	r0, [r7, #4]
 800c980:	f000 f8ca 	bl	800cb18 <HAL_UARTEx_RxEventCallback>
 800c984:	e099      	b.n	800caba <HAL_UART_IRQHandler+0x50e>
 800c986:	bf00      	nop
 800c988:	0800d107 	.word	0x0800d107
 800c98c:	687b      	ldr	r3, [r7, #4]
 800c98e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c990:	687b      	ldr	r3, [r7, #4]
 800c992:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c994:	b29b      	uxth	r3, r3
 800c996:	1ad3      	subs	r3, r2, r3
 800c998:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800c99c:	687b      	ldr	r3, [r7, #4]
 800c99e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c9a0:	b29b      	uxth	r3, r3
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	f000 808b 	beq.w	800cabe <HAL_UART_IRQHandler+0x512>
 800c9a8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c9ac:	2b00      	cmp	r3, #0
 800c9ae:	f000 8086 	beq.w	800cabe <HAL_UART_IRQHandler+0x512>
 800c9b2:	687b      	ldr	r3, [r7, #4]
 800c9b4:	681b      	ldr	r3, [r3, #0]
 800c9b6:	330c      	adds	r3, #12
 800c9b8:	63bb      	str	r3, [r7, #56]	; 0x38
 800c9ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c9bc:	e853 3f00 	ldrex	r3, [r3]
 800c9c0:	637b      	str	r3, [r7, #52]	; 0x34
 800c9c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c9c4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c9c8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800c9cc:	687b      	ldr	r3, [r7, #4]
 800c9ce:	681b      	ldr	r3, [r3, #0]
 800c9d0:	330c      	adds	r3, #12
 800c9d2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800c9d6:	647a      	str	r2, [r7, #68]	; 0x44
 800c9d8:	643b      	str	r3, [r7, #64]	; 0x40
 800c9da:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800c9dc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c9de:	e841 2300 	strex	r3, r2, [r1]
 800c9e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c9e4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c9e6:	2b00      	cmp	r3, #0
 800c9e8:	d1e3      	bne.n	800c9b2 <HAL_UART_IRQHandler+0x406>
 800c9ea:	687b      	ldr	r3, [r7, #4]
 800c9ec:	681b      	ldr	r3, [r3, #0]
 800c9ee:	3314      	adds	r3, #20
 800c9f0:	627b      	str	r3, [r7, #36]	; 0x24
 800c9f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c9f4:	e853 3f00 	ldrex	r3, [r3]
 800c9f8:	623b      	str	r3, [r7, #32]
 800c9fa:	6a3b      	ldr	r3, [r7, #32]
 800c9fc:	f023 0301 	bic.w	r3, r3, #1
 800ca00:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	681b      	ldr	r3, [r3, #0]
 800ca08:	3314      	adds	r3, #20
 800ca0a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800ca0e:	633a      	str	r2, [r7, #48]	; 0x30
 800ca10:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ca12:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ca14:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ca16:	e841 2300 	strex	r3, r2, [r1]
 800ca1a:	62bb      	str	r3, [r7, #40]	; 0x28
 800ca1c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ca1e:	2b00      	cmp	r3, #0
 800ca20:	d1e3      	bne.n	800c9ea <HAL_UART_IRQHandler+0x43e>
 800ca22:	687b      	ldr	r3, [r7, #4]
 800ca24:	2220      	movs	r2, #32
 800ca26:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	2200      	movs	r2, #0
 800ca2e:	631a      	str	r2, [r3, #48]	; 0x30
 800ca30:	687b      	ldr	r3, [r7, #4]
 800ca32:	681b      	ldr	r3, [r3, #0]
 800ca34:	330c      	adds	r3, #12
 800ca36:	613b      	str	r3, [r7, #16]
 800ca38:	693b      	ldr	r3, [r7, #16]
 800ca3a:	e853 3f00 	ldrex	r3, [r3]
 800ca3e:	60fb      	str	r3, [r7, #12]
 800ca40:	68fb      	ldr	r3, [r7, #12]
 800ca42:	f023 0310 	bic.w	r3, r3, #16
 800ca46:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800ca4a:	687b      	ldr	r3, [r7, #4]
 800ca4c:	681b      	ldr	r3, [r3, #0]
 800ca4e:	330c      	adds	r3, #12
 800ca50:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800ca54:	61fa      	str	r2, [r7, #28]
 800ca56:	61bb      	str	r3, [r7, #24]
 800ca58:	69b9      	ldr	r1, [r7, #24]
 800ca5a:	69fa      	ldr	r2, [r7, #28]
 800ca5c:	e841 2300 	strex	r3, r2, [r1]
 800ca60:	617b      	str	r3, [r7, #20]
 800ca62:	697b      	ldr	r3, [r7, #20]
 800ca64:	2b00      	cmp	r3, #0
 800ca66:	d1e3      	bne.n	800ca30 <HAL_UART_IRQHandler+0x484>
 800ca68:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800ca6c:	4619      	mov	r1, r3
 800ca6e:	6878      	ldr	r0, [r7, #4]
 800ca70:	f000 f852 	bl	800cb18 <HAL_UARTEx_RxEventCallback>
 800ca74:	e023      	b.n	800cabe <HAL_UART_IRQHandler+0x512>
 800ca76:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ca7a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ca7e:	2b00      	cmp	r3, #0
 800ca80:	d009      	beq.n	800ca96 <HAL_UART_IRQHandler+0x4ea>
 800ca82:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ca86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ca8a:	2b00      	cmp	r3, #0
 800ca8c:	d003      	beq.n	800ca96 <HAL_UART_IRQHandler+0x4ea>
 800ca8e:	6878      	ldr	r0, [r7, #4]
 800ca90:	f000 fb4d 	bl	800d12e <UART_Transmit_IT>
 800ca94:	e014      	b.n	800cac0 <HAL_UART_IRQHandler+0x514>
 800ca96:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ca9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ca9e:	2b00      	cmp	r3, #0
 800caa0:	d00e      	beq.n	800cac0 <HAL_UART_IRQHandler+0x514>
 800caa2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800caa6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800caaa:	2b00      	cmp	r3, #0
 800caac:	d008      	beq.n	800cac0 <HAL_UART_IRQHandler+0x514>
 800caae:	6878      	ldr	r0, [r7, #4]
 800cab0:	f000 fb8d 	bl	800d1ce <UART_EndTransmit_IT>
 800cab4:	e004      	b.n	800cac0 <HAL_UART_IRQHandler+0x514>
 800cab6:	bf00      	nop
 800cab8:	e002      	b.n	800cac0 <HAL_UART_IRQHandler+0x514>
 800caba:	bf00      	nop
 800cabc:	e000      	b.n	800cac0 <HAL_UART_IRQHandler+0x514>
 800cabe:	bf00      	nop
 800cac0:	37e8      	adds	r7, #232	; 0xe8
 800cac2:	46bd      	mov	sp, r7
 800cac4:	bd80      	pop	{r7, pc}
 800cac6:	bf00      	nop

0800cac8 <HAL_UART_TxHalfCpltCallback>:
 800cac8:	b480      	push	{r7}
 800caca:	b083      	sub	sp, #12
 800cacc:	af00      	add	r7, sp, #0
 800cace:	6078      	str	r0, [r7, #4]
 800cad0:	bf00      	nop
 800cad2:	370c      	adds	r7, #12
 800cad4:	46bd      	mov	sp, r7
 800cad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cada:	4770      	bx	lr

0800cadc <HAL_UART_RxCpltCallback>:
 800cadc:	b480      	push	{r7}
 800cade:	b083      	sub	sp, #12
 800cae0:	af00      	add	r7, sp, #0
 800cae2:	6078      	str	r0, [r7, #4]
 800cae4:	bf00      	nop
 800cae6:	370c      	adds	r7, #12
 800cae8:	46bd      	mov	sp, r7
 800caea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caee:	4770      	bx	lr

0800caf0 <HAL_UART_RxHalfCpltCallback>:
 800caf0:	b480      	push	{r7}
 800caf2:	b083      	sub	sp, #12
 800caf4:	af00      	add	r7, sp, #0
 800caf6:	6078      	str	r0, [r7, #4]
 800caf8:	bf00      	nop
 800cafa:	370c      	adds	r7, #12
 800cafc:	46bd      	mov	sp, r7
 800cafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb02:	4770      	bx	lr

0800cb04 <HAL_UART_ErrorCallback>:
 800cb04:	b480      	push	{r7}
 800cb06:	b083      	sub	sp, #12
 800cb08:	af00      	add	r7, sp, #0
 800cb0a:	6078      	str	r0, [r7, #4]
 800cb0c:	bf00      	nop
 800cb0e:	370c      	adds	r7, #12
 800cb10:	46bd      	mov	sp, r7
 800cb12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb16:	4770      	bx	lr

0800cb18 <HAL_UARTEx_RxEventCallback>:
 800cb18:	b480      	push	{r7}
 800cb1a:	b083      	sub	sp, #12
 800cb1c:	af00      	add	r7, sp, #0
 800cb1e:	6078      	str	r0, [r7, #4]
 800cb20:	460b      	mov	r3, r1
 800cb22:	807b      	strh	r3, [r7, #2]
 800cb24:	bf00      	nop
 800cb26:	370c      	adds	r7, #12
 800cb28:	46bd      	mov	sp, r7
 800cb2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb2e:	4770      	bx	lr

0800cb30 <UART_DMATransmitCplt>:
 800cb30:	b580      	push	{r7, lr}
 800cb32:	b090      	sub	sp, #64	; 0x40
 800cb34:	af00      	add	r7, sp, #0
 800cb36:	6078      	str	r0, [r7, #4]
 800cb38:	687b      	ldr	r3, [r7, #4]
 800cb3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cb3c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cb3e:	687b      	ldr	r3, [r7, #4]
 800cb40:	681b      	ldr	r3, [r3, #0]
 800cb42:	681b      	ldr	r3, [r3, #0]
 800cb44:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cb48:	2b00      	cmp	r3, #0
 800cb4a:	d137      	bne.n	800cbbc <UART_DMATransmitCplt+0x8c>
 800cb4c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cb4e:	2200      	movs	r2, #0
 800cb50:	84da      	strh	r2, [r3, #38]	; 0x26
 800cb52:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cb54:	681b      	ldr	r3, [r3, #0]
 800cb56:	3314      	adds	r3, #20
 800cb58:	627b      	str	r3, [r7, #36]	; 0x24
 800cb5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb5c:	e853 3f00 	ldrex	r3, [r3]
 800cb60:	623b      	str	r3, [r7, #32]
 800cb62:	6a3b      	ldr	r3, [r7, #32]
 800cb64:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cb68:	63bb      	str	r3, [r7, #56]	; 0x38
 800cb6a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cb6c:	681b      	ldr	r3, [r3, #0]
 800cb6e:	3314      	adds	r3, #20
 800cb70:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800cb72:	633a      	str	r2, [r7, #48]	; 0x30
 800cb74:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cb76:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800cb78:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800cb7a:	e841 2300 	strex	r3, r2, [r1]
 800cb7e:	62bb      	str	r3, [r7, #40]	; 0x28
 800cb80:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cb82:	2b00      	cmp	r3, #0
 800cb84:	d1e5      	bne.n	800cb52 <UART_DMATransmitCplt+0x22>
 800cb86:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cb88:	681b      	ldr	r3, [r3, #0]
 800cb8a:	330c      	adds	r3, #12
 800cb8c:	613b      	str	r3, [r7, #16]
 800cb8e:	693b      	ldr	r3, [r7, #16]
 800cb90:	e853 3f00 	ldrex	r3, [r3]
 800cb94:	60fb      	str	r3, [r7, #12]
 800cb96:	68fb      	ldr	r3, [r7, #12]
 800cb98:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cb9c:	637b      	str	r3, [r7, #52]	; 0x34
 800cb9e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cba0:	681b      	ldr	r3, [r3, #0]
 800cba2:	330c      	adds	r3, #12
 800cba4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800cba6:	61fa      	str	r2, [r7, #28]
 800cba8:	61bb      	str	r3, [r7, #24]
 800cbaa:	69b9      	ldr	r1, [r7, #24]
 800cbac:	69fa      	ldr	r2, [r7, #28]
 800cbae:	e841 2300 	strex	r3, r2, [r1]
 800cbb2:	617b      	str	r3, [r7, #20]
 800cbb4:	697b      	ldr	r3, [r7, #20]
 800cbb6:	2b00      	cmp	r3, #0
 800cbb8:	d1e5      	bne.n	800cb86 <UART_DMATransmitCplt+0x56>
 800cbba:	e002      	b.n	800cbc2 <UART_DMATransmitCplt+0x92>
 800cbbc:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800cbbe:	f7f6 feeb 	bl	8003998 <HAL_UART_TxCpltCallback>
 800cbc2:	bf00      	nop
 800cbc4:	3740      	adds	r7, #64	; 0x40
 800cbc6:	46bd      	mov	sp, r7
 800cbc8:	bd80      	pop	{r7, pc}

0800cbca <UART_DMATxHalfCplt>:
 800cbca:	b580      	push	{r7, lr}
 800cbcc:	b084      	sub	sp, #16
 800cbce:	af00      	add	r7, sp, #0
 800cbd0:	6078      	str	r0, [r7, #4]
 800cbd2:	687b      	ldr	r3, [r7, #4]
 800cbd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cbd6:	60fb      	str	r3, [r7, #12]
 800cbd8:	68f8      	ldr	r0, [r7, #12]
 800cbda:	f7ff ff75 	bl	800cac8 <HAL_UART_TxHalfCpltCallback>
 800cbde:	bf00      	nop
 800cbe0:	3710      	adds	r7, #16
 800cbe2:	46bd      	mov	sp, r7
 800cbe4:	bd80      	pop	{r7, pc}

0800cbe6 <UART_DMAReceiveCplt>:
 800cbe6:	b580      	push	{r7, lr}
 800cbe8:	b09c      	sub	sp, #112	; 0x70
 800cbea:	af00      	add	r7, sp, #0
 800cbec:	6078      	str	r0, [r7, #4]
 800cbee:	687b      	ldr	r3, [r7, #4]
 800cbf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cbf2:	66fb      	str	r3, [r7, #108]	; 0x6c
 800cbf4:	687b      	ldr	r3, [r7, #4]
 800cbf6:	681b      	ldr	r3, [r3, #0]
 800cbf8:	681b      	ldr	r3, [r3, #0]
 800cbfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cbfe:	2b00      	cmp	r3, #0
 800cc00:	d172      	bne.n	800cce8 <UART_DMAReceiveCplt+0x102>
 800cc02:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cc04:	2200      	movs	r2, #0
 800cc06:	85da      	strh	r2, [r3, #46]	; 0x2e
 800cc08:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cc0a:	681b      	ldr	r3, [r3, #0]
 800cc0c:	330c      	adds	r3, #12
 800cc0e:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cc10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800cc12:	e853 3f00 	ldrex	r3, [r3]
 800cc16:	64bb      	str	r3, [r7, #72]	; 0x48
 800cc18:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800cc1a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800cc1e:	66bb      	str	r3, [r7, #104]	; 0x68
 800cc20:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cc22:	681b      	ldr	r3, [r3, #0]
 800cc24:	330c      	adds	r3, #12
 800cc26:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800cc28:	65ba      	str	r2, [r7, #88]	; 0x58
 800cc2a:	657b      	str	r3, [r7, #84]	; 0x54
 800cc2c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800cc2e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800cc30:	e841 2300 	strex	r3, r2, [r1]
 800cc34:	653b      	str	r3, [r7, #80]	; 0x50
 800cc36:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800cc38:	2b00      	cmp	r3, #0
 800cc3a:	d1e5      	bne.n	800cc08 <UART_DMAReceiveCplt+0x22>
 800cc3c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cc3e:	681b      	ldr	r3, [r3, #0]
 800cc40:	3314      	adds	r3, #20
 800cc42:	63bb      	str	r3, [r7, #56]	; 0x38
 800cc44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cc46:	e853 3f00 	ldrex	r3, [r3]
 800cc4a:	637b      	str	r3, [r7, #52]	; 0x34
 800cc4c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cc4e:	f023 0301 	bic.w	r3, r3, #1
 800cc52:	667b      	str	r3, [r7, #100]	; 0x64
 800cc54:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cc56:	681b      	ldr	r3, [r3, #0]
 800cc58:	3314      	adds	r3, #20
 800cc5a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800cc5c:	647a      	str	r2, [r7, #68]	; 0x44
 800cc5e:	643b      	str	r3, [r7, #64]	; 0x40
 800cc60:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800cc62:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800cc64:	e841 2300 	strex	r3, r2, [r1]
 800cc68:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cc6a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cc6c:	2b00      	cmp	r3, #0
 800cc6e:	d1e5      	bne.n	800cc3c <UART_DMAReceiveCplt+0x56>
 800cc70:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cc72:	681b      	ldr	r3, [r3, #0]
 800cc74:	3314      	adds	r3, #20
 800cc76:	627b      	str	r3, [r7, #36]	; 0x24
 800cc78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc7a:	e853 3f00 	ldrex	r3, [r3]
 800cc7e:	623b      	str	r3, [r7, #32]
 800cc80:	6a3b      	ldr	r3, [r7, #32]
 800cc82:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cc86:	663b      	str	r3, [r7, #96]	; 0x60
 800cc88:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cc8a:	681b      	ldr	r3, [r3, #0]
 800cc8c:	3314      	adds	r3, #20
 800cc8e:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800cc90:	633a      	str	r2, [r7, #48]	; 0x30
 800cc92:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cc94:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800cc96:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800cc98:	e841 2300 	strex	r3, r2, [r1]
 800cc9c:	62bb      	str	r3, [r7, #40]	; 0x28
 800cc9e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cca0:	2b00      	cmp	r3, #0
 800cca2:	d1e5      	bne.n	800cc70 <UART_DMAReceiveCplt+0x8a>
 800cca4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cca6:	2220      	movs	r2, #32
 800cca8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ccac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ccae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ccb0:	2b01      	cmp	r3, #1
 800ccb2:	d119      	bne.n	800cce8 <UART_DMAReceiveCplt+0x102>
 800ccb4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ccb6:	681b      	ldr	r3, [r3, #0]
 800ccb8:	330c      	adds	r3, #12
 800ccba:	613b      	str	r3, [r7, #16]
 800ccbc:	693b      	ldr	r3, [r7, #16]
 800ccbe:	e853 3f00 	ldrex	r3, [r3]
 800ccc2:	60fb      	str	r3, [r7, #12]
 800ccc4:	68fb      	ldr	r3, [r7, #12]
 800ccc6:	f023 0310 	bic.w	r3, r3, #16
 800ccca:	65fb      	str	r3, [r7, #92]	; 0x5c
 800cccc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ccce:	681b      	ldr	r3, [r3, #0]
 800ccd0:	330c      	adds	r3, #12
 800ccd2:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800ccd4:	61fa      	str	r2, [r7, #28]
 800ccd6:	61bb      	str	r3, [r7, #24]
 800ccd8:	69b9      	ldr	r1, [r7, #24]
 800ccda:	69fa      	ldr	r2, [r7, #28]
 800ccdc:	e841 2300 	strex	r3, r2, [r1]
 800cce0:	617b      	str	r3, [r7, #20]
 800cce2:	697b      	ldr	r3, [r7, #20]
 800cce4:	2b00      	cmp	r3, #0
 800cce6:	d1e5      	bne.n	800ccb4 <UART_DMAReceiveCplt+0xce>
 800cce8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ccea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ccec:	2b01      	cmp	r3, #1
 800ccee:	d106      	bne.n	800ccfe <UART_DMAReceiveCplt+0x118>
 800ccf0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ccf2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800ccf4:	4619      	mov	r1, r3
 800ccf6:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800ccf8:	f7ff ff0e 	bl	800cb18 <HAL_UARTEx_RxEventCallback>
 800ccfc:	e002      	b.n	800cd04 <UART_DMAReceiveCplt+0x11e>
 800ccfe:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800cd00:	f7ff feec 	bl	800cadc <HAL_UART_RxCpltCallback>
 800cd04:	bf00      	nop
 800cd06:	3770      	adds	r7, #112	; 0x70
 800cd08:	46bd      	mov	sp, r7
 800cd0a:	bd80      	pop	{r7, pc}

0800cd0c <UART_DMARxHalfCplt>:
 800cd0c:	b580      	push	{r7, lr}
 800cd0e:	b084      	sub	sp, #16
 800cd10:	af00      	add	r7, sp, #0
 800cd12:	6078      	str	r0, [r7, #4]
 800cd14:	687b      	ldr	r3, [r7, #4]
 800cd16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cd18:	60fb      	str	r3, [r7, #12]
 800cd1a:	68fb      	ldr	r3, [r7, #12]
 800cd1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cd1e:	2b01      	cmp	r3, #1
 800cd20:	d108      	bne.n	800cd34 <UART_DMARxHalfCplt+0x28>
 800cd22:	68fb      	ldr	r3, [r7, #12]
 800cd24:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800cd26:	085b      	lsrs	r3, r3, #1
 800cd28:	b29b      	uxth	r3, r3
 800cd2a:	4619      	mov	r1, r3
 800cd2c:	68f8      	ldr	r0, [r7, #12]
 800cd2e:	f7ff fef3 	bl	800cb18 <HAL_UARTEx_RxEventCallback>
 800cd32:	e002      	b.n	800cd3a <UART_DMARxHalfCplt+0x2e>
 800cd34:	68f8      	ldr	r0, [r7, #12]
 800cd36:	f7ff fedb 	bl	800caf0 <HAL_UART_RxHalfCpltCallback>
 800cd3a:	bf00      	nop
 800cd3c:	3710      	adds	r7, #16
 800cd3e:	46bd      	mov	sp, r7
 800cd40:	bd80      	pop	{r7, pc}

0800cd42 <UART_DMAError>:
 800cd42:	b580      	push	{r7, lr}
 800cd44:	b084      	sub	sp, #16
 800cd46:	af00      	add	r7, sp, #0
 800cd48:	6078      	str	r0, [r7, #4]
 800cd4a:	2300      	movs	r3, #0
 800cd4c:	60fb      	str	r3, [r7, #12]
 800cd4e:	687b      	ldr	r3, [r7, #4]
 800cd50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cd52:	60bb      	str	r3, [r7, #8]
 800cd54:	68bb      	ldr	r3, [r7, #8]
 800cd56:	681b      	ldr	r3, [r3, #0]
 800cd58:	695b      	ldr	r3, [r3, #20]
 800cd5a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800cd5e:	2b80      	cmp	r3, #128	; 0x80
 800cd60:	bf0c      	ite	eq
 800cd62:	2301      	moveq	r3, #1
 800cd64:	2300      	movne	r3, #0
 800cd66:	b2db      	uxtb	r3, r3
 800cd68:	60fb      	str	r3, [r7, #12]
 800cd6a:	68bb      	ldr	r3, [r7, #8]
 800cd6c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800cd70:	b2db      	uxtb	r3, r3
 800cd72:	2b21      	cmp	r3, #33	; 0x21
 800cd74:	d108      	bne.n	800cd88 <UART_DMAError+0x46>
 800cd76:	68fb      	ldr	r3, [r7, #12]
 800cd78:	2b00      	cmp	r3, #0
 800cd7a:	d005      	beq.n	800cd88 <UART_DMAError+0x46>
 800cd7c:	68bb      	ldr	r3, [r7, #8]
 800cd7e:	2200      	movs	r2, #0
 800cd80:	84da      	strh	r2, [r3, #38]	; 0x26
 800cd82:	68b8      	ldr	r0, [r7, #8]
 800cd84:	f000 f934 	bl	800cff0 <UART_EndTxTransfer>
 800cd88:	68bb      	ldr	r3, [r7, #8]
 800cd8a:	681b      	ldr	r3, [r3, #0]
 800cd8c:	695b      	ldr	r3, [r3, #20]
 800cd8e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cd92:	2b40      	cmp	r3, #64	; 0x40
 800cd94:	bf0c      	ite	eq
 800cd96:	2301      	moveq	r3, #1
 800cd98:	2300      	movne	r3, #0
 800cd9a:	b2db      	uxtb	r3, r3
 800cd9c:	60fb      	str	r3, [r7, #12]
 800cd9e:	68bb      	ldr	r3, [r7, #8]
 800cda0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800cda4:	b2db      	uxtb	r3, r3
 800cda6:	2b22      	cmp	r3, #34	; 0x22
 800cda8:	d108      	bne.n	800cdbc <UART_DMAError+0x7a>
 800cdaa:	68fb      	ldr	r3, [r7, #12]
 800cdac:	2b00      	cmp	r3, #0
 800cdae:	d005      	beq.n	800cdbc <UART_DMAError+0x7a>
 800cdb0:	68bb      	ldr	r3, [r7, #8]
 800cdb2:	2200      	movs	r2, #0
 800cdb4:	85da      	strh	r2, [r3, #46]	; 0x2e
 800cdb6:	68b8      	ldr	r0, [r7, #8]
 800cdb8:	f000 f942 	bl	800d040 <UART_EndRxTransfer>
 800cdbc:	68bb      	ldr	r3, [r7, #8]
 800cdbe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdc0:	f043 0210 	orr.w	r2, r3, #16
 800cdc4:	68bb      	ldr	r3, [r7, #8]
 800cdc6:	641a      	str	r2, [r3, #64]	; 0x40
 800cdc8:	68b8      	ldr	r0, [r7, #8]
 800cdca:	f7ff fe9b 	bl	800cb04 <HAL_UART_ErrorCallback>
 800cdce:	bf00      	nop
 800cdd0:	3710      	adds	r7, #16
 800cdd2:	46bd      	mov	sp, r7
 800cdd4:	bd80      	pop	{r7, pc}

0800cdd6 <UART_WaitOnFlagUntilTimeout>:
 800cdd6:	b580      	push	{r7, lr}
 800cdd8:	b090      	sub	sp, #64	; 0x40
 800cdda:	af00      	add	r7, sp, #0
 800cddc:	60f8      	str	r0, [r7, #12]
 800cdde:	60b9      	str	r1, [r7, #8]
 800cde0:	603b      	str	r3, [r7, #0]
 800cde2:	4613      	mov	r3, r2
 800cde4:	71fb      	strb	r3, [r7, #7]
 800cde6:	e050      	b.n	800ce8a <UART_WaitOnFlagUntilTimeout+0xb4>
 800cde8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800cdea:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cdee:	d04c      	beq.n	800ce8a <UART_WaitOnFlagUntilTimeout+0xb4>
 800cdf0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800cdf2:	2b00      	cmp	r3, #0
 800cdf4:	d007      	beq.n	800ce06 <UART_WaitOnFlagUntilTimeout+0x30>
 800cdf6:	f7fa fa93 	bl	8007320 <HAL_GetTick>
 800cdfa:	4602      	mov	r2, r0
 800cdfc:	683b      	ldr	r3, [r7, #0]
 800cdfe:	1ad3      	subs	r3, r2, r3
 800ce00:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800ce02:	429a      	cmp	r2, r3
 800ce04:	d241      	bcs.n	800ce8a <UART_WaitOnFlagUntilTimeout+0xb4>
 800ce06:	68fb      	ldr	r3, [r7, #12]
 800ce08:	681b      	ldr	r3, [r3, #0]
 800ce0a:	330c      	adds	r3, #12
 800ce0c:	62bb      	str	r3, [r7, #40]	; 0x28
 800ce0e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce10:	e853 3f00 	ldrex	r3, [r3]
 800ce14:	627b      	str	r3, [r7, #36]	; 0x24
 800ce16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce18:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800ce1c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ce1e:	68fb      	ldr	r3, [r7, #12]
 800ce20:	681b      	ldr	r3, [r3, #0]
 800ce22:	330c      	adds	r3, #12
 800ce24:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800ce26:	637a      	str	r2, [r7, #52]	; 0x34
 800ce28:	633b      	str	r3, [r7, #48]	; 0x30
 800ce2a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800ce2c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800ce2e:	e841 2300 	strex	r3, r2, [r1]
 800ce32:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ce34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ce36:	2b00      	cmp	r3, #0
 800ce38:	d1e5      	bne.n	800ce06 <UART_WaitOnFlagUntilTimeout+0x30>
 800ce3a:	68fb      	ldr	r3, [r7, #12]
 800ce3c:	681b      	ldr	r3, [r3, #0]
 800ce3e:	3314      	adds	r3, #20
 800ce40:	617b      	str	r3, [r7, #20]
 800ce42:	697b      	ldr	r3, [r7, #20]
 800ce44:	e853 3f00 	ldrex	r3, [r3]
 800ce48:	613b      	str	r3, [r7, #16]
 800ce4a:	693b      	ldr	r3, [r7, #16]
 800ce4c:	f023 0301 	bic.w	r3, r3, #1
 800ce50:	63bb      	str	r3, [r7, #56]	; 0x38
 800ce52:	68fb      	ldr	r3, [r7, #12]
 800ce54:	681b      	ldr	r3, [r3, #0]
 800ce56:	3314      	adds	r3, #20
 800ce58:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800ce5a:	623a      	str	r2, [r7, #32]
 800ce5c:	61fb      	str	r3, [r7, #28]
 800ce5e:	69f9      	ldr	r1, [r7, #28]
 800ce60:	6a3a      	ldr	r2, [r7, #32]
 800ce62:	e841 2300 	strex	r3, r2, [r1]
 800ce66:	61bb      	str	r3, [r7, #24]
 800ce68:	69bb      	ldr	r3, [r7, #24]
 800ce6a:	2b00      	cmp	r3, #0
 800ce6c:	d1e5      	bne.n	800ce3a <UART_WaitOnFlagUntilTimeout+0x64>
 800ce6e:	68fb      	ldr	r3, [r7, #12]
 800ce70:	2220      	movs	r2, #32
 800ce72:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ce76:	68fb      	ldr	r3, [r7, #12]
 800ce78:	2220      	movs	r2, #32
 800ce7a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ce7e:	68fb      	ldr	r3, [r7, #12]
 800ce80:	2200      	movs	r2, #0
 800ce82:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ce86:	2303      	movs	r3, #3
 800ce88:	e00f      	b.n	800ceaa <UART_WaitOnFlagUntilTimeout+0xd4>
 800ce8a:	68fb      	ldr	r3, [r7, #12]
 800ce8c:	681b      	ldr	r3, [r3, #0]
 800ce8e:	681a      	ldr	r2, [r3, #0]
 800ce90:	68bb      	ldr	r3, [r7, #8]
 800ce92:	4013      	ands	r3, r2
 800ce94:	68ba      	ldr	r2, [r7, #8]
 800ce96:	429a      	cmp	r2, r3
 800ce98:	bf0c      	ite	eq
 800ce9a:	2301      	moveq	r3, #1
 800ce9c:	2300      	movne	r3, #0
 800ce9e:	b2db      	uxtb	r3, r3
 800cea0:	461a      	mov	r2, r3
 800cea2:	79fb      	ldrb	r3, [r7, #7]
 800cea4:	429a      	cmp	r2, r3
 800cea6:	d09f      	beq.n	800cde8 <UART_WaitOnFlagUntilTimeout+0x12>
 800cea8:	2300      	movs	r3, #0
 800ceaa:	4618      	mov	r0, r3
 800ceac:	3740      	adds	r7, #64	; 0x40
 800ceae:	46bd      	mov	sp, r7
 800ceb0:	bd80      	pop	{r7, pc}
	...

0800ceb4 <UART_Start_Receive_DMA>:
 800ceb4:	b580      	push	{r7, lr}
 800ceb6:	b098      	sub	sp, #96	; 0x60
 800ceb8:	af00      	add	r7, sp, #0
 800ceba:	60f8      	str	r0, [r7, #12]
 800cebc:	60b9      	str	r1, [r7, #8]
 800cebe:	4613      	mov	r3, r2
 800cec0:	80fb      	strh	r3, [r7, #6]
 800cec2:	68ba      	ldr	r2, [r7, #8]
 800cec4:	68fb      	ldr	r3, [r7, #12]
 800cec6:	629a      	str	r2, [r3, #40]	; 0x28
 800cec8:	68fb      	ldr	r3, [r7, #12]
 800ceca:	88fa      	ldrh	r2, [r7, #6]
 800cecc:	859a      	strh	r2, [r3, #44]	; 0x2c
 800cece:	68fb      	ldr	r3, [r7, #12]
 800ced0:	2200      	movs	r2, #0
 800ced2:	641a      	str	r2, [r3, #64]	; 0x40
 800ced4:	68fb      	ldr	r3, [r7, #12]
 800ced6:	2222      	movs	r2, #34	; 0x22
 800ced8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800cedc:	68fb      	ldr	r3, [r7, #12]
 800cede:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cee0:	4a40      	ldr	r2, [pc, #256]	; (800cfe4 <UART_Start_Receive_DMA+0x130>)
 800cee2:	63da      	str	r2, [r3, #60]	; 0x3c
 800cee4:	68fb      	ldr	r3, [r7, #12]
 800cee6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cee8:	4a3f      	ldr	r2, [pc, #252]	; (800cfe8 <UART_Start_Receive_DMA+0x134>)
 800ceea:	641a      	str	r2, [r3, #64]	; 0x40
 800ceec:	68fb      	ldr	r3, [r7, #12]
 800ceee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cef0:	4a3e      	ldr	r2, [pc, #248]	; (800cfec <UART_Start_Receive_DMA+0x138>)
 800cef2:	64da      	str	r2, [r3, #76]	; 0x4c
 800cef4:	68fb      	ldr	r3, [r7, #12]
 800cef6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cef8:	2200      	movs	r2, #0
 800cefa:	651a      	str	r2, [r3, #80]	; 0x50
 800cefc:	f107 0308 	add.w	r3, r7, #8
 800cf00:	65fb      	str	r3, [r7, #92]	; 0x5c
 800cf02:	68fb      	ldr	r3, [r7, #12]
 800cf04:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800cf06:	68fb      	ldr	r3, [r7, #12]
 800cf08:	681b      	ldr	r3, [r3, #0]
 800cf0a:	3304      	adds	r3, #4
 800cf0c:	4619      	mov	r1, r3
 800cf0e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cf10:	681a      	ldr	r2, [r3, #0]
 800cf12:	88fb      	ldrh	r3, [r7, #6]
 800cf14:	f7fb f886 	bl	8008024 <HAL_DMA_Start_IT>
 800cf18:	2300      	movs	r3, #0
 800cf1a:	613b      	str	r3, [r7, #16]
 800cf1c:	68fb      	ldr	r3, [r7, #12]
 800cf1e:	681b      	ldr	r3, [r3, #0]
 800cf20:	681b      	ldr	r3, [r3, #0]
 800cf22:	613b      	str	r3, [r7, #16]
 800cf24:	68fb      	ldr	r3, [r7, #12]
 800cf26:	681b      	ldr	r3, [r3, #0]
 800cf28:	685b      	ldr	r3, [r3, #4]
 800cf2a:	613b      	str	r3, [r7, #16]
 800cf2c:	693b      	ldr	r3, [r7, #16]
 800cf2e:	68fb      	ldr	r3, [r7, #12]
 800cf30:	2200      	movs	r2, #0
 800cf32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800cf36:	68fb      	ldr	r3, [r7, #12]
 800cf38:	691b      	ldr	r3, [r3, #16]
 800cf3a:	2b00      	cmp	r3, #0
 800cf3c:	d019      	beq.n	800cf72 <UART_Start_Receive_DMA+0xbe>
 800cf3e:	68fb      	ldr	r3, [r7, #12]
 800cf40:	681b      	ldr	r3, [r3, #0]
 800cf42:	330c      	adds	r3, #12
 800cf44:	643b      	str	r3, [r7, #64]	; 0x40
 800cf46:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800cf48:	e853 3f00 	ldrex	r3, [r3]
 800cf4c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cf4e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cf50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cf54:	65bb      	str	r3, [r7, #88]	; 0x58
 800cf56:	68fb      	ldr	r3, [r7, #12]
 800cf58:	681b      	ldr	r3, [r3, #0]
 800cf5a:	330c      	adds	r3, #12
 800cf5c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800cf5e:	64fa      	str	r2, [r7, #76]	; 0x4c
 800cf60:	64bb      	str	r3, [r7, #72]	; 0x48
 800cf62:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800cf64:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800cf66:	e841 2300 	strex	r3, r2, [r1]
 800cf6a:	647b      	str	r3, [r7, #68]	; 0x44
 800cf6c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800cf6e:	2b00      	cmp	r3, #0
 800cf70:	d1e5      	bne.n	800cf3e <UART_Start_Receive_DMA+0x8a>
 800cf72:	68fb      	ldr	r3, [r7, #12]
 800cf74:	681b      	ldr	r3, [r3, #0]
 800cf76:	3314      	adds	r3, #20
 800cf78:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cf7a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cf7c:	e853 3f00 	ldrex	r3, [r3]
 800cf80:	62bb      	str	r3, [r7, #40]	; 0x28
 800cf82:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cf84:	f043 0301 	orr.w	r3, r3, #1
 800cf88:	657b      	str	r3, [r7, #84]	; 0x54
 800cf8a:	68fb      	ldr	r3, [r7, #12]
 800cf8c:	681b      	ldr	r3, [r3, #0]
 800cf8e:	3314      	adds	r3, #20
 800cf90:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800cf92:	63ba      	str	r2, [r7, #56]	; 0x38
 800cf94:	637b      	str	r3, [r7, #52]	; 0x34
 800cf96:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800cf98:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800cf9a:	e841 2300 	strex	r3, r2, [r1]
 800cf9e:	633b      	str	r3, [r7, #48]	; 0x30
 800cfa0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800cfa2:	2b00      	cmp	r3, #0
 800cfa4:	d1e5      	bne.n	800cf72 <UART_Start_Receive_DMA+0xbe>
 800cfa6:	68fb      	ldr	r3, [r7, #12]
 800cfa8:	681b      	ldr	r3, [r3, #0]
 800cfaa:	3314      	adds	r3, #20
 800cfac:	61bb      	str	r3, [r7, #24]
 800cfae:	69bb      	ldr	r3, [r7, #24]
 800cfb0:	e853 3f00 	ldrex	r3, [r3]
 800cfb4:	617b      	str	r3, [r7, #20]
 800cfb6:	697b      	ldr	r3, [r7, #20]
 800cfb8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cfbc:	653b      	str	r3, [r7, #80]	; 0x50
 800cfbe:	68fb      	ldr	r3, [r7, #12]
 800cfc0:	681b      	ldr	r3, [r3, #0]
 800cfc2:	3314      	adds	r3, #20
 800cfc4:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800cfc6:	627a      	str	r2, [r7, #36]	; 0x24
 800cfc8:	623b      	str	r3, [r7, #32]
 800cfca:	6a39      	ldr	r1, [r7, #32]
 800cfcc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800cfce:	e841 2300 	strex	r3, r2, [r1]
 800cfd2:	61fb      	str	r3, [r7, #28]
 800cfd4:	69fb      	ldr	r3, [r7, #28]
 800cfd6:	2b00      	cmp	r3, #0
 800cfd8:	d1e5      	bne.n	800cfa6 <UART_Start_Receive_DMA+0xf2>
 800cfda:	2300      	movs	r3, #0
 800cfdc:	4618      	mov	r0, r3
 800cfde:	3760      	adds	r7, #96	; 0x60
 800cfe0:	46bd      	mov	sp, r7
 800cfe2:	bd80      	pop	{r7, pc}
 800cfe4:	0800cbe7 	.word	0x0800cbe7
 800cfe8:	0800cd0d 	.word	0x0800cd0d
 800cfec:	0800cd43 	.word	0x0800cd43

0800cff0 <UART_EndTxTransfer>:
 800cff0:	b480      	push	{r7}
 800cff2:	b089      	sub	sp, #36	; 0x24
 800cff4:	af00      	add	r7, sp, #0
 800cff6:	6078      	str	r0, [r7, #4]
 800cff8:	687b      	ldr	r3, [r7, #4]
 800cffa:	681b      	ldr	r3, [r3, #0]
 800cffc:	330c      	adds	r3, #12
 800cffe:	60fb      	str	r3, [r7, #12]
 800d000:	68fb      	ldr	r3, [r7, #12]
 800d002:	e853 3f00 	ldrex	r3, [r3]
 800d006:	60bb      	str	r3, [r7, #8]
 800d008:	68bb      	ldr	r3, [r7, #8]
 800d00a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800d00e:	61fb      	str	r3, [r7, #28]
 800d010:	687b      	ldr	r3, [r7, #4]
 800d012:	681b      	ldr	r3, [r3, #0]
 800d014:	330c      	adds	r3, #12
 800d016:	69fa      	ldr	r2, [r7, #28]
 800d018:	61ba      	str	r2, [r7, #24]
 800d01a:	617b      	str	r3, [r7, #20]
 800d01c:	6979      	ldr	r1, [r7, #20]
 800d01e:	69ba      	ldr	r2, [r7, #24]
 800d020:	e841 2300 	strex	r3, r2, [r1]
 800d024:	613b      	str	r3, [r7, #16]
 800d026:	693b      	ldr	r3, [r7, #16]
 800d028:	2b00      	cmp	r3, #0
 800d02a:	d1e5      	bne.n	800cff8 <UART_EndTxTransfer+0x8>
 800d02c:	687b      	ldr	r3, [r7, #4]
 800d02e:	2220      	movs	r2, #32
 800d030:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800d034:	bf00      	nop
 800d036:	3724      	adds	r7, #36	; 0x24
 800d038:	46bd      	mov	sp, r7
 800d03a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d03e:	4770      	bx	lr

0800d040 <UART_EndRxTransfer>:
 800d040:	b480      	push	{r7}
 800d042:	b095      	sub	sp, #84	; 0x54
 800d044:	af00      	add	r7, sp, #0
 800d046:	6078      	str	r0, [r7, #4]
 800d048:	687b      	ldr	r3, [r7, #4]
 800d04a:	681b      	ldr	r3, [r3, #0]
 800d04c:	330c      	adds	r3, #12
 800d04e:	637b      	str	r3, [r7, #52]	; 0x34
 800d050:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d052:	e853 3f00 	ldrex	r3, [r3]
 800d056:	633b      	str	r3, [r7, #48]	; 0x30
 800d058:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d05a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800d05e:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d060:	687b      	ldr	r3, [r7, #4]
 800d062:	681b      	ldr	r3, [r3, #0]
 800d064:	330c      	adds	r3, #12
 800d066:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800d068:	643a      	str	r2, [r7, #64]	; 0x40
 800d06a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d06c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800d06e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800d070:	e841 2300 	strex	r3, r2, [r1]
 800d074:	63bb      	str	r3, [r7, #56]	; 0x38
 800d076:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d078:	2b00      	cmp	r3, #0
 800d07a:	d1e5      	bne.n	800d048 <UART_EndRxTransfer+0x8>
 800d07c:	687b      	ldr	r3, [r7, #4]
 800d07e:	681b      	ldr	r3, [r3, #0]
 800d080:	3314      	adds	r3, #20
 800d082:	623b      	str	r3, [r7, #32]
 800d084:	6a3b      	ldr	r3, [r7, #32]
 800d086:	e853 3f00 	ldrex	r3, [r3]
 800d08a:	61fb      	str	r3, [r7, #28]
 800d08c:	69fb      	ldr	r3, [r7, #28]
 800d08e:	f023 0301 	bic.w	r3, r3, #1
 800d092:	64bb      	str	r3, [r7, #72]	; 0x48
 800d094:	687b      	ldr	r3, [r7, #4]
 800d096:	681b      	ldr	r3, [r3, #0]
 800d098:	3314      	adds	r3, #20
 800d09a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800d09c:	62fa      	str	r2, [r7, #44]	; 0x2c
 800d09e:	62bb      	str	r3, [r7, #40]	; 0x28
 800d0a0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d0a2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d0a4:	e841 2300 	strex	r3, r2, [r1]
 800d0a8:	627b      	str	r3, [r7, #36]	; 0x24
 800d0aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d0ac:	2b00      	cmp	r3, #0
 800d0ae:	d1e5      	bne.n	800d07c <UART_EndRxTransfer+0x3c>
 800d0b0:	687b      	ldr	r3, [r7, #4]
 800d0b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d0b4:	2b01      	cmp	r3, #1
 800d0b6:	d119      	bne.n	800d0ec <UART_EndRxTransfer+0xac>
 800d0b8:	687b      	ldr	r3, [r7, #4]
 800d0ba:	681b      	ldr	r3, [r3, #0]
 800d0bc:	330c      	adds	r3, #12
 800d0be:	60fb      	str	r3, [r7, #12]
 800d0c0:	68fb      	ldr	r3, [r7, #12]
 800d0c2:	e853 3f00 	ldrex	r3, [r3]
 800d0c6:	60bb      	str	r3, [r7, #8]
 800d0c8:	68bb      	ldr	r3, [r7, #8]
 800d0ca:	f023 0310 	bic.w	r3, r3, #16
 800d0ce:	647b      	str	r3, [r7, #68]	; 0x44
 800d0d0:	687b      	ldr	r3, [r7, #4]
 800d0d2:	681b      	ldr	r3, [r3, #0]
 800d0d4:	330c      	adds	r3, #12
 800d0d6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800d0d8:	61ba      	str	r2, [r7, #24]
 800d0da:	617b      	str	r3, [r7, #20]
 800d0dc:	6979      	ldr	r1, [r7, #20]
 800d0de:	69ba      	ldr	r2, [r7, #24]
 800d0e0:	e841 2300 	strex	r3, r2, [r1]
 800d0e4:	613b      	str	r3, [r7, #16]
 800d0e6:	693b      	ldr	r3, [r7, #16]
 800d0e8:	2b00      	cmp	r3, #0
 800d0ea:	d1e5      	bne.n	800d0b8 <UART_EndRxTransfer+0x78>
 800d0ec:	687b      	ldr	r3, [r7, #4]
 800d0ee:	2220      	movs	r2, #32
 800d0f0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800d0f4:	687b      	ldr	r3, [r7, #4]
 800d0f6:	2200      	movs	r2, #0
 800d0f8:	631a      	str	r2, [r3, #48]	; 0x30
 800d0fa:	bf00      	nop
 800d0fc:	3754      	adds	r7, #84	; 0x54
 800d0fe:	46bd      	mov	sp, r7
 800d100:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d104:	4770      	bx	lr

0800d106 <UART_DMAAbortOnError>:
 800d106:	b580      	push	{r7, lr}
 800d108:	b084      	sub	sp, #16
 800d10a:	af00      	add	r7, sp, #0
 800d10c:	6078      	str	r0, [r7, #4]
 800d10e:	687b      	ldr	r3, [r7, #4]
 800d110:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d112:	60fb      	str	r3, [r7, #12]
 800d114:	68fb      	ldr	r3, [r7, #12]
 800d116:	2200      	movs	r2, #0
 800d118:	85da      	strh	r2, [r3, #46]	; 0x2e
 800d11a:	68fb      	ldr	r3, [r7, #12]
 800d11c:	2200      	movs	r2, #0
 800d11e:	84da      	strh	r2, [r3, #38]	; 0x26
 800d120:	68f8      	ldr	r0, [r7, #12]
 800d122:	f7ff fcef 	bl	800cb04 <HAL_UART_ErrorCallback>
 800d126:	bf00      	nop
 800d128:	3710      	adds	r7, #16
 800d12a:	46bd      	mov	sp, r7
 800d12c:	bd80      	pop	{r7, pc}

0800d12e <UART_Transmit_IT>:
 800d12e:	b480      	push	{r7}
 800d130:	b085      	sub	sp, #20
 800d132:	af00      	add	r7, sp, #0
 800d134:	6078      	str	r0, [r7, #4]
 800d136:	687b      	ldr	r3, [r7, #4]
 800d138:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800d13c:	b2db      	uxtb	r3, r3
 800d13e:	2b21      	cmp	r3, #33	; 0x21
 800d140:	d13e      	bne.n	800d1c0 <UART_Transmit_IT+0x92>
 800d142:	687b      	ldr	r3, [r7, #4]
 800d144:	689b      	ldr	r3, [r3, #8]
 800d146:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d14a:	d114      	bne.n	800d176 <UART_Transmit_IT+0x48>
 800d14c:	687b      	ldr	r3, [r7, #4]
 800d14e:	691b      	ldr	r3, [r3, #16]
 800d150:	2b00      	cmp	r3, #0
 800d152:	d110      	bne.n	800d176 <UART_Transmit_IT+0x48>
 800d154:	687b      	ldr	r3, [r7, #4]
 800d156:	6a1b      	ldr	r3, [r3, #32]
 800d158:	60fb      	str	r3, [r7, #12]
 800d15a:	68fb      	ldr	r3, [r7, #12]
 800d15c:	881b      	ldrh	r3, [r3, #0]
 800d15e:	461a      	mov	r2, r3
 800d160:	687b      	ldr	r3, [r7, #4]
 800d162:	681b      	ldr	r3, [r3, #0]
 800d164:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800d168:	605a      	str	r2, [r3, #4]
 800d16a:	687b      	ldr	r3, [r7, #4]
 800d16c:	6a1b      	ldr	r3, [r3, #32]
 800d16e:	1c9a      	adds	r2, r3, #2
 800d170:	687b      	ldr	r3, [r7, #4]
 800d172:	621a      	str	r2, [r3, #32]
 800d174:	e008      	b.n	800d188 <UART_Transmit_IT+0x5a>
 800d176:	687b      	ldr	r3, [r7, #4]
 800d178:	6a1b      	ldr	r3, [r3, #32]
 800d17a:	1c59      	adds	r1, r3, #1
 800d17c:	687a      	ldr	r2, [r7, #4]
 800d17e:	6211      	str	r1, [r2, #32]
 800d180:	781a      	ldrb	r2, [r3, #0]
 800d182:	687b      	ldr	r3, [r7, #4]
 800d184:	681b      	ldr	r3, [r3, #0]
 800d186:	605a      	str	r2, [r3, #4]
 800d188:	687b      	ldr	r3, [r7, #4]
 800d18a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800d18c:	b29b      	uxth	r3, r3
 800d18e:	3b01      	subs	r3, #1
 800d190:	b29b      	uxth	r3, r3
 800d192:	687a      	ldr	r2, [r7, #4]
 800d194:	4619      	mov	r1, r3
 800d196:	84d1      	strh	r1, [r2, #38]	; 0x26
 800d198:	2b00      	cmp	r3, #0
 800d19a:	d10f      	bne.n	800d1bc <UART_Transmit_IT+0x8e>
 800d19c:	687b      	ldr	r3, [r7, #4]
 800d19e:	681b      	ldr	r3, [r3, #0]
 800d1a0:	68da      	ldr	r2, [r3, #12]
 800d1a2:	687b      	ldr	r3, [r7, #4]
 800d1a4:	681b      	ldr	r3, [r3, #0]
 800d1a6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800d1aa:	60da      	str	r2, [r3, #12]
 800d1ac:	687b      	ldr	r3, [r7, #4]
 800d1ae:	681b      	ldr	r3, [r3, #0]
 800d1b0:	68da      	ldr	r2, [r3, #12]
 800d1b2:	687b      	ldr	r3, [r7, #4]
 800d1b4:	681b      	ldr	r3, [r3, #0]
 800d1b6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800d1ba:	60da      	str	r2, [r3, #12]
 800d1bc:	2300      	movs	r3, #0
 800d1be:	e000      	b.n	800d1c2 <UART_Transmit_IT+0x94>
 800d1c0:	2302      	movs	r3, #2
 800d1c2:	4618      	mov	r0, r3
 800d1c4:	3714      	adds	r7, #20
 800d1c6:	46bd      	mov	sp, r7
 800d1c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1cc:	4770      	bx	lr

0800d1ce <UART_EndTransmit_IT>:
 800d1ce:	b580      	push	{r7, lr}
 800d1d0:	b082      	sub	sp, #8
 800d1d2:	af00      	add	r7, sp, #0
 800d1d4:	6078      	str	r0, [r7, #4]
 800d1d6:	687b      	ldr	r3, [r7, #4]
 800d1d8:	681b      	ldr	r3, [r3, #0]
 800d1da:	68da      	ldr	r2, [r3, #12]
 800d1dc:	687b      	ldr	r3, [r7, #4]
 800d1de:	681b      	ldr	r3, [r3, #0]
 800d1e0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d1e4:	60da      	str	r2, [r3, #12]
 800d1e6:	687b      	ldr	r3, [r7, #4]
 800d1e8:	2220      	movs	r2, #32
 800d1ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800d1ee:	6878      	ldr	r0, [r7, #4]
 800d1f0:	f7f6 fbd2 	bl	8003998 <HAL_UART_TxCpltCallback>
 800d1f4:	2300      	movs	r3, #0
 800d1f6:	4618      	mov	r0, r3
 800d1f8:	3708      	adds	r7, #8
 800d1fa:	46bd      	mov	sp, r7
 800d1fc:	bd80      	pop	{r7, pc}

0800d1fe <UART_Receive_IT>:
 800d1fe:	b580      	push	{r7, lr}
 800d200:	b08c      	sub	sp, #48	; 0x30
 800d202:	af00      	add	r7, sp, #0
 800d204:	6078      	str	r0, [r7, #4]
 800d206:	687b      	ldr	r3, [r7, #4]
 800d208:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800d20c:	b2db      	uxtb	r3, r3
 800d20e:	2b22      	cmp	r3, #34	; 0x22
 800d210:	f040 80ab 	bne.w	800d36a <UART_Receive_IT+0x16c>
 800d214:	687b      	ldr	r3, [r7, #4]
 800d216:	689b      	ldr	r3, [r3, #8]
 800d218:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d21c:	d117      	bne.n	800d24e <UART_Receive_IT+0x50>
 800d21e:	687b      	ldr	r3, [r7, #4]
 800d220:	691b      	ldr	r3, [r3, #16]
 800d222:	2b00      	cmp	r3, #0
 800d224:	d113      	bne.n	800d24e <UART_Receive_IT+0x50>
 800d226:	2300      	movs	r3, #0
 800d228:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d22a:	687b      	ldr	r3, [r7, #4]
 800d22c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d22e:	62bb      	str	r3, [r7, #40]	; 0x28
 800d230:	687b      	ldr	r3, [r7, #4]
 800d232:	681b      	ldr	r3, [r3, #0]
 800d234:	685b      	ldr	r3, [r3, #4]
 800d236:	b29b      	uxth	r3, r3
 800d238:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800d23c:	b29a      	uxth	r2, r3
 800d23e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d240:	801a      	strh	r2, [r3, #0]
 800d242:	687b      	ldr	r3, [r7, #4]
 800d244:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d246:	1c9a      	adds	r2, r3, #2
 800d248:	687b      	ldr	r3, [r7, #4]
 800d24a:	629a      	str	r2, [r3, #40]	; 0x28
 800d24c:	e026      	b.n	800d29c <UART_Receive_IT+0x9e>
 800d24e:	687b      	ldr	r3, [r7, #4]
 800d250:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d252:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d254:	2300      	movs	r3, #0
 800d256:	62bb      	str	r3, [r7, #40]	; 0x28
 800d258:	687b      	ldr	r3, [r7, #4]
 800d25a:	689b      	ldr	r3, [r3, #8]
 800d25c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d260:	d007      	beq.n	800d272 <UART_Receive_IT+0x74>
 800d262:	687b      	ldr	r3, [r7, #4]
 800d264:	689b      	ldr	r3, [r3, #8]
 800d266:	2b00      	cmp	r3, #0
 800d268:	d10a      	bne.n	800d280 <UART_Receive_IT+0x82>
 800d26a:	687b      	ldr	r3, [r7, #4]
 800d26c:	691b      	ldr	r3, [r3, #16]
 800d26e:	2b00      	cmp	r3, #0
 800d270:	d106      	bne.n	800d280 <UART_Receive_IT+0x82>
 800d272:	687b      	ldr	r3, [r7, #4]
 800d274:	681b      	ldr	r3, [r3, #0]
 800d276:	685b      	ldr	r3, [r3, #4]
 800d278:	b2da      	uxtb	r2, r3
 800d27a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d27c:	701a      	strb	r2, [r3, #0]
 800d27e:	e008      	b.n	800d292 <UART_Receive_IT+0x94>
 800d280:	687b      	ldr	r3, [r7, #4]
 800d282:	681b      	ldr	r3, [r3, #0]
 800d284:	685b      	ldr	r3, [r3, #4]
 800d286:	b2db      	uxtb	r3, r3
 800d288:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800d28c:	b2da      	uxtb	r2, r3
 800d28e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d290:	701a      	strb	r2, [r3, #0]
 800d292:	687b      	ldr	r3, [r7, #4]
 800d294:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d296:	1c5a      	adds	r2, r3, #1
 800d298:	687b      	ldr	r3, [r7, #4]
 800d29a:	629a      	str	r2, [r3, #40]	; 0x28
 800d29c:	687b      	ldr	r3, [r7, #4]
 800d29e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800d2a0:	b29b      	uxth	r3, r3
 800d2a2:	3b01      	subs	r3, #1
 800d2a4:	b29b      	uxth	r3, r3
 800d2a6:	687a      	ldr	r2, [r7, #4]
 800d2a8:	4619      	mov	r1, r3
 800d2aa:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800d2ac:	2b00      	cmp	r3, #0
 800d2ae:	d15a      	bne.n	800d366 <UART_Receive_IT+0x168>
 800d2b0:	687b      	ldr	r3, [r7, #4]
 800d2b2:	681b      	ldr	r3, [r3, #0]
 800d2b4:	68da      	ldr	r2, [r3, #12]
 800d2b6:	687b      	ldr	r3, [r7, #4]
 800d2b8:	681b      	ldr	r3, [r3, #0]
 800d2ba:	f022 0220 	bic.w	r2, r2, #32
 800d2be:	60da      	str	r2, [r3, #12]
 800d2c0:	687b      	ldr	r3, [r7, #4]
 800d2c2:	681b      	ldr	r3, [r3, #0]
 800d2c4:	68da      	ldr	r2, [r3, #12]
 800d2c6:	687b      	ldr	r3, [r7, #4]
 800d2c8:	681b      	ldr	r3, [r3, #0]
 800d2ca:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800d2ce:	60da      	str	r2, [r3, #12]
 800d2d0:	687b      	ldr	r3, [r7, #4]
 800d2d2:	681b      	ldr	r3, [r3, #0]
 800d2d4:	695a      	ldr	r2, [r3, #20]
 800d2d6:	687b      	ldr	r3, [r7, #4]
 800d2d8:	681b      	ldr	r3, [r3, #0]
 800d2da:	f022 0201 	bic.w	r2, r2, #1
 800d2de:	615a      	str	r2, [r3, #20]
 800d2e0:	687b      	ldr	r3, [r7, #4]
 800d2e2:	2220      	movs	r2, #32
 800d2e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800d2e8:	687b      	ldr	r3, [r7, #4]
 800d2ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d2ec:	2b01      	cmp	r3, #1
 800d2ee:	d135      	bne.n	800d35c <UART_Receive_IT+0x15e>
 800d2f0:	687b      	ldr	r3, [r7, #4]
 800d2f2:	2200      	movs	r2, #0
 800d2f4:	631a      	str	r2, [r3, #48]	; 0x30
 800d2f6:	687b      	ldr	r3, [r7, #4]
 800d2f8:	681b      	ldr	r3, [r3, #0]
 800d2fa:	330c      	adds	r3, #12
 800d2fc:	617b      	str	r3, [r7, #20]
 800d2fe:	697b      	ldr	r3, [r7, #20]
 800d300:	e853 3f00 	ldrex	r3, [r3]
 800d304:	613b      	str	r3, [r7, #16]
 800d306:	693b      	ldr	r3, [r7, #16]
 800d308:	f023 0310 	bic.w	r3, r3, #16
 800d30c:	627b      	str	r3, [r7, #36]	; 0x24
 800d30e:	687b      	ldr	r3, [r7, #4]
 800d310:	681b      	ldr	r3, [r3, #0]
 800d312:	330c      	adds	r3, #12
 800d314:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800d316:	623a      	str	r2, [r7, #32]
 800d318:	61fb      	str	r3, [r7, #28]
 800d31a:	69f9      	ldr	r1, [r7, #28]
 800d31c:	6a3a      	ldr	r2, [r7, #32]
 800d31e:	e841 2300 	strex	r3, r2, [r1]
 800d322:	61bb      	str	r3, [r7, #24]
 800d324:	69bb      	ldr	r3, [r7, #24]
 800d326:	2b00      	cmp	r3, #0
 800d328:	d1e5      	bne.n	800d2f6 <UART_Receive_IT+0xf8>
 800d32a:	687b      	ldr	r3, [r7, #4]
 800d32c:	681b      	ldr	r3, [r3, #0]
 800d32e:	681b      	ldr	r3, [r3, #0]
 800d330:	f003 0310 	and.w	r3, r3, #16
 800d334:	2b10      	cmp	r3, #16
 800d336:	d10a      	bne.n	800d34e <UART_Receive_IT+0x150>
 800d338:	2300      	movs	r3, #0
 800d33a:	60fb      	str	r3, [r7, #12]
 800d33c:	687b      	ldr	r3, [r7, #4]
 800d33e:	681b      	ldr	r3, [r3, #0]
 800d340:	681b      	ldr	r3, [r3, #0]
 800d342:	60fb      	str	r3, [r7, #12]
 800d344:	687b      	ldr	r3, [r7, #4]
 800d346:	681b      	ldr	r3, [r3, #0]
 800d348:	685b      	ldr	r3, [r3, #4]
 800d34a:	60fb      	str	r3, [r7, #12]
 800d34c:	68fb      	ldr	r3, [r7, #12]
 800d34e:	687b      	ldr	r3, [r7, #4]
 800d350:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800d352:	4619      	mov	r1, r3
 800d354:	6878      	ldr	r0, [r7, #4]
 800d356:	f7ff fbdf 	bl	800cb18 <HAL_UARTEx_RxEventCallback>
 800d35a:	e002      	b.n	800d362 <UART_Receive_IT+0x164>
 800d35c:	6878      	ldr	r0, [r7, #4]
 800d35e:	f7ff fbbd 	bl	800cadc <HAL_UART_RxCpltCallback>
 800d362:	2300      	movs	r3, #0
 800d364:	e002      	b.n	800d36c <UART_Receive_IT+0x16e>
 800d366:	2300      	movs	r3, #0
 800d368:	e000      	b.n	800d36c <UART_Receive_IT+0x16e>
 800d36a:	2302      	movs	r3, #2
 800d36c:	4618      	mov	r0, r3
 800d36e:	3730      	adds	r7, #48	; 0x30
 800d370:	46bd      	mov	sp, r7
 800d372:	bd80      	pop	{r7, pc}

0800d374 <UART_SetConfig>:
 800d374:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800d378:	b0c0      	sub	sp, #256	; 0x100
 800d37a:	af00      	add	r7, sp, #0
 800d37c:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800d380:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d384:	681b      	ldr	r3, [r3, #0]
 800d386:	691b      	ldr	r3, [r3, #16]
 800d388:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800d38c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d390:	68d9      	ldr	r1, [r3, #12]
 800d392:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d396:	681a      	ldr	r2, [r3, #0]
 800d398:	ea40 0301 	orr.w	r3, r0, r1
 800d39c:	6113      	str	r3, [r2, #16]
 800d39e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3a2:	689a      	ldr	r2, [r3, #8]
 800d3a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3a8:	691b      	ldr	r3, [r3, #16]
 800d3aa:	431a      	orrs	r2, r3
 800d3ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3b0:	695b      	ldr	r3, [r3, #20]
 800d3b2:	431a      	orrs	r2, r3
 800d3b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3b8:	69db      	ldr	r3, [r3, #28]
 800d3ba:	4313      	orrs	r3, r2
 800d3bc:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800d3c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3c4:	681b      	ldr	r3, [r3, #0]
 800d3c6:	68db      	ldr	r3, [r3, #12]
 800d3c8:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800d3cc:	f021 010c 	bic.w	r1, r1, #12
 800d3d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3d4:	681a      	ldr	r2, [r3, #0]
 800d3d6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800d3da:	430b      	orrs	r3, r1
 800d3dc:	60d3      	str	r3, [r2, #12]
 800d3de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3e2:	681b      	ldr	r3, [r3, #0]
 800d3e4:	695b      	ldr	r3, [r3, #20]
 800d3e6:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800d3ea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3ee:	6999      	ldr	r1, [r3, #24]
 800d3f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d3f4:	681a      	ldr	r2, [r3, #0]
 800d3f6:	ea40 0301 	orr.w	r3, r0, r1
 800d3fa:	6153      	str	r3, [r2, #20]
 800d3fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d400:	681a      	ldr	r2, [r3, #0]
 800d402:	4b95      	ldr	r3, [pc, #596]	; (800d658 <UART_SetConfig+0x2e4>)
 800d404:	429a      	cmp	r2, r3
 800d406:	d011      	beq.n	800d42c <UART_SetConfig+0xb8>
 800d408:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d40c:	681a      	ldr	r2, [r3, #0]
 800d40e:	4b93      	ldr	r3, [pc, #588]	; (800d65c <UART_SetConfig+0x2e8>)
 800d410:	429a      	cmp	r2, r3
 800d412:	d00b      	beq.n	800d42c <UART_SetConfig+0xb8>
 800d414:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d418:	681a      	ldr	r2, [r3, #0]
 800d41a:	4b91      	ldr	r3, [pc, #580]	; (800d660 <UART_SetConfig+0x2ec>)
 800d41c:	429a      	cmp	r2, r3
 800d41e:	d005      	beq.n	800d42c <UART_SetConfig+0xb8>
 800d420:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d424:	681a      	ldr	r2, [r3, #0]
 800d426:	4b8f      	ldr	r3, [pc, #572]	; (800d664 <UART_SetConfig+0x2f0>)
 800d428:	429a      	cmp	r2, r3
 800d42a:	d104      	bne.n	800d436 <UART_SetConfig+0xc2>
 800d42c:	f7fd fcb2 	bl	800ad94 <HAL_RCC_GetPCLK2Freq>
 800d430:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800d434:	e003      	b.n	800d43e <UART_SetConfig+0xca>
 800d436:	f7fd fc99 	bl	800ad6c <HAL_RCC_GetPCLK1Freq>
 800d43a:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800d43e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d442:	69db      	ldr	r3, [r3, #28]
 800d444:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800d448:	f040 8110 	bne.w	800d66c <UART_SetConfig+0x2f8>
 800d44c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d450:	2200      	movs	r2, #0
 800d452:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800d456:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800d45a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800d45e:	4622      	mov	r2, r4
 800d460:	462b      	mov	r3, r5
 800d462:	1891      	adds	r1, r2, r2
 800d464:	65b9      	str	r1, [r7, #88]	; 0x58
 800d466:	415b      	adcs	r3, r3
 800d468:	65fb      	str	r3, [r7, #92]	; 0x5c
 800d46a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800d46e:	4621      	mov	r1, r4
 800d470:	eb12 0801 	adds.w	r8, r2, r1
 800d474:	4629      	mov	r1, r5
 800d476:	eb43 0901 	adc.w	r9, r3, r1
 800d47a:	f04f 0200 	mov.w	r2, #0
 800d47e:	f04f 0300 	mov.w	r3, #0
 800d482:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800d486:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800d48a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800d48e:	4690      	mov	r8, r2
 800d490:	4699      	mov	r9, r3
 800d492:	4623      	mov	r3, r4
 800d494:	eb18 0303 	adds.w	r3, r8, r3
 800d498:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800d49c:	462b      	mov	r3, r5
 800d49e:	eb49 0303 	adc.w	r3, r9, r3
 800d4a2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800d4a6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d4aa:	685b      	ldr	r3, [r3, #4]
 800d4ac:	2200      	movs	r2, #0
 800d4ae:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800d4b2:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800d4b6:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800d4ba:	460b      	mov	r3, r1
 800d4bc:	18db      	adds	r3, r3, r3
 800d4be:	653b      	str	r3, [r7, #80]	; 0x50
 800d4c0:	4613      	mov	r3, r2
 800d4c2:	eb42 0303 	adc.w	r3, r2, r3
 800d4c6:	657b      	str	r3, [r7, #84]	; 0x54
 800d4c8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800d4cc:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800d4d0:	f7f3 fb86 	bl	8000be0 <__aeabi_uldivmod>
 800d4d4:	4602      	mov	r2, r0
 800d4d6:	460b      	mov	r3, r1
 800d4d8:	4b63      	ldr	r3, [pc, #396]	; (800d668 <UART_SetConfig+0x2f4>)
 800d4da:	fba3 2302 	umull	r2, r3, r3, r2
 800d4de:	095b      	lsrs	r3, r3, #5
 800d4e0:	011c      	lsls	r4, r3, #4
 800d4e2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d4e6:	2200      	movs	r2, #0
 800d4e8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800d4ec:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800d4f0:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800d4f4:	4642      	mov	r2, r8
 800d4f6:	464b      	mov	r3, r9
 800d4f8:	1891      	adds	r1, r2, r2
 800d4fa:	64b9      	str	r1, [r7, #72]	; 0x48
 800d4fc:	415b      	adcs	r3, r3
 800d4fe:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d500:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800d504:	4641      	mov	r1, r8
 800d506:	eb12 0a01 	adds.w	sl, r2, r1
 800d50a:	4649      	mov	r1, r9
 800d50c:	eb43 0b01 	adc.w	fp, r3, r1
 800d510:	f04f 0200 	mov.w	r2, #0
 800d514:	f04f 0300 	mov.w	r3, #0
 800d518:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800d51c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800d520:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800d524:	4692      	mov	sl, r2
 800d526:	469b      	mov	fp, r3
 800d528:	4643      	mov	r3, r8
 800d52a:	eb1a 0303 	adds.w	r3, sl, r3
 800d52e:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800d532:	464b      	mov	r3, r9
 800d534:	eb4b 0303 	adc.w	r3, fp, r3
 800d538:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800d53c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d540:	685b      	ldr	r3, [r3, #4]
 800d542:	2200      	movs	r2, #0
 800d544:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800d548:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800d54c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800d550:	460b      	mov	r3, r1
 800d552:	18db      	adds	r3, r3, r3
 800d554:	643b      	str	r3, [r7, #64]	; 0x40
 800d556:	4613      	mov	r3, r2
 800d558:	eb42 0303 	adc.w	r3, r2, r3
 800d55c:	647b      	str	r3, [r7, #68]	; 0x44
 800d55e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800d562:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800d566:	f7f3 fb3b 	bl	8000be0 <__aeabi_uldivmod>
 800d56a:	4602      	mov	r2, r0
 800d56c:	460b      	mov	r3, r1
 800d56e:	4611      	mov	r1, r2
 800d570:	4b3d      	ldr	r3, [pc, #244]	; (800d668 <UART_SetConfig+0x2f4>)
 800d572:	fba3 2301 	umull	r2, r3, r3, r1
 800d576:	095b      	lsrs	r3, r3, #5
 800d578:	2264      	movs	r2, #100	; 0x64
 800d57a:	fb02 f303 	mul.w	r3, r2, r3
 800d57e:	1acb      	subs	r3, r1, r3
 800d580:	00db      	lsls	r3, r3, #3
 800d582:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800d586:	4b38      	ldr	r3, [pc, #224]	; (800d668 <UART_SetConfig+0x2f4>)
 800d588:	fba3 2302 	umull	r2, r3, r3, r2
 800d58c:	095b      	lsrs	r3, r3, #5
 800d58e:	005b      	lsls	r3, r3, #1
 800d590:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800d594:	441c      	add	r4, r3
 800d596:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d59a:	2200      	movs	r2, #0
 800d59c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800d5a0:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800d5a4:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800d5a8:	4642      	mov	r2, r8
 800d5aa:	464b      	mov	r3, r9
 800d5ac:	1891      	adds	r1, r2, r2
 800d5ae:	63b9      	str	r1, [r7, #56]	; 0x38
 800d5b0:	415b      	adcs	r3, r3
 800d5b2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d5b4:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800d5b8:	4641      	mov	r1, r8
 800d5ba:	1851      	adds	r1, r2, r1
 800d5bc:	6339      	str	r1, [r7, #48]	; 0x30
 800d5be:	4649      	mov	r1, r9
 800d5c0:	414b      	adcs	r3, r1
 800d5c2:	637b      	str	r3, [r7, #52]	; 0x34
 800d5c4:	f04f 0200 	mov.w	r2, #0
 800d5c8:	f04f 0300 	mov.w	r3, #0
 800d5cc:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800d5d0:	4659      	mov	r1, fp
 800d5d2:	00cb      	lsls	r3, r1, #3
 800d5d4:	4651      	mov	r1, sl
 800d5d6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d5da:	4651      	mov	r1, sl
 800d5dc:	00ca      	lsls	r2, r1, #3
 800d5de:	4610      	mov	r0, r2
 800d5e0:	4619      	mov	r1, r3
 800d5e2:	4603      	mov	r3, r0
 800d5e4:	4642      	mov	r2, r8
 800d5e6:	189b      	adds	r3, r3, r2
 800d5e8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800d5ec:	464b      	mov	r3, r9
 800d5ee:	460a      	mov	r2, r1
 800d5f0:	eb42 0303 	adc.w	r3, r2, r3
 800d5f4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800d5f8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d5fc:	685b      	ldr	r3, [r3, #4]
 800d5fe:	2200      	movs	r2, #0
 800d600:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800d604:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800d608:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800d60c:	460b      	mov	r3, r1
 800d60e:	18db      	adds	r3, r3, r3
 800d610:	62bb      	str	r3, [r7, #40]	; 0x28
 800d612:	4613      	mov	r3, r2
 800d614:	eb42 0303 	adc.w	r3, r2, r3
 800d618:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d61a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800d61e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800d622:	f7f3 fadd 	bl	8000be0 <__aeabi_uldivmod>
 800d626:	4602      	mov	r2, r0
 800d628:	460b      	mov	r3, r1
 800d62a:	4b0f      	ldr	r3, [pc, #60]	; (800d668 <UART_SetConfig+0x2f4>)
 800d62c:	fba3 1302 	umull	r1, r3, r3, r2
 800d630:	095b      	lsrs	r3, r3, #5
 800d632:	2164      	movs	r1, #100	; 0x64
 800d634:	fb01 f303 	mul.w	r3, r1, r3
 800d638:	1ad3      	subs	r3, r2, r3
 800d63a:	00db      	lsls	r3, r3, #3
 800d63c:	3332      	adds	r3, #50	; 0x32
 800d63e:	4a0a      	ldr	r2, [pc, #40]	; (800d668 <UART_SetConfig+0x2f4>)
 800d640:	fba2 2303 	umull	r2, r3, r2, r3
 800d644:	095b      	lsrs	r3, r3, #5
 800d646:	f003 0207 	and.w	r2, r3, #7
 800d64a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d64e:	681b      	ldr	r3, [r3, #0]
 800d650:	4422      	add	r2, r4
 800d652:	609a      	str	r2, [r3, #8]
 800d654:	e109      	b.n	800d86a <UART_SetConfig+0x4f6>
 800d656:	bf00      	nop
 800d658:	40011000 	.word	0x40011000
 800d65c:	40011400 	.word	0x40011400
 800d660:	40011800 	.word	0x40011800
 800d664:	40011c00 	.word	0x40011c00
 800d668:	51eb851f 	.word	0x51eb851f
 800d66c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d670:	2200      	movs	r2, #0
 800d672:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800d676:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800d67a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800d67e:	4642      	mov	r2, r8
 800d680:	464b      	mov	r3, r9
 800d682:	1891      	adds	r1, r2, r2
 800d684:	6239      	str	r1, [r7, #32]
 800d686:	415b      	adcs	r3, r3
 800d688:	627b      	str	r3, [r7, #36]	; 0x24
 800d68a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800d68e:	4641      	mov	r1, r8
 800d690:	1854      	adds	r4, r2, r1
 800d692:	4649      	mov	r1, r9
 800d694:	eb43 0501 	adc.w	r5, r3, r1
 800d698:	f04f 0200 	mov.w	r2, #0
 800d69c:	f04f 0300 	mov.w	r3, #0
 800d6a0:	00eb      	lsls	r3, r5, #3
 800d6a2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800d6a6:	00e2      	lsls	r2, r4, #3
 800d6a8:	4614      	mov	r4, r2
 800d6aa:	461d      	mov	r5, r3
 800d6ac:	4643      	mov	r3, r8
 800d6ae:	18e3      	adds	r3, r4, r3
 800d6b0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800d6b4:	464b      	mov	r3, r9
 800d6b6:	eb45 0303 	adc.w	r3, r5, r3
 800d6ba:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800d6be:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d6c2:	685b      	ldr	r3, [r3, #4]
 800d6c4:	2200      	movs	r2, #0
 800d6c6:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800d6ca:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800d6ce:	f04f 0200 	mov.w	r2, #0
 800d6d2:	f04f 0300 	mov.w	r3, #0
 800d6d6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800d6da:	4629      	mov	r1, r5
 800d6dc:	008b      	lsls	r3, r1, #2
 800d6de:	4621      	mov	r1, r4
 800d6e0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d6e4:	4621      	mov	r1, r4
 800d6e6:	008a      	lsls	r2, r1, #2
 800d6e8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800d6ec:	f7f3 fa78 	bl	8000be0 <__aeabi_uldivmod>
 800d6f0:	4602      	mov	r2, r0
 800d6f2:	460b      	mov	r3, r1
 800d6f4:	4b60      	ldr	r3, [pc, #384]	; (800d878 <UART_SetConfig+0x504>)
 800d6f6:	fba3 2302 	umull	r2, r3, r3, r2
 800d6fa:	095b      	lsrs	r3, r3, #5
 800d6fc:	011c      	lsls	r4, r3, #4
 800d6fe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d702:	2200      	movs	r2, #0
 800d704:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800d708:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800d70c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800d710:	4642      	mov	r2, r8
 800d712:	464b      	mov	r3, r9
 800d714:	1891      	adds	r1, r2, r2
 800d716:	61b9      	str	r1, [r7, #24]
 800d718:	415b      	adcs	r3, r3
 800d71a:	61fb      	str	r3, [r7, #28]
 800d71c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800d720:	4641      	mov	r1, r8
 800d722:	1851      	adds	r1, r2, r1
 800d724:	6139      	str	r1, [r7, #16]
 800d726:	4649      	mov	r1, r9
 800d728:	414b      	adcs	r3, r1
 800d72a:	617b      	str	r3, [r7, #20]
 800d72c:	f04f 0200 	mov.w	r2, #0
 800d730:	f04f 0300 	mov.w	r3, #0
 800d734:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800d738:	4659      	mov	r1, fp
 800d73a:	00cb      	lsls	r3, r1, #3
 800d73c:	4651      	mov	r1, sl
 800d73e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d742:	4651      	mov	r1, sl
 800d744:	00ca      	lsls	r2, r1, #3
 800d746:	4610      	mov	r0, r2
 800d748:	4619      	mov	r1, r3
 800d74a:	4603      	mov	r3, r0
 800d74c:	4642      	mov	r2, r8
 800d74e:	189b      	adds	r3, r3, r2
 800d750:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800d754:	464b      	mov	r3, r9
 800d756:	460a      	mov	r2, r1
 800d758:	eb42 0303 	adc.w	r3, r2, r3
 800d75c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800d760:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d764:	685b      	ldr	r3, [r3, #4]
 800d766:	2200      	movs	r2, #0
 800d768:	67bb      	str	r3, [r7, #120]	; 0x78
 800d76a:	67fa      	str	r2, [r7, #124]	; 0x7c
 800d76c:	f04f 0200 	mov.w	r2, #0
 800d770:	f04f 0300 	mov.w	r3, #0
 800d774:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800d778:	4649      	mov	r1, r9
 800d77a:	008b      	lsls	r3, r1, #2
 800d77c:	4641      	mov	r1, r8
 800d77e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d782:	4641      	mov	r1, r8
 800d784:	008a      	lsls	r2, r1, #2
 800d786:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800d78a:	f7f3 fa29 	bl	8000be0 <__aeabi_uldivmod>
 800d78e:	4602      	mov	r2, r0
 800d790:	460b      	mov	r3, r1
 800d792:	4b39      	ldr	r3, [pc, #228]	; (800d878 <UART_SetConfig+0x504>)
 800d794:	fba3 1302 	umull	r1, r3, r3, r2
 800d798:	095b      	lsrs	r3, r3, #5
 800d79a:	2164      	movs	r1, #100	; 0x64
 800d79c:	fb01 f303 	mul.w	r3, r1, r3
 800d7a0:	1ad3      	subs	r3, r2, r3
 800d7a2:	011b      	lsls	r3, r3, #4
 800d7a4:	3332      	adds	r3, #50	; 0x32
 800d7a6:	4a34      	ldr	r2, [pc, #208]	; (800d878 <UART_SetConfig+0x504>)
 800d7a8:	fba2 2303 	umull	r2, r3, r2, r3
 800d7ac:	095b      	lsrs	r3, r3, #5
 800d7ae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800d7b2:	441c      	add	r4, r3
 800d7b4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d7b8:	2200      	movs	r2, #0
 800d7ba:	673b      	str	r3, [r7, #112]	; 0x70
 800d7bc:	677a      	str	r2, [r7, #116]	; 0x74
 800d7be:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800d7c2:	4642      	mov	r2, r8
 800d7c4:	464b      	mov	r3, r9
 800d7c6:	1891      	adds	r1, r2, r2
 800d7c8:	60b9      	str	r1, [r7, #8]
 800d7ca:	415b      	adcs	r3, r3
 800d7cc:	60fb      	str	r3, [r7, #12]
 800d7ce:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800d7d2:	4641      	mov	r1, r8
 800d7d4:	1851      	adds	r1, r2, r1
 800d7d6:	6039      	str	r1, [r7, #0]
 800d7d8:	4649      	mov	r1, r9
 800d7da:	414b      	adcs	r3, r1
 800d7dc:	607b      	str	r3, [r7, #4]
 800d7de:	f04f 0200 	mov.w	r2, #0
 800d7e2:	f04f 0300 	mov.w	r3, #0
 800d7e6:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800d7ea:	4659      	mov	r1, fp
 800d7ec:	00cb      	lsls	r3, r1, #3
 800d7ee:	4651      	mov	r1, sl
 800d7f0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d7f4:	4651      	mov	r1, sl
 800d7f6:	00ca      	lsls	r2, r1, #3
 800d7f8:	4610      	mov	r0, r2
 800d7fa:	4619      	mov	r1, r3
 800d7fc:	4603      	mov	r3, r0
 800d7fe:	4642      	mov	r2, r8
 800d800:	189b      	adds	r3, r3, r2
 800d802:	66bb      	str	r3, [r7, #104]	; 0x68
 800d804:	464b      	mov	r3, r9
 800d806:	460a      	mov	r2, r1
 800d808:	eb42 0303 	adc.w	r3, r2, r3
 800d80c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800d80e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d812:	685b      	ldr	r3, [r3, #4]
 800d814:	2200      	movs	r2, #0
 800d816:	663b      	str	r3, [r7, #96]	; 0x60
 800d818:	667a      	str	r2, [r7, #100]	; 0x64
 800d81a:	f04f 0200 	mov.w	r2, #0
 800d81e:	f04f 0300 	mov.w	r3, #0
 800d822:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800d826:	4649      	mov	r1, r9
 800d828:	008b      	lsls	r3, r1, #2
 800d82a:	4641      	mov	r1, r8
 800d82c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d830:	4641      	mov	r1, r8
 800d832:	008a      	lsls	r2, r1, #2
 800d834:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800d838:	f7f3 f9d2 	bl	8000be0 <__aeabi_uldivmod>
 800d83c:	4602      	mov	r2, r0
 800d83e:	460b      	mov	r3, r1
 800d840:	4b0d      	ldr	r3, [pc, #52]	; (800d878 <UART_SetConfig+0x504>)
 800d842:	fba3 1302 	umull	r1, r3, r3, r2
 800d846:	095b      	lsrs	r3, r3, #5
 800d848:	2164      	movs	r1, #100	; 0x64
 800d84a:	fb01 f303 	mul.w	r3, r1, r3
 800d84e:	1ad3      	subs	r3, r2, r3
 800d850:	011b      	lsls	r3, r3, #4
 800d852:	3332      	adds	r3, #50	; 0x32
 800d854:	4a08      	ldr	r2, [pc, #32]	; (800d878 <UART_SetConfig+0x504>)
 800d856:	fba2 2303 	umull	r2, r3, r2, r3
 800d85a:	095b      	lsrs	r3, r3, #5
 800d85c:	f003 020f 	and.w	r2, r3, #15
 800d860:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d864:	681b      	ldr	r3, [r3, #0]
 800d866:	4422      	add	r2, r4
 800d868:	609a      	str	r2, [r3, #8]
 800d86a:	bf00      	nop
 800d86c:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800d870:	46bd      	mov	sp, r7
 800d872:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800d876:	bf00      	nop
 800d878:	51eb851f 	.word	0x51eb851f

0800d87c <abs>:
 800d87c:	2800      	cmp	r0, #0
 800d87e:	bfb8      	it	lt
 800d880:	4240      	neglt	r0, r0
 800d882:	4770      	bx	lr

0800d884 <__errno>:
 800d884:	4b01      	ldr	r3, [pc, #4]	; (800d88c <__errno+0x8>)
 800d886:	6818      	ldr	r0, [r3, #0]
 800d888:	4770      	bx	lr
 800d88a:	bf00      	nop
 800d88c:	20000134 	.word	0x20000134

0800d890 <__libc_init_array>:
 800d890:	b570      	push	{r4, r5, r6, lr}
 800d892:	4d0d      	ldr	r5, [pc, #52]	; (800d8c8 <__libc_init_array+0x38>)
 800d894:	4c0d      	ldr	r4, [pc, #52]	; (800d8cc <__libc_init_array+0x3c>)
 800d896:	1b64      	subs	r4, r4, r5
 800d898:	10a4      	asrs	r4, r4, #2
 800d89a:	2600      	movs	r6, #0
 800d89c:	42a6      	cmp	r6, r4
 800d89e:	d109      	bne.n	800d8b4 <__libc_init_array+0x24>
 800d8a0:	4d0b      	ldr	r5, [pc, #44]	; (800d8d0 <__libc_init_array+0x40>)
 800d8a2:	4c0c      	ldr	r4, [pc, #48]	; (800d8d4 <__libc_init_array+0x44>)
 800d8a4:	f003 f808 	bl	80108b8 <_init>
 800d8a8:	1b64      	subs	r4, r4, r5
 800d8aa:	10a4      	asrs	r4, r4, #2
 800d8ac:	2600      	movs	r6, #0
 800d8ae:	42a6      	cmp	r6, r4
 800d8b0:	d105      	bne.n	800d8be <__libc_init_array+0x2e>
 800d8b2:	bd70      	pop	{r4, r5, r6, pc}
 800d8b4:	f855 3b04 	ldr.w	r3, [r5], #4
 800d8b8:	4798      	blx	r3
 800d8ba:	3601      	adds	r6, #1
 800d8bc:	e7ee      	b.n	800d89c <__libc_init_array+0xc>
 800d8be:	f855 3b04 	ldr.w	r3, [r5], #4
 800d8c2:	4798      	blx	r3
 800d8c4:	3601      	adds	r6, #1
 800d8c6:	e7f2      	b.n	800d8ae <__libc_init_array+0x1e>
 800d8c8:	08010b90 	.word	0x08010b90
 800d8cc:	08010b90 	.word	0x08010b90
 800d8d0:	08010b90 	.word	0x08010b90
 800d8d4:	08010b94 	.word	0x08010b94

0800d8d8 <memset>:
 800d8d8:	4402      	add	r2, r0
 800d8da:	4603      	mov	r3, r0
 800d8dc:	4293      	cmp	r3, r2
 800d8de:	d100      	bne.n	800d8e2 <memset+0xa>
 800d8e0:	4770      	bx	lr
 800d8e2:	f803 1b01 	strb.w	r1, [r3], #1
 800d8e6:	e7f9      	b.n	800d8dc <memset+0x4>

0800d8e8 <cos>:
 800d8e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d8ea:	ec53 2b10 	vmov	r2, r3, d0
 800d8ee:	4826      	ldr	r0, [pc, #152]	; (800d988 <cos+0xa0>)
 800d8f0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800d8f4:	4281      	cmp	r1, r0
 800d8f6:	dc06      	bgt.n	800d906 <cos+0x1e>
 800d8f8:	ed9f 1b21 	vldr	d1, [pc, #132]	; 800d980 <cos+0x98>
 800d8fc:	b005      	add	sp, #20
 800d8fe:	f85d eb04 	ldr.w	lr, [sp], #4
 800d902:	f001 bf69 	b.w	800f7d8 <__kernel_cos>
 800d906:	4821      	ldr	r0, [pc, #132]	; (800d98c <cos+0xa4>)
 800d908:	4281      	cmp	r1, r0
 800d90a:	dd09      	ble.n	800d920 <cos+0x38>
 800d90c:	ee10 0a10 	vmov	r0, s0
 800d910:	4619      	mov	r1, r3
 800d912:	f7f2 fc85 	bl	8000220 <__aeabi_dsub>
 800d916:	ec41 0b10 	vmov	d0, r0, r1
 800d91a:	b005      	add	sp, #20
 800d91c:	f85d fb04 	ldr.w	pc, [sp], #4
 800d920:	4668      	mov	r0, sp
 800d922:	f001 f9c9 	bl	800ecb8 <__ieee754_rem_pio2>
 800d926:	f000 0003 	and.w	r0, r0, #3
 800d92a:	2801      	cmp	r0, #1
 800d92c:	d00b      	beq.n	800d946 <cos+0x5e>
 800d92e:	2802      	cmp	r0, #2
 800d930:	d016      	beq.n	800d960 <cos+0x78>
 800d932:	b9e0      	cbnz	r0, 800d96e <cos+0x86>
 800d934:	ed9d 1b02 	vldr	d1, [sp, #8]
 800d938:	ed9d 0b00 	vldr	d0, [sp]
 800d93c:	f001 ff4c 	bl	800f7d8 <__kernel_cos>
 800d940:	ec51 0b10 	vmov	r0, r1, d0
 800d944:	e7e7      	b.n	800d916 <cos+0x2e>
 800d946:	ed9d 1b02 	vldr	d1, [sp, #8]
 800d94a:	ed9d 0b00 	vldr	d0, [sp]
 800d94e:	f002 fb5b 	bl	8010008 <__kernel_sin>
 800d952:	ec53 2b10 	vmov	r2, r3, d0
 800d956:	ee10 0a10 	vmov	r0, s0
 800d95a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800d95e:	e7da      	b.n	800d916 <cos+0x2e>
 800d960:	ed9d 1b02 	vldr	d1, [sp, #8]
 800d964:	ed9d 0b00 	vldr	d0, [sp]
 800d968:	f001 ff36 	bl	800f7d8 <__kernel_cos>
 800d96c:	e7f1      	b.n	800d952 <cos+0x6a>
 800d96e:	ed9d 1b02 	vldr	d1, [sp, #8]
 800d972:	ed9d 0b00 	vldr	d0, [sp]
 800d976:	2001      	movs	r0, #1
 800d978:	f002 fb46 	bl	8010008 <__kernel_sin>
 800d97c:	e7e0      	b.n	800d940 <cos+0x58>
 800d97e:	bf00      	nop
	...
 800d988:	3fe921fb 	.word	0x3fe921fb
 800d98c:	7fefffff 	.word	0x7fefffff

0800d990 <sin>:
 800d990:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d992:	ec53 2b10 	vmov	r2, r3, d0
 800d996:	4828      	ldr	r0, [pc, #160]	; (800da38 <sin+0xa8>)
 800d998:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800d99c:	4281      	cmp	r1, r0
 800d99e:	dc07      	bgt.n	800d9b0 <sin+0x20>
 800d9a0:	ed9f 1b23 	vldr	d1, [pc, #140]	; 800da30 <sin+0xa0>
 800d9a4:	2000      	movs	r0, #0
 800d9a6:	b005      	add	sp, #20
 800d9a8:	f85d eb04 	ldr.w	lr, [sp], #4
 800d9ac:	f002 bb2c 	b.w	8010008 <__kernel_sin>
 800d9b0:	4822      	ldr	r0, [pc, #136]	; (800da3c <sin+0xac>)
 800d9b2:	4281      	cmp	r1, r0
 800d9b4:	dd09      	ble.n	800d9ca <sin+0x3a>
 800d9b6:	ee10 0a10 	vmov	r0, s0
 800d9ba:	4619      	mov	r1, r3
 800d9bc:	f7f2 fc30 	bl	8000220 <__aeabi_dsub>
 800d9c0:	ec41 0b10 	vmov	d0, r0, r1
 800d9c4:	b005      	add	sp, #20
 800d9c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800d9ca:	4668      	mov	r0, sp
 800d9cc:	f001 f974 	bl	800ecb8 <__ieee754_rem_pio2>
 800d9d0:	f000 0003 	and.w	r0, r0, #3
 800d9d4:	2801      	cmp	r0, #1
 800d9d6:	d00c      	beq.n	800d9f2 <sin+0x62>
 800d9d8:	2802      	cmp	r0, #2
 800d9da:	d011      	beq.n	800da00 <sin+0x70>
 800d9dc:	b9f0      	cbnz	r0, 800da1c <sin+0x8c>
 800d9de:	ed9d 1b02 	vldr	d1, [sp, #8]
 800d9e2:	ed9d 0b00 	vldr	d0, [sp]
 800d9e6:	2001      	movs	r0, #1
 800d9e8:	f002 fb0e 	bl	8010008 <__kernel_sin>
 800d9ec:	ec51 0b10 	vmov	r0, r1, d0
 800d9f0:	e7e6      	b.n	800d9c0 <sin+0x30>
 800d9f2:	ed9d 1b02 	vldr	d1, [sp, #8]
 800d9f6:	ed9d 0b00 	vldr	d0, [sp]
 800d9fa:	f001 feed 	bl	800f7d8 <__kernel_cos>
 800d9fe:	e7f5      	b.n	800d9ec <sin+0x5c>
 800da00:	ed9d 1b02 	vldr	d1, [sp, #8]
 800da04:	ed9d 0b00 	vldr	d0, [sp]
 800da08:	2001      	movs	r0, #1
 800da0a:	f002 fafd 	bl	8010008 <__kernel_sin>
 800da0e:	ec53 2b10 	vmov	r2, r3, d0
 800da12:	ee10 0a10 	vmov	r0, s0
 800da16:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800da1a:	e7d1      	b.n	800d9c0 <sin+0x30>
 800da1c:	ed9d 1b02 	vldr	d1, [sp, #8]
 800da20:	ed9d 0b00 	vldr	d0, [sp]
 800da24:	f001 fed8 	bl	800f7d8 <__kernel_cos>
 800da28:	e7f1      	b.n	800da0e <sin+0x7e>
 800da2a:	bf00      	nop
 800da2c:	f3af 8000 	nop.w
	...
 800da38:	3fe921fb 	.word	0x3fe921fb
 800da3c:	7fefffff 	.word	0x7fefffff

0800da40 <asin>:
 800da40:	b538      	push	{r3, r4, r5, lr}
 800da42:	ed2d 8b02 	vpush	{d8}
 800da46:	ec55 4b10 	vmov	r4, r5, d0
 800da4a:	f000 f925 	bl	800dc98 <__ieee754_asin>
 800da4e:	4622      	mov	r2, r4
 800da50:	462b      	mov	r3, r5
 800da52:	4620      	mov	r0, r4
 800da54:	4629      	mov	r1, r5
 800da56:	eeb0 8a40 	vmov.f32	s16, s0
 800da5a:	eef0 8a60 	vmov.f32	s17, s1
 800da5e:	f7f3 f831 	bl	8000ac4 <__aeabi_dcmpun>
 800da62:	b9a8      	cbnz	r0, 800da90 <asin+0x50>
 800da64:	ec45 4b10 	vmov	d0, r4, r5
 800da68:	f002 fd7e 	bl	8010568 <fabs>
 800da6c:	4b0c      	ldr	r3, [pc, #48]	; (800daa0 <asin+0x60>)
 800da6e:	ec51 0b10 	vmov	r0, r1, d0
 800da72:	2200      	movs	r2, #0
 800da74:	f7f3 f81c 	bl	8000ab0 <__aeabi_dcmpgt>
 800da78:	b150      	cbz	r0, 800da90 <asin+0x50>
 800da7a:	f7ff ff03 	bl	800d884 <__errno>
 800da7e:	ecbd 8b02 	vpop	{d8}
 800da82:	2321      	movs	r3, #33	; 0x21
 800da84:	6003      	str	r3, [r0, #0]
 800da86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800da8a:	4806      	ldr	r0, [pc, #24]	; (800daa4 <asin+0x64>)
 800da8c:	f002 be00 	b.w	8010690 <nan>
 800da90:	eeb0 0a48 	vmov.f32	s0, s16
 800da94:	eef0 0a68 	vmov.f32	s1, s17
 800da98:	ecbd 8b02 	vpop	{d8}
 800da9c:	bd38      	pop	{r3, r4, r5, pc}
 800da9e:	bf00      	nop
 800daa0:	3ff00000 	.word	0x3ff00000
 800daa4:	080108f0 	.word	0x080108f0

0800daa8 <atan2>:
 800daa8:	f000 bb0a 	b.w	800e0c0 <__ieee754_atan2>

0800daac <pow>:
 800daac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800daae:	ed2d 8b02 	vpush	{d8}
 800dab2:	eeb0 8a40 	vmov.f32	s16, s0
 800dab6:	eef0 8a60 	vmov.f32	s17, s1
 800daba:	ec55 4b11 	vmov	r4, r5, d1
 800dabe:	f000 fbcb 	bl	800e258 <__ieee754_pow>
 800dac2:	4622      	mov	r2, r4
 800dac4:	462b      	mov	r3, r5
 800dac6:	4620      	mov	r0, r4
 800dac8:	4629      	mov	r1, r5
 800daca:	ec57 6b10 	vmov	r6, r7, d0
 800dace:	f7f2 fff9 	bl	8000ac4 <__aeabi_dcmpun>
 800dad2:	2800      	cmp	r0, #0
 800dad4:	d13b      	bne.n	800db4e <pow+0xa2>
 800dad6:	ec51 0b18 	vmov	r0, r1, d8
 800dada:	2200      	movs	r2, #0
 800dadc:	2300      	movs	r3, #0
 800dade:	f7f2 ffbf 	bl	8000a60 <__aeabi_dcmpeq>
 800dae2:	b1b8      	cbz	r0, 800db14 <pow+0x68>
 800dae4:	2200      	movs	r2, #0
 800dae6:	2300      	movs	r3, #0
 800dae8:	4620      	mov	r0, r4
 800daea:	4629      	mov	r1, r5
 800daec:	f7f2 ffb8 	bl	8000a60 <__aeabi_dcmpeq>
 800daf0:	2800      	cmp	r0, #0
 800daf2:	d146      	bne.n	800db82 <pow+0xd6>
 800daf4:	ec45 4b10 	vmov	d0, r4, r5
 800daf8:	f002 fd3f 	bl	801057a <finite>
 800dafc:	b338      	cbz	r0, 800db4e <pow+0xa2>
 800dafe:	2200      	movs	r2, #0
 800db00:	2300      	movs	r3, #0
 800db02:	4620      	mov	r0, r4
 800db04:	4629      	mov	r1, r5
 800db06:	f7f2 ffb5 	bl	8000a74 <__aeabi_dcmplt>
 800db0a:	b300      	cbz	r0, 800db4e <pow+0xa2>
 800db0c:	f7ff feba 	bl	800d884 <__errno>
 800db10:	2322      	movs	r3, #34	; 0x22
 800db12:	e01b      	b.n	800db4c <pow+0xa0>
 800db14:	ec47 6b10 	vmov	d0, r6, r7
 800db18:	f002 fd2f 	bl	801057a <finite>
 800db1c:	b9e0      	cbnz	r0, 800db58 <pow+0xac>
 800db1e:	eeb0 0a48 	vmov.f32	s0, s16
 800db22:	eef0 0a68 	vmov.f32	s1, s17
 800db26:	f002 fd28 	bl	801057a <finite>
 800db2a:	b1a8      	cbz	r0, 800db58 <pow+0xac>
 800db2c:	ec45 4b10 	vmov	d0, r4, r5
 800db30:	f002 fd23 	bl	801057a <finite>
 800db34:	b180      	cbz	r0, 800db58 <pow+0xac>
 800db36:	4632      	mov	r2, r6
 800db38:	463b      	mov	r3, r7
 800db3a:	4630      	mov	r0, r6
 800db3c:	4639      	mov	r1, r7
 800db3e:	f7f2 ffc1 	bl	8000ac4 <__aeabi_dcmpun>
 800db42:	2800      	cmp	r0, #0
 800db44:	d0e2      	beq.n	800db0c <pow+0x60>
 800db46:	f7ff fe9d 	bl	800d884 <__errno>
 800db4a:	2321      	movs	r3, #33	; 0x21
 800db4c:	6003      	str	r3, [r0, #0]
 800db4e:	ecbd 8b02 	vpop	{d8}
 800db52:	ec47 6b10 	vmov	d0, r6, r7
 800db56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800db58:	2200      	movs	r2, #0
 800db5a:	2300      	movs	r3, #0
 800db5c:	4630      	mov	r0, r6
 800db5e:	4639      	mov	r1, r7
 800db60:	f7f2 ff7e 	bl	8000a60 <__aeabi_dcmpeq>
 800db64:	2800      	cmp	r0, #0
 800db66:	d0f2      	beq.n	800db4e <pow+0xa2>
 800db68:	eeb0 0a48 	vmov.f32	s0, s16
 800db6c:	eef0 0a68 	vmov.f32	s1, s17
 800db70:	f002 fd03 	bl	801057a <finite>
 800db74:	2800      	cmp	r0, #0
 800db76:	d0ea      	beq.n	800db4e <pow+0xa2>
 800db78:	ec45 4b10 	vmov	d0, r4, r5
 800db7c:	f002 fcfd 	bl	801057a <finite>
 800db80:	e7c3      	b.n	800db0a <pow+0x5e>
 800db82:	4f01      	ldr	r7, [pc, #4]	; (800db88 <pow+0xdc>)
 800db84:	2600      	movs	r6, #0
 800db86:	e7e2      	b.n	800db4e <pow+0xa2>
 800db88:	3ff00000 	.word	0x3ff00000

0800db8c <sqrt>:
 800db8c:	b538      	push	{r3, r4, r5, lr}
 800db8e:	ed2d 8b02 	vpush	{d8}
 800db92:	ec55 4b10 	vmov	r4, r5, d0
 800db96:	f001 fa9b 	bl	800f0d0 <__ieee754_sqrt>
 800db9a:	4622      	mov	r2, r4
 800db9c:	462b      	mov	r3, r5
 800db9e:	4620      	mov	r0, r4
 800dba0:	4629      	mov	r1, r5
 800dba2:	eeb0 8a40 	vmov.f32	s16, s0
 800dba6:	eef0 8a60 	vmov.f32	s17, s1
 800dbaa:	f7f2 ff8b 	bl	8000ac4 <__aeabi_dcmpun>
 800dbae:	b990      	cbnz	r0, 800dbd6 <sqrt+0x4a>
 800dbb0:	2200      	movs	r2, #0
 800dbb2:	2300      	movs	r3, #0
 800dbb4:	4620      	mov	r0, r4
 800dbb6:	4629      	mov	r1, r5
 800dbb8:	f7f2 ff5c 	bl	8000a74 <__aeabi_dcmplt>
 800dbbc:	b158      	cbz	r0, 800dbd6 <sqrt+0x4a>
 800dbbe:	f7ff fe61 	bl	800d884 <__errno>
 800dbc2:	2321      	movs	r3, #33	; 0x21
 800dbc4:	6003      	str	r3, [r0, #0]
 800dbc6:	2200      	movs	r2, #0
 800dbc8:	2300      	movs	r3, #0
 800dbca:	4610      	mov	r0, r2
 800dbcc:	4619      	mov	r1, r3
 800dbce:	f7f2 fe09 	bl	80007e4 <__aeabi_ddiv>
 800dbd2:	ec41 0b18 	vmov	d8, r0, r1
 800dbd6:	eeb0 0a48 	vmov.f32	s0, s16
 800dbda:	eef0 0a68 	vmov.f32	s1, s17
 800dbde:	ecbd 8b02 	vpop	{d8}
 800dbe2:	bd38      	pop	{r3, r4, r5, pc}

0800dbe4 <powf>:
 800dbe4:	b508      	push	{r3, lr}
 800dbe6:	ed2d 8b04 	vpush	{d8-d9}
 800dbea:	eeb0 8a60 	vmov.f32	s16, s1
 800dbee:	eeb0 9a40 	vmov.f32	s18, s0
 800dbf2:	f001 fb1f 	bl	800f234 <__ieee754_powf>
 800dbf6:	eeb4 8a48 	vcmp.f32	s16, s16
 800dbfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dbfe:	eef0 8a40 	vmov.f32	s17, s0
 800dc02:	d63e      	bvs.n	800dc82 <powf+0x9e>
 800dc04:	eeb5 9a40 	vcmp.f32	s18, #0.0
 800dc08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc0c:	d112      	bne.n	800dc34 <powf+0x50>
 800dc0e:	eeb5 8a40 	vcmp.f32	s16, #0.0
 800dc12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc16:	d039      	beq.n	800dc8c <powf+0xa8>
 800dc18:	eeb0 0a48 	vmov.f32	s0, s16
 800dc1c:	f002 fdcd 	bl	80107ba <finitef>
 800dc20:	b378      	cbz	r0, 800dc82 <powf+0x9e>
 800dc22:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800dc26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc2a:	d52a      	bpl.n	800dc82 <powf+0x9e>
 800dc2c:	f7ff fe2a 	bl	800d884 <__errno>
 800dc30:	2322      	movs	r3, #34	; 0x22
 800dc32:	e014      	b.n	800dc5e <powf+0x7a>
 800dc34:	f002 fdc1 	bl	80107ba <finitef>
 800dc38:	b998      	cbnz	r0, 800dc62 <powf+0x7e>
 800dc3a:	eeb0 0a49 	vmov.f32	s0, s18
 800dc3e:	f002 fdbc 	bl	80107ba <finitef>
 800dc42:	b170      	cbz	r0, 800dc62 <powf+0x7e>
 800dc44:	eeb0 0a48 	vmov.f32	s0, s16
 800dc48:	f002 fdb7 	bl	80107ba <finitef>
 800dc4c:	b148      	cbz	r0, 800dc62 <powf+0x7e>
 800dc4e:	eef4 8a68 	vcmp.f32	s17, s17
 800dc52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc56:	d7e9      	bvc.n	800dc2c <powf+0x48>
 800dc58:	f7ff fe14 	bl	800d884 <__errno>
 800dc5c:	2321      	movs	r3, #33	; 0x21
 800dc5e:	6003      	str	r3, [r0, #0]
 800dc60:	e00f      	b.n	800dc82 <powf+0x9e>
 800dc62:	eef5 8a40 	vcmp.f32	s17, #0.0
 800dc66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dc6a:	d10a      	bne.n	800dc82 <powf+0x9e>
 800dc6c:	eeb0 0a49 	vmov.f32	s0, s18
 800dc70:	f002 fda3 	bl	80107ba <finitef>
 800dc74:	b128      	cbz	r0, 800dc82 <powf+0x9e>
 800dc76:	eeb0 0a48 	vmov.f32	s0, s16
 800dc7a:	f002 fd9e 	bl	80107ba <finitef>
 800dc7e:	2800      	cmp	r0, #0
 800dc80:	d1d4      	bne.n	800dc2c <powf+0x48>
 800dc82:	eeb0 0a68 	vmov.f32	s0, s17
 800dc86:	ecbd 8b04 	vpop	{d8-d9}
 800dc8a:	bd08      	pop	{r3, pc}
 800dc8c:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 800dc90:	e7f7      	b.n	800dc82 <powf+0x9e>
 800dc92:	0000      	movs	r0, r0
 800dc94:	0000      	movs	r0, r0
	...

0800dc98 <__ieee754_asin>:
 800dc98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc9c:	ed2d 8b04 	vpush	{d8-d9}
 800dca0:	ec55 4b10 	vmov	r4, r5, d0
 800dca4:	4bcc      	ldr	r3, [pc, #816]	; (800dfd8 <__ieee754_asin+0x340>)
 800dca6:	b083      	sub	sp, #12
 800dca8:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800dcac:	4598      	cmp	r8, r3
 800dcae:	9501      	str	r5, [sp, #4]
 800dcb0:	dd35      	ble.n	800dd1e <__ieee754_asin+0x86>
 800dcb2:	ee10 3a10 	vmov	r3, s0
 800dcb6:	f108 4840 	add.w	r8, r8, #3221225472	; 0xc0000000
 800dcba:	f508 1880 	add.w	r8, r8, #1048576	; 0x100000
 800dcbe:	ea58 0303 	orrs.w	r3, r8, r3
 800dcc2:	d117      	bne.n	800dcf4 <__ieee754_asin+0x5c>
 800dcc4:	a3aa      	add	r3, pc, #680	; (adr r3, 800df70 <__ieee754_asin+0x2d8>)
 800dcc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dcca:	ee10 0a10 	vmov	r0, s0
 800dcce:	4629      	mov	r1, r5
 800dcd0:	f7f2 fc5e 	bl	8000590 <__aeabi_dmul>
 800dcd4:	a3a8      	add	r3, pc, #672	; (adr r3, 800df78 <__ieee754_asin+0x2e0>)
 800dcd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dcda:	4606      	mov	r6, r0
 800dcdc:	460f      	mov	r7, r1
 800dcde:	4620      	mov	r0, r4
 800dce0:	4629      	mov	r1, r5
 800dce2:	f7f2 fc55 	bl	8000590 <__aeabi_dmul>
 800dce6:	4602      	mov	r2, r0
 800dce8:	460b      	mov	r3, r1
 800dcea:	4630      	mov	r0, r6
 800dcec:	4639      	mov	r1, r7
 800dcee:	f7f2 fa99 	bl	8000224 <__adddf3>
 800dcf2:	e00b      	b.n	800dd0c <__ieee754_asin+0x74>
 800dcf4:	ee10 2a10 	vmov	r2, s0
 800dcf8:	462b      	mov	r3, r5
 800dcfa:	ee10 0a10 	vmov	r0, s0
 800dcfe:	4629      	mov	r1, r5
 800dd00:	f7f2 fa8e 	bl	8000220 <__aeabi_dsub>
 800dd04:	4602      	mov	r2, r0
 800dd06:	460b      	mov	r3, r1
 800dd08:	f7f2 fd6c 	bl	80007e4 <__aeabi_ddiv>
 800dd0c:	4604      	mov	r4, r0
 800dd0e:	460d      	mov	r5, r1
 800dd10:	ec45 4b10 	vmov	d0, r4, r5
 800dd14:	b003      	add	sp, #12
 800dd16:	ecbd 8b04 	vpop	{d8-d9}
 800dd1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd1e:	4baf      	ldr	r3, [pc, #700]	; (800dfdc <__ieee754_asin+0x344>)
 800dd20:	4598      	cmp	r8, r3
 800dd22:	dc11      	bgt.n	800dd48 <__ieee754_asin+0xb0>
 800dd24:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 800dd28:	f280 80ae 	bge.w	800de88 <__ieee754_asin+0x1f0>
 800dd2c:	a394      	add	r3, pc, #592	; (adr r3, 800df80 <__ieee754_asin+0x2e8>)
 800dd2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd32:	ee10 0a10 	vmov	r0, s0
 800dd36:	4629      	mov	r1, r5
 800dd38:	f7f2 fa74 	bl	8000224 <__adddf3>
 800dd3c:	4ba8      	ldr	r3, [pc, #672]	; (800dfe0 <__ieee754_asin+0x348>)
 800dd3e:	2200      	movs	r2, #0
 800dd40:	f7f2 feb6 	bl	8000ab0 <__aeabi_dcmpgt>
 800dd44:	2800      	cmp	r0, #0
 800dd46:	d1e3      	bne.n	800dd10 <__ieee754_asin+0x78>
 800dd48:	ec45 4b10 	vmov	d0, r4, r5
 800dd4c:	f002 fc0c 	bl	8010568 <fabs>
 800dd50:	49a3      	ldr	r1, [pc, #652]	; (800dfe0 <__ieee754_asin+0x348>)
 800dd52:	ec53 2b10 	vmov	r2, r3, d0
 800dd56:	2000      	movs	r0, #0
 800dd58:	f7f2 fa62 	bl	8000220 <__aeabi_dsub>
 800dd5c:	4ba1      	ldr	r3, [pc, #644]	; (800dfe4 <__ieee754_asin+0x34c>)
 800dd5e:	2200      	movs	r2, #0
 800dd60:	f7f2 fc16 	bl	8000590 <__aeabi_dmul>
 800dd64:	a388      	add	r3, pc, #544	; (adr r3, 800df88 <__ieee754_asin+0x2f0>)
 800dd66:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd6a:	4604      	mov	r4, r0
 800dd6c:	460d      	mov	r5, r1
 800dd6e:	f7f2 fc0f 	bl	8000590 <__aeabi_dmul>
 800dd72:	a387      	add	r3, pc, #540	; (adr r3, 800df90 <__ieee754_asin+0x2f8>)
 800dd74:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd78:	f7f2 fa54 	bl	8000224 <__adddf3>
 800dd7c:	4622      	mov	r2, r4
 800dd7e:	462b      	mov	r3, r5
 800dd80:	f7f2 fc06 	bl	8000590 <__aeabi_dmul>
 800dd84:	a384      	add	r3, pc, #528	; (adr r3, 800df98 <__ieee754_asin+0x300>)
 800dd86:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd8a:	f7f2 fa49 	bl	8000220 <__aeabi_dsub>
 800dd8e:	4622      	mov	r2, r4
 800dd90:	462b      	mov	r3, r5
 800dd92:	f7f2 fbfd 	bl	8000590 <__aeabi_dmul>
 800dd96:	a382      	add	r3, pc, #520	; (adr r3, 800dfa0 <__ieee754_asin+0x308>)
 800dd98:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd9c:	f7f2 fa42 	bl	8000224 <__adddf3>
 800dda0:	4622      	mov	r2, r4
 800dda2:	462b      	mov	r3, r5
 800dda4:	f7f2 fbf4 	bl	8000590 <__aeabi_dmul>
 800dda8:	a37f      	add	r3, pc, #508	; (adr r3, 800dfa8 <__ieee754_asin+0x310>)
 800ddaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ddae:	f7f2 fa37 	bl	8000220 <__aeabi_dsub>
 800ddb2:	4622      	mov	r2, r4
 800ddb4:	462b      	mov	r3, r5
 800ddb6:	f7f2 fbeb 	bl	8000590 <__aeabi_dmul>
 800ddba:	a37d      	add	r3, pc, #500	; (adr r3, 800dfb0 <__ieee754_asin+0x318>)
 800ddbc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ddc0:	f7f2 fa30 	bl	8000224 <__adddf3>
 800ddc4:	4622      	mov	r2, r4
 800ddc6:	462b      	mov	r3, r5
 800ddc8:	f7f2 fbe2 	bl	8000590 <__aeabi_dmul>
 800ddcc:	a37a      	add	r3, pc, #488	; (adr r3, 800dfb8 <__ieee754_asin+0x320>)
 800ddce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ddd2:	ec41 0b18 	vmov	d8, r0, r1
 800ddd6:	4620      	mov	r0, r4
 800ddd8:	4629      	mov	r1, r5
 800ddda:	f7f2 fbd9 	bl	8000590 <__aeabi_dmul>
 800ddde:	a378      	add	r3, pc, #480	; (adr r3, 800dfc0 <__ieee754_asin+0x328>)
 800dde0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dde4:	f7f2 fa1c 	bl	8000220 <__aeabi_dsub>
 800dde8:	4622      	mov	r2, r4
 800ddea:	462b      	mov	r3, r5
 800ddec:	f7f2 fbd0 	bl	8000590 <__aeabi_dmul>
 800ddf0:	a375      	add	r3, pc, #468	; (adr r3, 800dfc8 <__ieee754_asin+0x330>)
 800ddf2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ddf6:	f7f2 fa15 	bl	8000224 <__adddf3>
 800ddfa:	4622      	mov	r2, r4
 800ddfc:	462b      	mov	r3, r5
 800ddfe:	f7f2 fbc7 	bl	8000590 <__aeabi_dmul>
 800de02:	a373      	add	r3, pc, #460	; (adr r3, 800dfd0 <__ieee754_asin+0x338>)
 800de04:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de08:	f7f2 fa0a 	bl	8000220 <__aeabi_dsub>
 800de0c:	4622      	mov	r2, r4
 800de0e:	462b      	mov	r3, r5
 800de10:	f7f2 fbbe 	bl	8000590 <__aeabi_dmul>
 800de14:	4b72      	ldr	r3, [pc, #456]	; (800dfe0 <__ieee754_asin+0x348>)
 800de16:	2200      	movs	r2, #0
 800de18:	f7f2 fa04 	bl	8000224 <__adddf3>
 800de1c:	ec45 4b10 	vmov	d0, r4, r5
 800de20:	4606      	mov	r6, r0
 800de22:	460f      	mov	r7, r1
 800de24:	f001 f954 	bl	800f0d0 <__ieee754_sqrt>
 800de28:	4b6f      	ldr	r3, [pc, #444]	; (800dfe8 <__ieee754_asin+0x350>)
 800de2a:	4598      	cmp	r8, r3
 800de2c:	ec5b ab10 	vmov	sl, fp, d0
 800de30:	f340 80dc 	ble.w	800dfec <__ieee754_asin+0x354>
 800de34:	4632      	mov	r2, r6
 800de36:	463b      	mov	r3, r7
 800de38:	ec51 0b18 	vmov	r0, r1, d8
 800de3c:	f7f2 fcd2 	bl	80007e4 <__aeabi_ddiv>
 800de40:	4652      	mov	r2, sl
 800de42:	465b      	mov	r3, fp
 800de44:	f7f2 fba4 	bl	8000590 <__aeabi_dmul>
 800de48:	4652      	mov	r2, sl
 800de4a:	465b      	mov	r3, fp
 800de4c:	f7f2 f9ea 	bl	8000224 <__adddf3>
 800de50:	4602      	mov	r2, r0
 800de52:	460b      	mov	r3, r1
 800de54:	f7f2 f9e6 	bl	8000224 <__adddf3>
 800de58:	a347      	add	r3, pc, #284	; (adr r3, 800df78 <__ieee754_asin+0x2e0>)
 800de5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de5e:	f7f2 f9df 	bl	8000220 <__aeabi_dsub>
 800de62:	4602      	mov	r2, r0
 800de64:	460b      	mov	r3, r1
 800de66:	a142      	add	r1, pc, #264	; (adr r1, 800df70 <__ieee754_asin+0x2d8>)
 800de68:	e9d1 0100 	ldrd	r0, r1, [r1]
 800de6c:	f7f2 f9d8 	bl	8000220 <__aeabi_dsub>
 800de70:	9b01      	ldr	r3, [sp, #4]
 800de72:	2b00      	cmp	r3, #0
 800de74:	bfdc      	itt	le
 800de76:	4602      	movle	r2, r0
 800de78:	f101 4300 	addle.w	r3, r1, #2147483648	; 0x80000000
 800de7c:	4604      	mov	r4, r0
 800de7e:	460d      	mov	r5, r1
 800de80:	bfdc      	itt	le
 800de82:	4614      	movle	r4, r2
 800de84:	461d      	movle	r5, r3
 800de86:	e743      	b.n	800dd10 <__ieee754_asin+0x78>
 800de88:	ee10 2a10 	vmov	r2, s0
 800de8c:	ee10 0a10 	vmov	r0, s0
 800de90:	462b      	mov	r3, r5
 800de92:	4629      	mov	r1, r5
 800de94:	f7f2 fb7c 	bl	8000590 <__aeabi_dmul>
 800de98:	a33b      	add	r3, pc, #236	; (adr r3, 800df88 <__ieee754_asin+0x2f0>)
 800de9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de9e:	4606      	mov	r6, r0
 800dea0:	460f      	mov	r7, r1
 800dea2:	f7f2 fb75 	bl	8000590 <__aeabi_dmul>
 800dea6:	a33a      	add	r3, pc, #232	; (adr r3, 800df90 <__ieee754_asin+0x2f8>)
 800dea8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800deac:	f7f2 f9ba 	bl	8000224 <__adddf3>
 800deb0:	4632      	mov	r2, r6
 800deb2:	463b      	mov	r3, r7
 800deb4:	f7f2 fb6c 	bl	8000590 <__aeabi_dmul>
 800deb8:	a337      	add	r3, pc, #220	; (adr r3, 800df98 <__ieee754_asin+0x300>)
 800deba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800debe:	f7f2 f9af 	bl	8000220 <__aeabi_dsub>
 800dec2:	4632      	mov	r2, r6
 800dec4:	463b      	mov	r3, r7
 800dec6:	f7f2 fb63 	bl	8000590 <__aeabi_dmul>
 800deca:	a335      	add	r3, pc, #212	; (adr r3, 800dfa0 <__ieee754_asin+0x308>)
 800decc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ded0:	f7f2 f9a8 	bl	8000224 <__adddf3>
 800ded4:	4632      	mov	r2, r6
 800ded6:	463b      	mov	r3, r7
 800ded8:	f7f2 fb5a 	bl	8000590 <__aeabi_dmul>
 800dedc:	a332      	add	r3, pc, #200	; (adr r3, 800dfa8 <__ieee754_asin+0x310>)
 800dede:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dee2:	f7f2 f99d 	bl	8000220 <__aeabi_dsub>
 800dee6:	4632      	mov	r2, r6
 800dee8:	463b      	mov	r3, r7
 800deea:	f7f2 fb51 	bl	8000590 <__aeabi_dmul>
 800deee:	a330      	add	r3, pc, #192	; (adr r3, 800dfb0 <__ieee754_asin+0x318>)
 800def0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800def4:	f7f2 f996 	bl	8000224 <__adddf3>
 800def8:	4632      	mov	r2, r6
 800defa:	463b      	mov	r3, r7
 800defc:	f7f2 fb48 	bl	8000590 <__aeabi_dmul>
 800df00:	a32d      	add	r3, pc, #180	; (adr r3, 800dfb8 <__ieee754_asin+0x320>)
 800df02:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df06:	4680      	mov	r8, r0
 800df08:	4689      	mov	r9, r1
 800df0a:	4630      	mov	r0, r6
 800df0c:	4639      	mov	r1, r7
 800df0e:	f7f2 fb3f 	bl	8000590 <__aeabi_dmul>
 800df12:	a32b      	add	r3, pc, #172	; (adr r3, 800dfc0 <__ieee754_asin+0x328>)
 800df14:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df18:	f7f2 f982 	bl	8000220 <__aeabi_dsub>
 800df1c:	4632      	mov	r2, r6
 800df1e:	463b      	mov	r3, r7
 800df20:	f7f2 fb36 	bl	8000590 <__aeabi_dmul>
 800df24:	a328      	add	r3, pc, #160	; (adr r3, 800dfc8 <__ieee754_asin+0x330>)
 800df26:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df2a:	f7f2 f97b 	bl	8000224 <__adddf3>
 800df2e:	4632      	mov	r2, r6
 800df30:	463b      	mov	r3, r7
 800df32:	f7f2 fb2d 	bl	8000590 <__aeabi_dmul>
 800df36:	a326      	add	r3, pc, #152	; (adr r3, 800dfd0 <__ieee754_asin+0x338>)
 800df38:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df3c:	f7f2 f970 	bl	8000220 <__aeabi_dsub>
 800df40:	4632      	mov	r2, r6
 800df42:	463b      	mov	r3, r7
 800df44:	f7f2 fb24 	bl	8000590 <__aeabi_dmul>
 800df48:	4b25      	ldr	r3, [pc, #148]	; (800dfe0 <__ieee754_asin+0x348>)
 800df4a:	2200      	movs	r2, #0
 800df4c:	f7f2 f96a 	bl	8000224 <__adddf3>
 800df50:	4602      	mov	r2, r0
 800df52:	460b      	mov	r3, r1
 800df54:	4640      	mov	r0, r8
 800df56:	4649      	mov	r1, r9
 800df58:	f7f2 fc44 	bl	80007e4 <__aeabi_ddiv>
 800df5c:	4622      	mov	r2, r4
 800df5e:	462b      	mov	r3, r5
 800df60:	f7f2 fb16 	bl	8000590 <__aeabi_dmul>
 800df64:	4602      	mov	r2, r0
 800df66:	460b      	mov	r3, r1
 800df68:	4620      	mov	r0, r4
 800df6a:	4629      	mov	r1, r5
 800df6c:	e6bf      	b.n	800dcee <__ieee754_asin+0x56>
 800df6e:	bf00      	nop
 800df70:	54442d18 	.word	0x54442d18
 800df74:	3ff921fb 	.word	0x3ff921fb
 800df78:	33145c07 	.word	0x33145c07
 800df7c:	3c91a626 	.word	0x3c91a626
 800df80:	8800759c 	.word	0x8800759c
 800df84:	7e37e43c 	.word	0x7e37e43c
 800df88:	0dfdf709 	.word	0x0dfdf709
 800df8c:	3f023de1 	.word	0x3f023de1
 800df90:	7501b288 	.word	0x7501b288
 800df94:	3f49efe0 	.word	0x3f49efe0
 800df98:	b5688f3b 	.word	0xb5688f3b
 800df9c:	3fa48228 	.word	0x3fa48228
 800dfa0:	0e884455 	.word	0x0e884455
 800dfa4:	3fc9c155 	.word	0x3fc9c155
 800dfa8:	03eb6f7d 	.word	0x03eb6f7d
 800dfac:	3fd4d612 	.word	0x3fd4d612
 800dfb0:	55555555 	.word	0x55555555
 800dfb4:	3fc55555 	.word	0x3fc55555
 800dfb8:	b12e9282 	.word	0xb12e9282
 800dfbc:	3fb3b8c5 	.word	0x3fb3b8c5
 800dfc0:	1b8d0159 	.word	0x1b8d0159
 800dfc4:	3fe6066c 	.word	0x3fe6066c
 800dfc8:	9c598ac8 	.word	0x9c598ac8
 800dfcc:	40002ae5 	.word	0x40002ae5
 800dfd0:	1c8a2d4b 	.word	0x1c8a2d4b
 800dfd4:	40033a27 	.word	0x40033a27
 800dfd8:	3fefffff 	.word	0x3fefffff
 800dfdc:	3fdfffff 	.word	0x3fdfffff
 800dfe0:	3ff00000 	.word	0x3ff00000
 800dfe4:	3fe00000 	.word	0x3fe00000
 800dfe8:	3fef3332 	.word	0x3fef3332
 800dfec:	ee10 2a10 	vmov	r2, s0
 800dff0:	ee10 0a10 	vmov	r0, s0
 800dff4:	465b      	mov	r3, fp
 800dff6:	4659      	mov	r1, fp
 800dff8:	f7f2 f914 	bl	8000224 <__adddf3>
 800dffc:	4632      	mov	r2, r6
 800dffe:	463b      	mov	r3, r7
 800e000:	ec41 0b19 	vmov	d9, r0, r1
 800e004:	ec51 0b18 	vmov	r0, r1, d8
 800e008:	f7f2 fbec 	bl	80007e4 <__aeabi_ddiv>
 800e00c:	4602      	mov	r2, r0
 800e00e:	460b      	mov	r3, r1
 800e010:	ec51 0b19 	vmov	r0, r1, d9
 800e014:	f7f2 fabc 	bl	8000590 <__aeabi_dmul>
 800e018:	f04f 0800 	mov.w	r8, #0
 800e01c:	4606      	mov	r6, r0
 800e01e:	460f      	mov	r7, r1
 800e020:	4642      	mov	r2, r8
 800e022:	465b      	mov	r3, fp
 800e024:	4640      	mov	r0, r8
 800e026:	4659      	mov	r1, fp
 800e028:	f7f2 fab2 	bl	8000590 <__aeabi_dmul>
 800e02c:	4602      	mov	r2, r0
 800e02e:	460b      	mov	r3, r1
 800e030:	4620      	mov	r0, r4
 800e032:	4629      	mov	r1, r5
 800e034:	f7f2 f8f4 	bl	8000220 <__aeabi_dsub>
 800e038:	4642      	mov	r2, r8
 800e03a:	4604      	mov	r4, r0
 800e03c:	460d      	mov	r5, r1
 800e03e:	465b      	mov	r3, fp
 800e040:	4650      	mov	r0, sl
 800e042:	4659      	mov	r1, fp
 800e044:	f7f2 f8ee 	bl	8000224 <__adddf3>
 800e048:	4602      	mov	r2, r0
 800e04a:	460b      	mov	r3, r1
 800e04c:	4620      	mov	r0, r4
 800e04e:	4629      	mov	r1, r5
 800e050:	f7f2 fbc8 	bl	80007e4 <__aeabi_ddiv>
 800e054:	4602      	mov	r2, r0
 800e056:	460b      	mov	r3, r1
 800e058:	f7f2 f8e4 	bl	8000224 <__adddf3>
 800e05c:	4602      	mov	r2, r0
 800e05e:	460b      	mov	r3, r1
 800e060:	a113      	add	r1, pc, #76	; (adr r1, 800e0b0 <__ieee754_asin+0x418>)
 800e062:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e066:	f7f2 f8db 	bl	8000220 <__aeabi_dsub>
 800e06a:	4602      	mov	r2, r0
 800e06c:	460b      	mov	r3, r1
 800e06e:	4630      	mov	r0, r6
 800e070:	4639      	mov	r1, r7
 800e072:	f7f2 f8d5 	bl	8000220 <__aeabi_dsub>
 800e076:	4642      	mov	r2, r8
 800e078:	4604      	mov	r4, r0
 800e07a:	460d      	mov	r5, r1
 800e07c:	465b      	mov	r3, fp
 800e07e:	4640      	mov	r0, r8
 800e080:	4659      	mov	r1, fp
 800e082:	f7f2 f8cf 	bl	8000224 <__adddf3>
 800e086:	4602      	mov	r2, r0
 800e088:	460b      	mov	r3, r1
 800e08a:	a10b      	add	r1, pc, #44	; (adr r1, 800e0b8 <__ieee754_asin+0x420>)
 800e08c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e090:	f7f2 f8c6 	bl	8000220 <__aeabi_dsub>
 800e094:	4602      	mov	r2, r0
 800e096:	460b      	mov	r3, r1
 800e098:	4620      	mov	r0, r4
 800e09a:	4629      	mov	r1, r5
 800e09c:	f7f2 f8c0 	bl	8000220 <__aeabi_dsub>
 800e0a0:	4602      	mov	r2, r0
 800e0a2:	460b      	mov	r3, r1
 800e0a4:	a104      	add	r1, pc, #16	; (adr r1, 800e0b8 <__ieee754_asin+0x420>)
 800e0a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e0aa:	e6df      	b.n	800de6c <__ieee754_asin+0x1d4>
 800e0ac:	f3af 8000 	nop.w
 800e0b0:	33145c07 	.word	0x33145c07
 800e0b4:	3c91a626 	.word	0x3c91a626
 800e0b8:	54442d18 	.word	0x54442d18
 800e0bc:	3fe921fb 	.word	0x3fe921fb

0800e0c0 <__ieee754_atan2>:
 800e0c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e0c4:	ec57 6b11 	vmov	r6, r7, d1
 800e0c8:	4273      	negs	r3, r6
 800e0ca:	f8df e184 	ldr.w	lr, [pc, #388]	; 800e250 <__ieee754_atan2+0x190>
 800e0ce:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 800e0d2:	4333      	orrs	r3, r6
 800e0d4:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 800e0d8:	4573      	cmp	r3, lr
 800e0da:	ec51 0b10 	vmov	r0, r1, d0
 800e0de:	ee11 8a10 	vmov	r8, s2
 800e0e2:	d80a      	bhi.n	800e0fa <__ieee754_atan2+0x3a>
 800e0e4:	4244      	negs	r4, r0
 800e0e6:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800e0ea:	4304      	orrs	r4, r0
 800e0ec:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 800e0f0:	4574      	cmp	r4, lr
 800e0f2:	ee10 9a10 	vmov	r9, s0
 800e0f6:	468c      	mov	ip, r1
 800e0f8:	d907      	bls.n	800e10a <__ieee754_atan2+0x4a>
 800e0fa:	4632      	mov	r2, r6
 800e0fc:	463b      	mov	r3, r7
 800e0fe:	f7f2 f891 	bl	8000224 <__adddf3>
 800e102:	ec41 0b10 	vmov	d0, r0, r1
 800e106:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e10a:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 800e10e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800e112:	4334      	orrs	r4, r6
 800e114:	d103      	bne.n	800e11e <__ieee754_atan2+0x5e>
 800e116:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e11a:	f002 b885 	b.w	8010228 <atan>
 800e11e:	17bc      	asrs	r4, r7, #30
 800e120:	f004 0402 	and.w	r4, r4, #2
 800e124:	ea53 0909 	orrs.w	r9, r3, r9
 800e128:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 800e12c:	d107      	bne.n	800e13e <__ieee754_atan2+0x7e>
 800e12e:	2c02      	cmp	r4, #2
 800e130:	d060      	beq.n	800e1f4 <__ieee754_atan2+0x134>
 800e132:	2c03      	cmp	r4, #3
 800e134:	d1e5      	bne.n	800e102 <__ieee754_atan2+0x42>
 800e136:	a142      	add	r1, pc, #264	; (adr r1, 800e240 <__ieee754_atan2+0x180>)
 800e138:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e13c:	e7e1      	b.n	800e102 <__ieee754_atan2+0x42>
 800e13e:	ea52 0808 	orrs.w	r8, r2, r8
 800e142:	d106      	bne.n	800e152 <__ieee754_atan2+0x92>
 800e144:	f1bc 0f00 	cmp.w	ip, #0
 800e148:	da5f      	bge.n	800e20a <__ieee754_atan2+0x14a>
 800e14a:	a13f      	add	r1, pc, #252	; (adr r1, 800e248 <__ieee754_atan2+0x188>)
 800e14c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e150:	e7d7      	b.n	800e102 <__ieee754_atan2+0x42>
 800e152:	4572      	cmp	r2, lr
 800e154:	d10f      	bne.n	800e176 <__ieee754_atan2+0xb6>
 800e156:	4293      	cmp	r3, r2
 800e158:	f104 34ff 	add.w	r4, r4, #4294967295
 800e15c:	d107      	bne.n	800e16e <__ieee754_atan2+0xae>
 800e15e:	2c02      	cmp	r4, #2
 800e160:	d84c      	bhi.n	800e1fc <__ieee754_atan2+0x13c>
 800e162:	4b35      	ldr	r3, [pc, #212]	; (800e238 <__ieee754_atan2+0x178>)
 800e164:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800e168:	e9d4 0100 	ldrd	r0, r1, [r4]
 800e16c:	e7c9      	b.n	800e102 <__ieee754_atan2+0x42>
 800e16e:	2c02      	cmp	r4, #2
 800e170:	d848      	bhi.n	800e204 <__ieee754_atan2+0x144>
 800e172:	4b32      	ldr	r3, [pc, #200]	; (800e23c <__ieee754_atan2+0x17c>)
 800e174:	e7f6      	b.n	800e164 <__ieee754_atan2+0xa4>
 800e176:	4573      	cmp	r3, lr
 800e178:	d0e4      	beq.n	800e144 <__ieee754_atan2+0x84>
 800e17a:	1a9b      	subs	r3, r3, r2
 800e17c:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 800e180:	ea4f 5223 	mov.w	r2, r3, asr #20
 800e184:	da1e      	bge.n	800e1c4 <__ieee754_atan2+0x104>
 800e186:	2f00      	cmp	r7, #0
 800e188:	da01      	bge.n	800e18e <__ieee754_atan2+0xce>
 800e18a:	323c      	adds	r2, #60	; 0x3c
 800e18c:	db1e      	blt.n	800e1cc <__ieee754_atan2+0x10c>
 800e18e:	4632      	mov	r2, r6
 800e190:	463b      	mov	r3, r7
 800e192:	f7f2 fb27 	bl	80007e4 <__aeabi_ddiv>
 800e196:	ec41 0b10 	vmov	d0, r0, r1
 800e19a:	f002 f9e5 	bl	8010568 <fabs>
 800e19e:	f002 f843 	bl	8010228 <atan>
 800e1a2:	ec51 0b10 	vmov	r0, r1, d0
 800e1a6:	2c01      	cmp	r4, #1
 800e1a8:	d013      	beq.n	800e1d2 <__ieee754_atan2+0x112>
 800e1aa:	2c02      	cmp	r4, #2
 800e1ac:	d015      	beq.n	800e1da <__ieee754_atan2+0x11a>
 800e1ae:	2c00      	cmp	r4, #0
 800e1b0:	d0a7      	beq.n	800e102 <__ieee754_atan2+0x42>
 800e1b2:	a319      	add	r3, pc, #100	; (adr r3, 800e218 <__ieee754_atan2+0x158>)
 800e1b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1b8:	f7f2 f832 	bl	8000220 <__aeabi_dsub>
 800e1bc:	a318      	add	r3, pc, #96	; (adr r3, 800e220 <__ieee754_atan2+0x160>)
 800e1be:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1c2:	e014      	b.n	800e1ee <__ieee754_atan2+0x12e>
 800e1c4:	a118      	add	r1, pc, #96	; (adr r1, 800e228 <__ieee754_atan2+0x168>)
 800e1c6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e1ca:	e7ec      	b.n	800e1a6 <__ieee754_atan2+0xe6>
 800e1cc:	2000      	movs	r0, #0
 800e1ce:	2100      	movs	r1, #0
 800e1d0:	e7e9      	b.n	800e1a6 <__ieee754_atan2+0xe6>
 800e1d2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800e1d6:	4619      	mov	r1, r3
 800e1d8:	e793      	b.n	800e102 <__ieee754_atan2+0x42>
 800e1da:	a30f      	add	r3, pc, #60	; (adr r3, 800e218 <__ieee754_atan2+0x158>)
 800e1dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1e0:	f7f2 f81e 	bl	8000220 <__aeabi_dsub>
 800e1e4:	4602      	mov	r2, r0
 800e1e6:	460b      	mov	r3, r1
 800e1e8:	a10d      	add	r1, pc, #52	; (adr r1, 800e220 <__ieee754_atan2+0x160>)
 800e1ea:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e1ee:	f7f2 f817 	bl	8000220 <__aeabi_dsub>
 800e1f2:	e786      	b.n	800e102 <__ieee754_atan2+0x42>
 800e1f4:	a10a      	add	r1, pc, #40	; (adr r1, 800e220 <__ieee754_atan2+0x160>)
 800e1f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e1fa:	e782      	b.n	800e102 <__ieee754_atan2+0x42>
 800e1fc:	a10c      	add	r1, pc, #48	; (adr r1, 800e230 <__ieee754_atan2+0x170>)
 800e1fe:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e202:	e77e      	b.n	800e102 <__ieee754_atan2+0x42>
 800e204:	2000      	movs	r0, #0
 800e206:	2100      	movs	r1, #0
 800e208:	e77b      	b.n	800e102 <__ieee754_atan2+0x42>
 800e20a:	a107      	add	r1, pc, #28	; (adr r1, 800e228 <__ieee754_atan2+0x168>)
 800e20c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e210:	e777      	b.n	800e102 <__ieee754_atan2+0x42>
 800e212:	bf00      	nop
 800e214:	f3af 8000 	nop.w
 800e218:	33145c07 	.word	0x33145c07
 800e21c:	3ca1a626 	.word	0x3ca1a626
 800e220:	54442d18 	.word	0x54442d18
 800e224:	400921fb 	.word	0x400921fb
 800e228:	54442d18 	.word	0x54442d18
 800e22c:	3ff921fb 	.word	0x3ff921fb
 800e230:	54442d18 	.word	0x54442d18
 800e234:	3fe921fb 	.word	0x3fe921fb
 800e238:	080108f8 	.word	0x080108f8
 800e23c:	08010910 	.word	0x08010910
 800e240:	54442d18 	.word	0x54442d18
 800e244:	c00921fb 	.word	0xc00921fb
 800e248:	54442d18 	.word	0x54442d18
 800e24c:	bff921fb 	.word	0xbff921fb
 800e250:	7ff00000 	.word	0x7ff00000
 800e254:	00000000 	.word	0x00000000

0800e258 <__ieee754_pow>:
 800e258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e25c:	ed2d 8b06 	vpush	{d8-d10}
 800e260:	b089      	sub	sp, #36	; 0x24
 800e262:	ed8d 1b00 	vstr	d1, [sp]
 800e266:	e9dd 2900 	ldrd	r2, r9, [sp]
 800e26a:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 800e26e:	ea58 0102 	orrs.w	r1, r8, r2
 800e272:	ec57 6b10 	vmov	r6, r7, d0
 800e276:	d115      	bne.n	800e2a4 <__ieee754_pow+0x4c>
 800e278:	19b3      	adds	r3, r6, r6
 800e27a:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 800e27e:	4152      	adcs	r2, r2
 800e280:	4299      	cmp	r1, r3
 800e282:	4b89      	ldr	r3, [pc, #548]	; (800e4a8 <__ieee754_pow+0x250>)
 800e284:	4193      	sbcs	r3, r2
 800e286:	f080 84d2 	bcs.w	800ec2e <__ieee754_pow+0x9d6>
 800e28a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800e28e:	4630      	mov	r0, r6
 800e290:	4639      	mov	r1, r7
 800e292:	f7f1 ffc7 	bl	8000224 <__adddf3>
 800e296:	ec41 0b10 	vmov	d0, r0, r1
 800e29a:	b009      	add	sp, #36	; 0x24
 800e29c:	ecbd 8b06 	vpop	{d8-d10}
 800e2a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2a4:	4b81      	ldr	r3, [pc, #516]	; (800e4ac <__ieee754_pow+0x254>)
 800e2a6:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 800e2aa:	429c      	cmp	r4, r3
 800e2ac:	ee10 aa10 	vmov	sl, s0
 800e2b0:	463d      	mov	r5, r7
 800e2b2:	dc06      	bgt.n	800e2c2 <__ieee754_pow+0x6a>
 800e2b4:	d101      	bne.n	800e2ba <__ieee754_pow+0x62>
 800e2b6:	2e00      	cmp	r6, #0
 800e2b8:	d1e7      	bne.n	800e28a <__ieee754_pow+0x32>
 800e2ba:	4598      	cmp	r8, r3
 800e2bc:	dc01      	bgt.n	800e2c2 <__ieee754_pow+0x6a>
 800e2be:	d10f      	bne.n	800e2e0 <__ieee754_pow+0x88>
 800e2c0:	b172      	cbz	r2, 800e2e0 <__ieee754_pow+0x88>
 800e2c2:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 800e2c6:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 800e2ca:	ea55 050a 	orrs.w	r5, r5, sl
 800e2ce:	d1dc      	bne.n	800e28a <__ieee754_pow+0x32>
 800e2d0:	e9dd 3200 	ldrd	r3, r2, [sp]
 800e2d4:	18db      	adds	r3, r3, r3
 800e2d6:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 800e2da:	4152      	adcs	r2, r2
 800e2dc:	429d      	cmp	r5, r3
 800e2de:	e7d0      	b.n	800e282 <__ieee754_pow+0x2a>
 800e2e0:	2d00      	cmp	r5, #0
 800e2e2:	da3b      	bge.n	800e35c <__ieee754_pow+0x104>
 800e2e4:	4b72      	ldr	r3, [pc, #456]	; (800e4b0 <__ieee754_pow+0x258>)
 800e2e6:	4598      	cmp	r8, r3
 800e2e8:	dc51      	bgt.n	800e38e <__ieee754_pow+0x136>
 800e2ea:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 800e2ee:	4598      	cmp	r8, r3
 800e2f0:	f340 84ac 	ble.w	800ec4c <__ieee754_pow+0x9f4>
 800e2f4:	ea4f 5328 	mov.w	r3, r8, asr #20
 800e2f8:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800e2fc:	2b14      	cmp	r3, #20
 800e2fe:	dd0f      	ble.n	800e320 <__ieee754_pow+0xc8>
 800e300:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 800e304:	fa22 f103 	lsr.w	r1, r2, r3
 800e308:	fa01 f303 	lsl.w	r3, r1, r3
 800e30c:	4293      	cmp	r3, r2
 800e30e:	f040 849d 	bne.w	800ec4c <__ieee754_pow+0x9f4>
 800e312:	f001 0101 	and.w	r1, r1, #1
 800e316:	f1c1 0302 	rsb	r3, r1, #2
 800e31a:	9304      	str	r3, [sp, #16]
 800e31c:	b182      	cbz	r2, 800e340 <__ieee754_pow+0xe8>
 800e31e:	e05f      	b.n	800e3e0 <__ieee754_pow+0x188>
 800e320:	2a00      	cmp	r2, #0
 800e322:	d15b      	bne.n	800e3dc <__ieee754_pow+0x184>
 800e324:	f1c3 0314 	rsb	r3, r3, #20
 800e328:	fa48 f103 	asr.w	r1, r8, r3
 800e32c:	fa01 f303 	lsl.w	r3, r1, r3
 800e330:	4543      	cmp	r3, r8
 800e332:	f040 8488 	bne.w	800ec46 <__ieee754_pow+0x9ee>
 800e336:	f001 0101 	and.w	r1, r1, #1
 800e33a:	f1c1 0302 	rsb	r3, r1, #2
 800e33e:	9304      	str	r3, [sp, #16]
 800e340:	4b5c      	ldr	r3, [pc, #368]	; (800e4b4 <__ieee754_pow+0x25c>)
 800e342:	4598      	cmp	r8, r3
 800e344:	d132      	bne.n	800e3ac <__ieee754_pow+0x154>
 800e346:	f1b9 0f00 	cmp.w	r9, #0
 800e34a:	f280 8478 	bge.w	800ec3e <__ieee754_pow+0x9e6>
 800e34e:	4959      	ldr	r1, [pc, #356]	; (800e4b4 <__ieee754_pow+0x25c>)
 800e350:	4632      	mov	r2, r6
 800e352:	463b      	mov	r3, r7
 800e354:	2000      	movs	r0, #0
 800e356:	f7f2 fa45 	bl	80007e4 <__aeabi_ddiv>
 800e35a:	e79c      	b.n	800e296 <__ieee754_pow+0x3e>
 800e35c:	2300      	movs	r3, #0
 800e35e:	9304      	str	r3, [sp, #16]
 800e360:	2a00      	cmp	r2, #0
 800e362:	d13d      	bne.n	800e3e0 <__ieee754_pow+0x188>
 800e364:	4b51      	ldr	r3, [pc, #324]	; (800e4ac <__ieee754_pow+0x254>)
 800e366:	4598      	cmp	r8, r3
 800e368:	d1ea      	bne.n	800e340 <__ieee754_pow+0xe8>
 800e36a:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 800e36e:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 800e372:	ea53 030a 	orrs.w	r3, r3, sl
 800e376:	f000 845a 	beq.w	800ec2e <__ieee754_pow+0x9d6>
 800e37a:	4b4f      	ldr	r3, [pc, #316]	; (800e4b8 <__ieee754_pow+0x260>)
 800e37c:	429c      	cmp	r4, r3
 800e37e:	dd08      	ble.n	800e392 <__ieee754_pow+0x13a>
 800e380:	f1b9 0f00 	cmp.w	r9, #0
 800e384:	f2c0 8457 	blt.w	800ec36 <__ieee754_pow+0x9de>
 800e388:	e9dd 0100 	ldrd	r0, r1, [sp]
 800e38c:	e783      	b.n	800e296 <__ieee754_pow+0x3e>
 800e38e:	2302      	movs	r3, #2
 800e390:	e7e5      	b.n	800e35e <__ieee754_pow+0x106>
 800e392:	f1b9 0f00 	cmp.w	r9, #0
 800e396:	f04f 0000 	mov.w	r0, #0
 800e39a:	f04f 0100 	mov.w	r1, #0
 800e39e:	f6bf af7a 	bge.w	800e296 <__ieee754_pow+0x3e>
 800e3a2:	e9dd 0300 	ldrd	r0, r3, [sp]
 800e3a6:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800e3aa:	e774      	b.n	800e296 <__ieee754_pow+0x3e>
 800e3ac:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 800e3b0:	d106      	bne.n	800e3c0 <__ieee754_pow+0x168>
 800e3b2:	4632      	mov	r2, r6
 800e3b4:	463b      	mov	r3, r7
 800e3b6:	4630      	mov	r0, r6
 800e3b8:	4639      	mov	r1, r7
 800e3ba:	f7f2 f8e9 	bl	8000590 <__aeabi_dmul>
 800e3be:	e76a      	b.n	800e296 <__ieee754_pow+0x3e>
 800e3c0:	4b3e      	ldr	r3, [pc, #248]	; (800e4bc <__ieee754_pow+0x264>)
 800e3c2:	4599      	cmp	r9, r3
 800e3c4:	d10c      	bne.n	800e3e0 <__ieee754_pow+0x188>
 800e3c6:	2d00      	cmp	r5, #0
 800e3c8:	db0a      	blt.n	800e3e0 <__ieee754_pow+0x188>
 800e3ca:	ec47 6b10 	vmov	d0, r6, r7
 800e3ce:	b009      	add	sp, #36	; 0x24
 800e3d0:	ecbd 8b06 	vpop	{d8-d10}
 800e3d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3d8:	f000 be7a 	b.w	800f0d0 <__ieee754_sqrt>
 800e3dc:	2300      	movs	r3, #0
 800e3de:	9304      	str	r3, [sp, #16]
 800e3e0:	ec47 6b10 	vmov	d0, r6, r7
 800e3e4:	f002 f8c0 	bl	8010568 <fabs>
 800e3e8:	ec51 0b10 	vmov	r0, r1, d0
 800e3ec:	f1ba 0f00 	cmp.w	sl, #0
 800e3f0:	d129      	bne.n	800e446 <__ieee754_pow+0x1ee>
 800e3f2:	b124      	cbz	r4, 800e3fe <__ieee754_pow+0x1a6>
 800e3f4:	4b2f      	ldr	r3, [pc, #188]	; (800e4b4 <__ieee754_pow+0x25c>)
 800e3f6:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 800e3fa:	429a      	cmp	r2, r3
 800e3fc:	d123      	bne.n	800e446 <__ieee754_pow+0x1ee>
 800e3fe:	f1b9 0f00 	cmp.w	r9, #0
 800e402:	da05      	bge.n	800e410 <__ieee754_pow+0x1b8>
 800e404:	4602      	mov	r2, r0
 800e406:	460b      	mov	r3, r1
 800e408:	2000      	movs	r0, #0
 800e40a:	492a      	ldr	r1, [pc, #168]	; (800e4b4 <__ieee754_pow+0x25c>)
 800e40c:	f7f2 f9ea 	bl	80007e4 <__aeabi_ddiv>
 800e410:	2d00      	cmp	r5, #0
 800e412:	f6bf af40 	bge.w	800e296 <__ieee754_pow+0x3e>
 800e416:	9b04      	ldr	r3, [sp, #16]
 800e418:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 800e41c:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800e420:	4323      	orrs	r3, r4
 800e422:	d108      	bne.n	800e436 <__ieee754_pow+0x1de>
 800e424:	4602      	mov	r2, r0
 800e426:	460b      	mov	r3, r1
 800e428:	4610      	mov	r0, r2
 800e42a:	4619      	mov	r1, r3
 800e42c:	f7f1 fef8 	bl	8000220 <__aeabi_dsub>
 800e430:	4602      	mov	r2, r0
 800e432:	460b      	mov	r3, r1
 800e434:	e78f      	b.n	800e356 <__ieee754_pow+0xfe>
 800e436:	9b04      	ldr	r3, [sp, #16]
 800e438:	2b01      	cmp	r3, #1
 800e43a:	f47f af2c 	bne.w	800e296 <__ieee754_pow+0x3e>
 800e43e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800e442:	4619      	mov	r1, r3
 800e444:	e727      	b.n	800e296 <__ieee754_pow+0x3e>
 800e446:	0feb      	lsrs	r3, r5, #31
 800e448:	3b01      	subs	r3, #1
 800e44a:	9306      	str	r3, [sp, #24]
 800e44c:	9a06      	ldr	r2, [sp, #24]
 800e44e:	9b04      	ldr	r3, [sp, #16]
 800e450:	4313      	orrs	r3, r2
 800e452:	d102      	bne.n	800e45a <__ieee754_pow+0x202>
 800e454:	4632      	mov	r2, r6
 800e456:	463b      	mov	r3, r7
 800e458:	e7e6      	b.n	800e428 <__ieee754_pow+0x1d0>
 800e45a:	4b19      	ldr	r3, [pc, #100]	; (800e4c0 <__ieee754_pow+0x268>)
 800e45c:	4598      	cmp	r8, r3
 800e45e:	f340 80fb 	ble.w	800e658 <__ieee754_pow+0x400>
 800e462:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 800e466:	4598      	cmp	r8, r3
 800e468:	4b13      	ldr	r3, [pc, #76]	; (800e4b8 <__ieee754_pow+0x260>)
 800e46a:	dd0c      	ble.n	800e486 <__ieee754_pow+0x22e>
 800e46c:	429c      	cmp	r4, r3
 800e46e:	dc0f      	bgt.n	800e490 <__ieee754_pow+0x238>
 800e470:	f1b9 0f00 	cmp.w	r9, #0
 800e474:	da0f      	bge.n	800e496 <__ieee754_pow+0x23e>
 800e476:	2000      	movs	r0, #0
 800e478:	b009      	add	sp, #36	; 0x24
 800e47a:	ecbd 8b06 	vpop	{d8-d10}
 800e47e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e482:	f001 bea6 	b.w	80101d2 <__math_oflow>
 800e486:	429c      	cmp	r4, r3
 800e488:	dbf2      	blt.n	800e470 <__ieee754_pow+0x218>
 800e48a:	4b0a      	ldr	r3, [pc, #40]	; (800e4b4 <__ieee754_pow+0x25c>)
 800e48c:	429c      	cmp	r4, r3
 800e48e:	dd19      	ble.n	800e4c4 <__ieee754_pow+0x26c>
 800e490:	f1b9 0f00 	cmp.w	r9, #0
 800e494:	dcef      	bgt.n	800e476 <__ieee754_pow+0x21e>
 800e496:	2000      	movs	r0, #0
 800e498:	b009      	add	sp, #36	; 0x24
 800e49a:	ecbd 8b06 	vpop	{d8-d10}
 800e49e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4a2:	f001 be8d 	b.w	80101c0 <__math_uflow>
 800e4a6:	bf00      	nop
 800e4a8:	fff00000 	.word	0xfff00000
 800e4ac:	7ff00000 	.word	0x7ff00000
 800e4b0:	433fffff 	.word	0x433fffff
 800e4b4:	3ff00000 	.word	0x3ff00000
 800e4b8:	3fefffff 	.word	0x3fefffff
 800e4bc:	3fe00000 	.word	0x3fe00000
 800e4c0:	41e00000 	.word	0x41e00000
 800e4c4:	4b60      	ldr	r3, [pc, #384]	; (800e648 <__ieee754_pow+0x3f0>)
 800e4c6:	2200      	movs	r2, #0
 800e4c8:	f7f1 feaa 	bl	8000220 <__aeabi_dsub>
 800e4cc:	a354      	add	r3, pc, #336	; (adr r3, 800e620 <__ieee754_pow+0x3c8>)
 800e4ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e4d2:	4604      	mov	r4, r0
 800e4d4:	460d      	mov	r5, r1
 800e4d6:	f7f2 f85b 	bl	8000590 <__aeabi_dmul>
 800e4da:	a353      	add	r3, pc, #332	; (adr r3, 800e628 <__ieee754_pow+0x3d0>)
 800e4dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e4e0:	4606      	mov	r6, r0
 800e4e2:	460f      	mov	r7, r1
 800e4e4:	4620      	mov	r0, r4
 800e4e6:	4629      	mov	r1, r5
 800e4e8:	f7f2 f852 	bl	8000590 <__aeabi_dmul>
 800e4ec:	4b57      	ldr	r3, [pc, #348]	; (800e64c <__ieee754_pow+0x3f4>)
 800e4ee:	4682      	mov	sl, r0
 800e4f0:	468b      	mov	fp, r1
 800e4f2:	2200      	movs	r2, #0
 800e4f4:	4620      	mov	r0, r4
 800e4f6:	4629      	mov	r1, r5
 800e4f8:	f7f2 f84a 	bl	8000590 <__aeabi_dmul>
 800e4fc:	4602      	mov	r2, r0
 800e4fe:	460b      	mov	r3, r1
 800e500:	a14b      	add	r1, pc, #300	; (adr r1, 800e630 <__ieee754_pow+0x3d8>)
 800e502:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e506:	f7f1 fe8b 	bl	8000220 <__aeabi_dsub>
 800e50a:	4622      	mov	r2, r4
 800e50c:	462b      	mov	r3, r5
 800e50e:	f7f2 f83f 	bl	8000590 <__aeabi_dmul>
 800e512:	4602      	mov	r2, r0
 800e514:	460b      	mov	r3, r1
 800e516:	2000      	movs	r0, #0
 800e518:	494d      	ldr	r1, [pc, #308]	; (800e650 <__ieee754_pow+0x3f8>)
 800e51a:	f7f1 fe81 	bl	8000220 <__aeabi_dsub>
 800e51e:	4622      	mov	r2, r4
 800e520:	4680      	mov	r8, r0
 800e522:	4689      	mov	r9, r1
 800e524:	462b      	mov	r3, r5
 800e526:	4620      	mov	r0, r4
 800e528:	4629      	mov	r1, r5
 800e52a:	f7f2 f831 	bl	8000590 <__aeabi_dmul>
 800e52e:	4602      	mov	r2, r0
 800e530:	460b      	mov	r3, r1
 800e532:	4640      	mov	r0, r8
 800e534:	4649      	mov	r1, r9
 800e536:	f7f2 f82b 	bl	8000590 <__aeabi_dmul>
 800e53a:	a33f      	add	r3, pc, #252	; (adr r3, 800e638 <__ieee754_pow+0x3e0>)
 800e53c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e540:	f7f2 f826 	bl	8000590 <__aeabi_dmul>
 800e544:	4602      	mov	r2, r0
 800e546:	460b      	mov	r3, r1
 800e548:	4650      	mov	r0, sl
 800e54a:	4659      	mov	r1, fp
 800e54c:	f7f1 fe68 	bl	8000220 <__aeabi_dsub>
 800e550:	4602      	mov	r2, r0
 800e552:	460b      	mov	r3, r1
 800e554:	4680      	mov	r8, r0
 800e556:	4689      	mov	r9, r1
 800e558:	4630      	mov	r0, r6
 800e55a:	4639      	mov	r1, r7
 800e55c:	f7f1 fe62 	bl	8000224 <__adddf3>
 800e560:	2000      	movs	r0, #0
 800e562:	4632      	mov	r2, r6
 800e564:	463b      	mov	r3, r7
 800e566:	4604      	mov	r4, r0
 800e568:	460d      	mov	r5, r1
 800e56a:	f7f1 fe59 	bl	8000220 <__aeabi_dsub>
 800e56e:	4602      	mov	r2, r0
 800e570:	460b      	mov	r3, r1
 800e572:	4640      	mov	r0, r8
 800e574:	4649      	mov	r1, r9
 800e576:	f7f1 fe53 	bl	8000220 <__aeabi_dsub>
 800e57a:	9b04      	ldr	r3, [sp, #16]
 800e57c:	9a06      	ldr	r2, [sp, #24]
 800e57e:	3b01      	subs	r3, #1
 800e580:	4313      	orrs	r3, r2
 800e582:	4682      	mov	sl, r0
 800e584:	468b      	mov	fp, r1
 800e586:	f040 81e7 	bne.w	800e958 <__ieee754_pow+0x700>
 800e58a:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 800e640 <__ieee754_pow+0x3e8>
 800e58e:	eeb0 8a47 	vmov.f32	s16, s14
 800e592:	eef0 8a67 	vmov.f32	s17, s15
 800e596:	e9dd 6700 	ldrd	r6, r7, [sp]
 800e59a:	2600      	movs	r6, #0
 800e59c:	4632      	mov	r2, r6
 800e59e:	463b      	mov	r3, r7
 800e5a0:	e9dd 0100 	ldrd	r0, r1, [sp]
 800e5a4:	f7f1 fe3c 	bl	8000220 <__aeabi_dsub>
 800e5a8:	4622      	mov	r2, r4
 800e5aa:	462b      	mov	r3, r5
 800e5ac:	f7f1 fff0 	bl	8000590 <__aeabi_dmul>
 800e5b0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800e5b4:	4680      	mov	r8, r0
 800e5b6:	4689      	mov	r9, r1
 800e5b8:	4650      	mov	r0, sl
 800e5ba:	4659      	mov	r1, fp
 800e5bc:	f7f1 ffe8 	bl	8000590 <__aeabi_dmul>
 800e5c0:	4602      	mov	r2, r0
 800e5c2:	460b      	mov	r3, r1
 800e5c4:	4640      	mov	r0, r8
 800e5c6:	4649      	mov	r1, r9
 800e5c8:	f7f1 fe2c 	bl	8000224 <__adddf3>
 800e5cc:	4632      	mov	r2, r6
 800e5ce:	463b      	mov	r3, r7
 800e5d0:	4680      	mov	r8, r0
 800e5d2:	4689      	mov	r9, r1
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	4629      	mov	r1, r5
 800e5d8:	f7f1 ffda 	bl	8000590 <__aeabi_dmul>
 800e5dc:	460b      	mov	r3, r1
 800e5de:	4604      	mov	r4, r0
 800e5e0:	460d      	mov	r5, r1
 800e5e2:	4602      	mov	r2, r0
 800e5e4:	4649      	mov	r1, r9
 800e5e6:	4640      	mov	r0, r8
 800e5e8:	f7f1 fe1c 	bl	8000224 <__adddf3>
 800e5ec:	4b19      	ldr	r3, [pc, #100]	; (800e654 <__ieee754_pow+0x3fc>)
 800e5ee:	4299      	cmp	r1, r3
 800e5f0:	ec45 4b19 	vmov	d9, r4, r5
 800e5f4:	4606      	mov	r6, r0
 800e5f6:	460f      	mov	r7, r1
 800e5f8:	468b      	mov	fp, r1
 800e5fa:	f340 82f1 	ble.w	800ebe0 <__ieee754_pow+0x988>
 800e5fe:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 800e602:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 800e606:	4303      	orrs	r3, r0
 800e608:	f000 81e4 	beq.w	800e9d4 <__ieee754_pow+0x77c>
 800e60c:	ec51 0b18 	vmov	r0, r1, d8
 800e610:	2200      	movs	r2, #0
 800e612:	2300      	movs	r3, #0
 800e614:	f7f2 fa2e 	bl	8000a74 <__aeabi_dcmplt>
 800e618:	3800      	subs	r0, #0
 800e61a:	bf18      	it	ne
 800e61c:	2001      	movne	r0, #1
 800e61e:	e72b      	b.n	800e478 <__ieee754_pow+0x220>
 800e620:	60000000 	.word	0x60000000
 800e624:	3ff71547 	.word	0x3ff71547
 800e628:	f85ddf44 	.word	0xf85ddf44
 800e62c:	3e54ae0b 	.word	0x3e54ae0b
 800e630:	55555555 	.word	0x55555555
 800e634:	3fd55555 	.word	0x3fd55555
 800e638:	652b82fe 	.word	0x652b82fe
 800e63c:	3ff71547 	.word	0x3ff71547
 800e640:	00000000 	.word	0x00000000
 800e644:	bff00000 	.word	0xbff00000
 800e648:	3ff00000 	.word	0x3ff00000
 800e64c:	3fd00000 	.word	0x3fd00000
 800e650:	3fe00000 	.word	0x3fe00000
 800e654:	408fffff 	.word	0x408fffff
 800e658:	4bd5      	ldr	r3, [pc, #852]	; (800e9b0 <__ieee754_pow+0x758>)
 800e65a:	402b      	ands	r3, r5
 800e65c:	2200      	movs	r2, #0
 800e65e:	b92b      	cbnz	r3, 800e66c <__ieee754_pow+0x414>
 800e660:	4bd4      	ldr	r3, [pc, #848]	; (800e9b4 <__ieee754_pow+0x75c>)
 800e662:	f7f1 ff95 	bl	8000590 <__aeabi_dmul>
 800e666:	f06f 0234 	mvn.w	r2, #52	; 0x34
 800e66a:	460c      	mov	r4, r1
 800e66c:	1523      	asrs	r3, r4, #20
 800e66e:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800e672:	4413      	add	r3, r2
 800e674:	9305      	str	r3, [sp, #20]
 800e676:	4bd0      	ldr	r3, [pc, #832]	; (800e9b8 <__ieee754_pow+0x760>)
 800e678:	f3c4 0413 	ubfx	r4, r4, #0, #20
 800e67c:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 800e680:	429c      	cmp	r4, r3
 800e682:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800e686:	dd08      	ble.n	800e69a <__ieee754_pow+0x442>
 800e688:	4bcc      	ldr	r3, [pc, #816]	; (800e9bc <__ieee754_pow+0x764>)
 800e68a:	429c      	cmp	r4, r3
 800e68c:	f340 8162 	ble.w	800e954 <__ieee754_pow+0x6fc>
 800e690:	9b05      	ldr	r3, [sp, #20]
 800e692:	3301      	adds	r3, #1
 800e694:	9305      	str	r3, [sp, #20]
 800e696:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 800e69a:	2400      	movs	r4, #0
 800e69c:	00e3      	lsls	r3, r4, #3
 800e69e:	9307      	str	r3, [sp, #28]
 800e6a0:	4bc7      	ldr	r3, [pc, #796]	; (800e9c0 <__ieee754_pow+0x768>)
 800e6a2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e6a6:	ed93 7b00 	vldr	d7, [r3]
 800e6aa:	4629      	mov	r1, r5
 800e6ac:	ec53 2b17 	vmov	r2, r3, d7
 800e6b0:	eeb0 9a47 	vmov.f32	s18, s14
 800e6b4:	eef0 9a67 	vmov.f32	s19, s15
 800e6b8:	4682      	mov	sl, r0
 800e6ba:	f7f1 fdb1 	bl	8000220 <__aeabi_dsub>
 800e6be:	4652      	mov	r2, sl
 800e6c0:	4606      	mov	r6, r0
 800e6c2:	460f      	mov	r7, r1
 800e6c4:	462b      	mov	r3, r5
 800e6c6:	ec51 0b19 	vmov	r0, r1, d9
 800e6ca:	f7f1 fdab 	bl	8000224 <__adddf3>
 800e6ce:	4602      	mov	r2, r0
 800e6d0:	460b      	mov	r3, r1
 800e6d2:	2000      	movs	r0, #0
 800e6d4:	49bb      	ldr	r1, [pc, #748]	; (800e9c4 <__ieee754_pow+0x76c>)
 800e6d6:	f7f2 f885 	bl	80007e4 <__aeabi_ddiv>
 800e6da:	ec41 0b1a 	vmov	d10, r0, r1
 800e6de:	4602      	mov	r2, r0
 800e6e0:	460b      	mov	r3, r1
 800e6e2:	4630      	mov	r0, r6
 800e6e4:	4639      	mov	r1, r7
 800e6e6:	f7f1 ff53 	bl	8000590 <__aeabi_dmul>
 800e6ea:	2300      	movs	r3, #0
 800e6ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e6f0:	9302      	str	r3, [sp, #8]
 800e6f2:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800e6f6:	46ab      	mov	fp, r5
 800e6f8:	106d      	asrs	r5, r5, #1
 800e6fa:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 800e6fe:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 800e702:	ec41 0b18 	vmov	d8, r0, r1
 800e706:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 800e70a:	2200      	movs	r2, #0
 800e70c:	4640      	mov	r0, r8
 800e70e:	4649      	mov	r1, r9
 800e710:	4614      	mov	r4, r2
 800e712:	461d      	mov	r5, r3
 800e714:	f7f1 ff3c 	bl	8000590 <__aeabi_dmul>
 800e718:	4602      	mov	r2, r0
 800e71a:	460b      	mov	r3, r1
 800e71c:	4630      	mov	r0, r6
 800e71e:	4639      	mov	r1, r7
 800e720:	f7f1 fd7e 	bl	8000220 <__aeabi_dsub>
 800e724:	ec53 2b19 	vmov	r2, r3, d9
 800e728:	4606      	mov	r6, r0
 800e72a:	460f      	mov	r7, r1
 800e72c:	4620      	mov	r0, r4
 800e72e:	4629      	mov	r1, r5
 800e730:	f7f1 fd76 	bl	8000220 <__aeabi_dsub>
 800e734:	4602      	mov	r2, r0
 800e736:	460b      	mov	r3, r1
 800e738:	4650      	mov	r0, sl
 800e73a:	4659      	mov	r1, fp
 800e73c:	f7f1 fd70 	bl	8000220 <__aeabi_dsub>
 800e740:	4642      	mov	r2, r8
 800e742:	464b      	mov	r3, r9
 800e744:	f7f1 ff24 	bl	8000590 <__aeabi_dmul>
 800e748:	4602      	mov	r2, r0
 800e74a:	460b      	mov	r3, r1
 800e74c:	4630      	mov	r0, r6
 800e74e:	4639      	mov	r1, r7
 800e750:	f7f1 fd66 	bl	8000220 <__aeabi_dsub>
 800e754:	ec53 2b1a 	vmov	r2, r3, d10
 800e758:	f7f1 ff1a 	bl	8000590 <__aeabi_dmul>
 800e75c:	ec53 2b18 	vmov	r2, r3, d8
 800e760:	ec41 0b19 	vmov	d9, r0, r1
 800e764:	ec51 0b18 	vmov	r0, r1, d8
 800e768:	f7f1 ff12 	bl	8000590 <__aeabi_dmul>
 800e76c:	a37c      	add	r3, pc, #496	; (adr r3, 800e960 <__ieee754_pow+0x708>)
 800e76e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e772:	4604      	mov	r4, r0
 800e774:	460d      	mov	r5, r1
 800e776:	f7f1 ff0b 	bl	8000590 <__aeabi_dmul>
 800e77a:	a37b      	add	r3, pc, #492	; (adr r3, 800e968 <__ieee754_pow+0x710>)
 800e77c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e780:	f7f1 fd50 	bl	8000224 <__adddf3>
 800e784:	4622      	mov	r2, r4
 800e786:	462b      	mov	r3, r5
 800e788:	f7f1 ff02 	bl	8000590 <__aeabi_dmul>
 800e78c:	a378      	add	r3, pc, #480	; (adr r3, 800e970 <__ieee754_pow+0x718>)
 800e78e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e792:	f7f1 fd47 	bl	8000224 <__adddf3>
 800e796:	4622      	mov	r2, r4
 800e798:	462b      	mov	r3, r5
 800e79a:	f7f1 fef9 	bl	8000590 <__aeabi_dmul>
 800e79e:	a376      	add	r3, pc, #472	; (adr r3, 800e978 <__ieee754_pow+0x720>)
 800e7a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e7a4:	f7f1 fd3e 	bl	8000224 <__adddf3>
 800e7a8:	4622      	mov	r2, r4
 800e7aa:	462b      	mov	r3, r5
 800e7ac:	f7f1 fef0 	bl	8000590 <__aeabi_dmul>
 800e7b0:	a373      	add	r3, pc, #460	; (adr r3, 800e980 <__ieee754_pow+0x728>)
 800e7b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e7b6:	f7f1 fd35 	bl	8000224 <__adddf3>
 800e7ba:	4622      	mov	r2, r4
 800e7bc:	462b      	mov	r3, r5
 800e7be:	f7f1 fee7 	bl	8000590 <__aeabi_dmul>
 800e7c2:	a371      	add	r3, pc, #452	; (adr r3, 800e988 <__ieee754_pow+0x730>)
 800e7c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e7c8:	f7f1 fd2c 	bl	8000224 <__adddf3>
 800e7cc:	4622      	mov	r2, r4
 800e7ce:	4606      	mov	r6, r0
 800e7d0:	460f      	mov	r7, r1
 800e7d2:	462b      	mov	r3, r5
 800e7d4:	4620      	mov	r0, r4
 800e7d6:	4629      	mov	r1, r5
 800e7d8:	f7f1 feda 	bl	8000590 <__aeabi_dmul>
 800e7dc:	4602      	mov	r2, r0
 800e7de:	460b      	mov	r3, r1
 800e7e0:	4630      	mov	r0, r6
 800e7e2:	4639      	mov	r1, r7
 800e7e4:	f7f1 fed4 	bl	8000590 <__aeabi_dmul>
 800e7e8:	4642      	mov	r2, r8
 800e7ea:	4604      	mov	r4, r0
 800e7ec:	460d      	mov	r5, r1
 800e7ee:	464b      	mov	r3, r9
 800e7f0:	ec51 0b18 	vmov	r0, r1, d8
 800e7f4:	f7f1 fd16 	bl	8000224 <__adddf3>
 800e7f8:	ec53 2b19 	vmov	r2, r3, d9
 800e7fc:	f7f1 fec8 	bl	8000590 <__aeabi_dmul>
 800e800:	4622      	mov	r2, r4
 800e802:	462b      	mov	r3, r5
 800e804:	f7f1 fd0e 	bl	8000224 <__adddf3>
 800e808:	4642      	mov	r2, r8
 800e80a:	4682      	mov	sl, r0
 800e80c:	468b      	mov	fp, r1
 800e80e:	464b      	mov	r3, r9
 800e810:	4640      	mov	r0, r8
 800e812:	4649      	mov	r1, r9
 800e814:	f7f1 febc 	bl	8000590 <__aeabi_dmul>
 800e818:	4b6b      	ldr	r3, [pc, #428]	; (800e9c8 <__ieee754_pow+0x770>)
 800e81a:	2200      	movs	r2, #0
 800e81c:	4606      	mov	r6, r0
 800e81e:	460f      	mov	r7, r1
 800e820:	f7f1 fd00 	bl	8000224 <__adddf3>
 800e824:	4652      	mov	r2, sl
 800e826:	465b      	mov	r3, fp
 800e828:	f7f1 fcfc 	bl	8000224 <__adddf3>
 800e82c:	2000      	movs	r0, #0
 800e82e:	4604      	mov	r4, r0
 800e830:	460d      	mov	r5, r1
 800e832:	4602      	mov	r2, r0
 800e834:	460b      	mov	r3, r1
 800e836:	4640      	mov	r0, r8
 800e838:	4649      	mov	r1, r9
 800e83a:	f7f1 fea9 	bl	8000590 <__aeabi_dmul>
 800e83e:	4b62      	ldr	r3, [pc, #392]	; (800e9c8 <__ieee754_pow+0x770>)
 800e840:	4680      	mov	r8, r0
 800e842:	4689      	mov	r9, r1
 800e844:	2200      	movs	r2, #0
 800e846:	4620      	mov	r0, r4
 800e848:	4629      	mov	r1, r5
 800e84a:	f7f1 fce9 	bl	8000220 <__aeabi_dsub>
 800e84e:	4632      	mov	r2, r6
 800e850:	463b      	mov	r3, r7
 800e852:	f7f1 fce5 	bl	8000220 <__aeabi_dsub>
 800e856:	4602      	mov	r2, r0
 800e858:	460b      	mov	r3, r1
 800e85a:	4650      	mov	r0, sl
 800e85c:	4659      	mov	r1, fp
 800e85e:	f7f1 fcdf 	bl	8000220 <__aeabi_dsub>
 800e862:	ec53 2b18 	vmov	r2, r3, d8
 800e866:	f7f1 fe93 	bl	8000590 <__aeabi_dmul>
 800e86a:	4622      	mov	r2, r4
 800e86c:	4606      	mov	r6, r0
 800e86e:	460f      	mov	r7, r1
 800e870:	462b      	mov	r3, r5
 800e872:	ec51 0b19 	vmov	r0, r1, d9
 800e876:	f7f1 fe8b 	bl	8000590 <__aeabi_dmul>
 800e87a:	4602      	mov	r2, r0
 800e87c:	460b      	mov	r3, r1
 800e87e:	4630      	mov	r0, r6
 800e880:	4639      	mov	r1, r7
 800e882:	f7f1 fccf 	bl	8000224 <__adddf3>
 800e886:	4606      	mov	r6, r0
 800e888:	460f      	mov	r7, r1
 800e88a:	4602      	mov	r2, r0
 800e88c:	460b      	mov	r3, r1
 800e88e:	4640      	mov	r0, r8
 800e890:	4649      	mov	r1, r9
 800e892:	f7f1 fcc7 	bl	8000224 <__adddf3>
 800e896:	a33e      	add	r3, pc, #248	; (adr r3, 800e990 <__ieee754_pow+0x738>)
 800e898:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e89c:	2000      	movs	r0, #0
 800e89e:	4604      	mov	r4, r0
 800e8a0:	460d      	mov	r5, r1
 800e8a2:	f7f1 fe75 	bl	8000590 <__aeabi_dmul>
 800e8a6:	4642      	mov	r2, r8
 800e8a8:	ec41 0b18 	vmov	d8, r0, r1
 800e8ac:	464b      	mov	r3, r9
 800e8ae:	4620      	mov	r0, r4
 800e8b0:	4629      	mov	r1, r5
 800e8b2:	f7f1 fcb5 	bl	8000220 <__aeabi_dsub>
 800e8b6:	4602      	mov	r2, r0
 800e8b8:	460b      	mov	r3, r1
 800e8ba:	4630      	mov	r0, r6
 800e8bc:	4639      	mov	r1, r7
 800e8be:	f7f1 fcaf 	bl	8000220 <__aeabi_dsub>
 800e8c2:	a335      	add	r3, pc, #212	; (adr r3, 800e998 <__ieee754_pow+0x740>)
 800e8c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e8c8:	f7f1 fe62 	bl	8000590 <__aeabi_dmul>
 800e8cc:	a334      	add	r3, pc, #208	; (adr r3, 800e9a0 <__ieee754_pow+0x748>)
 800e8ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e8d2:	4606      	mov	r6, r0
 800e8d4:	460f      	mov	r7, r1
 800e8d6:	4620      	mov	r0, r4
 800e8d8:	4629      	mov	r1, r5
 800e8da:	f7f1 fe59 	bl	8000590 <__aeabi_dmul>
 800e8de:	4602      	mov	r2, r0
 800e8e0:	460b      	mov	r3, r1
 800e8e2:	4630      	mov	r0, r6
 800e8e4:	4639      	mov	r1, r7
 800e8e6:	f7f1 fc9d 	bl	8000224 <__adddf3>
 800e8ea:	9a07      	ldr	r2, [sp, #28]
 800e8ec:	4b37      	ldr	r3, [pc, #220]	; (800e9cc <__ieee754_pow+0x774>)
 800e8ee:	4413      	add	r3, r2
 800e8f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e8f4:	f7f1 fc96 	bl	8000224 <__adddf3>
 800e8f8:	4682      	mov	sl, r0
 800e8fa:	9805      	ldr	r0, [sp, #20]
 800e8fc:	468b      	mov	fp, r1
 800e8fe:	f7f1 fddd 	bl	80004bc <__aeabi_i2d>
 800e902:	9a07      	ldr	r2, [sp, #28]
 800e904:	4b32      	ldr	r3, [pc, #200]	; (800e9d0 <__ieee754_pow+0x778>)
 800e906:	4413      	add	r3, r2
 800e908:	e9d3 8900 	ldrd	r8, r9, [r3]
 800e90c:	4606      	mov	r6, r0
 800e90e:	460f      	mov	r7, r1
 800e910:	4652      	mov	r2, sl
 800e912:	465b      	mov	r3, fp
 800e914:	ec51 0b18 	vmov	r0, r1, d8
 800e918:	f7f1 fc84 	bl	8000224 <__adddf3>
 800e91c:	4642      	mov	r2, r8
 800e91e:	464b      	mov	r3, r9
 800e920:	f7f1 fc80 	bl	8000224 <__adddf3>
 800e924:	4632      	mov	r2, r6
 800e926:	463b      	mov	r3, r7
 800e928:	f7f1 fc7c 	bl	8000224 <__adddf3>
 800e92c:	2000      	movs	r0, #0
 800e92e:	4632      	mov	r2, r6
 800e930:	463b      	mov	r3, r7
 800e932:	4604      	mov	r4, r0
 800e934:	460d      	mov	r5, r1
 800e936:	f7f1 fc73 	bl	8000220 <__aeabi_dsub>
 800e93a:	4642      	mov	r2, r8
 800e93c:	464b      	mov	r3, r9
 800e93e:	f7f1 fc6f 	bl	8000220 <__aeabi_dsub>
 800e942:	ec53 2b18 	vmov	r2, r3, d8
 800e946:	f7f1 fc6b 	bl	8000220 <__aeabi_dsub>
 800e94a:	4602      	mov	r2, r0
 800e94c:	460b      	mov	r3, r1
 800e94e:	4650      	mov	r0, sl
 800e950:	4659      	mov	r1, fp
 800e952:	e610      	b.n	800e576 <__ieee754_pow+0x31e>
 800e954:	2401      	movs	r4, #1
 800e956:	e6a1      	b.n	800e69c <__ieee754_pow+0x444>
 800e958:	ed9f 7b13 	vldr	d7, [pc, #76]	; 800e9a8 <__ieee754_pow+0x750>
 800e95c:	e617      	b.n	800e58e <__ieee754_pow+0x336>
 800e95e:	bf00      	nop
 800e960:	4a454eef 	.word	0x4a454eef
 800e964:	3fca7e28 	.word	0x3fca7e28
 800e968:	93c9db65 	.word	0x93c9db65
 800e96c:	3fcd864a 	.word	0x3fcd864a
 800e970:	a91d4101 	.word	0xa91d4101
 800e974:	3fd17460 	.word	0x3fd17460
 800e978:	518f264d 	.word	0x518f264d
 800e97c:	3fd55555 	.word	0x3fd55555
 800e980:	db6fabff 	.word	0xdb6fabff
 800e984:	3fdb6db6 	.word	0x3fdb6db6
 800e988:	33333303 	.word	0x33333303
 800e98c:	3fe33333 	.word	0x3fe33333
 800e990:	e0000000 	.word	0xe0000000
 800e994:	3feec709 	.word	0x3feec709
 800e998:	dc3a03fd 	.word	0xdc3a03fd
 800e99c:	3feec709 	.word	0x3feec709
 800e9a0:	145b01f5 	.word	0x145b01f5
 800e9a4:	be3e2fe0 	.word	0xbe3e2fe0
 800e9a8:	00000000 	.word	0x00000000
 800e9ac:	3ff00000 	.word	0x3ff00000
 800e9b0:	7ff00000 	.word	0x7ff00000
 800e9b4:	43400000 	.word	0x43400000
 800e9b8:	0003988e 	.word	0x0003988e
 800e9bc:	000bb679 	.word	0x000bb679
 800e9c0:	08010928 	.word	0x08010928
 800e9c4:	3ff00000 	.word	0x3ff00000
 800e9c8:	40080000 	.word	0x40080000
 800e9cc:	08010948 	.word	0x08010948
 800e9d0:	08010938 	.word	0x08010938
 800e9d4:	a3b5      	add	r3, pc, #724	; (adr r3, 800ecac <__ieee754_pow+0xa54>)
 800e9d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e9da:	4640      	mov	r0, r8
 800e9dc:	4649      	mov	r1, r9
 800e9de:	f7f1 fc21 	bl	8000224 <__adddf3>
 800e9e2:	4622      	mov	r2, r4
 800e9e4:	ec41 0b1a 	vmov	d10, r0, r1
 800e9e8:	462b      	mov	r3, r5
 800e9ea:	4630      	mov	r0, r6
 800e9ec:	4639      	mov	r1, r7
 800e9ee:	f7f1 fc17 	bl	8000220 <__aeabi_dsub>
 800e9f2:	4602      	mov	r2, r0
 800e9f4:	460b      	mov	r3, r1
 800e9f6:	ec51 0b1a 	vmov	r0, r1, d10
 800e9fa:	f7f2 f859 	bl	8000ab0 <__aeabi_dcmpgt>
 800e9fe:	2800      	cmp	r0, #0
 800ea00:	f47f ae04 	bne.w	800e60c <__ieee754_pow+0x3b4>
 800ea04:	4aa4      	ldr	r2, [pc, #656]	; (800ec98 <__ieee754_pow+0xa40>)
 800ea06:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800ea0a:	4293      	cmp	r3, r2
 800ea0c:	f340 8108 	ble.w	800ec20 <__ieee754_pow+0x9c8>
 800ea10:	151b      	asrs	r3, r3, #20
 800ea12:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 800ea16:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 800ea1a:	fa4a f303 	asr.w	r3, sl, r3
 800ea1e:	445b      	add	r3, fp
 800ea20:	f3c3 520a 	ubfx	r2, r3, #20, #11
 800ea24:	4e9d      	ldr	r6, [pc, #628]	; (800ec9c <__ieee754_pow+0xa44>)
 800ea26:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 800ea2a:	4116      	asrs	r6, r2
 800ea2c:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 800ea30:	2000      	movs	r0, #0
 800ea32:	ea23 0106 	bic.w	r1, r3, r6
 800ea36:	f1c2 0214 	rsb	r2, r2, #20
 800ea3a:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 800ea3e:	fa4a fa02 	asr.w	sl, sl, r2
 800ea42:	f1bb 0f00 	cmp.w	fp, #0
 800ea46:	4602      	mov	r2, r0
 800ea48:	460b      	mov	r3, r1
 800ea4a:	4620      	mov	r0, r4
 800ea4c:	4629      	mov	r1, r5
 800ea4e:	bfb8      	it	lt
 800ea50:	f1ca 0a00 	rsblt	sl, sl, #0
 800ea54:	f7f1 fbe4 	bl	8000220 <__aeabi_dsub>
 800ea58:	ec41 0b19 	vmov	d9, r0, r1
 800ea5c:	4642      	mov	r2, r8
 800ea5e:	464b      	mov	r3, r9
 800ea60:	ec51 0b19 	vmov	r0, r1, d9
 800ea64:	f7f1 fbde 	bl	8000224 <__adddf3>
 800ea68:	a37b      	add	r3, pc, #492	; (adr r3, 800ec58 <__ieee754_pow+0xa00>)
 800ea6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ea6e:	2000      	movs	r0, #0
 800ea70:	4604      	mov	r4, r0
 800ea72:	460d      	mov	r5, r1
 800ea74:	f7f1 fd8c 	bl	8000590 <__aeabi_dmul>
 800ea78:	ec53 2b19 	vmov	r2, r3, d9
 800ea7c:	4606      	mov	r6, r0
 800ea7e:	460f      	mov	r7, r1
 800ea80:	4620      	mov	r0, r4
 800ea82:	4629      	mov	r1, r5
 800ea84:	f7f1 fbcc 	bl	8000220 <__aeabi_dsub>
 800ea88:	4602      	mov	r2, r0
 800ea8a:	460b      	mov	r3, r1
 800ea8c:	4640      	mov	r0, r8
 800ea8e:	4649      	mov	r1, r9
 800ea90:	f7f1 fbc6 	bl	8000220 <__aeabi_dsub>
 800ea94:	a372      	add	r3, pc, #456	; (adr r3, 800ec60 <__ieee754_pow+0xa08>)
 800ea96:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ea9a:	f7f1 fd79 	bl	8000590 <__aeabi_dmul>
 800ea9e:	a372      	add	r3, pc, #456	; (adr r3, 800ec68 <__ieee754_pow+0xa10>)
 800eaa0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eaa4:	4680      	mov	r8, r0
 800eaa6:	4689      	mov	r9, r1
 800eaa8:	4620      	mov	r0, r4
 800eaaa:	4629      	mov	r1, r5
 800eaac:	f7f1 fd70 	bl	8000590 <__aeabi_dmul>
 800eab0:	4602      	mov	r2, r0
 800eab2:	460b      	mov	r3, r1
 800eab4:	4640      	mov	r0, r8
 800eab6:	4649      	mov	r1, r9
 800eab8:	f7f1 fbb4 	bl	8000224 <__adddf3>
 800eabc:	4604      	mov	r4, r0
 800eabe:	460d      	mov	r5, r1
 800eac0:	4602      	mov	r2, r0
 800eac2:	460b      	mov	r3, r1
 800eac4:	4630      	mov	r0, r6
 800eac6:	4639      	mov	r1, r7
 800eac8:	f7f1 fbac 	bl	8000224 <__adddf3>
 800eacc:	4632      	mov	r2, r6
 800eace:	463b      	mov	r3, r7
 800ead0:	4680      	mov	r8, r0
 800ead2:	4689      	mov	r9, r1
 800ead4:	f7f1 fba4 	bl	8000220 <__aeabi_dsub>
 800ead8:	4602      	mov	r2, r0
 800eada:	460b      	mov	r3, r1
 800eadc:	4620      	mov	r0, r4
 800eade:	4629      	mov	r1, r5
 800eae0:	f7f1 fb9e 	bl	8000220 <__aeabi_dsub>
 800eae4:	4642      	mov	r2, r8
 800eae6:	4606      	mov	r6, r0
 800eae8:	460f      	mov	r7, r1
 800eaea:	464b      	mov	r3, r9
 800eaec:	4640      	mov	r0, r8
 800eaee:	4649      	mov	r1, r9
 800eaf0:	f7f1 fd4e 	bl	8000590 <__aeabi_dmul>
 800eaf4:	a35e      	add	r3, pc, #376	; (adr r3, 800ec70 <__ieee754_pow+0xa18>)
 800eaf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eafa:	4604      	mov	r4, r0
 800eafc:	460d      	mov	r5, r1
 800eafe:	f7f1 fd47 	bl	8000590 <__aeabi_dmul>
 800eb02:	a35d      	add	r3, pc, #372	; (adr r3, 800ec78 <__ieee754_pow+0xa20>)
 800eb04:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eb08:	f7f1 fb8a 	bl	8000220 <__aeabi_dsub>
 800eb0c:	4622      	mov	r2, r4
 800eb0e:	462b      	mov	r3, r5
 800eb10:	f7f1 fd3e 	bl	8000590 <__aeabi_dmul>
 800eb14:	a35a      	add	r3, pc, #360	; (adr r3, 800ec80 <__ieee754_pow+0xa28>)
 800eb16:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eb1a:	f7f1 fb83 	bl	8000224 <__adddf3>
 800eb1e:	4622      	mov	r2, r4
 800eb20:	462b      	mov	r3, r5
 800eb22:	f7f1 fd35 	bl	8000590 <__aeabi_dmul>
 800eb26:	a358      	add	r3, pc, #352	; (adr r3, 800ec88 <__ieee754_pow+0xa30>)
 800eb28:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eb2c:	f7f1 fb78 	bl	8000220 <__aeabi_dsub>
 800eb30:	4622      	mov	r2, r4
 800eb32:	462b      	mov	r3, r5
 800eb34:	f7f1 fd2c 	bl	8000590 <__aeabi_dmul>
 800eb38:	a355      	add	r3, pc, #340	; (adr r3, 800ec90 <__ieee754_pow+0xa38>)
 800eb3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eb3e:	f7f1 fb71 	bl	8000224 <__adddf3>
 800eb42:	4622      	mov	r2, r4
 800eb44:	462b      	mov	r3, r5
 800eb46:	f7f1 fd23 	bl	8000590 <__aeabi_dmul>
 800eb4a:	4602      	mov	r2, r0
 800eb4c:	460b      	mov	r3, r1
 800eb4e:	4640      	mov	r0, r8
 800eb50:	4649      	mov	r1, r9
 800eb52:	f7f1 fb65 	bl	8000220 <__aeabi_dsub>
 800eb56:	4604      	mov	r4, r0
 800eb58:	460d      	mov	r5, r1
 800eb5a:	4602      	mov	r2, r0
 800eb5c:	460b      	mov	r3, r1
 800eb5e:	4640      	mov	r0, r8
 800eb60:	4649      	mov	r1, r9
 800eb62:	f7f1 fd15 	bl	8000590 <__aeabi_dmul>
 800eb66:	2200      	movs	r2, #0
 800eb68:	ec41 0b19 	vmov	d9, r0, r1
 800eb6c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800eb70:	4620      	mov	r0, r4
 800eb72:	4629      	mov	r1, r5
 800eb74:	f7f1 fb54 	bl	8000220 <__aeabi_dsub>
 800eb78:	4602      	mov	r2, r0
 800eb7a:	460b      	mov	r3, r1
 800eb7c:	ec51 0b19 	vmov	r0, r1, d9
 800eb80:	f7f1 fe30 	bl	80007e4 <__aeabi_ddiv>
 800eb84:	4632      	mov	r2, r6
 800eb86:	4604      	mov	r4, r0
 800eb88:	460d      	mov	r5, r1
 800eb8a:	463b      	mov	r3, r7
 800eb8c:	4640      	mov	r0, r8
 800eb8e:	4649      	mov	r1, r9
 800eb90:	f7f1 fcfe 	bl	8000590 <__aeabi_dmul>
 800eb94:	4632      	mov	r2, r6
 800eb96:	463b      	mov	r3, r7
 800eb98:	f7f1 fb44 	bl	8000224 <__adddf3>
 800eb9c:	4602      	mov	r2, r0
 800eb9e:	460b      	mov	r3, r1
 800eba0:	4620      	mov	r0, r4
 800eba2:	4629      	mov	r1, r5
 800eba4:	f7f1 fb3c 	bl	8000220 <__aeabi_dsub>
 800eba8:	4642      	mov	r2, r8
 800ebaa:	464b      	mov	r3, r9
 800ebac:	f7f1 fb38 	bl	8000220 <__aeabi_dsub>
 800ebb0:	460b      	mov	r3, r1
 800ebb2:	4602      	mov	r2, r0
 800ebb4:	493a      	ldr	r1, [pc, #232]	; (800eca0 <__ieee754_pow+0xa48>)
 800ebb6:	2000      	movs	r0, #0
 800ebb8:	f7f1 fb32 	bl	8000220 <__aeabi_dsub>
 800ebbc:	ec41 0b10 	vmov	d0, r0, r1
 800ebc0:	ee10 3a90 	vmov	r3, s1
 800ebc4:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 800ebc8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800ebcc:	da2b      	bge.n	800ec26 <__ieee754_pow+0x9ce>
 800ebce:	4650      	mov	r0, sl
 800ebd0:	f001 fd66 	bl	80106a0 <scalbn>
 800ebd4:	ec51 0b10 	vmov	r0, r1, d0
 800ebd8:	ec53 2b18 	vmov	r2, r3, d8
 800ebdc:	f7ff bbed 	b.w	800e3ba <__ieee754_pow+0x162>
 800ebe0:	4b30      	ldr	r3, [pc, #192]	; (800eca4 <__ieee754_pow+0xa4c>)
 800ebe2:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 800ebe6:	429e      	cmp	r6, r3
 800ebe8:	f77f af0c 	ble.w	800ea04 <__ieee754_pow+0x7ac>
 800ebec:	4b2e      	ldr	r3, [pc, #184]	; (800eca8 <__ieee754_pow+0xa50>)
 800ebee:	440b      	add	r3, r1
 800ebf0:	4303      	orrs	r3, r0
 800ebf2:	d009      	beq.n	800ec08 <__ieee754_pow+0x9b0>
 800ebf4:	ec51 0b18 	vmov	r0, r1, d8
 800ebf8:	2200      	movs	r2, #0
 800ebfa:	2300      	movs	r3, #0
 800ebfc:	f7f1 ff3a 	bl	8000a74 <__aeabi_dcmplt>
 800ec00:	3800      	subs	r0, #0
 800ec02:	bf18      	it	ne
 800ec04:	2001      	movne	r0, #1
 800ec06:	e447      	b.n	800e498 <__ieee754_pow+0x240>
 800ec08:	4622      	mov	r2, r4
 800ec0a:	462b      	mov	r3, r5
 800ec0c:	f7f1 fb08 	bl	8000220 <__aeabi_dsub>
 800ec10:	4642      	mov	r2, r8
 800ec12:	464b      	mov	r3, r9
 800ec14:	f7f1 ff42 	bl	8000a9c <__aeabi_dcmpge>
 800ec18:	2800      	cmp	r0, #0
 800ec1a:	f43f aef3 	beq.w	800ea04 <__ieee754_pow+0x7ac>
 800ec1e:	e7e9      	b.n	800ebf4 <__ieee754_pow+0x99c>
 800ec20:	f04f 0a00 	mov.w	sl, #0
 800ec24:	e71a      	b.n	800ea5c <__ieee754_pow+0x804>
 800ec26:	ec51 0b10 	vmov	r0, r1, d0
 800ec2a:	4619      	mov	r1, r3
 800ec2c:	e7d4      	b.n	800ebd8 <__ieee754_pow+0x980>
 800ec2e:	491c      	ldr	r1, [pc, #112]	; (800eca0 <__ieee754_pow+0xa48>)
 800ec30:	2000      	movs	r0, #0
 800ec32:	f7ff bb30 	b.w	800e296 <__ieee754_pow+0x3e>
 800ec36:	2000      	movs	r0, #0
 800ec38:	2100      	movs	r1, #0
 800ec3a:	f7ff bb2c 	b.w	800e296 <__ieee754_pow+0x3e>
 800ec3e:	4630      	mov	r0, r6
 800ec40:	4639      	mov	r1, r7
 800ec42:	f7ff bb28 	b.w	800e296 <__ieee754_pow+0x3e>
 800ec46:	9204      	str	r2, [sp, #16]
 800ec48:	f7ff bb7a 	b.w	800e340 <__ieee754_pow+0xe8>
 800ec4c:	2300      	movs	r3, #0
 800ec4e:	f7ff bb64 	b.w	800e31a <__ieee754_pow+0xc2>
 800ec52:	bf00      	nop
 800ec54:	f3af 8000 	nop.w
 800ec58:	00000000 	.word	0x00000000
 800ec5c:	3fe62e43 	.word	0x3fe62e43
 800ec60:	fefa39ef 	.word	0xfefa39ef
 800ec64:	3fe62e42 	.word	0x3fe62e42
 800ec68:	0ca86c39 	.word	0x0ca86c39
 800ec6c:	be205c61 	.word	0xbe205c61
 800ec70:	72bea4d0 	.word	0x72bea4d0
 800ec74:	3e663769 	.word	0x3e663769
 800ec78:	c5d26bf1 	.word	0xc5d26bf1
 800ec7c:	3ebbbd41 	.word	0x3ebbbd41
 800ec80:	af25de2c 	.word	0xaf25de2c
 800ec84:	3f11566a 	.word	0x3f11566a
 800ec88:	16bebd93 	.word	0x16bebd93
 800ec8c:	3f66c16c 	.word	0x3f66c16c
 800ec90:	5555553e 	.word	0x5555553e
 800ec94:	3fc55555 	.word	0x3fc55555
 800ec98:	3fe00000 	.word	0x3fe00000
 800ec9c:	000fffff 	.word	0x000fffff
 800eca0:	3ff00000 	.word	0x3ff00000
 800eca4:	4090cbff 	.word	0x4090cbff
 800eca8:	3f6f3400 	.word	0x3f6f3400
 800ecac:	652b82fe 	.word	0x652b82fe
 800ecb0:	3c971547 	.word	0x3c971547
 800ecb4:	00000000 	.word	0x00000000

0800ecb8 <__ieee754_rem_pio2>:
 800ecb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecbc:	ed2d 8b02 	vpush	{d8}
 800ecc0:	ec55 4b10 	vmov	r4, r5, d0
 800ecc4:	4bca      	ldr	r3, [pc, #808]	; (800eff0 <__ieee754_rem_pio2+0x338>)
 800ecc6:	b08b      	sub	sp, #44	; 0x2c
 800ecc8:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800eccc:	4598      	cmp	r8, r3
 800ecce:	4682      	mov	sl, r0
 800ecd0:	9502      	str	r5, [sp, #8]
 800ecd2:	dc08      	bgt.n	800ece6 <__ieee754_rem_pio2+0x2e>
 800ecd4:	2200      	movs	r2, #0
 800ecd6:	2300      	movs	r3, #0
 800ecd8:	ed80 0b00 	vstr	d0, [r0]
 800ecdc:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800ece0:	f04f 0b00 	mov.w	fp, #0
 800ece4:	e028      	b.n	800ed38 <__ieee754_rem_pio2+0x80>
 800ece6:	4bc3      	ldr	r3, [pc, #780]	; (800eff4 <__ieee754_rem_pio2+0x33c>)
 800ece8:	4598      	cmp	r8, r3
 800ecea:	dc78      	bgt.n	800edde <__ieee754_rem_pio2+0x126>
 800ecec:	9b02      	ldr	r3, [sp, #8]
 800ecee:	4ec2      	ldr	r6, [pc, #776]	; (800eff8 <__ieee754_rem_pio2+0x340>)
 800ecf0:	2b00      	cmp	r3, #0
 800ecf2:	ee10 0a10 	vmov	r0, s0
 800ecf6:	a3b0      	add	r3, pc, #704	; (adr r3, 800efb8 <__ieee754_rem_pio2+0x300>)
 800ecf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ecfc:	4629      	mov	r1, r5
 800ecfe:	dd39      	ble.n	800ed74 <__ieee754_rem_pio2+0xbc>
 800ed00:	f7f1 fa8e 	bl	8000220 <__aeabi_dsub>
 800ed04:	45b0      	cmp	r8, r6
 800ed06:	4604      	mov	r4, r0
 800ed08:	460d      	mov	r5, r1
 800ed0a:	d01b      	beq.n	800ed44 <__ieee754_rem_pio2+0x8c>
 800ed0c:	a3ac      	add	r3, pc, #688	; (adr r3, 800efc0 <__ieee754_rem_pio2+0x308>)
 800ed0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed12:	f7f1 fa85 	bl	8000220 <__aeabi_dsub>
 800ed16:	4602      	mov	r2, r0
 800ed18:	460b      	mov	r3, r1
 800ed1a:	e9ca 2300 	strd	r2, r3, [sl]
 800ed1e:	4620      	mov	r0, r4
 800ed20:	4629      	mov	r1, r5
 800ed22:	f7f1 fa7d 	bl	8000220 <__aeabi_dsub>
 800ed26:	a3a6      	add	r3, pc, #664	; (adr r3, 800efc0 <__ieee754_rem_pio2+0x308>)
 800ed28:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed2c:	f7f1 fa78 	bl	8000220 <__aeabi_dsub>
 800ed30:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800ed34:	f04f 0b01 	mov.w	fp, #1
 800ed38:	4658      	mov	r0, fp
 800ed3a:	b00b      	add	sp, #44	; 0x2c
 800ed3c:	ecbd 8b02 	vpop	{d8}
 800ed40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed44:	a3a0      	add	r3, pc, #640	; (adr r3, 800efc8 <__ieee754_rem_pio2+0x310>)
 800ed46:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed4a:	f7f1 fa69 	bl	8000220 <__aeabi_dsub>
 800ed4e:	a3a0      	add	r3, pc, #640	; (adr r3, 800efd0 <__ieee754_rem_pio2+0x318>)
 800ed50:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed54:	4604      	mov	r4, r0
 800ed56:	460d      	mov	r5, r1
 800ed58:	f7f1 fa62 	bl	8000220 <__aeabi_dsub>
 800ed5c:	4602      	mov	r2, r0
 800ed5e:	460b      	mov	r3, r1
 800ed60:	e9ca 2300 	strd	r2, r3, [sl]
 800ed64:	4620      	mov	r0, r4
 800ed66:	4629      	mov	r1, r5
 800ed68:	f7f1 fa5a 	bl	8000220 <__aeabi_dsub>
 800ed6c:	a398      	add	r3, pc, #608	; (adr r3, 800efd0 <__ieee754_rem_pio2+0x318>)
 800ed6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed72:	e7db      	b.n	800ed2c <__ieee754_rem_pio2+0x74>
 800ed74:	f7f1 fa56 	bl	8000224 <__adddf3>
 800ed78:	45b0      	cmp	r8, r6
 800ed7a:	4604      	mov	r4, r0
 800ed7c:	460d      	mov	r5, r1
 800ed7e:	d016      	beq.n	800edae <__ieee754_rem_pio2+0xf6>
 800ed80:	a38f      	add	r3, pc, #572	; (adr r3, 800efc0 <__ieee754_rem_pio2+0x308>)
 800ed82:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed86:	f7f1 fa4d 	bl	8000224 <__adddf3>
 800ed8a:	4602      	mov	r2, r0
 800ed8c:	460b      	mov	r3, r1
 800ed8e:	e9ca 2300 	strd	r2, r3, [sl]
 800ed92:	4620      	mov	r0, r4
 800ed94:	4629      	mov	r1, r5
 800ed96:	f7f1 fa43 	bl	8000220 <__aeabi_dsub>
 800ed9a:	a389      	add	r3, pc, #548	; (adr r3, 800efc0 <__ieee754_rem_pio2+0x308>)
 800ed9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eda0:	f7f1 fa40 	bl	8000224 <__adddf3>
 800eda4:	f04f 3bff 	mov.w	fp, #4294967295
 800eda8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800edac:	e7c4      	b.n	800ed38 <__ieee754_rem_pio2+0x80>
 800edae:	a386      	add	r3, pc, #536	; (adr r3, 800efc8 <__ieee754_rem_pio2+0x310>)
 800edb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800edb4:	f7f1 fa36 	bl	8000224 <__adddf3>
 800edb8:	a385      	add	r3, pc, #532	; (adr r3, 800efd0 <__ieee754_rem_pio2+0x318>)
 800edba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800edbe:	4604      	mov	r4, r0
 800edc0:	460d      	mov	r5, r1
 800edc2:	f7f1 fa2f 	bl	8000224 <__adddf3>
 800edc6:	4602      	mov	r2, r0
 800edc8:	460b      	mov	r3, r1
 800edca:	e9ca 2300 	strd	r2, r3, [sl]
 800edce:	4620      	mov	r0, r4
 800edd0:	4629      	mov	r1, r5
 800edd2:	f7f1 fa25 	bl	8000220 <__aeabi_dsub>
 800edd6:	a37e      	add	r3, pc, #504	; (adr r3, 800efd0 <__ieee754_rem_pio2+0x318>)
 800edd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eddc:	e7e0      	b.n	800eda0 <__ieee754_rem_pio2+0xe8>
 800edde:	4b87      	ldr	r3, [pc, #540]	; (800effc <__ieee754_rem_pio2+0x344>)
 800ede0:	4598      	cmp	r8, r3
 800ede2:	f300 80d9 	bgt.w	800ef98 <__ieee754_rem_pio2+0x2e0>
 800ede6:	f001 fbbf 	bl	8010568 <fabs>
 800edea:	ec55 4b10 	vmov	r4, r5, d0
 800edee:	ee10 0a10 	vmov	r0, s0
 800edf2:	a379      	add	r3, pc, #484	; (adr r3, 800efd8 <__ieee754_rem_pio2+0x320>)
 800edf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800edf8:	4629      	mov	r1, r5
 800edfa:	f7f1 fbc9 	bl	8000590 <__aeabi_dmul>
 800edfe:	4b80      	ldr	r3, [pc, #512]	; (800f000 <__ieee754_rem_pio2+0x348>)
 800ee00:	2200      	movs	r2, #0
 800ee02:	f7f1 fa0f 	bl	8000224 <__adddf3>
 800ee06:	f7f1 fe73 	bl	8000af0 <__aeabi_d2iz>
 800ee0a:	4683      	mov	fp, r0
 800ee0c:	f7f1 fb56 	bl	80004bc <__aeabi_i2d>
 800ee10:	4602      	mov	r2, r0
 800ee12:	460b      	mov	r3, r1
 800ee14:	ec43 2b18 	vmov	d8, r2, r3
 800ee18:	a367      	add	r3, pc, #412	; (adr r3, 800efb8 <__ieee754_rem_pio2+0x300>)
 800ee1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ee1e:	f7f1 fbb7 	bl	8000590 <__aeabi_dmul>
 800ee22:	4602      	mov	r2, r0
 800ee24:	460b      	mov	r3, r1
 800ee26:	4620      	mov	r0, r4
 800ee28:	4629      	mov	r1, r5
 800ee2a:	f7f1 f9f9 	bl	8000220 <__aeabi_dsub>
 800ee2e:	a364      	add	r3, pc, #400	; (adr r3, 800efc0 <__ieee754_rem_pio2+0x308>)
 800ee30:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ee34:	4606      	mov	r6, r0
 800ee36:	460f      	mov	r7, r1
 800ee38:	ec51 0b18 	vmov	r0, r1, d8
 800ee3c:	f7f1 fba8 	bl	8000590 <__aeabi_dmul>
 800ee40:	f1bb 0f1f 	cmp.w	fp, #31
 800ee44:	4604      	mov	r4, r0
 800ee46:	460d      	mov	r5, r1
 800ee48:	dc0d      	bgt.n	800ee66 <__ieee754_rem_pio2+0x1ae>
 800ee4a:	4b6e      	ldr	r3, [pc, #440]	; (800f004 <__ieee754_rem_pio2+0x34c>)
 800ee4c:	f10b 32ff 	add.w	r2, fp, #4294967295
 800ee50:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ee54:	4543      	cmp	r3, r8
 800ee56:	d006      	beq.n	800ee66 <__ieee754_rem_pio2+0x1ae>
 800ee58:	4622      	mov	r2, r4
 800ee5a:	462b      	mov	r3, r5
 800ee5c:	4630      	mov	r0, r6
 800ee5e:	4639      	mov	r1, r7
 800ee60:	f7f1 f9de 	bl	8000220 <__aeabi_dsub>
 800ee64:	e00f      	b.n	800ee86 <__ieee754_rem_pio2+0x1ce>
 800ee66:	462b      	mov	r3, r5
 800ee68:	4622      	mov	r2, r4
 800ee6a:	4630      	mov	r0, r6
 800ee6c:	4639      	mov	r1, r7
 800ee6e:	f7f1 f9d7 	bl	8000220 <__aeabi_dsub>
 800ee72:	ea4f 5328 	mov.w	r3, r8, asr #20
 800ee76:	9303      	str	r3, [sp, #12]
 800ee78:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800ee7c:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 800ee80:	f1b8 0f10 	cmp.w	r8, #16
 800ee84:	dc02      	bgt.n	800ee8c <__ieee754_rem_pio2+0x1d4>
 800ee86:	e9ca 0100 	strd	r0, r1, [sl]
 800ee8a:	e039      	b.n	800ef00 <__ieee754_rem_pio2+0x248>
 800ee8c:	a34e      	add	r3, pc, #312	; (adr r3, 800efc8 <__ieee754_rem_pio2+0x310>)
 800ee8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ee92:	ec51 0b18 	vmov	r0, r1, d8
 800ee96:	f7f1 fb7b 	bl	8000590 <__aeabi_dmul>
 800ee9a:	4604      	mov	r4, r0
 800ee9c:	460d      	mov	r5, r1
 800ee9e:	4602      	mov	r2, r0
 800eea0:	460b      	mov	r3, r1
 800eea2:	4630      	mov	r0, r6
 800eea4:	4639      	mov	r1, r7
 800eea6:	f7f1 f9bb 	bl	8000220 <__aeabi_dsub>
 800eeaa:	4602      	mov	r2, r0
 800eeac:	460b      	mov	r3, r1
 800eeae:	4680      	mov	r8, r0
 800eeb0:	4689      	mov	r9, r1
 800eeb2:	4630      	mov	r0, r6
 800eeb4:	4639      	mov	r1, r7
 800eeb6:	f7f1 f9b3 	bl	8000220 <__aeabi_dsub>
 800eeba:	4622      	mov	r2, r4
 800eebc:	462b      	mov	r3, r5
 800eebe:	f7f1 f9af 	bl	8000220 <__aeabi_dsub>
 800eec2:	a343      	add	r3, pc, #268	; (adr r3, 800efd0 <__ieee754_rem_pio2+0x318>)
 800eec4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eec8:	4604      	mov	r4, r0
 800eeca:	460d      	mov	r5, r1
 800eecc:	ec51 0b18 	vmov	r0, r1, d8
 800eed0:	f7f1 fb5e 	bl	8000590 <__aeabi_dmul>
 800eed4:	4622      	mov	r2, r4
 800eed6:	462b      	mov	r3, r5
 800eed8:	f7f1 f9a2 	bl	8000220 <__aeabi_dsub>
 800eedc:	4602      	mov	r2, r0
 800eede:	460b      	mov	r3, r1
 800eee0:	4604      	mov	r4, r0
 800eee2:	460d      	mov	r5, r1
 800eee4:	4640      	mov	r0, r8
 800eee6:	4649      	mov	r1, r9
 800eee8:	f7f1 f99a 	bl	8000220 <__aeabi_dsub>
 800eeec:	9a03      	ldr	r2, [sp, #12]
 800eeee:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800eef2:	1ad3      	subs	r3, r2, r3
 800eef4:	2b31      	cmp	r3, #49	; 0x31
 800eef6:	dc24      	bgt.n	800ef42 <__ieee754_rem_pio2+0x28a>
 800eef8:	e9ca 0100 	strd	r0, r1, [sl]
 800eefc:	4646      	mov	r6, r8
 800eefe:	464f      	mov	r7, r9
 800ef00:	e9da 8900 	ldrd	r8, r9, [sl]
 800ef04:	4630      	mov	r0, r6
 800ef06:	4642      	mov	r2, r8
 800ef08:	464b      	mov	r3, r9
 800ef0a:	4639      	mov	r1, r7
 800ef0c:	f7f1 f988 	bl	8000220 <__aeabi_dsub>
 800ef10:	462b      	mov	r3, r5
 800ef12:	4622      	mov	r2, r4
 800ef14:	f7f1 f984 	bl	8000220 <__aeabi_dsub>
 800ef18:	9b02      	ldr	r3, [sp, #8]
 800ef1a:	2b00      	cmp	r3, #0
 800ef1c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800ef20:	f6bf af0a 	bge.w	800ed38 <__ieee754_rem_pio2+0x80>
 800ef24:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800ef28:	f8ca 3004 	str.w	r3, [sl, #4]
 800ef2c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ef30:	f8ca 8000 	str.w	r8, [sl]
 800ef34:	f8ca 0008 	str.w	r0, [sl, #8]
 800ef38:	f8ca 300c 	str.w	r3, [sl, #12]
 800ef3c:	f1cb 0b00 	rsb	fp, fp, #0
 800ef40:	e6fa      	b.n	800ed38 <__ieee754_rem_pio2+0x80>
 800ef42:	a327      	add	r3, pc, #156	; (adr r3, 800efe0 <__ieee754_rem_pio2+0x328>)
 800ef44:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ef48:	ec51 0b18 	vmov	r0, r1, d8
 800ef4c:	f7f1 fb20 	bl	8000590 <__aeabi_dmul>
 800ef50:	4604      	mov	r4, r0
 800ef52:	460d      	mov	r5, r1
 800ef54:	4602      	mov	r2, r0
 800ef56:	460b      	mov	r3, r1
 800ef58:	4640      	mov	r0, r8
 800ef5a:	4649      	mov	r1, r9
 800ef5c:	f7f1 f960 	bl	8000220 <__aeabi_dsub>
 800ef60:	4602      	mov	r2, r0
 800ef62:	460b      	mov	r3, r1
 800ef64:	4606      	mov	r6, r0
 800ef66:	460f      	mov	r7, r1
 800ef68:	4640      	mov	r0, r8
 800ef6a:	4649      	mov	r1, r9
 800ef6c:	f7f1 f958 	bl	8000220 <__aeabi_dsub>
 800ef70:	4622      	mov	r2, r4
 800ef72:	462b      	mov	r3, r5
 800ef74:	f7f1 f954 	bl	8000220 <__aeabi_dsub>
 800ef78:	a31b      	add	r3, pc, #108	; (adr r3, 800efe8 <__ieee754_rem_pio2+0x330>)
 800ef7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ef7e:	4604      	mov	r4, r0
 800ef80:	460d      	mov	r5, r1
 800ef82:	ec51 0b18 	vmov	r0, r1, d8
 800ef86:	f7f1 fb03 	bl	8000590 <__aeabi_dmul>
 800ef8a:	4622      	mov	r2, r4
 800ef8c:	462b      	mov	r3, r5
 800ef8e:	f7f1 f947 	bl	8000220 <__aeabi_dsub>
 800ef92:	4604      	mov	r4, r0
 800ef94:	460d      	mov	r5, r1
 800ef96:	e75f      	b.n	800ee58 <__ieee754_rem_pio2+0x1a0>
 800ef98:	4b1b      	ldr	r3, [pc, #108]	; (800f008 <__ieee754_rem_pio2+0x350>)
 800ef9a:	4598      	cmp	r8, r3
 800ef9c:	dd36      	ble.n	800f00c <__ieee754_rem_pio2+0x354>
 800ef9e:	ee10 2a10 	vmov	r2, s0
 800efa2:	462b      	mov	r3, r5
 800efa4:	4620      	mov	r0, r4
 800efa6:	4629      	mov	r1, r5
 800efa8:	f7f1 f93a 	bl	8000220 <__aeabi_dsub>
 800efac:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800efb0:	e9ca 0100 	strd	r0, r1, [sl]
 800efb4:	e694      	b.n	800ece0 <__ieee754_rem_pio2+0x28>
 800efb6:	bf00      	nop
 800efb8:	54400000 	.word	0x54400000
 800efbc:	3ff921fb 	.word	0x3ff921fb
 800efc0:	1a626331 	.word	0x1a626331
 800efc4:	3dd0b461 	.word	0x3dd0b461
 800efc8:	1a600000 	.word	0x1a600000
 800efcc:	3dd0b461 	.word	0x3dd0b461
 800efd0:	2e037073 	.word	0x2e037073
 800efd4:	3ba3198a 	.word	0x3ba3198a
 800efd8:	6dc9c883 	.word	0x6dc9c883
 800efdc:	3fe45f30 	.word	0x3fe45f30
 800efe0:	2e000000 	.word	0x2e000000
 800efe4:	3ba3198a 	.word	0x3ba3198a
 800efe8:	252049c1 	.word	0x252049c1
 800efec:	397b839a 	.word	0x397b839a
 800eff0:	3fe921fb 	.word	0x3fe921fb
 800eff4:	4002d97b 	.word	0x4002d97b
 800eff8:	3ff921fb 	.word	0x3ff921fb
 800effc:	413921fb 	.word	0x413921fb
 800f000:	3fe00000 	.word	0x3fe00000
 800f004:	08010958 	.word	0x08010958
 800f008:	7fefffff 	.word	0x7fefffff
 800f00c:	ea4f 5428 	mov.w	r4, r8, asr #20
 800f010:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 800f014:	ee10 0a10 	vmov	r0, s0
 800f018:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 800f01c:	ee10 6a10 	vmov	r6, s0
 800f020:	460f      	mov	r7, r1
 800f022:	f7f1 fd65 	bl	8000af0 <__aeabi_d2iz>
 800f026:	f7f1 fa49 	bl	80004bc <__aeabi_i2d>
 800f02a:	4602      	mov	r2, r0
 800f02c:	460b      	mov	r3, r1
 800f02e:	4630      	mov	r0, r6
 800f030:	4639      	mov	r1, r7
 800f032:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800f036:	f7f1 f8f3 	bl	8000220 <__aeabi_dsub>
 800f03a:	4b23      	ldr	r3, [pc, #140]	; (800f0c8 <__ieee754_rem_pio2+0x410>)
 800f03c:	2200      	movs	r2, #0
 800f03e:	f7f1 faa7 	bl	8000590 <__aeabi_dmul>
 800f042:	460f      	mov	r7, r1
 800f044:	4606      	mov	r6, r0
 800f046:	f7f1 fd53 	bl	8000af0 <__aeabi_d2iz>
 800f04a:	f7f1 fa37 	bl	80004bc <__aeabi_i2d>
 800f04e:	4602      	mov	r2, r0
 800f050:	460b      	mov	r3, r1
 800f052:	4630      	mov	r0, r6
 800f054:	4639      	mov	r1, r7
 800f056:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800f05a:	f7f1 f8e1 	bl	8000220 <__aeabi_dsub>
 800f05e:	4b1a      	ldr	r3, [pc, #104]	; (800f0c8 <__ieee754_rem_pio2+0x410>)
 800f060:	2200      	movs	r2, #0
 800f062:	f7f1 fa95 	bl	8000590 <__aeabi_dmul>
 800f066:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800f06a:	ad04      	add	r5, sp, #16
 800f06c:	f04f 0803 	mov.w	r8, #3
 800f070:	46a9      	mov	r9, r5
 800f072:	2600      	movs	r6, #0
 800f074:	2700      	movs	r7, #0
 800f076:	4632      	mov	r2, r6
 800f078:	463b      	mov	r3, r7
 800f07a:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 800f07e:	46c3      	mov	fp, r8
 800f080:	3d08      	subs	r5, #8
 800f082:	f108 38ff 	add.w	r8, r8, #4294967295
 800f086:	f7f1 fceb 	bl	8000a60 <__aeabi_dcmpeq>
 800f08a:	2800      	cmp	r0, #0
 800f08c:	d1f3      	bne.n	800f076 <__ieee754_rem_pio2+0x3be>
 800f08e:	4b0f      	ldr	r3, [pc, #60]	; (800f0cc <__ieee754_rem_pio2+0x414>)
 800f090:	9301      	str	r3, [sp, #4]
 800f092:	2302      	movs	r3, #2
 800f094:	9300      	str	r3, [sp, #0]
 800f096:	4622      	mov	r2, r4
 800f098:	465b      	mov	r3, fp
 800f09a:	4651      	mov	r1, sl
 800f09c:	4648      	mov	r0, r9
 800f09e:	f000 fc63 	bl	800f968 <__kernel_rem_pio2>
 800f0a2:	9b02      	ldr	r3, [sp, #8]
 800f0a4:	2b00      	cmp	r3, #0
 800f0a6:	4683      	mov	fp, r0
 800f0a8:	f6bf ae46 	bge.w	800ed38 <__ieee754_rem_pio2+0x80>
 800f0ac:	e9da 2100 	ldrd	r2, r1, [sl]
 800f0b0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f0b4:	e9ca 2300 	strd	r2, r3, [sl]
 800f0b8:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 800f0bc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f0c0:	e9ca 2302 	strd	r2, r3, [sl, #8]
 800f0c4:	e73a      	b.n	800ef3c <__ieee754_rem_pio2+0x284>
 800f0c6:	bf00      	nop
 800f0c8:	41700000 	.word	0x41700000
 800f0cc:	080109d8 	.word	0x080109d8

0800f0d0 <__ieee754_sqrt>:
 800f0d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f0d4:	ec55 4b10 	vmov	r4, r5, d0
 800f0d8:	4e55      	ldr	r6, [pc, #340]	; (800f230 <__ieee754_sqrt+0x160>)
 800f0da:	43ae      	bics	r6, r5
 800f0dc:	ee10 0a10 	vmov	r0, s0
 800f0e0:	ee10 3a10 	vmov	r3, s0
 800f0e4:	462a      	mov	r2, r5
 800f0e6:	4629      	mov	r1, r5
 800f0e8:	d110      	bne.n	800f10c <__ieee754_sqrt+0x3c>
 800f0ea:	ee10 2a10 	vmov	r2, s0
 800f0ee:	462b      	mov	r3, r5
 800f0f0:	f7f1 fa4e 	bl	8000590 <__aeabi_dmul>
 800f0f4:	4602      	mov	r2, r0
 800f0f6:	460b      	mov	r3, r1
 800f0f8:	4620      	mov	r0, r4
 800f0fa:	4629      	mov	r1, r5
 800f0fc:	f7f1 f892 	bl	8000224 <__adddf3>
 800f100:	4604      	mov	r4, r0
 800f102:	460d      	mov	r5, r1
 800f104:	ec45 4b10 	vmov	d0, r4, r5
 800f108:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f10c:	2d00      	cmp	r5, #0
 800f10e:	dc10      	bgt.n	800f132 <__ieee754_sqrt+0x62>
 800f110:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800f114:	4330      	orrs	r0, r6
 800f116:	d0f5      	beq.n	800f104 <__ieee754_sqrt+0x34>
 800f118:	b15d      	cbz	r5, 800f132 <__ieee754_sqrt+0x62>
 800f11a:	ee10 2a10 	vmov	r2, s0
 800f11e:	462b      	mov	r3, r5
 800f120:	ee10 0a10 	vmov	r0, s0
 800f124:	f7f1 f87c 	bl	8000220 <__aeabi_dsub>
 800f128:	4602      	mov	r2, r0
 800f12a:	460b      	mov	r3, r1
 800f12c:	f7f1 fb5a 	bl	80007e4 <__aeabi_ddiv>
 800f130:	e7e6      	b.n	800f100 <__ieee754_sqrt+0x30>
 800f132:	1512      	asrs	r2, r2, #20
 800f134:	d074      	beq.n	800f220 <__ieee754_sqrt+0x150>
 800f136:	07d4      	lsls	r4, r2, #31
 800f138:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800f13c:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 800f140:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800f144:	bf5e      	ittt	pl
 800f146:	0fda      	lsrpl	r2, r3, #31
 800f148:	005b      	lslpl	r3, r3, #1
 800f14a:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 800f14e:	2400      	movs	r4, #0
 800f150:	0fda      	lsrs	r2, r3, #31
 800f152:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800f156:	107f      	asrs	r7, r7, #1
 800f158:	005b      	lsls	r3, r3, #1
 800f15a:	2516      	movs	r5, #22
 800f15c:	4620      	mov	r0, r4
 800f15e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800f162:	1886      	adds	r6, r0, r2
 800f164:	428e      	cmp	r6, r1
 800f166:	bfde      	ittt	le
 800f168:	1b89      	suble	r1, r1, r6
 800f16a:	18b0      	addle	r0, r6, r2
 800f16c:	18a4      	addle	r4, r4, r2
 800f16e:	0049      	lsls	r1, r1, #1
 800f170:	3d01      	subs	r5, #1
 800f172:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 800f176:	ea4f 0252 	mov.w	r2, r2, lsr #1
 800f17a:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800f17e:	d1f0      	bne.n	800f162 <__ieee754_sqrt+0x92>
 800f180:	462a      	mov	r2, r5
 800f182:	f04f 0e20 	mov.w	lr, #32
 800f186:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 800f18a:	4281      	cmp	r1, r0
 800f18c:	eb06 0c05 	add.w	ip, r6, r5
 800f190:	dc02      	bgt.n	800f198 <__ieee754_sqrt+0xc8>
 800f192:	d113      	bne.n	800f1bc <__ieee754_sqrt+0xec>
 800f194:	459c      	cmp	ip, r3
 800f196:	d811      	bhi.n	800f1bc <__ieee754_sqrt+0xec>
 800f198:	f1bc 0f00 	cmp.w	ip, #0
 800f19c:	eb0c 0506 	add.w	r5, ip, r6
 800f1a0:	da43      	bge.n	800f22a <__ieee754_sqrt+0x15a>
 800f1a2:	2d00      	cmp	r5, #0
 800f1a4:	db41      	blt.n	800f22a <__ieee754_sqrt+0x15a>
 800f1a6:	f100 0801 	add.w	r8, r0, #1
 800f1aa:	1a09      	subs	r1, r1, r0
 800f1ac:	459c      	cmp	ip, r3
 800f1ae:	bf88      	it	hi
 800f1b0:	f101 31ff 	addhi.w	r1, r1, #4294967295
 800f1b4:	eba3 030c 	sub.w	r3, r3, ip
 800f1b8:	4432      	add	r2, r6
 800f1ba:	4640      	mov	r0, r8
 800f1bc:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 800f1c0:	f1be 0e01 	subs.w	lr, lr, #1
 800f1c4:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 800f1c8:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800f1cc:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800f1d0:	d1db      	bne.n	800f18a <__ieee754_sqrt+0xba>
 800f1d2:	430b      	orrs	r3, r1
 800f1d4:	d006      	beq.n	800f1e4 <__ieee754_sqrt+0x114>
 800f1d6:	1c50      	adds	r0, r2, #1
 800f1d8:	bf13      	iteet	ne
 800f1da:	3201      	addne	r2, #1
 800f1dc:	3401      	addeq	r4, #1
 800f1de:	4672      	moveq	r2, lr
 800f1e0:	f022 0201 	bicne.w	r2, r2, #1
 800f1e4:	1063      	asrs	r3, r4, #1
 800f1e6:	0852      	lsrs	r2, r2, #1
 800f1e8:	07e1      	lsls	r1, r4, #31
 800f1ea:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800f1ee:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800f1f2:	bf48      	it	mi
 800f1f4:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 800f1f8:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 800f1fc:	4614      	mov	r4, r2
 800f1fe:	e781      	b.n	800f104 <__ieee754_sqrt+0x34>
 800f200:	0ad9      	lsrs	r1, r3, #11
 800f202:	3815      	subs	r0, #21
 800f204:	055b      	lsls	r3, r3, #21
 800f206:	2900      	cmp	r1, #0
 800f208:	d0fa      	beq.n	800f200 <__ieee754_sqrt+0x130>
 800f20a:	02cd      	lsls	r5, r1, #11
 800f20c:	d50a      	bpl.n	800f224 <__ieee754_sqrt+0x154>
 800f20e:	f1c2 0420 	rsb	r4, r2, #32
 800f212:	fa23 f404 	lsr.w	r4, r3, r4
 800f216:	1e55      	subs	r5, r2, #1
 800f218:	4093      	lsls	r3, r2
 800f21a:	4321      	orrs	r1, r4
 800f21c:	1b42      	subs	r2, r0, r5
 800f21e:	e78a      	b.n	800f136 <__ieee754_sqrt+0x66>
 800f220:	4610      	mov	r0, r2
 800f222:	e7f0      	b.n	800f206 <__ieee754_sqrt+0x136>
 800f224:	0049      	lsls	r1, r1, #1
 800f226:	3201      	adds	r2, #1
 800f228:	e7ef      	b.n	800f20a <__ieee754_sqrt+0x13a>
 800f22a:	4680      	mov	r8, r0
 800f22c:	e7bd      	b.n	800f1aa <__ieee754_sqrt+0xda>
 800f22e:	bf00      	nop
 800f230:	7ff00000 	.word	0x7ff00000

0800f234 <__ieee754_powf>:
 800f234:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f238:	ee10 4a90 	vmov	r4, s1
 800f23c:	f034 4800 	bics.w	r8, r4, #2147483648	; 0x80000000
 800f240:	ed2d 8b02 	vpush	{d8}
 800f244:	ee10 6a10 	vmov	r6, s0
 800f248:	eeb0 8a40 	vmov.f32	s16, s0
 800f24c:	eef0 8a60 	vmov.f32	s17, s1
 800f250:	d10c      	bne.n	800f26c <__ieee754_powf+0x38>
 800f252:	f486 0680 	eor.w	r6, r6, #4194304	; 0x400000
 800f256:	0076      	lsls	r6, r6, #1
 800f258:	f516 0f00 	cmn.w	r6, #8388608	; 0x800000
 800f25c:	f240 8296 	bls.w	800f78c <__ieee754_powf+0x558>
 800f260:	ee38 0a28 	vadd.f32	s0, s16, s17
 800f264:	ecbd 8b02 	vpop	{d8}
 800f268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f26c:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 800f270:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 800f274:	dcf4      	bgt.n	800f260 <__ieee754_powf+0x2c>
 800f276:	f1b8 4fff 	cmp.w	r8, #2139095040	; 0x7f800000
 800f27a:	dd08      	ble.n	800f28e <__ieee754_powf+0x5a>
 800f27c:	f1b6 5f7e 	cmp.w	r6, #1065353216	; 0x3f800000
 800f280:	d1ee      	bne.n	800f260 <__ieee754_powf+0x2c>
 800f282:	f484 0480 	eor.w	r4, r4, #4194304	; 0x400000
 800f286:	0064      	lsls	r4, r4, #1
 800f288:	f514 0f00 	cmn.w	r4, #8388608	; 0x800000
 800f28c:	e7e6      	b.n	800f25c <__ieee754_powf+0x28>
 800f28e:	2e00      	cmp	r6, #0
 800f290:	da20      	bge.n	800f2d4 <__ieee754_powf+0xa0>
 800f292:	f1b8 4f97 	cmp.w	r8, #1266679808	; 0x4b800000
 800f296:	da2d      	bge.n	800f2f4 <__ieee754_powf+0xc0>
 800f298:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 800f29c:	f2c0 827f 	blt.w	800f79e <__ieee754_powf+0x56a>
 800f2a0:	ea4f 53e8 	mov.w	r3, r8, asr #23
 800f2a4:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 800f2a8:	fa48 f703 	asr.w	r7, r8, r3
 800f2ac:	fa07 f303 	lsl.w	r3, r7, r3
 800f2b0:	4543      	cmp	r3, r8
 800f2b2:	f040 8274 	bne.w	800f79e <__ieee754_powf+0x56a>
 800f2b6:	f007 0701 	and.w	r7, r7, #1
 800f2ba:	f1c7 0702 	rsb	r7, r7, #2
 800f2be:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 800f2c2:	d11f      	bne.n	800f304 <__ieee754_powf+0xd0>
 800f2c4:	2c00      	cmp	r4, #0
 800f2c6:	f280 8267 	bge.w	800f798 <__ieee754_powf+0x564>
 800f2ca:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f2ce:	ee87 0a88 	vdiv.f32	s0, s15, s16
 800f2d2:	e7c7      	b.n	800f264 <__ieee754_powf+0x30>
 800f2d4:	2700      	movs	r7, #0
 800f2d6:	f1b8 4fff 	cmp.w	r8, #2139095040	; 0x7f800000
 800f2da:	d1f0      	bne.n	800f2be <__ieee754_powf+0x8a>
 800f2dc:	f1b5 5f7e 	cmp.w	r5, #1065353216	; 0x3f800000
 800f2e0:	f000 8254 	beq.w	800f78c <__ieee754_powf+0x558>
 800f2e4:	dd08      	ble.n	800f2f8 <__ieee754_powf+0xc4>
 800f2e6:	ed9f 0ac2 	vldr	s0, [pc, #776]	; 800f5f0 <__ieee754_powf+0x3bc>
 800f2ea:	2c00      	cmp	r4, #0
 800f2ec:	bfa8      	it	ge
 800f2ee:	eeb0 0a68 	vmovge.f32	s0, s17
 800f2f2:	e7b7      	b.n	800f264 <__ieee754_powf+0x30>
 800f2f4:	2702      	movs	r7, #2
 800f2f6:	e7ee      	b.n	800f2d6 <__ieee754_powf+0xa2>
 800f2f8:	2c00      	cmp	r4, #0
 800f2fa:	f280 824a 	bge.w	800f792 <__ieee754_powf+0x55e>
 800f2fe:	eeb1 0a68 	vneg.f32	s0, s17
 800f302:	e7af      	b.n	800f264 <__ieee754_powf+0x30>
 800f304:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
 800f308:	d102      	bne.n	800f310 <__ieee754_powf+0xdc>
 800f30a:	ee28 0a08 	vmul.f32	s0, s16, s16
 800f30e:	e7a9      	b.n	800f264 <__ieee754_powf+0x30>
 800f310:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 800f314:	eeb0 0a48 	vmov.f32	s0, s16
 800f318:	d107      	bne.n	800f32a <__ieee754_powf+0xf6>
 800f31a:	2e00      	cmp	r6, #0
 800f31c:	db05      	blt.n	800f32a <__ieee754_powf+0xf6>
 800f31e:	ecbd 8b02 	vpop	{d8}
 800f322:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f326:	f000 ba53 	b.w	800f7d0 <__ieee754_sqrtf>
 800f32a:	f001 fa3f 	bl	80107ac <fabsf>
 800f32e:	b125      	cbz	r5, 800f33a <__ieee754_powf+0x106>
 800f330:	f026 4340 	bic.w	r3, r6, #3221225472	; 0xc0000000
 800f334:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 800f338:	d116      	bne.n	800f368 <__ieee754_powf+0x134>
 800f33a:	2c00      	cmp	r4, #0
 800f33c:	bfbc      	itt	lt
 800f33e:	eef7 7a00 	vmovlt.f32	s15, #112	; 0x3f800000  1.0
 800f342:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 800f346:	2e00      	cmp	r6, #0
 800f348:	da8c      	bge.n	800f264 <__ieee754_powf+0x30>
 800f34a:	f1a5 557e 	sub.w	r5, r5, #1065353216	; 0x3f800000
 800f34e:	ea55 0307 	orrs.w	r3, r5, r7
 800f352:	d104      	bne.n	800f35e <__ieee754_powf+0x12a>
 800f354:	ee70 7a40 	vsub.f32	s15, s0, s0
 800f358:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 800f35c:	e782      	b.n	800f264 <__ieee754_powf+0x30>
 800f35e:	2f01      	cmp	r7, #1
 800f360:	d180      	bne.n	800f264 <__ieee754_powf+0x30>
 800f362:	eeb1 0a40 	vneg.f32	s0, s0
 800f366:	e77d      	b.n	800f264 <__ieee754_powf+0x30>
 800f368:	0ff0      	lsrs	r0, r6, #31
 800f36a:	3801      	subs	r0, #1
 800f36c:	ea57 0300 	orrs.w	r3, r7, r0
 800f370:	d104      	bne.n	800f37c <__ieee754_powf+0x148>
 800f372:	ee38 8a48 	vsub.f32	s16, s16, s16
 800f376:	ee88 0a08 	vdiv.f32	s0, s16, s16
 800f37a:	e773      	b.n	800f264 <__ieee754_powf+0x30>
 800f37c:	f1b8 4f9a 	cmp.w	r8, #1291845632	; 0x4d000000
 800f380:	dd74      	ble.n	800f46c <__ieee754_powf+0x238>
 800f382:	4b9c      	ldr	r3, [pc, #624]	; (800f5f4 <__ieee754_powf+0x3c0>)
 800f384:	429d      	cmp	r5, r3
 800f386:	dc08      	bgt.n	800f39a <__ieee754_powf+0x166>
 800f388:	2c00      	cmp	r4, #0
 800f38a:	da0b      	bge.n	800f3a4 <__ieee754_powf+0x170>
 800f38c:	2000      	movs	r0, #0
 800f38e:	ecbd 8b02 	vpop	{d8}
 800f392:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f396:	f000 bf41 	b.w	801021c <__math_oflowf>
 800f39a:	4b97      	ldr	r3, [pc, #604]	; (800f5f8 <__ieee754_powf+0x3c4>)
 800f39c:	429d      	cmp	r5, r3
 800f39e:	dd08      	ble.n	800f3b2 <__ieee754_powf+0x17e>
 800f3a0:	2c00      	cmp	r4, #0
 800f3a2:	dcf3      	bgt.n	800f38c <__ieee754_powf+0x158>
 800f3a4:	2000      	movs	r0, #0
 800f3a6:	ecbd 8b02 	vpop	{d8}
 800f3aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f3ae:	f000 bf2f 	b.w	8010210 <__math_uflowf>
 800f3b2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f3b6:	ee30 0a67 	vsub.f32	s0, s0, s15
 800f3ba:	eddf 6a90 	vldr	s13, [pc, #576]	; 800f5fc <__ieee754_powf+0x3c8>
 800f3be:	eef5 7a00 	vmov.f32	s15, #80	; 0x3e800000  0.250
 800f3c2:	eee0 6a67 	vfms.f32	s13, s0, s15
 800f3c6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800f3ca:	eee6 7ac0 	vfms.f32	s15, s13, s0
 800f3ce:	ee20 7a00 	vmul.f32	s14, s0, s0
 800f3d2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800f3d6:	ed9f 7a8a 	vldr	s14, [pc, #552]	; 800f600 <__ieee754_powf+0x3cc>
 800f3da:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800f3de:	ed9f 7a89 	vldr	s14, [pc, #548]	; 800f604 <__ieee754_powf+0x3d0>
 800f3e2:	eee0 7a07 	vfma.f32	s15, s0, s14
 800f3e6:	ed9f 7a88 	vldr	s14, [pc, #544]	; 800f608 <__ieee754_powf+0x3d4>
 800f3ea:	eef0 6a67 	vmov.f32	s13, s15
 800f3ee:	eee0 6a07 	vfma.f32	s13, s0, s14
 800f3f2:	ee16 3a90 	vmov	r3, s13
 800f3f6:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800f3fa:	f023 030f 	bic.w	r3, r3, #15
 800f3fe:	ee00 3a90 	vmov	s1, r3
 800f402:	eee0 0a47 	vfms.f32	s1, s0, s14
 800f406:	ee77 7ae0 	vsub.f32	s15, s15, s1
 800f40a:	f424 647f 	bic.w	r4, r4, #4080	; 0xff0
 800f40e:	f024 040f 	bic.w	r4, r4, #15
 800f412:	ee07 4a10 	vmov	s14, r4
 800f416:	ee67 0aa8 	vmul.f32	s1, s15, s17
 800f41a:	ee38 7ac7 	vsub.f32	s14, s17, s14
 800f41e:	ee07 3a90 	vmov	s15, r3
 800f422:	eee7 0a27 	vfma.f32	s1, s14, s15
 800f426:	3f01      	subs	r7, #1
 800f428:	ea57 0200 	orrs.w	r2, r7, r0
 800f42c:	ee07 4a10 	vmov	s14, r4
 800f430:	ee67 7a87 	vmul.f32	s15, s15, s14
 800f434:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
 800f438:	ee30 7aa7 	vadd.f32	s14, s1, s15
 800f43c:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 800f440:	ee17 4a10 	vmov	r4, s14
 800f444:	bf08      	it	eq
 800f446:	eeb0 8a40 	vmoveq.f32	s16, s0
 800f44a:	2c00      	cmp	r4, #0
 800f44c:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800f450:	f340 817e 	ble.w	800f750 <__ieee754_powf+0x51c>
 800f454:	f1b3 4f86 	cmp.w	r3, #1124073472	; 0x43000000
 800f458:	f340 80f8 	ble.w	800f64c <__ieee754_powf+0x418>
 800f45c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800f460:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f464:	bf4c      	ite	mi
 800f466:	2001      	movmi	r0, #1
 800f468:	2000      	movpl	r0, #0
 800f46a:	e790      	b.n	800f38e <__ieee754_powf+0x15a>
 800f46c:	f016 4fff 	tst.w	r6, #2139095040	; 0x7f800000
 800f470:	bf01      	itttt	eq
 800f472:	eddf 7a66 	vldreq	s15, [pc, #408]	; 800f60c <__ieee754_powf+0x3d8>
 800f476:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 800f47a:	f06f 0217 	mvneq.w	r2, #23
 800f47e:	ee17 5a90 	vmoveq	r5, s15
 800f482:	ea4f 53e5 	mov.w	r3, r5, asr #23
 800f486:	bf18      	it	ne
 800f488:	2200      	movne	r2, #0
 800f48a:	3b7f      	subs	r3, #127	; 0x7f
 800f48c:	4413      	add	r3, r2
 800f48e:	4a60      	ldr	r2, [pc, #384]	; (800f610 <__ieee754_powf+0x3dc>)
 800f490:	f3c5 0516 	ubfx	r5, r5, #0, #23
 800f494:	4295      	cmp	r5, r2
 800f496:	f045 517e 	orr.w	r1, r5, #1065353216	; 0x3f800000
 800f49a:	dd06      	ble.n	800f4aa <__ieee754_powf+0x276>
 800f49c:	4a5d      	ldr	r2, [pc, #372]	; (800f614 <__ieee754_powf+0x3e0>)
 800f49e:	4295      	cmp	r5, r2
 800f4a0:	f340 80a4 	ble.w	800f5ec <__ieee754_powf+0x3b8>
 800f4a4:	3301      	adds	r3, #1
 800f4a6:	f5a1 0100 	sub.w	r1, r1, #8388608	; 0x800000
 800f4aa:	2500      	movs	r5, #0
 800f4ac:	4a5a      	ldr	r2, [pc, #360]	; (800f618 <__ieee754_powf+0x3e4>)
 800f4ae:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 800f4b2:	ee07 1a90 	vmov	s15, r1
 800f4b6:	ed92 7a00 	vldr	s14, [r2]
 800f4ba:	4a58      	ldr	r2, [pc, #352]	; (800f61c <__ieee754_powf+0x3e8>)
 800f4bc:	ee37 6a27 	vadd.f32	s12, s14, s15
 800f4c0:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 800f4c4:	eec5 6a86 	vdiv.f32	s13, s11, s12
 800f4c8:	1049      	asrs	r1, r1, #1
 800f4ca:	f041 5100 	orr.w	r1, r1, #536870912	; 0x20000000
 800f4ce:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
 800f4d2:	eb01 5145 	add.w	r1, r1, r5, lsl #21
 800f4d6:	ee37 5ac7 	vsub.f32	s10, s15, s14
 800f4da:	ee06 1a10 	vmov	s12, r1
 800f4de:	ee65 4a26 	vmul.f32	s9, s10, s13
 800f4e2:	ee36 7a47 	vsub.f32	s14, s12, s14
 800f4e6:	ee14 6a90 	vmov	r6, s9
 800f4ea:	4016      	ands	r6, r2
 800f4ec:	ee05 6a90 	vmov	s11, r6
 800f4f0:	eea5 5ac6 	vfms.f32	s10, s11, s12
 800f4f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800f4f8:	ed9f 7a49 	vldr	s14, [pc, #292]	; 800f620 <__ieee754_powf+0x3ec>
 800f4fc:	eea5 5ae7 	vfms.f32	s10, s11, s15
 800f500:	ee64 7aa4 	vmul.f32	s15, s9, s9
 800f504:	ee25 6a26 	vmul.f32	s12, s10, s13
 800f508:	eddf 6a46 	vldr	s13, [pc, #280]	; 800f624 <__ieee754_powf+0x3f0>
 800f50c:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800f510:	eddf 6a45 	vldr	s13, [pc, #276]	; 800f628 <__ieee754_powf+0x3f4>
 800f514:	eee7 6a27 	vfma.f32	s13, s14, s15
 800f518:	ed9f 7a38 	vldr	s14, [pc, #224]	; 800f5fc <__ieee754_powf+0x3c8>
 800f51c:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800f520:	eddf 6a42 	vldr	s13, [pc, #264]	; 800f62c <__ieee754_powf+0x3f8>
 800f524:	eee7 6a27 	vfma.f32	s13, s14, s15
 800f528:	ed9f 7a41 	vldr	s14, [pc, #260]	; 800f630 <__ieee754_powf+0x3fc>
 800f52c:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800f530:	ee74 6aa5 	vadd.f32	s13, s9, s11
 800f534:	ee27 5aa7 	vmul.f32	s10, s15, s15
 800f538:	ee66 6a86 	vmul.f32	s13, s13, s12
 800f53c:	eee5 6a07 	vfma.f32	s13, s10, s14
 800f540:	eeb0 5a08 	vmov.f32	s10, #8	; 0x40400000  3.0
 800f544:	eef0 7a45 	vmov.f32	s15, s10
 800f548:	eee5 7aa5 	vfma.f32	s15, s11, s11
 800f54c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f550:	ee17 1a90 	vmov	r1, s15
 800f554:	4011      	ands	r1, r2
 800f556:	ee07 1a90 	vmov	s15, r1
 800f55a:	ee37 7ac5 	vsub.f32	s14, s15, s10
 800f55e:	eea5 7ae5 	vfms.f32	s14, s11, s11
 800f562:	ee36 7ac7 	vsub.f32	s14, s13, s14
 800f566:	ee27 7a24 	vmul.f32	s14, s14, s9
 800f56a:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f56e:	eeb0 6a47 	vmov.f32	s12, s14
 800f572:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f576:	ee16 1a10 	vmov	r1, s12
 800f57a:	4011      	ands	r1, r2
 800f57c:	ee06 1a90 	vmov	s13, r1
 800f580:	eee5 6ae7 	vfms.f32	s13, s11, s15
 800f584:	eddf 7a2b 	vldr	s15, [pc, #172]	; 800f634 <__ieee754_powf+0x400>
 800f588:	eddf 5a2b 	vldr	s11, [pc, #172]	; 800f638 <__ieee754_powf+0x404>
 800f58c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800f590:	ee06 1a10 	vmov	s12, r1
 800f594:	ee27 7a27 	vmul.f32	s14, s14, s15
 800f598:	eddf 7a28 	vldr	s15, [pc, #160]	; 800f63c <__ieee754_powf+0x408>
 800f59c:	4928      	ldr	r1, [pc, #160]	; (800f640 <__ieee754_powf+0x40c>)
 800f59e:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f5a2:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 800f5a6:	edd1 7a00 	vldr	s15, [r1]
 800f5aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f5ae:	ee07 3a90 	vmov	s15, r3
 800f5b2:	4b24      	ldr	r3, [pc, #144]	; (800f644 <__ieee754_powf+0x410>)
 800f5b4:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800f5b8:	eef0 7a47 	vmov.f32	s15, s14
 800f5bc:	eee6 7a25 	vfma.f32	s15, s12, s11
 800f5c0:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 800f5c4:	edd5 0a00 	vldr	s1, [r5]
 800f5c8:	ee77 7aa0 	vadd.f32	s15, s15, s1
 800f5cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5d0:	ee17 3a90 	vmov	r3, s15
 800f5d4:	4013      	ands	r3, r2
 800f5d6:	ee07 3a90 	vmov	s15, r3
 800f5da:	ee77 6ae6 	vsub.f32	s13, s15, s13
 800f5de:	ee76 6ae0 	vsub.f32	s13, s13, s1
 800f5e2:	eee6 6a65 	vfms.f32	s13, s12, s11
 800f5e6:	ee77 7a66 	vsub.f32	s15, s14, s13
 800f5ea:	e70e      	b.n	800f40a <__ieee754_powf+0x1d6>
 800f5ec:	2501      	movs	r5, #1
 800f5ee:	e75d      	b.n	800f4ac <__ieee754_powf+0x278>
 800f5f0:	00000000 	.word	0x00000000
 800f5f4:	3f7ffff3 	.word	0x3f7ffff3
 800f5f8:	3f800007 	.word	0x3f800007
 800f5fc:	3eaaaaab 	.word	0x3eaaaaab
 800f600:	3fb8aa3b 	.word	0x3fb8aa3b
 800f604:	36eca570 	.word	0x36eca570
 800f608:	3fb8aa00 	.word	0x3fb8aa00
 800f60c:	4b800000 	.word	0x4b800000
 800f610:	001cc471 	.word	0x001cc471
 800f614:	005db3d6 	.word	0x005db3d6
 800f618:	08010ae0 	.word	0x08010ae0
 800f61c:	fffff000 	.word	0xfffff000
 800f620:	3e6c3255 	.word	0x3e6c3255
 800f624:	3e53f142 	.word	0x3e53f142
 800f628:	3e8ba305 	.word	0x3e8ba305
 800f62c:	3edb6db7 	.word	0x3edb6db7
 800f630:	3f19999a 	.word	0x3f19999a
 800f634:	3f76384f 	.word	0x3f76384f
 800f638:	3f763800 	.word	0x3f763800
 800f63c:	369dc3a0 	.word	0x369dc3a0
 800f640:	08010af0 	.word	0x08010af0
 800f644:	08010ae8 	.word	0x08010ae8
 800f648:	3338aa3c 	.word	0x3338aa3c
 800f64c:	f040 8095 	bne.w	800f77a <__ieee754_powf+0x546>
 800f650:	ed5f 6a03 	vldr	s13, [pc, #-12]	; 800f648 <__ieee754_powf+0x414>
 800f654:	ee37 7a67 	vsub.f32	s14, s14, s15
 800f658:	ee70 6aa6 	vadd.f32	s13, s1, s13
 800f65c:	eef4 6ac7 	vcmpe.f32	s13, s14
 800f660:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f664:	f73f aefa 	bgt.w	800f45c <__ieee754_powf+0x228>
 800f668:	15db      	asrs	r3, r3, #23
 800f66a:	f1a3 007e 	sub.w	r0, r3, #126	; 0x7e
 800f66e:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800f672:	4103      	asrs	r3, r0
 800f674:	4423      	add	r3, r4
 800f676:	494b      	ldr	r1, [pc, #300]	; (800f7a4 <__ieee754_powf+0x570>)
 800f678:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 800f67c:	3a7f      	subs	r2, #127	; 0x7f
 800f67e:	4111      	asrs	r1, r2
 800f680:	ea23 0101 	bic.w	r1, r3, r1
 800f684:	ee07 1a10 	vmov	s14, r1
 800f688:	f3c3 0016 	ubfx	r0, r3, #0, #23
 800f68c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800f690:	f1c2 0217 	rsb	r2, r2, #23
 800f694:	4110      	asrs	r0, r2
 800f696:	2c00      	cmp	r4, #0
 800f698:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800f69c:	bfb8      	it	lt
 800f69e:	4240      	neglt	r0, r0
 800f6a0:	ee37 7aa0 	vadd.f32	s14, s15, s1
 800f6a4:	ed9f 0a40 	vldr	s0, [pc, #256]	; 800f7a8 <__ieee754_powf+0x574>
 800f6a8:	eddf 6a40 	vldr	s13, [pc, #256]	; 800f7ac <__ieee754_powf+0x578>
 800f6ac:	ee17 3a10 	vmov	r3, s14
 800f6b0:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800f6b4:	f023 030f 	bic.w	r3, r3, #15
 800f6b8:	ee07 3a10 	vmov	s14, r3
 800f6bc:	ee77 7a67 	vsub.f32	s15, s14, s15
 800f6c0:	ee27 0a00 	vmul.f32	s0, s14, s0
 800f6c4:	ee70 0ae7 	vsub.f32	s1, s1, s15
 800f6c8:	eddf 7a39 	vldr	s15, [pc, #228]	; 800f7b0 <__ieee754_powf+0x57c>
 800f6cc:	eea0 0aa7 	vfma.f32	s0, s1, s15
 800f6d0:	eef0 7a40 	vmov.f32	s15, s0
 800f6d4:	eee7 7a26 	vfma.f32	s15, s14, s13
 800f6d8:	eeb0 6a67 	vmov.f32	s12, s15
 800f6dc:	eea7 6a66 	vfms.f32	s12, s14, s13
 800f6e0:	ee27 7aa7 	vmul.f32	s14, s15, s15
 800f6e4:	ee30 0a46 	vsub.f32	s0, s0, s12
 800f6e8:	eddf 6a32 	vldr	s13, [pc, #200]	; 800f7b4 <__ieee754_powf+0x580>
 800f6ec:	ed9f 6a32 	vldr	s12, [pc, #200]	; 800f7b8 <__ieee754_powf+0x584>
 800f6f0:	eee7 6a06 	vfma.f32	s13, s14, s12
 800f6f4:	ed9f 6a31 	vldr	s12, [pc, #196]	; 800f7bc <__ieee754_powf+0x588>
 800f6f8:	eea6 6a87 	vfma.f32	s12, s13, s14
 800f6fc:	eddf 6a30 	vldr	s13, [pc, #192]	; 800f7c0 <__ieee754_powf+0x58c>
 800f700:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f704:	ed9f 6a2f 	vldr	s12, [pc, #188]	; 800f7c4 <__ieee754_powf+0x590>
 800f708:	eea6 6a87 	vfma.f32	s12, s13, s14
 800f70c:	eef0 6a67 	vmov.f32	s13, s15
 800f710:	eee6 6a47 	vfms.f32	s13, s12, s14
 800f714:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 800f718:	ee27 6aa6 	vmul.f32	s12, s15, s13
 800f71c:	ee76 6ac7 	vsub.f32	s13, s13, s14
 800f720:	eea7 0a80 	vfma.f32	s0, s15, s0
 800f724:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800f728:	ee37 0a40 	vsub.f32	s0, s14, s0
 800f72c:	ee70 7a67 	vsub.f32	s15, s0, s15
 800f730:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800f734:	ee30 0a67 	vsub.f32	s0, s0, s15
 800f738:	ee10 3a10 	vmov	r3, s0
 800f73c:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 800f740:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800f744:	da1f      	bge.n	800f786 <__ieee754_powf+0x552>
 800f746:	f001 f845 	bl	80107d4 <scalbnf>
 800f74a:	ee20 0a08 	vmul.f32	s0, s0, s16
 800f74e:	e589      	b.n	800f264 <__ieee754_powf+0x30>
 800f750:	4a1d      	ldr	r2, [pc, #116]	; (800f7c8 <__ieee754_powf+0x594>)
 800f752:	4293      	cmp	r3, r2
 800f754:	dd07      	ble.n	800f766 <__ieee754_powf+0x532>
 800f756:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800f75a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f75e:	bf4c      	ite	mi
 800f760:	2001      	movmi	r0, #1
 800f762:	2000      	movpl	r0, #0
 800f764:	e61f      	b.n	800f3a6 <__ieee754_powf+0x172>
 800f766:	d108      	bne.n	800f77a <__ieee754_powf+0x546>
 800f768:	ee37 7a67 	vsub.f32	s14, s14, s15
 800f76c:	eeb4 7ae0 	vcmpe.f32	s14, s1
 800f770:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f774:	f6ff af78 	blt.w	800f668 <__ieee754_powf+0x434>
 800f778:	e7ed      	b.n	800f756 <__ieee754_powf+0x522>
 800f77a:	f1b3 5f7c 	cmp.w	r3, #1056964608	; 0x3f000000
 800f77e:	f73f af73 	bgt.w	800f668 <__ieee754_powf+0x434>
 800f782:	2000      	movs	r0, #0
 800f784:	e78c      	b.n	800f6a0 <__ieee754_powf+0x46c>
 800f786:	ee00 3a10 	vmov	s0, r3
 800f78a:	e7de      	b.n	800f74a <__ieee754_powf+0x516>
 800f78c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800f790:	e568      	b.n	800f264 <__ieee754_powf+0x30>
 800f792:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 800f7cc <__ieee754_powf+0x598>
 800f796:	e565      	b.n	800f264 <__ieee754_powf+0x30>
 800f798:	eeb0 0a48 	vmov.f32	s0, s16
 800f79c:	e562      	b.n	800f264 <__ieee754_powf+0x30>
 800f79e:	2700      	movs	r7, #0
 800f7a0:	e58d      	b.n	800f2be <__ieee754_powf+0x8a>
 800f7a2:	bf00      	nop
 800f7a4:	007fffff 	.word	0x007fffff
 800f7a8:	35bfbe8c 	.word	0x35bfbe8c
 800f7ac:	3f317200 	.word	0x3f317200
 800f7b0:	3f317218 	.word	0x3f317218
 800f7b4:	b5ddea0e 	.word	0xb5ddea0e
 800f7b8:	3331bb4c 	.word	0x3331bb4c
 800f7bc:	388ab355 	.word	0x388ab355
 800f7c0:	bb360b61 	.word	0xbb360b61
 800f7c4:	3e2aaaab 	.word	0x3e2aaaab
 800f7c8:	43160000 	.word	0x43160000
 800f7cc:	00000000 	.word	0x00000000

0800f7d0 <__ieee754_sqrtf>:
 800f7d0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 800f7d4:	4770      	bx	lr
	...

0800f7d8 <__kernel_cos>:
 800f7d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7dc:	ec57 6b10 	vmov	r6, r7, d0
 800f7e0:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 800f7e4:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 800f7e8:	ed8d 1b00 	vstr	d1, [sp]
 800f7ec:	da07      	bge.n	800f7fe <__kernel_cos+0x26>
 800f7ee:	ee10 0a10 	vmov	r0, s0
 800f7f2:	4639      	mov	r1, r7
 800f7f4:	f7f1 f97c 	bl	8000af0 <__aeabi_d2iz>
 800f7f8:	2800      	cmp	r0, #0
 800f7fa:	f000 8088 	beq.w	800f90e <__kernel_cos+0x136>
 800f7fe:	4632      	mov	r2, r6
 800f800:	463b      	mov	r3, r7
 800f802:	4630      	mov	r0, r6
 800f804:	4639      	mov	r1, r7
 800f806:	f7f0 fec3 	bl	8000590 <__aeabi_dmul>
 800f80a:	4b51      	ldr	r3, [pc, #324]	; (800f950 <__kernel_cos+0x178>)
 800f80c:	2200      	movs	r2, #0
 800f80e:	4604      	mov	r4, r0
 800f810:	460d      	mov	r5, r1
 800f812:	f7f0 febd 	bl	8000590 <__aeabi_dmul>
 800f816:	a340      	add	r3, pc, #256	; (adr r3, 800f918 <__kernel_cos+0x140>)
 800f818:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f81c:	4682      	mov	sl, r0
 800f81e:	468b      	mov	fp, r1
 800f820:	4620      	mov	r0, r4
 800f822:	4629      	mov	r1, r5
 800f824:	f7f0 feb4 	bl	8000590 <__aeabi_dmul>
 800f828:	a33d      	add	r3, pc, #244	; (adr r3, 800f920 <__kernel_cos+0x148>)
 800f82a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f82e:	f7f0 fcf9 	bl	8000224 <__adddf3>
 800f832:	4622      	mov	r2, r4
 800f834:	462b      	mov	r3, r5
 800f836:	f7f0 feab 	bl	8000590 <__aeabi_dmul>
 800f83a:	a33b      	add	r3, pc, #236	; (adr r3, 800f928 <__kernel_cos+0x150>)
 800f83c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f840:	f7f0 fcee 	bl	8000220 <__aeabi_dsub>
 800f844:	4622      	mov	r2, r4
 800f846:	462b      	mov	r3, r5
 800f848:	f7f0 fea2 	bl	8000590 <__aeabi_dmul>
 800f84c:	a338      	add	r3, pc, #224	; (adr r3, 800f930 <__kernel_cos+0x158>)
 800f84e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f852:	f7f0 fce7 	bl	8000224 <__adddf3>
 800f856:	4622      	mov	r2, r4
 800f858:	462b      	mov	r3, r5
 800f85a:	f7f0 fe99 	bl	8000590 <__aeabi_dmul>
 800f85e:	a336      	add	r3, pc, #216	; (adr r3, 800f938 <__kernel_cos+0x160>)
 800f860:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f864:	f7f0 fcdc 	bl	8000220 <__aeabi_dsub>
 800f868:	4622      	mov	r2, r4
 800f86a:	462b      	mov	r3, r5
 800f86c:	f7f0 fe90 	bl	8000590 <__aeabi_dmul>
 800f870:	a333      	add	r3, pc, #204	; (adr r3, 800f940 <__kernel_cos+0x168>)
 800f872:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f876:	f7f0 fcd5 	bl	8000224 <__adddf3>
 800f87a:	4622      	mov	r2, r4
 800f87c:	462b      	mov	r3, r5
 800f87e:	f7f0 fe87 	bl	8000590 <__aeabi_dmul>
 800f882:	4622      	mov	r2, r4
 800f884:	462b      	mov	r3, r5
 800f886:	f7f0 fe83 	bl	8000590 <__aeabi_dmul>
 800f88a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f88e:	4604      	mov	r4, r0
 800f890:	460d      	mov	r5, r1
 800f892:	4630      	mov	r0, r6
 800f894:	4639      	mov	r1, r7
 800f896:	f7f0 fe7b 	bl	8000590 <__aeabi_dmul>
 800f89a:	460b      	mov	r3, r1
 800f89c:	4602      	mov	r2, r0
 800f89e:	4629      	mov	r1, r5
 800f8a0:	4620      	mov	r0, r4
 800f8a2:	f7f0 fcbd 	bl	8000220 <__aeabi_dsub>
 800f8a6:	4b2b      	ldr	r3, [pc, #172]	; (800f954 <__kernel_cos+0x17c>)
 800f8a8:	4598      	cmp	r8, r3
 800f8aa:	4606      	mov	r6, r0
 800f8ac:	460f      	mov	r7, r1
 800f8ae:	dc10      	bgt.n	800f8d2 <__kernel_cos+0xfa>
 800f8b0:	4602      	mov	r2, r0
 800f8b2:	460b      	mov	r3, r1
 800f8b4:	4650      	mov	r0, sl
 800f8b6:	4659      	mov	r1, fp
 800f8b8:	f7f0 fcb2 	bl	8000220 <__aeabi_dsub>
 800f8bc:	460b      	mov	r3, r1
 800f8be:	4926      	ldr	r1, [pc, #152]	; (800f958 <__kernel_cos+0x180>)
 800f8c0:	4602      	mov	r2, r0
 800f8c2:	2000      	movs	r0, #0
 800f8c4:	f7f0 fcac 	bl	8000220 <__aeabi_dsub>
 800f8c8:	ec41 0b10 	vmov	d0, r0, r1
 800f8cc:	b003      	add	sp, #12
 800f8ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8d2:	4b22      	ldr	r3, [pc, #136]	; (800f95c <__kernel_cos+0x184>)
 800f8d4:	4920      	ldr	r1, [pc, #128]	; (800f958 <__kernel_cos+0x180>)
 800f8d6:	4598      	cmp	r8, r3
 800f8d8:	bfcc      	ite	gt
 800f8da:	4d21      	ldrgt	r5, [pc, #132]	; (800f960 <__kernel_cos+0x188>)
 800f8dc:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 800f8e0:	2400      	movs	r4, #0
 800f8e2:	4622      	mov	r2, r4
 800f8e4:	462b      	mov	r3, r5
 800f8e6:	2000      	movs	r0, #0
 800f8e8:	f7f0 fc9a 	bl	8000220 <__aeabi_dsub>
 800f8ec:	4622      	mov	r2, r4
 800f8ee:	4680      	mov	r8, r0
 800f8f0:	4689      	mov	r9, r1
 800f8f2:	462b      	mov	r3, r5
 800f8f4:	4650      	mov	r0, sl
 800f8f6:	4659      	mov	r1, fp
 800f8f8:	f7f0 fc92 	bl	8000220 <__aeabi_dsub>
 800f8fc:	4632      	mov	r2, r6
 800f8fe:	463b      	mov	r3, r7
 800f900:	f7f0 fc8e 	bl	8000220 <__aeabi_dsub>
 800f904:	4602      	mov	r2, r0
 800f906:	460b      	mov	r3, r1
 800f908:	4640      	mov	r0, r8
 800f90a:	4649      	mov	r1, r9
 800f90c:	e7da      	b.n	800f8c4 <__kernel_cos+0xec>
 800f90e:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 800f948 <__kernel_cos+0x170>
 800f912:	e7db      	b.n	800f8cc <__kernel_cos+0xf4>
 800f914:	f3af 8000 	nop.w
 800f918:	be8838d4 	.word	0xbe8838d4
 800f91c:	bda8fae9 	.word	0xbda8fae9
 800f920:	bdb4b1c4 	.word	0xbdb4b1c4
 800f924:	3e21ee9e 	.word	0x3e21ee9e
 800f928:	809c52ad 	.word	0x809c52ad
 800f92c:	3e927e4f 	.word	0x3e927e4f
 800f930:	19cb1590 	.word	0x19cb1590
 800f934:	3efa01a0 	.word	0x3efa01a0
 800f938:	16c15177 	.word	0x16c15177
 800f93c:	3f56c16c 	.word	0x3f56c16c
 800f940:	5555554c 	.word	0x5555554c
 800f944:	3fa55555 	.word	0x3fa55555
 800f948:	00000000 	.word	0x00000000
 800f94c:	3ff00000 	.word	0x3ff00000
 800f950:	3fe00000 	.word	0x3fe00000
 800f954:	3fd33332 	.word	0x3fd33332
 800f958:	3ff00000 	.word	0x3ff00000
 800f95c:	3fe90000 	.word	0x3fe90000
 800f960:	3fd20000 	.word	0x3fd20000
 800f964:	00000000 	.word	0x00000000

0800f968 <__kernel_rem_pio2>:
 800f968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f96c:	ed2d 8b02 	vpush	{d8}
 800f970:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 800f974:	f112 0f14 	cmn.w	r2, #20
 800f978:	9308      	str	r3, [sp, #32]
 800f97a:	9101      	str	r1, [sp, #4]
 800f97c:	4bc4      	ldr	r3, [pc, #784]	; (800fc90 <__kernel_rem_pio2+0x328>)
 800f97e:	99a6      	ldr	r1, [sp, #664]	; 0x298
 800f980:	900b      	str	r0, [sp, #44]	; 0x2c
 800f982:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800f986:	9302      	str	r3, [sp, #8]
 800f988:	9b08      	ldr	r3, [sp, #32]
 800f98a:	f103 33ff 	add.w	r3, r3, #4294967295
 800f98e:	bfa8      	it	ge
 800f990:	1ed4      	subge	r4, r2, #3
 800f992:	9306      	str	r3, [sp, #24]
 800f994:	bfb2      	itee	lt
 800f996:	2400      	movlt	r4, #0
 800f998:	2318      	movge	r3, #24
 800f99a:	fb94 f4f3 	sdivge	r4, r4, r3
 800f99e:	f06f 0317 	mvn.w	r3, #23
 800f9a2:	fb04 3303 	mla	r3, r4, r3, r3
 800f9a6:	eb03 0a02 	add.w	sl, r3, r2
 800f9aa:	9b02      	ldr	r3, [sp, #8]
 800f9ac:	9a06      	ldr	r2, [sp, #24]
 800f9ae:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 800fc80 <__kernel_rem_pio2+0x318>
 800f9b2:	eb03 0802 	add.w	r8, r3, r2
 800f9b6:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800f9b8:	1aa7      	subs	r7, r4, r2
 800f9ba:	ae22      	add	r6, sp, #136	; 0x88
 800f9bc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 800f9c0:	2500      	movs	r5, #0
 800f9c2:	4545      	cmp	r5, r8
 800f9c4:	dd13      	ble.n	800f9ee <__kernel_rem_pio2+0x86>
 800f9c6:	9b08      	ldr	r3, [sp, #32]
 800f9c8:	ed9f 8bad 	vldr	d8, [pc, #692]	; 800fc80 <__kernel_rem_pio2+0x318>
 800f9cc:	aa22      	add	r2, sp, #136	; 0x88
 800f9ce:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 800f9d2:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 800f9d6:	f04f 0800 	mov.w	r8, #0
 800f9da:	9b02      	ldr	r3, [sp, #8]
 800f9dc:	4598      	cmp	r8, r3
 800f9de:	dc2f      	bgt.n	800fa40 <__kernel_rem_pio2+0xd8>
 800f9e0:	ed8d 8b04 	vstr	d8, [sp, #16]
 800f9e4:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 800f9e8:	462f      	mov	r7, r5
 800f9ea:	2600      	movs	r6, #0
 800f9ec:	e01b      	b.n	800fa26 <__kernel_rem_pio2+0xbe>
 800f9ee:	42ef      	cmn	r7, r5
 800f9f0:	d407      	bmi.n	800fa02 <__kernel_rem_pio2+0x9a>
 800f9f2:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800f9f6:	f7f0 fd61 	bl	80004bc <__aeabi_i2d>
 800f9fa:	e8e6 0102 	strd	r0, r1, [r6], #8
 800f9fe:	3501      	adds	r5, #1
 800fa00:	e7df      	b.n	800f9c2 <__kernel_rem_pio2+0x5a>
 800fa02:	ec51 0b18 	vmov	r0, r1, d8
 800fa06:	e7f8      	b.n	800f9fa <__kernel_rem_pio2+0x92>
 800fa08:	e9d7 2300 	ldrd	r2, r3, [r7]
 800fa0c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 800fa10:	f7f0 fdbe 	bl	8000590 <__aeabi_dmul>
 800fa14:	4602      	mov	r2, r0
 800fa16:	460b      	mov	r3, r1
 800fa18:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800fa1c:	f7f0 fc02 	bl	8000224 <__adddf3>
 800fa20:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800fa24:	3601      	adds	r6, #1
 800fa26:	9b06      	ldr	r3, [sp, #24]
 800fa28:	429e      	cmp	r6, r3
 800fa2a:	f1a7 0708 	sub.w	r7, r7, #8
 800fa2e:	ddeb      	ble.n	800fa08 <__kernel_rem_pio2+0xa0>
 800fa30:	ed9d 7b04 	vldr	d7, [sp, #16]
 800fa34:	f108 0801 	add.w	r8, r8, #1
 800fa38:	ecab 7b02 	vstmia	fp!, {d7}
 800fa3c:	3508      	adds	r5, #8
 800fa3e:	e7cc      	b.n	800f9da <__kernel_rem_pio2+0x72>
 800fa40:	9b02      	ldr	r3, [sp, #8]
 800fa42:	aa0e      	add	r2, sp, #56	; 0x38
 800fa44:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800fa48:	930d      	str	r3, [sp, #52]	; 0x34
 800fa4a:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800fa4c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800fa50:	9c02      	ldr	r4, [sp, #8]
 800fa52:	930c      	str	r3, [sp, #48]	; 0x30
 800fa54:	00e3      	lsls	r3, r4, #3
 800fa56:	930a      	str	r3, [sp, #40]	; 0x28
 800fa58:	ab9a      	add	r3, sp, #616	; 0x268
 800fa5a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800fa5e:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 800fa62:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800fa66:	ab72      	add	r3, sp, #456	; 0x1c8
 800fa68:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800fa6c:	46c3      	mov	fp, r8
 800fa6e:	46a1      	mov	r9, r4
 800fa70:	f1b9 0f00 	cmp.w	r9, #0
 800fa74:	f1a5 0508 	sub.w	r5, r5, #8
 800fa78:	dc77      	bgt.n	800fb6a <__kernel_rem_pio2+0x202>
 800fa7a:	ec47 6b10 	vmov	d0, r6, r7
 800fa7e:	4650      	mov	r0, sl
 800fa80:	f000 fe0e 	bl	80106a0 <scalbn>
 800fa84:	ec57 6b10 	vmov	r6, r7, d0
 800fa88:	2200      	movs	r2, #0
 800fa8a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800fa8e:	ee10 0a10 	vmov	r0, s0
 800fa92:	4639      	mov	r1, r7
 800fa94:	f7f0 fd7c 	bl	8000590 <__aeabi_dmul>
 800fa98:	ec41 0b10 	vmov	d0, r0, r1
 800fa9c:	f000 fd78 	bl	8010590 <floor>
 800faa0:	4b7c      	ldr	r3, [pc, #496]	; (800fc94 <__kernel_rem_pio2+0x32c>)
 800faa2:	ec51 0b10 	vmov	r0, r1, d0
 800faa6:	2200      	movs	r2, #0
 800faa8:	f7f0 fd72 	bl	8000590 <__aeabi_dmul>
 800faac:	4602      	mov	r2, r0
 800faae:	460b      	mov	r3, r1
 800fab0:	4630      	mov	r0, r6
 800fab2:	4639      	mov	r1, r7
 800fab4:	f7f0 fbb4 	bl	8000220 <__aeabi_dsub>
 800fab8:	460f      	mov	r7, r1
 800faba:	4606      	mov	r6, r0
 800fabc:	f7f1 f818 	bl	8000af0 <__aeabi_d2iz>
 800fac0:	9004      	str	r0, [sp, #16]
 800fac2:	f7f0 fcfb 	bl	80004bc <__aeabi_i2d>
 800fac6:	4602      	mov	r2, r0
 800fac8:	460b      	mov	r3, r1
 800faca:	4630      	mov	r0, r6
 800facc:	4639      	mov	r1, r7
 800face:	f7f0 fba7 	bl	8000220 <__aeabi_dsub>
 800fad2:	f1ba 0f00 	cmp.w	sl, #0
 800fad6:	4606      	mov	r6, r0
 800fad8:	460f      	mov	r7, r1
 800fada:	dd6d      	ble.n	800fbb8 <__kernel_rem_pio2+0x250>
 800fadc:	1e62      	subs	r2, r4, #1
 800fade:	ab0e      	add	r3, sp, #56	; 0x38
 800fae0:	9d04      	ldr	r5, [sp, #16]
 800fae2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800fae6:	f1ca 0118 	rsb	r1, sl, #24
 800faea:	fa40 f301 	asr.w	r3, r0, r1
 800faee:	441d      	add	r5, r3
 800faf0:	408b      	lsls	r3, r1
 800faf2:	1ac0      	subs	r0, r0, r3
 800faf4:	ab0e      	add	r3, sp, #56	; 0x38
 800faf6:	9504      	str	r5, [sp, #16]
 800faf8:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800fafc:	f1ca 0317 	rsb	r3, sl, #23
 800fb00:	fa40 fb03 	asr.w	fp, r0, r3
 800fb04:	f1bb 0f00 	cmp.w	fp, #0
 800fb08:	dd65      	ble.n	800fbd6 <__kernel_rem_pio2+0x26e>
 800fb0a:	9b04      	ldr	r3, [sp, #16]
 800fb0c:	2200      	movs	r2, #0
 800fb0e:	3301      	adds	r3, #1
 800fb10:	9304      	str	r3, [sp, #16]
 800fb12:	4615      	mov	r5, r2
 800fb14:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800fb18:	4294      	cmp	r4, r2
 800fb1a:	f300 809c 	bgt.w	800fc56 <__kernel_rem_pio2+0x2ee>
 800fb1e:	f1ba 0f00 	cmp.w	sl, #0
 800fb22:	dd07      	ble.n	800fb34 <__kernel_rem_pio2+0x1cc>
 800fb24:	f1ba 0f01 	cmp.w	sl, #1
 800fb28:	f000 80c0 	beq.w	800fcac <__kernel_rem_pio2+0x344>
 800fb2c:	f1ba 0f02 	cmp.w	sl, #2
 800fb30:	f000 80c6 	beq.w	800fcc0 <__kernel_rem_pio2+0x358>
 800fb34:	f1bb 0f02 	cmp.w	fp, #2
 800fb38:	d14d      	bne.n	800fbd6 <__kernel_rem_pio2+0x26e>
 800fb3a:	4632      	mov	r2, r6
 800fb3c:	463b      	mov	r3, r7
 800fb3e:	4956      	ldr	r1, [pc, #344]	; (800fc98 <__kernel_rem_pio2+0x330>)
 800fb40:	2000      	movs	r0, #0
 800fb42:	f7f0 fb6d 	bl	8000220 <__aeabi_dsub>
 800fb46:	4606      	mov	r6, r0
 800fb48:	460f      	mov	r7, r1
 800fb4a:	2d00      	cmp	r5, #0
 800fb4c:	d043      	beq.n	800fbd6 <__kernel_rem_pio2+0x26e>
 800fb4e:	4650      	mov	r0, sl
 800fb50:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 800fc88 <__kernel_rem_pio2+0x320>
 800fb54:	f000 fda4 	bl	80106a0 <scalbn>
 800fb58:	4630      	mov	r0, r6
 800fb5a:	4639      	mov	r1, r7
 800fb5c:	ec53 2b10 	vmov	r2, r3, d0
 800fb60:	f7f0 fb5e 	bl	8000220 <__aeabi_dsub>
 800fb64:	4606      	mov	r6, r0
 800fb66:	460f      	mov	r7, r1
 800fb68:	e035      	b.n	800fbd6 <__kernel_rem_pio2+0x26e>
 800fb6a:	4b4c      	ldr	r3, [pc, #304]	; (800fc9c <__kernel_rem_pio2+0x334>)
 800fb6c:	2200      	movs	r2, #0
 800fb6e:	4630      	mov	r0, r6
 800fb70:	4639      	mov	r1, r7
 800fb72:	f7f0 fd0d 	bl	8000590 <__aeabi_dmul>
 800fb76:	f7f0 ffbb 	bl	8000af0 <__aeabi_d2iz>
 800fb7a:	f7f0 fc9f 	bl	80004bc <__aeabi_i2d>
 800fb7e:	4602      	mov	r2, r0
 800fb80:	460b      	mov	r3, r1
 800fb82:	ec43 2b18 	vmov	d8, r2, r3
 800fb86:	4b46      	ldr	r3, [pc, #280]	; (800fca0 <__kernel_rem_pio2+0x338>)
 800fb88:	2200      	movs	r2, #0
 800fb8a:	f7f0 fd01 	bl	8000590 <__aeabi_dmul>
 800fb8e:	4602      	mov	r2, r0
 800fb90:	460b      	mov	r3, r1
 800fb92:	4630      	mov	r0, r6
 800fb94:	4639      	mov	r1, r7
 800fb96:	f7f0 fb43 	bl	8000220 <__aeabi_dsub>
 800fb9a:	f7f0 ffa9 	bl	8000af0 <__aeabi_d2iz>
 800fb9e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fba2:	f84b 0b04 	str.w	r0, [fp], #4
 800fba6:	ec51 0b18 	vmov	r0, r1, d8
 800fbaa:	f7f0 fb3b 	bl	8000224 <__adddf3>
 800fbae:	f109 39ff 	add.w	r9, r9, #4294967295
 800fbb2:	4606      	mov	r6, r0
 800fbb4:	460f      	mov	r7, r1
 800fbb6:	e75b      	b.n	800fa70 <__kernel_rem_pio2+0x108>
 800fbb8:	d106      	bne.n	800fbc8 <__kernel_rem_pio2+0x260>
 800fbba:	1e63      	subs	r3, r4, #1
 800fbbc:	aa0e      	add	r2, sp, #56	; 0x38
 800fbbe:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fbc2:	ea4f 5be0 	mov.w	fp, r0, asr #23
 800fbc6:	e79d      	b.n	800fb04 <__kernel_rem_pio2+0x19c>
 800fbc8:	4b36      	ldr	r3, [pc, #216]	; (800fca4 <__kernel_rem_pio2+0x33c>)
 800fbca:	2200      	movs	r2, #0
 800fbcc:	f7f0 ff66 	bl	8000a9c <__aeabi_dcmpge>
 800fbd0:	2800      	cmp	r0, #0
 800fbd2:	d13d      	bne.n	800fc50 <__kernel_rem_pio2+0x2e8>
 800fbd4:	4683      	mov	fp, r0
 800fbd6:	2200      	movs	r2, #0
 800fbd8:	2300      	movs	r3, #0
 800fbda:	4630      	mov	r0, r6
 800fbdc:	4639      	mov	r1, r7
 800fbde:	f7f0 ff3f 	bl	8000a60 <__aeabi_dcmpeq>
 800fbe2:	2800      	cmp	r0, #0
 800fbe4:	f000 80c0 	beq.w	800fd68 <__kernel_rem_pio2+0x400>
 800fbe8:	1e65      	subs	r5, r4, #1
 800fbea:	462b      	mov	r3, r5
 800fbec:	2200      	movs	r2, #0
 800fbee:	9902      	ldr	r1, [sp, #8]
 800fbf0:	428b      	cmp	r3, r1
 800fbf2:	da6c      	bge.n	800fcce <__kernel_rem_pio2+0x366>
 800fbf4:	2a00      	cmp	r2, #0
 800fbf6:	f000 8089 	beq.w	800fd0c <__kernel_rem_pio2+0x3a4>
 800fbfa:	ab0e      	add	r3, sp, #56	; 0x38
 800fbfc:	f1aa 0a18 	sub.w	sl, sl, #24
 800fc00:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800fc04:	2b00      	cmp	r3, #0
 800fc06:	f000 80ad 	beq.w	800fd64 <__kernel_rem_pio2+0x3fc>
 800fc0a:	4650      	mov	r0, sl
 800fc0c:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 800fc88 <__kernel_rem_pio2+0x320>
 800fc10:	f000 fd46 	bl	80106a0 <scalbn>
 800fc14:	ab9a      	add	r3, sp, #616	; 0x268
 800fc16:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fc1a:	ec57 6b10 	vmov	r6, r7, d0
 800fc1e:	00ec      	lsls	r4, r5, #3
 800fc20:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 800fc24:	46aa      	mov	sl, r5
 800fc26:	f1ba 0f00 	cmp.w	sl, #0
 800fc2a:	f280 80d6 	bge.w	800fdda <__kernel_rem_pio2+0x472>
 800fc2e:	ed9f 8b14 	vldr	d8, [pc, #80]	; 800fc80 <__kernel_rem_pio2+0x318>
 800fc32:	462e      	mov	r6, r5
 800fc34:	2e00      	cmp	r6, #0
 800fc36:	f2c0 8104 	blt.w	800fe42 <__kernel_rem_pio2+0x4da>
 800fc3a:	ab72      	add	r3, sp, #456	; 0x1c8
 800fc3c:	ed8d 8b06 	vstr	d8, [sp, #24]
 800fc40:	f8df a064 	ldr.w	sl, [pc, #100]	; 800fca8 <__kernel_rem_pio2+0x340>
 800fc44:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 800fc48:	f04f 0800 	mov.w	r8, #0
 800fc4c:	1baf      	subs	r7, r5, r6
 800fc4e:	e0ea      	b.n	800fe26 <__kernel_rem_pio2+0x4be>
 800fc50:	f04f 0b02 	mov.w	fp, #2
 800fc54:	e759      	b.n	800fb0a <__kernel_rem_pio2+0x1a2>
 800fc56:	f8d8 3000 	ldr.w	r3, [r8]
 800fc5a:	b955      	cbnz	r5, 800fc72 <__kernel_rem_pio2+0x30a>
 800fc5c:	b123      	cbz	r3, 800fc68 <__kernel_rem_pio2+0x300>
 800fc5e:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 800fc62:	f8c8 3000 	str.w	r3, [r8]
 800fc66:	2301      	movs	r3, #1
 800fc68:	3201      	adds	r2, #1
 800fc6a:	f108 0804 	add.w	r8, r8, #4
 800fc6e:	461d      	mov	r5, r3
 800fc70:	e752      	b.n	800fb18 <__kernel_rem_pio2+0x1b0>
 800fc72:	1acb      	subs	r3, r1, r3
 800fc74:	f8c8 3000 	str.w	r3, [r8]
 800fc78:	462b      	mov	r3, r5
 800fc7a:	e7f5      	b.n	800fc68 <__kernel_rem_pio2+0x300>
 800fc7c:	f3af 8000 	nop.w
	...
 800fc8c:	3ff00000 	.word	0x3ff00000
 800fc90:	08010b38 	.word	0x08010b38
 800fc94:	40200000 	.word	0x40200000
 800fc98:	3ff00000 	.word	0x3ff00000
 800fc9c:	3e700000 	.word	0x3e700000
 800fca0:	41700000 	.word	0x41700000
 800fca4:	3fe00000 	.word	0x3fe00000
 800fca8:	08010af8 	.word	0x08010af8
 800fcac:	1e62      	subs	r2, r4, #1
 800fcae:	ab0e      	add	r3, sp, #56	; 0x38
 800fcb0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800fcb4:	f3c3 0316 	ubfx	r3, r3, #0, #23
 800fcb8:	a90e      	add	r1, sp, #56	; 0x38
 800fcba:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800fcbe:	e739      	b.n	800fb34 <__kernel_rem_pio2+0x1cc>
 800fcc0:	1e62      	subs	r2, r4, #1
 800fcc2:	ab0e      	add	r3, sp, #56	; 0x38
 800fcc4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800fcc8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800fccc:	e7f4      	b.n	800fcb8 <__kernel_rem_pio2+0x350>
 800fcce:	a90e      	add	r1, sp, #56	; 0x38
 800fcd0:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800fcd4:	3b01      	subs	r3, #1
 800fcd6:	430a      	orrs	r2, r1
 800fcd8:	e789      	b.n	800fbee <__kernel_rem_pio2+0x286>
 800fcda:	3301      	adds	r3, #1
 800fcdc:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 800fce0:	2900      	cmp	r1, #0
 800fce2:	d0fa      	beq.n	800fcda <__kernel_rem_pio2+0x372>
 800fce4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fce6:	f502 721a 	add.w	r2, r2, #616	; 0x268
 800fcea:	446a      	add	r2, sp
 800fcec:	3a98      	subs	r2, #152	; 0x98
 800fcee:	920a      	str	r2, [sp, #40]	; 0x28
 800fcf0:	9a08      	ldr	r2, [sp, #32]
 800fcf2:	18e3      	adds	r3, r4, r3
 800fcf4:	18a5      	adds	r5, r4, r2
 800fcf6:	aa22      	add	r2, sp, #136	; 0x88
 800fcf8:	f104 0801 	add.w	r8, r4, #1
 800fcfc:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 800fd00:	9304      	str	r3, [sp, #16]
 800fd02:	9b04      	ldr	r3, [sp, #16]
 800fd04:	4543      	cmp	r3, r8
 800fd06:	da04      	bge.n	800fd12 <__kernel_rem_pio2+0x3aa>
 800fd08:	461c      	mov	r4, r3
 800fd0a:	e6a3      	b.n	800fa54 <__kernel_rem_pio2+0xec>
 800fd0c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fd0e:	2301      	movs	r3, #1
 800fd10:	e7e4      	b.n	800fcdc <__kernel_rem_pio2+0x374>
 800fd12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fd14:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 800fd18:	f7f0 fbd0 	bl	80004bc <__aeabi_i2d>
 800fd1c:	e8e5 0102 	strd	r0, r1, [r5], #8
 800fd20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fd22:	46ab      	mov	fp, r5
 800fd24:	461c      	mov	r4, r3
 800fd26:	f04f 0900 	mov.w	r9, #0
 800fd2a:	2600      	movs	r6, #0
 800fd2c:	2700      	movs	r7, #0
 800fd2e:	9b06      	ldr	r3, [sp, #24]
 800fd30:	4599      	cmp	r9, r3
 800fd32:	dd06      	ble.n	800fd42 <__kernel_rem_pio2+0x3da>
 800fd34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fd36:	e8e3 6702 	strd	r6, r7, [r3], #8
 800fd3a:	f108 0801 	add.w	r8, r8, #1
 800fd3e:	930a      	str	r3, [sp, #40]	; 0x28
 800fd40:	e7df      	b.n	800fd02 <__kernel_rem_pio2+0x39a>
 800fd42:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800fd46:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800fd4a:	f7f0 fc21 	bl	8000590 <__aeabi_dmul>
 800fd4e:	4602      	mov	r2, r0
 800fd50:	460b      	mov	r3, r1
 800fd52:	4630      	mov	r0, r6
 800fd54:	4639      	mov	r1, r7
 800fd56:	f7f0 fa65 	bl	8000224 <__adddf3>
 800fd5a:	f109 0901 	add.w	r9, r9, #1
 800fd5e:	4606      	mov	r6, r0
 800fd60:	460f      	mov	r7, r1
 800fd62:	e7e4      	b.n	800fd2e <__kernel_rem_pio2+0x3c6>
 800fd64:	3d01      	subs	r5, #1
 800fd66:	e748      	b.n	800fbfa <__kernel_rem_pio2+0x292>
 800fd68:	ec47 6b10 	vmov	d0, r6, r7
 800fd6c:	f1ca 0000 	rsb	r0, sl, #0
 800fd70:	f000 fc96 	bl	80106a0 <scalbn>
 800fd74:	ec57 6b10 	vmov	r6, r7, d0
 800fd78:	4ba0      	ldr	r3, [pc, #640]	; (800fffc <__kernel_rem_pio2+0x694>)
 800fd7a:	ee10 0a10 	vmov	r0, s0
 800fd7e:	2200      	movs	r2, #0
 800fd80:	4639      	mov	r1, r7
 800fd82:	f7f0 fe8b 	bl	8000a9c <__aeabi_dcmpge>
 800fd86:	b1f8      	cbz	r0, 800fdc8 <__kernel_rem_pio2+0x460>
 800fd88:	4b9d      	ldr	r3, [pc, #628]	; (8010000 <__kernel_rem_pio2+0x698>)
 800fd8a:	2200      	movs	r2, #0
 800fd8c:	4630      	mov	r0, r6
 800fd8e:	4639      	mov	r1, r7
 800fd90:	f7f0 fbfe 	bl	8000590 <__aeabi_dmul>
 800fd94:	f7f0 feac 	bl	8000af0 <__aeabi_d2iz>
 800fd98:	4680      	mov	r8, r0
 800fd9a:	f7f0 fb8f 	bl	80004bc <__aeabi_i2d>
 800fd9e:	4b97      	ldr	r3, [pc, #604]	; (800fffc <__kernel_rem_pio2+0x694>)
 800fda0:	2200      	movs	r2, #0
 800fda2:	f7f0 fbf5 	bl	8000590 <__aeabi_dmul>
 800fda6:	460b      	mov	r3, r1
 800fda8:	4602      	mov	r2, r0
 800fdaa:	4639      	mov	r1, r7
 800fdac:	4630      	mov	r0, r6
 800fdae:	f7f0 fa37 	bl	8000220 <__aeabi_dsub>
 800fdb2:	f7f0 fe9d 	bl	8000af0 <__aeabi_d2iz>
 800fdb6:	1c65      	adds	r5, r4, #1
 800fdb8:	ab0e      	add	r3, sp, #56	; 0x38
 800fdba:	f10a 0a18 	add.w	sl, sl, #24
 800fdbe:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800fdc2:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 800fdc6:	e720      	b.n	800fc0a <__kernel_rem_pio2+0x2a2>
 800fdc8:	4630      	mov	r0, r6
 800fdca:	4639      	mov	r1, r7
 800fdcc:	f7f0 fe90 	bl	8000af0 <__aeabi_d2iz>
 800fdd0:	ab0e      	add	r3, sp, #56	; 0x38
 800fdd2:	4625      	mov	r5, r4
 800fdd4:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800fdd8:	e717      	b.n	800fc0a <__kernel_rem_pio2+0x2a2>
 800fdda:	ab0e      	add	r3, sp, #56	; 0x38
 800fddc:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 800fde0:	f7f0 fb6c 	bl	80004bc <__aeabi_i2d>
 800fde4:	4632      	mov	r2, r6
 800fde6:	463b      	mov	r3, r7
 800fde8:	f7f0 fbd2 	bl	8000590 <__aeabi_dmul>
 800fdec:	4b84      	ldr	r3, [pc, #528]	; (8010000 <__kernel_rem_pio2+0x698>)
 800fdee:	e968 0102 	strd	r0, r1, [r8, #-8]!
 800fdf2:	2200      	movs	r2, #0
 800fdf4:	4630      	mov	r0, r6
 800fdf6:	4639      	mov	r1, r7
 800fdf8:	f7f0 fbca 	bl	8000590 <__aeabi_dmul>
 800fdfc:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fe00:	4606      	mov	r6, r0
 800fe02:	460f      	mov	r7, r1
 800fe04:	e70f      	b.n	800fc26 <__kernel_rem_pio2+0x2be>
 800fe06:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 800fe0a:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 800fe0e:	f7f0 fbbf 	bl	8000590 <__aeabi_dmul>
 800fe12:	4602      	mov	r2, r0
 800fe14:	460b      	mov	r3, r1
 800fe16:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800fe1a:	f7f0 fa03 	bl	8000224 <__adddf3>
 800fe1e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800fe22:	f108 0801 	add.w	r8, r8, #1
 800fe26:	9b02      	ldr	r3, [sp, #8]
 800fe28:	4598      	cmp	r8, r3
 800fe2a:	dc01      	bgt.n	800fe30 <__kernel_rem_pio2+0x4c8>
 800fe2c:	45b8      	cmp	r8, r7
 800fe2e:	ddea      	ble.n	800fe06 <__kernel_rem_pio2+0x49e>
 800fe30:	ed9d 7b06 	vldr	d7, [sp, #24]
 800fe34:	ab4a      	add	r3, sp, #296	; 0x128
 800fe36:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800fe3a:	ed87 7b00 	vstr	d7, [r7]
 800fe3e:	3e01      	subs	r6, #1
 800fe40:	e6f8      	b.n	800fc34 <__kernel_rem_pio2+0x2cc>
 800fe42:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800fe44:	2b02      	cmp	r3, #2
 800fe46:	dc0b      	bgt.n	800fe60 <__kernel_rem_pio2+0x4f8>
 800fe48:	2b00      	cmp	r3, #0
 800fe4a:	dc35      	bgt.n	800feb8 <__kernel_rem_pio2+0x550>
 800fe4c:	d059      	beq.n	800ff02 <__kernel_rem_pio2+0x59a>
 800fe4e:	9b04      	ldr	r3, [sp, #16]
 800fe50:	f003 0007 	and.w	r0, r3, #7
 800fe54:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 800fe58:	ecbd 8b02 	vpop	{d8}
 800fe5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe60:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800fe62:	2b03      	cmp	r3, #3
 800fe64:	d1f3      	bne.n	800fe4e <__kernel_rem_pio2+0x4e6>
 800fe66:	ab4a      	add	r3, sp, #296	; 0x128
 800fe68:	4423      	add	r3, r4
 800fe6a:	9306      	str	r3, [sp, #24]
 800fe6c:	461c      	mov	r4, r3
 800fe6e:	469a      	mov	sl, r3
 800fe70:	9502      	str	r5, [sp, #8]
 800fe72:	9b02      	ldr	r3, [sp, #8]
 800fe74:	2b00      	cmp	r3, #0
 800fe76:	f1aa 0a08 	sub.w	sl, sl, #8
 800fe7a:	dc6b      	bgt.n	800ff54 <__kernel_rem_pio2+0x5ec>
 800fe7c:	46aa      	mov	sl, r5
 800fe7e:	f1ba 0f01 	cmp.w	sl, #1
 800fe82:	f1a4 0408 	sub.w	r4, r4, #8
 800fe86:	f300 8085 	bgt.w	800ff94 <__kernel_rem_pio2+0x62c>
 800fe8a:	9c06      	ldr	r4, [sp, #24]
 800fe8c:	2000      	movs	r0, #0
 800fe8e:	3408      	adds	r4, #8
 800fe90:	2100      	movs	r1, #0
 800fe92:	2d01      	cmp	r5, #1
 800fe94:	f300 809d 	bgt.w	800ffd2 <__kernel_rem_pio2+0x66a>
 800fe98:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 800fe9c:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 800fea0:	f1bb 0f00 	cmp.w	fp, #0
 800fea4:	f040 809b 	bne.w	800ffde <__kernel_rem_pio2+0x676>
 800fea8:	9b01      	ldr	r3, [sp, #4]
 800feaa:	e9c3 5600 	strd	r5, r6, [r3]
 800feae:	e9c3 7802 	strd	r7, r8, [r3, #8]
 800feb2:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800feb6:	e7ca      	b.n	800fe4e <__kernel_rem_pio2+0x4e6>
 800feb8:	3408      	adds	r4, #8
 800feba:	ab4a      	add	r3, sp, #296	; 0x128
 800febc:	441c      	add	r4, r3
 800febe:	462e      	mov	r6, r5
 800fec0:	2000      	movs	r0, #0
 800fec2:	2100      	movs	r1, #0
 800fec4:	2e00      	cmp	r6, #0
 800fec6:	da36      	bge.n	800ff36 <__kernel_rem_pio2+0x5ce>
 800fec8:	f1bb 0f00 	cmp.w	fp, #0
 800fecc:	d039      	beq.n	800ff42 <__kernel_rem_pio2+0x5da>
 800fece:	4602      	mov	r2, r0
 800fed0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fed4:	9c01      	ldr	r4, [sp, #4]
 800fed6:	e9c4 2300 	strd	r2, r3, [r4]
 800feda:	4602      	mov	r2, r0
 800fedc:	460b      	mov	r3, r1
 800fede:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 800fee2:	f7f0 f99d 	bl	8000220 <__aeabi_dsub>
 800fee6:	ae4c      	add	r6, sp, #304	; 0x130
 800fee8:	2401      	movs	r4, #1
 800feea:	42a5      	cmp	r5, r4
 800feec:	da2c      	bge.n	800ff48 <__kernel_rem_pio2+0x5e0>
 800feee:	f1bb 0f00 	cmp.w	fp, #0
 800fef2:	d002      	beq.n	800fefa <__kernel_rem_pio2+0x592>
 800fef4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fef8:	4619      	mov	r1, r3
 800fefa:	9b01      	ldr	r3, [sp, #4]
 800fefc:	e9c3 0102 	strd	r0, r1, [r3, #8]
 800ff00:	e7a5      	b.n	800fe4e <__kernel_rem_pio2+0x4e6>
 800ff02:	f504 731a 	add.w	r3, r4, #616	; 0x268
 800ff06:	eb0d 0403 	add.w	r4, sp, r3
 800ff0a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800ff0e:	2000      	movs	r0, #0
 800ff10:	2100      	movs	r1, #0
 800ff12:	2d00      	cmp	r5, #0
 800ff14:	da09      	bge.n	800ff2a <__kernel_rem_pio2+0x5c2>
 800ff16:	f1bb 0f00 	cmp.w	fp, #0
 800ff1a:	d002      	beq.n	800ff22 <__kernel_rem_pio2+0x5ba>
 800ff1c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ff20:	4619      	mov	r1, r3
 800ff22:	9b01      	ldr	r3, [sp, #4]
 800ff24:	e9c3 0100 	strd	r0, r1, [r3]
 800ff28:	e791      	b.n	800fe4e <__kernel_rem_pio2+0x4e6>
 800ff2a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800ff2e:	f7f0 f979 	bl	8000224 <__adddf3>
 800ff32:	3d01      	subs	r5, #1
 800ff34:	e7ed      	b.n	800ff12 <__kernel_rem_pio2+0x5aa>
 800ff36:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800ff3a:	f7f0 f973 	bl	8000224 <__adddf3>
 800ff3e:	3e01      	subs	r6, #1
 800ff40:	e7c0      	b.n	800fec4 <__kernel_rem_pio2+0x55c>
 800ff42:	4602      	mov	r2, r0
 800ff44:	460b      	mov	r3, r1
 800ff46:	e7c5      	b.n	800fed4 <__kernel_rem_pio2+0x56c>
 800ff48:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800ff4c:	f7f0 f96a 	bl	8000224 <__adddf3>
 800ff50:	3401      	adds	r4, #1
 800ff52:	e7ca      	b.n	800feea <__kernel_rem_pio2+0x582>
 800ff54:	e9da 8900 	ldrd	r8, r9, [sl]
 800ff58:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 800ff5c:	9b02      	ldr	r3, [sp, #8]
 800ff5e:	3b01      	subs	r3, #1
 800ff60:	9302      	str	r3, [sp, #8]
 800ff62:	4632      	mov	r2, r6
 800ff64:	463b      	mov	r3, r7
 800ff66:	4640      	mov	r0, r8
 800ff68:	4649      	mov	r1, r9
 800ff6a:	f7f0 f95b 	bl	8000224 <__adddf3>
 800ff6e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800ff72:	4602      	mov	r2, r0
 800ff74:	460b      	mov	r3, r1
 800ff76:	4640      	mov	r0, r8
 800ff78:	4649      	mov	r1, r9
 800ff7a:	f7f0 f951 	bl	8000220 <__aeabi_dsub>
 800ff7e:	4632      	mov	r2, r6
 800ff80:	463b      	mov	r3, r7
 800ff82:	f7f0 f94f 	bl	8000224 <__adddf3>
 800ff86:	ed9d 7b08 	vldr	d7, [sp, #32]
 800ff8a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800ff8e:	ed8a 7b00 	vstr	d7, [sl]
 800ff92:	e76e      	b.n	800fe72 <__kernel_rem_pio2+0x50a>
 800ff94:	e9d4 8900 	ldrd	r8, r9, [r4]
 800ff98:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800ff9c:	4640      	mov	r0, r8
 800ff9e:	4632      	mov	r2, r6
 800ffa0:	463b      	mov	r3, r7
 800ffa2:	4649      	mov	r1, r9
 800ffa4:	f7f0 f93e 	bl	8000224 <__adddf3>
 800ffa8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ffac:	4602      	mov	r2, r0
 800ffae:	460b      	mov	r3, r1
 800ffb0:	4640      	mov	r0, r8
 800ffb2:	4649      	mov	r1, r9
 800ffb4:	f7f0 f934 	bl	8000220 <__aeabi_dsub>
 800ffb8:	4632      	mov	r2, r6
 800ffba:	463b      	mov	r3, r7
 800ffbc:	f7f0 f932 	bl	8000224 <__adddf3>
 800ffc0:	ed9d 7b02 	vldr	d7, [sp, #8]
 800ffc4:	e9c4 0102 	strd	r0, r1, [r4, #8]
 800ffc8:	ed84 7b00 	vstr	d7, [r4]
 800ffcc:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ffd0:	e755      	b.n	800fe7e <__kernel_rem_pio2+0x516>
 800ffd2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800ffd6:	f7f0 f925 	bl	8000224 <__adddf3>
 800ffda:	3d01      	subs	r5, #1
 800ffdc:	e759      	b.n	800fe92 <__kernel_rem_pio2+0x52a>
 800ffde:	9b01      	ldr	r3, [sp, #4]
 800ffe0:	9a01      	ldr	r2, [sp, #4]
 800ffe2:	601d      	str	r5, [r3, #0]
 800ffe4:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 800ffe8:	605c      	str	r4, [r3, #4]
 800ffea:	609f      	str	r7, [r3, #8]
 800ffec:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 800fff0:	60d3      	str	r3, [r2, #12]
 800fff2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fff6:	6110      	str	r0, [r2, #16]
 800fff8:	6153      	str	r3, [r2, #20]
 800fffa:	e728      	b.n	800fe4e <__kernel_rem_pio2+0x4e6>
 800fffc:	41700000 	.word	0x41700000
 8010000:	3e700000 	.word	0x3e700000
 8010004:	00000000 	.word	0x00000000

08010008 <__kernel_sin>:
 8010008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801000c:	ed2d 8b04 	vpush	{d8-d9}
 8010010:	eeb0 8a41 	vmov.f32	s16, s2
 8010014:	eef0 8a61 	vmov.f32	s17, s3
 8010018:	ec55 4b10 	vmov	r4, r5, d0
 801001c:	b083      	sub	sp, #12
 801001e:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8010022:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8010026:	9001      	str	r0, [sp, #4]
 8010028:	da06      	bge.n	8010038 <__kernel_sin+0x30>
 801002a:	ee10 0a10 	vmov	r0, s0
 801002e:	4629      	mov	r1, r5
 8010030:	f7f0 fd5e 	bl	8000af0 <__aeabi_d2iz>
 8010034:	2800      	cmp	r0, #0
 8010036:	d051      	beq.n	80100dc <__kernel_sin+0xd4>
 8010038:	4622      	mov	r2, r4
 801003a:	462b      	mov	r3, r5
 801003c:	4620      	mov	r0, r4
 801003e:	4629      	mov	r1, r5
 8010040:	f7f0 faa6 	bl	8000590 <__aeabi_dmul>
 8010044:	4682      	mov	sl, r0
 8010046:	468b      	mov	fp, r1
 8010048:	4602      	mov	r2, r0
 801004a:	460b      	mov	r3, r1
 801004c:	4620      	mov	r0, r4
 801004e:	4629      	mov	r1, r5
 8010050:	f7f0 fa9e 	bl	8000590 <__aeabi_dmul>
 8010054:	a341      	add	r3, pc, #260	; (adr r3, 801015c <__kernel_sin+0x154>)
 8010056:	e9d3 2300 	ldrd	r2, r3, [r3]
 801005a:	4680      	mov	r8, r0
 801005c:	4689      	mov	r9, r1
 801005e:	4650      	mov	r0, sl
 8010060:	4659      	mov	r1, fp
 8010062:	f7f0 fa95 	bl	8000590 <__aeabi_dmul>
 8010066:	a33f      	add	r3, pc, #252	; (adr r3, 8010164 <__kernel_sin+0x15c>)
 8010068:	e9d3 2300 	ldrd	r2, r3, [r3]
 801006c:	f7f0 f8d8 	bl	8000220 <__aeabi_dsub>
 8010070:	4652      	mov	r2, sl
 8010072:	465b      	mov	r3, fp
 8010074:	f7f0 fa8c 	bl	8000590 <__aeabi_dmul>
 8010078:	a33c      	add	r3, pc, #240	; (adr r3, 801016c <__kernel_sin+0x164>)
 801007a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801007e:	f7f0 f8d1 	bl	8000224 <__adddf3>
 8010082:	4652      	mov	r2, sl
 8010084:	465b      	mov	r3, fp
 8010086:	f7f0 fa83 	bl	8000590 <__aeabi_dmul>
 801008a:	a33a      	add	r3, pc, #232	; (adr r3, 8010174 <__kernel_sin+0x16c>)
 801008c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010090:	f7f0 f8c6 	bl	8000220 <__aeabi_dsub>
 8010094:	4652      	mov	r2, sl
 8010096:	465b      	mov	r3, fp
 8010098:	f7f0 fa7a 	bl	8000590 <__aeabi_dmul>
 801009c:	a337      	add	r3, pc, #220	; (adr r3, 801017c <__kernel_sin+0x174>)
 801009e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100a2:	f7f0 f8bf 	bl	8000224 <__adddf3>
 80100a6:	9b01      	ldr	r3, [sp, #4]
 80100a8:	4606      	mov	r6, r0
 80100aa:	460f      	mov	r7, r1
 80100ac:	b9eb      	cbnz	r3, 80100ea <__kernel_sin+0xe2>
 80100ae:	4602      	mov	r2, r0
 80100b0:	460b      	mov	r3, r1
 80100b2:	4650      	mov	r0, sl
 80100b4:	4659      	mov	r1, fp
 80100b6:	f7f0 fa6b 	bl	8000590 <__aeabi_dmul>
 80100ba:	a325      	add	r3, pc, #148	; (adr r3, 8010150 <__kernel_sin+0x148>)
 80100bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100c0:	f7f0 f8ae 	bl	8000220 <__aeabi_dsub>
 80100c4:	4642      	mov	r2, r8
 80100c6:	464b      	mov	r3, r9
 80100c8:	f7f0 fa62 	bl	8000590 <__aeabi_dmul>
 80100cc:	4602      	mov	r2, r0
 80100ce:	460b      	mov	r3, r1
 80100d0:	4620      	mov	r0, r4
 80100d2:	4629      	mov	r1, r5
 80100d4:	f7f0 f8a6 	bl	8000224 <__adddf3>
 80100d8:	4604      	mov	r4, r0
 80100da:	460d      	mov	r5, r1
 80100dc:	ec45 4b10 	vmov	d0, r4, r5
 80100e0:	b003      	add	sp, #12
 80100e2:	ecbd 8b04 	vpop	{d8-d9}
 80100e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100ea:	4b1b      	ldr	r3, [pc, #108]	; (8010158 <__kernel_sin+0x150>)
 80100ec:	ec51 0b18 	vmov	r0, r1, d8
 80100f0:	2200      	movs	r2, #0
 80100f2:	f7f0 fa4d 	bl	8000590 <__aeabi_dmul>
 80100f6:	4632      	mov	r2, r6
 80100f8:	ec41 0b19 	vmov	d9, r0, r1
 80100fc:	463b      	mov	r3, r7
 80100fe:	4640      	mov	r0, r8
 8010100:	4649      	mov	r1, r9
 8010102:	f7f0 fa45 	bl	8000590 <__aeabi_dmul>
 8010106:	4602      	mov	r2, r0
 8010108:	460b      	mov	r3, r1
 801010a:	ec51 0b19 	vmov	r0, r1, d9
 801010e:	f7f0 f887 	bl	8000220 <__aeabi_dsub>
 8010112:	4652      	mov	r2, sl
 8010114:	465b      	mov	r3, fp
 8010116:	f7f0 fa3b 	bl	8000590 <__aeabi_dmul>
 801011a:	ec53 2b18 	vmov	r2, r3, d8
 801011e:	f7f0 f87f 	bl	8000220 <__aeabi_dsub>
 8010122:	a30b      	add	r3, pc, #44	; (adr r3, 8010150 <__kernel_sin+0x148>)
 8010124:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010128:	4606      	mov	r6, r0
 801012a:	460f      	mov	r7, r1
 801012c:	4640      	mov	r0, r8
 801012e:	4649      	mov	r1, r9
 8010130:	f7f0 fa2e 	bl	8000590 <__aeabi_dmul>
 8010134:	4602      	mov	r2, r0
 8010136:	460b      	mov	r3, r1
 8010138:	4630      	mov	r0, r6
 801013a:	4639      	mov	r1, r7
 801013c:	f7f0 f872 	bl	8000224 <__adddf3>
 8010140:	4602      	mov	r2, r0
 8010142:	460b      	mov	r3, r1
 8010144:	4620      	mov	r0, r4
 8010146:	4629      	mov	r1, r5
 8010148:	f7f0 f86a 	bl	8000220 <__aeabi_dsub>
 801014c:	e7c4      	b.n	80100d8 <__kernel_sin+0xd0>
 801014e:	bf00      	nop
 8010150:	55555549 	.word	0x55555549
 8010154:	3fc55555 	.word	0x3fc55555
 8010158:	3fe00000 	.word	0x3fe00000
 801015c:	5acfd57c 	.word	0x5acfd57c
 8010160:	3de5d93a 	.word	0x3de5d93a
 8010164:	8a2b9ceb 	.word	0x8a2b9ceb
 8010168:	3e5ae5e6 	.word	0x3e5ae5e6
 801016c:	57b1fe7d 	.word	0x57b1fe7d
 8010170:	3ec71de3 	.word	0x3ec71de3
 8010174:	19c161d5 	.word	0x19c161d5
 8010178:	3f2a01a0 	.word	0x3f2a01a0
 801017c:	1110f8a6 	.word	0x1110f8a6
 8010180:	3f811111 	.word	0x3f811111

08010184 <with_errno>:
 8010184:	b570      	push	{r4, r5, r6, lr}
 8010186:	4604      	mov	r4, r0
 8010188:	460d      	mov	r5, r1
 801018a:	4616      	mov	r6, r2
 801018c:	f7fd fb7a 	bl	800d884 <__errno>
 8010190:	4629      	mov	r1, r5
 8010192:	6006      	str	r6, [r0, #0]
 8010194:	4620      	mov	r0, r4
 8010196:	bd70      	pop	{r4, r5, r6, pc}

08010198 <xflow>:
 8010198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801019a:	4614      	mov	r4, r2
 801019c:	461d      	mov	r5, r3
 801019e:	b108      	cbz	r0, 80101a4 <xflow+0xc>
 80101a0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80101a4:	e9cd 2300 	strd	r2, r3, [sp]
 80101a8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80101ac:	4620      	mov	r0, r4
 80101ae:	4629      	mov	r1, r5
 80101b0:	f7f0 f9ee 	bl	8000590 <__aeabi_dmul>
 80101b4:	2222      	movs	r2, #34	; 0x22
 80101b6:	b003      	add	sp, #12
 80101b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80101bc:	f7ff bfe2 	b.w	8010184 <with_errno>

080101c0 <__math_uflow>:
 80101c0:	b508      	push	{r3, lr}
 80101c2:	2200      	movs	r2, #0
 80101c4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80101c8:	f7ff ffe6 	bl	8010198 <xflow>
 80101cc:	ec41 0b10 	vmov	d0, r0, r1
 80101d0:	bd08      	pop	{r3, pc}

080101d2 <__math_oflow>:
 80101d2:	b508      	push	{r3, lr}
 80101d4:	2200      	movs	r2, #0
 80101d6:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 80101da:	f7ff ffdd 	bl	8010198 <xflow>
 80101de:	ec41 0b10 	vmov	d0, r0, r1
 80101e2:	bd08      	pop	{r3, pc}

080101e4 <with_errnof>:
 80101e4:	b513      	push	{r0, r1, r4, lr}
 80101e6:	4604      	mov	r4, r0
 80101e8:	ed8d 0a01 	vstr	s0, [sp, #4]
 80101ec:	f7fd fb4a 	bl	800d884 <__errno>
 80101f0:	ed9d 0a01 	vldr	s0, [sp, #4]
 80101f4:	6004      	str	r4, [r0, #0]
 80101f6:	b002      	add	sp, #8
 80101f8:	bd10      	pop	{r4, pc}

080101fa <xflowf>:
 80101fa:	b130      	cbz	r0, 801020a <xflowf+0x10>
 80101fc:	eef1 7a40 	vneg.f32	s15, s0
 8010200:	ee27 0a80 	vmul.f32	s0, s15, s0
 8010204:	2022      	movs	r0, #34	; 0x22
 8010206:	f7ff bfed 	b.w	80101e4 <with_errnof>
 801020a:	eef0 7a40 	vmov.f32	s15, s0
 801020e:	e7f7      	b.n	8010200 <xflowf+0x6>

08010210 <__math_uflowf>:
 8010210:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8010218 <__math_uflowf+0x8>
 8010214:	f7ff bff1 	b.w	80101fa <xflowf>
 8010218:	10000000 	.word	0x10000000

0801021c <__math_oflowf>:
 801021c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8010224 <__math_oflowf+0x8>
 8010220:	f7ff bfeb 	b.w	80101fa <xflowf>
 8010224:	70000000 	.word	0x70000000

08010228 <atan>:
 8010228:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801022c:	ec55 4b10 	vmov	r4, r5, d0
 8010230:	4bc3      	ldr	r3, [pc, #780]	; (8010540 <atan+0x318>)
 8010232:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8010236:	429e      	cmp	r6, r3
 8010238:	46ab      	mov	fp, r5
 801023a:	dd18      	ble.n	801026e <atan+0x46>
 801023c:	4bc1      	ldr	r3, [pc, #772]	; (8010544 <atan+0x31c>)
 801023e:	429e      	cmp	r6, r3
 8010240:	dc01      	bgt.n	8010246 <atan+0x1e>
 8010242:	d109      	bne.n	8010258 <atan+0x30>
 8010244:	b144      	cbz	r4, 8010258 <atan+0x30>
 8010246:	4622      	mov	r2, r4
 8010248:	462b      	mov	r3, r5
 801024a:	4620      	mov	r0, r4
 801024c:	4629      	mov	r1, r5
 801024e:	f7ef ffe9 	bl	8000224 <__adddf3>
 8010252:	4604      	mov	r4, r0
 8010254:	460d      	mov	r5, r1
 8010256:	e006      	b.n	8010266 <atan+0x3e>
 8010258:	f1bb 0f00 	cmp.w	fp, #0
 801025c:	f300 8131 	bgt.w	80104c2 <atan+0x29a>
 8010260:	a59b      	add	r5, pc, #620	; (adr r5, 80104d0 <atan+0x2a8>)
 8010262:	e9d5 4500 	ldrd	r4, r5, [r5]
 8010266:	ec45 4b10 	vmov	d0, r4, r5
 801026a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801026e:	4bb6      	ldr	r3, [pc, #728]	; (8010548 <atan+0x320>)
 8010270:	429e      	cmp	r6, r3
 8010272:	dc14      	bgt.n	801029e <atan+0x76>
 8010274:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8010278:	429e      	cmp	r6, r3
 801027a:	dc0d      	bgt.n	8010298 <atan+0x70>
 801027c:	a396      	add	r3, pc, #600	; (adr r3, 80104d8 <atan+0x2b0>)
 801027e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010282:	ee10 0a10 	vmov	r0, s0
 8010286:	4629      	mov	r1, r5
 8010288:	f7ef ffcc 	bl	8000224 <__adddf3>
 801028c:	4baf      	ldr	r3, [pc, #700]	; (801054c <atan+0x324>)
 801028e:	2200      	movs	r2, #0
 8010290:	f7f0 fc0e 	bl	8000ab0 <__aeabi_dcmpgt>
 8010294:	2800      	cmp	r0, #0
 8010296:	d1e6      	bne.n	8010266 <atan+0x3e>
 8010298:	f04f 3aff 	mov.w	sl, #4294967295
 801029c:	e02b      	b.n	80102f6 <atan+0xce>
 801029e:	f000 f963 	bl	8010568 <fabs>
 80102a2:	4bab      	ldr	r3, [pc, #684]	; (8010550 <atan+0x328>)
 80102a4:	429e      	cmp	r6, r3
 80102a6:	ec55 4b10 	vmov	r4, r5, d0
 80102aa:	f300 80bf 	bgt.w	801042c <atan+0x204>
 80102ae:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 80102b2:	429e      	cmp	r6, r3
 80102b4:	f300 80a0 	bgt.w	80103f8 <atan+0x1d0>
 80102b8:	ee10 2a10 	vmov	r2, s0
 80102bc:	ee10 0a10 	vmov	r0, s0
 80102c0:	462b      	mov	r3, r5
 80102c2:	4629      	mov	r1, r5
 80102c4:	f7ef ffae 	bl	8000224 <__adddf3>
 80102c8:	4ba0      	ldr	r3, [pc, #640]	; (801054c <atan+0x324>)
 80102ca:	2200      	movs	r2, #0
 80102cc:	f7ef ffa8 	bl	8000220 <__aeabi_dsub>
 80102d0:	2200      	movs	r2, #0
 80102d2:	4606      	mov	r6, r0
 80102d4:	460f      	mov	r7, r1
 80102d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80102da:	4620      	mov	r0, r4
 80102dc:	4629      	mov	r1, r5
 80102de:	f7ef ffa1 	bl	8000224 <__adddf3>
 80102e2:	4602      	mov	r2, r0
 80102e4:	460b      	mov	r3, r1
 80102e6:	4630      	mov	r0, r6
 80102e8:	4639      	mov	r1, r7
 80102ea:	f7f0 fa7b 	bl	80007e4 <__aeabi_ddiv>
 80102ee:	f04f 0a00 	mov.w	sl, #0
 80102f2:	4604      	mov	r4, r0
 80102f4:	460d      	mov	r5, r1
 80102f6:	4622      	mov	r2, r4
 80102f8:	462b      	mov	r3, r5
 80102fa:	4620      	mov	r0, r4
 80102fc:	4629      	mov	r1, r5
 80102fe:	f7f0 f947 	bl	8000590 <__aeabi_dmul>
 8010302:	4602      	mov	r2, r0
 8010304:	460b      	mov	r3, r1
 8010306:	4680      	mov	r8, r0
 8010308:	4689      	mov	r9, r1
 801030a:	f7f0 f941 	bl	8000590 <__aeabi_dmul>
 801030e:	a374      	add	r3, pc, #464	; (adr r3, 80104e0 <atan+0x2b8>)
 8010310:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010314:	4606      	mov	r6, r0
 8010316:	460f      	mov	r7, r1
 8010318:	f7f0 f93a 	bl	8000590 <__aeabi_dmul>
 801031c:	a372      	add	r3, pc, #456	; (adr r3, 80104e8 <atan+0x2c0>)
 801031e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010322:	f7ef ff7f 	bl	8000224 <__adddf3>
 8010326:	4632      	mov	r2, r6
 8010328:	463b      	mov	r3, r7
 801032a:	f7f0 f931 	bl	8000590 <__aeabi_dmul>
 801032e:	a370      	add	r3, pc, #448	; (adr r3, 80104f0 <atan+0x2c8>)
 8010330:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010334:	f7ef ff76 	bl	8000224 <__adddf3>
 8010338:	4632      	mov	r2, r6
 801033a:	463b      	mov	r3, r7
 801033c:	f7f0 f928 	bl	8000590 <__aeabi_dmul>
 8010340:	a36d      	add	r3, pc, #436	; (adr r3, 80104f8 <atan+0x2d0>)
 8010342:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010346:	f7ef ff6d 	bl	8000224 <__adddf3>
 801034a:	4632      	mov	r2, r6
 801034c:	463b      	mov	r3, r7
 801034e:	f7f0 f91f 	bl	8000590 <__aeabi_dmul>
 8010352:	a36b      	add	r3, pc, #428	; (adr r3, 8010500 <atan+0x2d8>)
 8010354:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010358:	f7ef ff64 	bl	8000224 <__adddf3>
 801035c:	4632      	mov	r2, r6
 801035e:	463b      	mov	r3, r7
 8010360:	f7f0 f916 	bl	8000590 <__aeabi_dmul>
 8010364:	a368      	add	r3, pc, #416	; (adr r3, 8010508 <atan+0x2e0>)
 8010366:	e9d3 2300 	ldrd	r2, r3, [r3]
 801036a:	f7ef ff5b 	bl	8000224 <__adddf3>
 801036e:	4642      	mov	r2, r8
 8010370:	464b      	mov	r3, r9
 8010372:	f7f0 f90d 	bl	8000590 <__aeabi_dmul>
 8010376:	a366      	add	r3, pc, #408	; (adr r3, 8010510 <atan+0x2e8>)
 8010378:	e9d3 2300 	ldrd	r2, r3, [r3]
 801037c:	4680      	mov	r8, r0
 801037e:	4689      	mov	r9, r1
 8010380:	4630      	mov	r0, r6
 8010382:	4639      	mov	r1, r7
 8010384:	f7f0 f904 	bl	8000590 <__aeabi_dmul>
 8010388:	a363      	add	r3, pc, #396	; (adr r3, 8010518 <atan+0x2f0>)
 801038a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801038e:	f7ef ff47 	bl	8000220 <__aeabi_dsub>
 8010392:	4632      	mov	r2, r6
 8010394:	463b      	mov	r3, r7
 8010396:	f7f0 f8fb 	bl	8000590 <__aeabi_dmul>
 801039a:	a361      	add	r3, pc, #388	; (adr r3, 8010520 <atan+0x2f8>)
 801039c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103a0:	f7ef ff3e 	bl	8000220 <__aeabi_dsub>
 80103a4:	4632      	mov	r2, r6
 80103a6:	463b      	mov	r3, r7
 80103a8:	f7f0 f8f2 	bl	8000590 <__aeabi_dmul>
 80103ac:	a35e      	add	r3, pc, #376	; (adr r3, 8010528 <atan+0x300>)
 80103ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103b2:	f7ef ff35 	bl	8000220 <__aeabi_dsub>
 80103b6:	4632      	mov	r2, r6
 80103b8:	463b      	mov	r3, r7
 80103ba:	f7f0 f8e9 	bl	8000590 <__aeabi_dmul>
 80103be:	a35c      	add	r3, pc, #368	; (adr r3, 8010530 <atan+0x308>)
 80103c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103c4:	f7ef ff2c 	bl	8000220 <__aeabi_dsub>
 80103c8:	4632      	mov	r2, r6
 80103ca:	463b      	mov	r3, r7
 80103cc:	f7f0 f8e0 	bl	8000590 <__aeabi_dmul>
 80103d0:	4602      	mov	r2, r0
 80103d2:	460b      	mov	r3, r1
 80103d4:	4640      	mov	r0, r8
 80103d6:	4649      	mov	r1, r9
 80103d8:	f7ef ff24 	bl	8000224 <__adddf3>
 80103dc:	4622      	mov	r2, r4
 80103de:	462b      	mov	r3, r5
 80103e0:	f7f0 f8d6 	bl	8000590 <__aeabi_dmul>
 80103e4:	f1ba 3fff 	cmp.w	sl, #4294967295
 80103e8:	4602      	mov	r2, r0
 80103ea:	460b      	mov	r3, r1
 80103ec:	d14b      	bne.n	8010486 <atan+0x25e>
 80103ee:	4620      	mov	r0, r4
 80103f0:	4629      	mov	r1, r5
 80103f2:	f7ef ff15 	bl	8000220 <__aeabi_dsub>
 80103f6:	e72c      	b.n	8010252 <atan+0x2a>
 80103f8:	ee10 0a10 	vmov	r0, s0
 80103fc:	4b53      	ldr	r3, [pc, #332]	; (801054c <atan+0x324>)
 80103fe:	2200      	movs	r2, #0
 8010400:	4629      	mov	r1, r5
 8010402:	f7ef ff0d 	bl	8000220 <__aeabi_dsub>
 8010406:	4b51      	ldr	r3, [pc, #324]	; (801054c <atan+0x324>)
 8010408:	4606      	mov	r6, r0
 801040a:	460f      	mov	r7, r1
 801040c:	2200      	movs	r2, #0
 801040e:	4620      	mov	r0, r4
 8010410:	4629      	mov	r1, r5
 8010412:	f7ef ff07 	bl	8000224 <__adddf3>
 8010416:	4602      	mov	r2, r0
 8010418:	460b      	mov	r3, r1
 801041a:	4630      	mov	r0, r6
 801041c:	4639      	mov	r1, r7
 801041e:	f7f0 f9e1 	bl	80007e4 <__aeabi_ddiv>
 8010422:	f04f 0a01 	mov.w	sl, #1
 8010426:	4604      	mov	r4, r0
 8010428:	460d      	mov	r5, r1
 801042a:	e764      	b.n	80102f6 <atan+0xce>
 801042c:	4b49      	ldr	r3, [pc, #292]	; (8010554 <atan+0x32c>)
 801042e:	429e      	cmp	r6, r3
 8010430:	da1d      	bge.n	801046e <atan+0x246>
 8010432:	ee10 0a10 	vmov	r0, s0
 8010436:	4b48      	ldr	r3, [pc, #288]	; (8010558 <atan+0x330>)
 8010438:	2200      	movs	r2, #0
 801043a:	4629      	mov	r1, r5
 801043c:	f7ef fef0 	bl	8000220 <__aeabi_dsub>
 8010440:	4b45      	ldr	r3, [pc, #276]	; (8010558 <atan+0x330>)
 8010442:	4606      	mov	r6, r0
 8010444:	460f      	mov	r7, r1
 8010446:	2200      	movs	r2, #0
 8010448:	4620      	mov	r0, r4
 801044a:	4629      	mov	r1, r5
 801044c:	f7f0 f8a0 	bl	8000590 <__aeabi_dmul>
 8010450:	4b3e      	ldr	r3, [pc, #248]	; (801054c <atan+0x324>)
 8010452:	2200      	movs	r2, #0
 8010454:	f7ef fee6 	bl	8000224 <__adddf3>
 8010458:	4602      	mov	r2, r0
 801045a:	460b      	mov	r3, r1
 801045c:	4630      	mov	r0, r6
 801045e:	4639      	mov	r1, r7
 8010460:	f7f0 f9c0 	bl	80007e4 <__aeabi_ddiv>
 8010464:	f04f 0a02 	mov.w	sl, #2
 8010468:	4604      	mov	r4, r0
 801046a:	460d      	mov	r5, r1
 801046c:	e743      	b.n	80102f6 <atan+0xce>
 801046e:	462b      	mov	r3, r5
 8010470:	ee10 2a10 	vmov	r2, s0
 8010474:	4939      	ldr	r1, [pc, #228]	; (801055c <atan+0x334>)
 8010476:	2000      	movs	r0, #0
 8010478:	f7f0 f9b4 	bl	80007e4 <__aeabi_ddiv>
 801047c:	f04f 0a03 	mov.w	sl, #3
 8010480:	4604      	mov	r4, r0
 8010482:	460d      	mov	r5, r1
 8010484:	e737      	b.n	80102f6 <atan+0xce>
 8010486:	4b36      	ldr	r3, [pc, #216]	; (8010560 <atan+0x338>)
 8010488:	4e36      	ldr	r6, [pc, #216]	; (8010564 <atan+0x33c>)
 801048a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 801048e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 8010492:	e9da 2300 	ldrd	r2, r3, [sl]
 8010496:	f7ef fec3 	bl	8000220 <__aeabi_dsub>
 801049a:	4622      	mov	r2, r4
 801049c:	462b      	mov	r3, r5
 801049e:	f7ef febf 	bl	8000220 <__aeabi_dsub>
 80104a2:	4602      	mov	r2, r0
 80104a4:	460b      	mov	r3, r1
 80104a6:	e9d6 0100 	ldrd	r0, r1, [r6]
 80104aa:	f7ef feb9 	bl	8000220 <__aeabi_dsub>
 80104ae:	f1bb 0f00 	cmp.w	fp, #0
 80104b2:	4604      	mov	r4, r0
 80104b4:	460d      	mov	r5, r1
 80104b6:	f6bf aed6 	bge.w	8010266 <atan+0x3e>
 80104ba:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80104be:	461d      	mov	r5, r3
 80104c0:	e6d1      	b.n	8010266 <atan+0x3e>
 80104c2:	a51d      	add	r5, pc, #116	; (adr r5, 8010538 <atan+0x310>)
 80104c4:	e9d5 4500 	ldrd	r4, r5, [r5]
 80104c8:	e6cd      	b.n	8010266 <atan+0x3e>
 80104ca:	bf00      	nop
 80104cc:	f3af 8000 	nop.w
 80104d0:	54442d18 	.word	0x54442d18
 80104d4:	bff921fb 	.word	0xbff921fb
 80104d8:	8800759c 	.word	0x8800759c
 80104dc:	7e37e43c 	.word	0x7e37e43c
 80104e0:	e322da11 	.word	0xe322da11
 80104e4:	3f90ad3a 	.word	0x3f90ad3a
 80104e8:	24760deb 	.word	0x24760deb
 80104ec:	3fa97b4b 	.word	0x3fa97b4b
 80104f0:	a0d03d51 	.word	0xa0d03d51
 80104f4:	3fb10d66 	.word	0x3fb10d66
 80104f8:	c54c206e 	.word	0xc54c206e
 80104fc:	3fb745cd 	.word	0x3fb745cd
 8010500:	920083ff 	.word	0x920083ff
 8010504:	3fc24924 	.word	0x3fc24924
 8010508:	5555550d 	.word	0x5555550d
 801050c:	3fd55555 	.word	0x3fd55555
 8010510:	2c6a6c2f 	.word	0x2c6a6c2f
 8010514:	bfa2b444 	.word	0xbfa2b444
 8010518:	52defd9a 	.word	0x52defd9a
 801051c:	3fadde2d 	.word	0x3fadde2d
 8010520:	af749a6d 	.word	0xaf749a6d
 8010524:	3fb3b0f2 	.word	0x3fb3b0f2
 8010528:	fe231671 	.word	0xfe231671
 801052c:	3fbc71c6 	.word	0x3fbc71c6
 8010530:	9998ebc4 	.word	0x9998ebc4
 8010534:	3fc99999 	.word	0x3fc99999
 8010538:	54442d18 	.word	0x54442d18
 801053c:	3ff921fb 	.word	0x3ff921fb
 8010540:	440fffff 	.word	0x440fffff
 8010544:	7ff00000 	.word	0x7ff00000
 8010548:	3fdbffff 	.word	0x3fdbffff
 801054c:	3ff00000 	.word	0x3ff00000
 8010550:	3ff2ffff 	.word	0x3ff2ffff
 8010554:	40038000 	.word	0x40038000
 8010558:	3ff80000 	.word	0x3ff80000
 801055c:	bff00000 	.word	0xbff00000
 8010560:	08010b68 	.word	0x08010b68
 8010564:	08010b48 	.word	0x08010b48

08010568 <fabs>:
 8010568:	ec51 0b10 	vmov	r0, r1, d0
 801056c:	ee10 2a10 	vmov	r2, s0
 8010570:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8010574:	ec43 2b10 	vmov	d0, r2, r3
 8010578:	4770      	bx	lr

0801057a <finite>:
 801057a:	b082      	sub	sp, #8
 801057c:	ed8d 0b00 	vstr	d0, [sp]
 8010580:	9801      	ldr	r0, [sp, #4]
 8010582:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 8010586:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 801058a:	0fc0      	lsrs	r0, r0, #31
 801058c:	b002      	add	sp, #8
 801058e:	4770      	bx	lr

08010590 <floor>:
 8010590:	ec51 0b10 	vmov	r0, r1, d0
 8010594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010598:	f3c1 570a 	ubfx	r7, r1, #20, #11
 801059c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 80105a0:	2e13      	cmp	r6, #19
 80105a2:	ee10 5a10 	vmov	r5, s0
 80105a6:	ee10 8a10 	vmov	r8, s0
 80105aa:	460c      	mov	r4, r1
 80105ac:	dc32      	bgt.n	8010614 <floor+0x84>
 80105ae:	2e00      	cmp	r6, #0
 80105b0:	da14      	bge.n	80105dc <floor+0x4c>
 80105b2:	a333      	add	r3, pc, #204	; (adr r3, 8010680 <floor+0xf0>)
 80105b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105b8:	f7ef fe34 	bl	8000224 <__adddf3>
 80105bc:	2200      	movs	r2, #0
 80105be:	2300      	movs	r3, #0
 80105c0:	f7f0 fa76 	bl	8000ab0 <__aeabi_dcmpgt>
 80105c4:	b138      	cbz	r0, 80105d6 <floor+0x46>
 80105c6:	2c00      	cmp	r4, #0
 80105c8:	da57      	bge.n	801067a <floor+0xea>
 80105ca:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 80105ce:	431d      	orrs	r5, r3
 80105d0:	d001      	beq.n	80105d6 <floor+0x46>
 80105d2:	4c2d      	ldr	r4, [pc, #180]	; (8010688 <floor+0xf8>)
 80105d4:	2500      	movs	r5, #0
 80105d6:	4621      	mov	r1, r4
 80105d8:	4628      	mov	r0, r5
 80105da:	e025      	b.n	8010628 <floor+0x98>
 80105dc:	4f2b      	ldr	r7, [pc, #172]	; (801068c <floor+0xfc>)
 80105de:	4137      	asrs	r7, r6
 80105e0:	ea01 0307 	and.w	r3, r1, r7
 80105e4:	4303      	orrs	r3, r0
 80105e6:	d01f      	beq.n	8010628 <floor+0x98>
 80105e8:	a325      	add	r3, pc, #148	; (adr r3, 8010680 <floor+0xf0>)
 80105ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105ee:	f7ef fe19 	bl	8000224 <__adddf3>
 80105f2:	2200      	movs	r2, #0
 80105f4:	2300      	movs	r3, #0
 80105f6:	f7f0 fa5b 	bl	8000ab0 <__aeabi_dcmpgt>
 80105fa:	2800      	cmp	r0, #0
 80105fc:	d0eb      	beq.n	80105d6 <floor+0x46>
 80105fe:	2c00      	cmp	r4, #0
 8010600:	bfbe      	ittt	lt
 8010602:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8010606:	fa43 f606 	asrlt.w	r6, r3, r6
 801060a:	19a4      	addlt	r4, r4, r6
 801060c:	ea24 0407 	bic.w	r4, r4, r7
 8010610:	2500      	movs	r5, #0
 8010612:	e7e0      	b.n	80105d6 <floor+0x46>
 8010614:	2e33      	cmp	r6, #51	; 0x33
 8010616:	dd0b      	ble.n	8010630 <floor+0xa0>
 8010618:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801061c:	d104      	bne.n	8010628 <floor+0x98>
 801061e:	ee10 2a10 	vmov	r2, s0
 8010622:	460b      	mov	r3, r1
 8010624:	f7ef fdfe 	bl	8000224 <__adddf3>
 8010628:	ec41 0b10 	vmov	d0, r0, r1
 801062c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010630:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8010634:	f04f 33ff 	mov.w	r3, #4294967295
 8010638:	fa23 f707 	lsr.w	r7, r3, r7
 801063c:	4207      	tst	r7, r0
 801063e:	d0f3      	beq.n	8010628 <floor+0x98>
 8010640:	a30f      	add	r3, pc, #60	; (adr r3, 8010680 <floor+0xf0>)
 8010642:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010646:	f7ef fded 	bl	8000224 <__adddf3>
 801064a:	2200      	movs	r2, #0
 801064c:	2300      	movs	r3, #0
 801064e:	f7f0 fa2f 	bl	8000ab0 <__aeabi_dcmpgt>
 8010652:	2800      	cmp	r0, #0
 8010654:	d0bf      	beq.n	80105d6 <floor+0x46>
 8010656:	2c00      	cmp	r4, #0
 8010658:	da02      	bge.n	8010660 <floor+0xd0>
 801065a:	2e14      	cmp	r6, #20
 801065c:	d103      	bne.n	8010666 <floor+0xd6>
 801065e:	3401      	adds	r4, #1
 8010660:	ea25 0507 	bic.w	r5, r5, r7
 8010664:	e7b7      	b.n	80105d6 <floor+0x46>
 8010666:	2301      	movs	r3, #1
 8010668:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 801066c:	fa03 f606 	lsl.w	r6, r3, r6
 8010670:	4435      	add	r5, r6
 8010672:	4545      	cmp	r5, r8
 8010674:	bf38      	it	cc
 8010676:	18e4      	addcc	r4, r4, r3
 8010678:	e7f2      	b.n	8010660 <floor+0xd0>
 801067a:	2500      	movs	r5, #0
 801067c:	462c      	mov	r4, r5
 801067e:	e7aa      	b.n	80105d6 <floor+0x46>
 8010680:	8800759c 	.word	0x8800759c
 8010684:	7e37e43c 	.word	0x7e37e43c
 8010688:	bff00000 	.word	0xbff00000
 801068c:	000fffff 	.word	0x000fffff

08010690 <nan>:
 8010690:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8010698 <nan+0x8>
 8010694:	4770      	bx	lr
 8010696:	bf00      	nop
 8010698:	00000000 	.word	0x00000000
 801069c:	7ff80000 	.word	0x7ff80000

080106a0 <scalbn>:
 80106a0:	b570      	push	{r4, r5, r6, lr}
 80106a2:	ec55 4b10 	vmov	r4, r5, d0
 80106a6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80106aa:	4606      	mov	r6, r0
 80106ac:	462b      	mov	r3, r5
 80106ae:	b99a      	cbnz	r2, 80106d8 <scalbn+0x38>
 80106b0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80106b4:	4323      	orrs	r3, r4
 80106b6:	d036      	beq.n	8010726 <scalbn+0x86>
 80106b8:	4b39      	ldr	r3, [pc, #228]	; (80107a0 <scalbn+0x100>)
 80106ba:	4629      	mov	r1, r5
 80106bc:	ee10 0a10 	vmov	r0, s0
 80106c0:	2200      	movs	r2, #0
 80106c2:	f7ef ff65 	bl	8000590 <__aeabi_dmul>
 80106c6:	4b37      	ldr	r3, [pc, #220]	; (80107a4 <scalbn+0x104>)
 80106c8:	429e      	cmp	r6, r3
 80106ca:	4604      	mov	r4, r0
 80106cc:	460d      	mov	r5, r1
 80106ce:	da10      	bge.n	80106f2 <scalbn+0x52>
 80106d0:	a32b      	add	r3, pc, #172	; (adr r3, 8010780 <scalbn+0xe0>)
 80106d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80106d6:	e03a      	b.n	801074e <scalbn+0xae>
 80106d8:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80106dc:	428a      	cmp	r2, r1
 80106de:	d10c      	bne.n	80106fa <scalbn+0x5a>
 80106e0:	ee10 2a10 	vmov	r2, s0
 80106e4:	4620      	mov	r0, r4
 80106e6:	4629      	mov	r1, r5
 80106e8:	f7ef fd9c 	bl	8000224 <__adddf3>
 80106ec:	4604      	mov	r4, r0
 80106ee:	460d      	mov	r5, r1
 80106f0:	e019      	b.n	8010726 <scalbn+0x86>
 80106f2:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80106f6:	460b      	mov	r3, r1
 80106f8:	3a36      	subs	r2, #54	; 0x36
 80106fa:	4432      	add	r2, r6
 80106fc:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8010700:	428a      	cmp	r2, r1
 8010702:	dd08      	ble.n	8010716 <scalbn+0x76>
 8010704:	2d00      	cmp	r5, #0
 8010706:	a120      	add	r1, pc, #128	; (adr r1, 8010788 <scalbn+0xe8>)
 8010708:	e9d1 0100 	ldrd	r0, r1, [r1]
 801070c:	da1c      	bge.n	8010748 <scalbn+0xa8>
 801070e:	a120      	add	r1, pc, #128	; (adr r1, 8010790 <scalbn+0xf0>)
 8010710:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010714:	e018      	b.n	8010748 <scalbn+0xa8>
 8010716:	2a00      	cmp	r2, #0
 8010718:	dd08      	ble.n	801072c <scalbn+0x8c>
 801071a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801071e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8010722:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8010726:	ec45 4b10 	vmov	d0, r4, r5
 801072a:	bd70      	pop	{r4, r5, r6, pc}
 801072c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8010730:	da19      	bge.n	8010766 <scalbn+0xc6>
 8010732:	f24c 3350 	movw	r3, #50000	; 0xc350
 8010736:	429e      	cmp	r6, r3
 8010738:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 801073c:	dd0a      	ble.n	8010754 <scalbn+0xb4>
 801073e:	a112      	add	r1, pc, #72	; (adr r1, 8010788 <scalbn+0xe8>)
 8010740:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010744:	2b00      	cmp	r3, #0
 8010746:	d1e2      	bne.n	801070e <scalbn+0x6e>
 8010748:	a30f      	add	r3, pc, #60	; (adr r3, 8010788 <scalbn+0xe8>)
 801074a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801074e:	f7ef ff1f 	bl	8000590 <__aeabi_dmul>
 8010752:	e7cb      	b.n	80106ec <scalbn+0x4c>
 8010754:	a10a      	add	r1, pc, #40	; (adr r1, 8010780 <scalbn+0xe0>)
 8010756:	e9d1 0100 	ldrd	r0, r1, [r1]
 801075a:	2b00      	cmp	r3, #0
 801075c:	d0b8      	beq.n	80106d0 <scalbn+0x30>
 801075e:	a10e      	add	r1, pc, #56	; (adr r1, 8010798 <scalbn+0xf8>)
 8010760:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010764:	e7b4      	b.n	80106d0 <scalbn+0x30>
 8010766:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801076a:	3236      	adds	r2, #54	; 0x36
 801076c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8010770:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8010774:	4620      	mov	r0, r4
 8010776:	4b0c      	ldr	r3, [pc, #48]	; (80107a8 <scalbn+0x108>)
 8010778:	2200      	movs	r2, #0
 801077a:	e7e8      	b.n	801074e <scalbn+0xae>
 801077c:	f3af 8000 	nop.w
 8010780:	c2f8f359 	.word	0xc2f8f359
 8010784:	01a56e1f 	.word	0x01a56e1f
 8010788:	8800759c 	.word	0x8800759c
 801078c:	7e37e43c 	.word	0x7e37e43c
 8010790:	8800759c 	.word	0x8800759c
 8010794:	fe37e43c 	.word	0xfe37e43c
 8010798:	c2f8f359 	.word	0xc2f8f359
 801079c:	81a56e1f 	.word	0x81a56e1f
 80107a0:	43500000 	.word	0x43500000
 80107a4:	ffff3cb0 	.word	0xffff3cb0
 80107a8:	3c900000 	.word	0x3c900000

080107ac <fabsf>:
 80107ac:	ee10 3a10 	vmov	r3, s0
 80107b0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80107b4:	ee00 3a10 	vmov	s0, r3
 80107b8:	4770      	bx	lr

080107ba <finitef>:
 80107ba:	b082      	sub	sp, #8
 80107bc:	ed8d 0a01 	vstr	s0, [sp, #4]
 80107c0:	9801      	ldr	r0, [sp, #4]
 80107c2:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80107c6:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 80107ca:	bfac      	ite	ge
 80107cc:	2000      	movge	r0, #0
 80107ce:	2001      	movlt	r0, #1
 80107d0:	b002      	add	sp, #8
 80107d2:	4770      	bx	lr

080107d4 <scalbnf>:
 80107d4:	ee10 3a10 	vmov	r3, s0
 80107d8:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80107dc:	d025      	beq.n	801082a <scalbnf+0x56>
 80107de:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80107e2:	d302      	bcc.n	80107ea <scalbnf+0x16>
 80107e4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80107e8:	4770      	bx	lr
 80107ea:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 80107ee:	d122      	bne.n	8010836 <scalbnf+0x62>
 80107f0:	4b2a      	ldr	r3, [pc, #168]	; (801089c <scalbnf+0xc8>)
 80107f2:	eddf 7a2b 	vldr	s15, [pc, #172]	; 80108a0 <scalbnf+0xcc>
 80107f6:	4298      	cmp	r0, r3
 80107f8:	ee20 0a27 	vmul.f32	s0, s0, s15
 80107fc:	db16      	blt.n	801082c <scalbnf+0x58>
 80107fe:	ee10 3a10 	vmov	r3, s0
 8010802:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8010806:	3a19      	subs	r2, #25
 8010808:	4402      	add	r2, r0
 801080a:	2afe      	cmp	r2, #254	; 0xfe
 801080c:	dd15      	ble.n	801083a <scalbnf+0x66>
 801080e:	ee10 3a10 	vmov	r3, s0
 8010812:	eddf 7a24 	vldr	s15, [pc, #144]	; 80108a4 <scalbnf+0xd0>
 8010816:	eddf 6a24 	vldr	s13, [pc, #144]	; 80108a8 <scalbnf+0xd4>
 801081a:	2b00      	cmp	r3, #0
 801081c:	eeb0 7a67 	vmov.f32	s14, s15
 8010820:	bfb8      	it	lt
 8010822:	eef0 7a66 	vmovlt.f32	s15, s13
 8010826:	ee27 0a27 	vmul.f32	s0, s14, s15
 801082a:	4770      	bx	lr
 801082c:	eddf 7a1f 	vldr	s15, [pc, #124]	; 80108ac <scalbnf+0xd8>
 8010830:	ee20 0a27 	vmul.f32	s0, s0, s15
 8010834:	4770      	bx	lr
 8010836:	0dd2      	lsrs	r2, r2, #23
 8010838:	e7e6      	b.n	8010808 <scalbnf+0x34>
 801083a:	2a00      	cmp	r2, #0
 801083c:	dd06      	ble.n	801084c <scalbnf+0x78>
 801083e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8010842:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8010846:	ee00 3a10 	vmov	s0, r3
 801084a:	4770      	bx	lr
 801084c:	f112 0f16 	cmn.w	r2, #22
 8010850:	da1a      	bge.n	8010888 <scalbnf+0xb4>
 8010852:	f24c 3350 	movw	r3, #50000	; 0xc350
 8010856:	4298      	cmp	r0, r3
 8010858:	ee10 3a10 	vmov	r3, s0
 801085c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8010860:	dd0a      	ble.n	8010878 <scalbnf+0xa4>
 8010862:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80108a4 <scalbnf+0xd0>
 8010866:	ed9f 7a10 	vldr	s14, [pc, #64]	; 80108a8 <scalbnf+0xd4>
 801086a:	eef0 7a40 	vmov.f32	s15, s0
 801086e:	2b00      	cmp	r3, #0
 8010870:	bf18      	it	ne
 8010872:	eeb0 0a47 	vmovne.f32	s0, s14
 8010876:	e7db      	b.n	8010830 <scalbnf+0x5c>
 8010878:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 80108ac <scalbnf+0xd8>
 801087c:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 80108b0 <scalbnf+0xdc>
 8010880:	eef0 7a40 	vmov.f32	s15, s0
 8010884:	2b00      	cmp	r3, #0
 8010886:	e7f3      	b.n	8010870 <scalbnf+0x9c>
 8010888:	3219      	adds	r2, #25
 801088a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801088e:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8010892:	eddf 7a08 	vldr	s15, [pc, #32]	; 80108b4 <scalbnf+0xe0>
 8010896:	ee07 3a10 	vmov	s14, r3
 801089a:	e7c4      	b.n	8010826 <scalbnf+0x52>
 801089c:	ffff3cb0 	.word	0xffff3cb0
 80108a0:	4c000000 	.word	0x4c000000
 80108a4:	7149f2ca 	.word	0x7149f2ca
 80108a8:	f149f2ca 	.word	0xf149f2ca
 80108ac:	0da24260 	.word	0x0da24260
 80108b0:	8da24260 	.word	0x8da24260
 80108b4:	33000000 	.word	0x33000000

080108b8 <_init>:
 80108b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108ba:	bf00      	nop
 80108bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80108be:	bc08      	pop	{r3}
 80108c0:	469e      	mov	lr, r3
 80108c2:	4770      	bx	lr

080108c4 <_fini>:
 80108c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108c6:	bf00      	nop
 80108c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80108ca:	bc08      	pop	{r3}
 80108cc:	469e      	mov	lr, r3
 80108ce:	4770      	bx	lr
